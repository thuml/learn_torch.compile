
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (9L*x1) + (27L*x0))];
                    out_ptr0[static_cast<long>(x1 + (3L*x2) + (27L*x0))] = tmp0;
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(109561L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (109561L*x1) + (328683L*x0))];
                        out_ptr1[static_cast<long>(x1 + (3L*x2) + (328683L*x0))] = tmp0;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(217800L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (96L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(217800.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(217800L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (96L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(217800.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (96L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(20908800L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(217800L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(217800L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(217800.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(217800.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(217800L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(217800.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(217800.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp13;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(169L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(169L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr3 + static_cast<long>((-31872L) + x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr4 + static_cast<long>(x3 + (96L*x2) + (16224L*x1) + (2741856L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(167L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(167L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-15936L) + x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (16032L*x1) + (2677344L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(83L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(96L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(192L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(16032L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(16128L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(16224L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(32064L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(32160L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(32256L + x1 + (192L*x3) + (32064L*x2) + (2677344L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (334L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (334L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (334L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(167L + (2L*x3) + (334L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(168L + (2L*x3) + (334L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(169L + (2L*x3) + (334L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(334L + (2L*x3) + (334L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(335L + (2L*x3) + (334L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(336L + (2L*x3) + (334L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr4[static_cast<long>(x1 + (96L*x3) + (7968L*x2) + (661344L*x0))] = tmp16;
                            out_ptr5[static_cast<long>(x1 + (96L*x3) + (7968L*x2) + (661344L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_constant_pad_nd_relu_threshold_backward_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       bool* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(55112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp12 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp19 = out_ptr0[static_cast<long>(x2)];
                        auto tmp22 = out_ptr1[static_cast<long>(x2)];
                        auto tmp28 = in_ptr6[static_cast<long>(x2)];
                        auto tmp31 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(55112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp20 = at::vec::Vectorized<float>(tmp19);
                        auto tmp21 = tmp18 - tmp20;
                        auto tmp23 = tmp22 / tmp5;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp7);
                        auto tmp25 = 1 / std::sqrt(tmp24);
                        auto tmp26 = at::vec::Vectorized<float>(tmp25);
                        auto tmp27 = tmp21 * tmp26;
                        auto tmp29 = at::vec::Vectorized<float>(tmp28);
                        auto tmp30 = tmp27 * tmp29;
                        auto tmp32 = at::vec::Vectorized<float>(tmp31);
                        auto tmp33 = tmp30 + tmp32;
                        auto tmp34 = tmp17 + tmp33;
                        tmp34.store(out_ptr3 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(55112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(11761200L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr8[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr4[static_cast<long>(x0)] = tmp1;
                out_ptr5[static_cast<long>(x0)] = tmp3;
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(171L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(171L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-3L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr4 + static_cast<long>((-26892L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr6 + static_cast<long>(x3 + (54L*x2) + (9234L*x1) + (1579014L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-3L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = out_ptr4[static_cast<long>((-26892L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr6[static_cast<long>(x3 + (54L*x2) + (9234L*x1) + (1579014L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(167L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(167L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-8964L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (54L*x2) + (9018L*x1) + (1506006L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-8964L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            out_ptr3[static_cast<long>(x3 + (54L*x2) + (9018L*x1) + (1506006L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(83L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(54L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(108L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(9018L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(9072L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(9126L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(18036L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(18090L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(18144L + x1 + (108L*x3) + (18036L*x2) + (1506006L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (334L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (334L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (334L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(167L + (2L*x3) + (334L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(168L + (2L*x3) + (334L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(169L + (2L*x3) + (334L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(334L + (2L*x3) + (334L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(335L + (2L*x3) + (334L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(336L + (2L*x3) + (334L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr4[static_cast<long>(x1 + (54L*x3) + (4482L*x2) + (372006L*x0))] = tmp16;
                            out_ptr5[static_cast<long>(x1 + (54L*x3) + (4482L*x2) + (372006L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(169L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(169L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr2 + static_cast<long>((-17928L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr6 + static_cast<long>(x3 + (54L*x2) + (9126L*x1) + (1542294L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-2L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr2[static_cast<long>((-17928L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr6[static_cast<long>(x3 + (54L*x2) + (9126L*x1) + (1542294L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(167L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(167L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-8964L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (54L*x2) + (9018L*x1) + (1506006L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-8964L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr3[static_cast<long>(x3 + (54L*x2) + (9018L*x1) + (1506006L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(55112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp12 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp19 = out_ptr0[static_cast<long>(x2)];
                        auto tmp22 = out_ptr1[static_cast<long>(x2)];
                        auto tmp28 = in_ptr6[static_cast<long>(x2)];
                        auto tmp31 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(55112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp20 = at::vec::Vectorized<float>(tmp19);
                        auto tmp21 = tmp18 - tmp20;
                        auto tmp23 = tmp22 / tmp5;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp7);
                        auto tmp25 = 1 / std::sqrt(tmp24);
                        auto tmp26 = at::vec::Vectorized<float>(tmp25);
                        auto tmp27 = tmp21 * tmp26;
                        auto tmp29 = at::vec::Vectorized<float>(tmp28);
                        auto tmp30 = tmp27 * tmp29;
                        auto tmp32 = at::vec::Vectorized<float>(tmp31);
                        auto tmp33 = tmp30 + tmp32;
                        auto tmp34 = tmp17 + tmp33;
                        tmp34.store(out_ptr3 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(55112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6888L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)), static_cast<long>(54L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(6888L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr3[static_cast<long>(x2 + (6889L*x1) + (1860030L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr4[static_cast<long>(x1 + (54L*x2) + (372006L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(167L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(167L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-15936L) + x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (16032L*x1) + (2677344L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (54L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (54L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(55112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp12 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp19 = out_ptr0[static_cast<long>(x2)];
                        auto tmp22 = out_ptr1[static_cast<long>(x2)];
                        auto tmp28 = in_ptr6[static_cast<long>(x2)];
                        auto tmp31 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(55112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp20 = at::vec::Vectorized<float>(tmp19);
                        auto tmp21 = tmp18 - tmp20;
                        auto tmp23 = tmp22 / tmp5;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp7);
                        auto tmp25 = 1 / std::sqrt(tmp24);
                        auto tmp26 = at::vec::Vectorized<float>(tmp25);
                        auto tmp27 = tmp21 * tmp26;
                        auto tmp29 = at::vec::Vectorized<float>(tmp28);
                        auto tmp30 = tmp27 * tmp29;
                        auto tmp32 = at::vec::Vectorized<float>(tmp31);
                        auto tmp33 = tmp30 + tmp32;
                        auto tmp34 = tmp17 + tmp33;
                        tmp34.store(out_ptr3 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(55112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        float tmp32[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x2));
                            auto tmp22 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x2));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(55112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            auto tmp21 = tmp19 - tmp20;
                            auto tmp23 = tmp22 / tmp5;
                            auto tmp24 = tmp23 + tmp8;
                            auto tmp25 = tmp24.rsqrt();
                            auto tmp26 = tmp21 * tmp25;
                            auto tmp28 = tmp26 * tmp27;
                            auto tmp30 = tmp28 + tmp29;
                            auto tmp31 = tmp30 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                            tmp31.store(tmp32 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr4 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                        at::vec::transpose_mxn<float,8,8>(tmp32, 8, out_ptr5 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr8[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr9[static_cast<long>(x2)];
                        auto tmp4 = in_ptr10[static_cast<long>(x2)];
                        auto tmp12 = in_ptr11[static_cast<long>(x2)];
                        auto tmp15 = in_ptr12[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr13[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr14[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp21 = in_ptr15[static_cast<long>(x2)];
                        auto tmp24 = in_ptr16[static_cast<long>(x2)];
                        auto tmp30 = in_ptr17[static_cast<long>(x2)];
                        auto tmp33 = in_ptr18[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(55112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp19 = tmp17 + tmp18;
                        auto tmp22 = at::vec::Vectorized<float>(tmp21);
                        auto tmp23 = tmp20 - tmp22;
                        auto tmp25 = tmp24 / tmp5;
                        auto tmp26 = decltype(tmp25)(tmp25 + tmp7);
                        auto tmp27 = 1 / std::sqrt(tmp26);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp23 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp35 + tmp18;
                        tmp19.store(out_ptr4 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                        tmp36.store(out_ptr5 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr8[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr9[static_cast<long>(x2)];
                        auto tmp3 = in_ptr10[static_cast<long>(x2)];
                        auto tmp10 = in_ptr11[static_cast<long>(x2)];
                        auto tmp12 = in_ptr12[static_cast<long>(x2)];
                        auto tmp14 = in_ptr13[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp16 = in_ptr14[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp17 = in_ptr15[static_cast<long>(x2)];
                        auto tmp19 = in_ptr16[static_cast<long>(x2)];
                        auto tmp24 = in_ptr17[static_cast<long>(x2)];
                        auto tmp26 = in_ptr18[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(55112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        auto tmp18 = decltype(tmp16)(tmp16 - tmp17);
                        auto tmp20 = tmp19 / tmp4;
                        auto tmp21 = decltype(tmp20)(tmp20 + tmp6);
                        auto tmp22 = 1 / std::sqrt(tmp21);
                        auto tmp23 = decltype(tmp18)(tmp18 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp27)(tmp27 + tmp14);
                        out_ptr4[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp15;
                        out_ptr5[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(83L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr6 + static_cast<long>(x3 + (96L*x2) + (7968L*x1) + (661344L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(165L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(165L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(1L + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>(15936L + x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr0 + static_cast<long>(x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(83L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (192L*x3) + (31680L*x2) + (2613600L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x1 + (96L*x3) + (7968L*x2) + (661344L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(54);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(108);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-54L) + x1 + (54L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr2[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr2[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr3[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr4 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr1[static_cast<long>(x1)];
                    auto tmp3 = out_ptr2[static_cast<long>(x1)];
                    auto tmp10 = in_ptr2[static_cast<long>(x1)];
                    auto tmp12 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    out_ptr4[static_cast<long>(x1 + (108L*x0))] = tmp13;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(264L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6888L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr5 + static_cast<long>(x1 + (270L*x2) + (1860030L*x0)), static_cast<long>(270L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(6888L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (270L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(264L); x1<static_cast<long>(270L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr4[static_cast<long>(x2 + (6889L*x1) + (1860030L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr5[static_cast<long>(x1 + (270L*x2) + (1860030L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_relu_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(55112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(55112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp13;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(87L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(87L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr3 + static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr4 + static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-2L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr3[static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr4[static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_relu_threshold_backward_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       long* out_ptr6,
                       float* out_ptr7,
                       bool* out_ptr8,
                       float* out_ptr9)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(85L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(85L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = [&]
                            {
                                auto tmp15 = masked_load(in_ptr1 + static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                                return tmp16;
                            }
                            ;
                            auto tmp17 = decltype(tmp14())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp14(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0)));
                            tmp17.store(out_ptr4 + static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = [&]
                            {
                                auto tmp15 = in_ptr1[static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp16 = tmp15 * (tmp15>0);
                                return tmp16;
                            }
                            ;
                            auto tmp17 = tmp10 ? tmp14() : static_cast<decltype(tmp14())>(0.0);
                            out_ptr3[static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0))] = tmp13;
                            out_ptr4[static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0))] = tmp17;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(108L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(216L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(9180L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(9288L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(9396L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(18360L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(18468L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(18576L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (170L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (170L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (170L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(85L + (2L*x3) + (170L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(86L + (2L*x3) + (170L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(87L + (2L*x3) + (170L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(170L + (2L*x3) + (170L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(171L + (2L*x3) + (170L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(172L + (2L*x3) + (170L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr5[static_cast<long>(x1 + (108L*x3) + (4536L*x2) + (190512L*x0))] = tmp16;
                            out_ptr6[static_cast<long>(x1 + (108L*x3) + (4536L*x2) + (190512L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(5952096L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr2[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr7[static_cast<long>(x0)] = tmp1;
                out_ptr8[static_cast<long>(x0)] = tmp3;
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(89L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(89L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-3L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr7 + static_cast<long>((-27216L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr9 + static_cast<long>(x3 + (108L*x2) + (9612L*x1) + (855468L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-3L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = out_ptr7[static_cast<long>((-27216L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr9[static_cast<long>(x3 + (108L*x2) + (9612L*x1) + (855468L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(85L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(85L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            out_ptr3[static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(108L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(216L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(9180L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(9288L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(9396L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(18360L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(18468L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(18576L + x1 + (216L*x3) + (18360L*x2) + (780300L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (170L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (170L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (170L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(85L + (2L*x3) + (170L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(86L + (2L*x3) + (170L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(87L + (2L*x3) + (170L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(170L + (2L*x3) + (170L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(171L + (2L*x3) + (170L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(172L + (2L*x3) + (170L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr4[static_cast<long>(x1 + (108L*x3) + (4536L*x2) + (190512L*x0))] = tmp16;
                            out_ptr5[static_cast<long>(x1 + (108L*x3) + (4536L*x2) + (190512L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(87L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(87L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr2 + static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr6 + static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-2L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr2[static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr6[static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(85L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(85L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr3[static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(104L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp12 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp19 = out_ptr0[static_cast<long>(x2)];
                        auto tmp22 = out_ptr1[static_cast<long>(x2)];
                        auto tmp28 = in_ptr6[static_cast<long>(x2)];
                        auto tmp31 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(14112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp20 = at::vec::Vectorized<float>(tmp19);
                        auto tmp21 = tmp18 - tmp20;
                        auto tmp23 = tmp22 / tmp5;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp7);
                        auto tmp25 = 1 / std::sqrt(tmp24);
                        auto tmp26 = at::vec::Vectorized<float>(tmp25);
                        auto tmp27 = tmp21 * tmp26;
                        auto tmp29 = at::vec::Vectorized<float>(tmp28);
                        auto tmp30 = tmp27 * tmp29;
                        auto tmp32 = at::vec::Vectorized<float>(tmp31);
                        auto tmp33 = tmp30 + tmp32;
                        auto tmp34 = tmp17 + tmp33;
                        tmp34.store(out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr3[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr4[static_cast<long>(x1 + (108L*x2) + (190512L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x1)];
                    auto tmp3 = out_ptr1[static_cast<long>(x1)];
                    auto tmp10 = in_ptr1[static_cast<long>(x1)];
                    auto tmp12 = in_ptr2[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr3[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (108L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x0 + (108L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr0[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr1[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr2[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(104L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp12 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp19 = out_ptr0[static_cast<long>(x2)];
                        auto tmp22 = out_ptr1[static_cast<long>(x2)];
                        auto tmp28 = in_ptr6[static_cast<long>(x2)];
                        auto tmp31 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(14112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp20 = at::vec::Vectorized<float>(tmp19);
                        auto tmp21 = tmp18 - tmp20;
                        auto tmp23 = tmp22 / tmp5;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp7);
                        auto tmp25 = 1 / std::sqrt(tmp24);
                        auto tmp26 = at::vec::Vectorized<float>(tmp25);
                        auto tmp27 = tmp21 * tmp26;
                        auto tmp29 = at::vec::Vectorized<float>(tmp28);
                        auto tmp30 = tmp27 * tmp29;
                        auto tmp32 = at::vec::Vectorized<float>(tmp31);
                        auto tmp33 = tmp30 + tmp32;
                        auto tmp34 = tmp17 + tmp33;
                        tmp34.store(out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr4 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(104L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr8[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr9[static_cast<long>(x2)];
                        auto tmp4 = in_ptr10[static_cast<long>(x2)];
                        auto tmp12 = in_ptr11[static_cast<long>(x2)];
                        auto tmp15 = in_ptr12[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr13[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(14112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp19 = tmp17 + tmp18;
                        tmp19.store(out_ptr4 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr8[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr9[static_cast<long>(x2)];
                        auto tmp3 = in_ptr10[static_cast<long>(x2)];
                        auto tmp10 = in_ptr11[static_cast<long>(x2)];
                        auto tmp12 = in_ptr12[static_cast<long>(x2)];
                        auto tmp14 = in_ptr13[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr4[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        float tmp32[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp22 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            auto tmp21 = tmp19 - tmp20;
                            auto tmp23 = tmp22 / tmp5;
                            auto tmp24 = tmp23 + tmp8;
                            auto tmp25 = tmp24.rsqrt();
                            auto tmp26 = tmp21 * tmp25;
                            auto tmp28 = tmp26 * tmp27;
                            auto tmp30 = tmp28 + tmp29;
                            auto tmp31 = tmp30 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                            tmp31.store(tmp32 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr5 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                        at::vec::transpose_mxn<float,8,8>(tmp32, 8, out_ptr6 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(104L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr14[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr15[static_cast<long>(x2)];
                        auto tmp4 = in_ptr16[static_cast<long>(x2)];
                        auto tmp12 = in_ptr17[static_cast<long>(x2)];
                        auto tmp15 = in_ptr18[static_cast<long>(x2)];
                        auto tmp18 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr19[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr20[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp21 = in_ptr21[static_cast<long>(x2)];
                        auto tmp24 = in_ptr22[static_cast<long>(x2)];
                        auto tmp30 = in_ptr23[static_cast<long>(x2)];
                        auto tmp33 = in_ptr24[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(14112.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp11 * tmp13;
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp14 + tmp16;
                        auto tmp19 = tmp17 + tmp18;
                        auto tmp22 = at::vec::Vectorized<float>(tmp21);
                        auto tmp23 = tmp20 - tmp22;
                        auto tmp25 = tmp24 / tmp5;
                        auto tmp26 = decltype(tmp25)(tmp25 + tmp7);
                        auto tmp27 = 1 / std::sqrt(tmp26);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp23 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp35 + tmp18;
                        tmp19.store(out_ptr5 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                        tmp36.store(out_ptr6 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr14[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr15[static_cast<long>(x2)];
                        auto tmp3 = in_ptr16[static_cast<long>(x2)];
                        auto tmp10 = in_ptr17[static_cast<long>(x2)];
                        auto tmp12 = in_ptr18[static_cast<long>(x2)];
                        auto tmp14 = in_ptr19[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr20[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp17 = in_ptr21[static_cast<long>(x2)];
                        auto tmp19 = in_ptr22[static_cast<long>(x2)];
                        auto tmp24 = in_ptr23[static_cast<long>(x2)];
                        auto tmp26 = in_ptr24[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        auto tmp18 = decltype(tmp16)(tmp16 - tmp17);
                        auto tmp20 = tmp19 / tmp4;
                        auto tmp21 = decltype(tmp20)(tmp20 + tmp6);
                        auto tmp22 = 1 / std::sqrt(tmp21);
                        auto tmp23 = decltype(tmp18)(tmp18 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp27)(tmp27 + tmp14);
                        out_ptr5[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp15;
                        out_ptr6[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(264L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x3 + (540L*x2) + (44820L*x1) + (1860030L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr7 + static_cast<long>(x3 + (270L*x2) + (11340L*x1) + (476280L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(264L); x3<static_cast<long>(270L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr25[static_cast<long>(x3 + (540L*x2) + (44820L*x1) + (1860030L*x0))];
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                            out_ptr7[static_cast<long>(x3 + (270L*x2) + (11340L*x1) + (476280L*x0))] = tmp2;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(83L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(264L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(1L + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>(22680L + x3 + (270L*x2) + (22410L*x1) + (1860030L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr0 + static_cast<long>(x3 + (270L*x2) + (22410L*x1) + (1860030L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(264L); x3<static_cast<long>(270L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>(1L + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>(1L + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>(22680L + x3 + (270L*x2) + (22410L*x1) + (1860030L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (270L*x2) + (22410L*x1) + (1860030L*x0))] = tmp13;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(264L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (540L*x3) + (44820L*x2) + (1860030L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x1 + (270L*x3) + (11340L*x2) + (476280L*x0)));
                        }
                    }
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(264L); x1<static_cast<long>(270L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr0[static_cast<long>(x1 + (540L*x3) + (44820L*x2) + (1860030L*x0))];
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                            out_ptr1[static_cast<long>(x1 + (270L*x3) + (11340L*x2) + (476280L*x0))] = tmp2;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(108);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(216);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-108L) + x1 + (108L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    out_ptr0[static_cast<long>(x1 + (216L*x0))] = tmp14;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr4 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(536L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr5 + static_cast<long>(x1 + (540L*x2) + (952560L*x0)), static_cast<long>(540L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (540L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(536L); x1<static_cast<long>(540L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr4[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr5[static_cast<long>(x1 + (540L*x2) + (952560L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_78 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_79 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_80 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_81 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-42L) + x2 + (42L*x1));
                            auto tmp78 = c10::convert<long>((-43L) + x2 + (42L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-41L) + x2 + (42L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (42L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (42L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (42L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(41L + x2 + (42L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(42L + x2 + (42L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(43L + x2 + (42L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_82 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_83 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_84 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_85 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_86 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_87 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_88 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_89 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(14112.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(14112.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(14112.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_90 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_relu_91 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(14112L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(14112.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(45L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(45L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr3 + static_cast<long>((-18576L) + x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr4 + static_cast<long>(x3 + (432L*x2) + (19440L*x1) + (874800L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_92 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_relu_threshold_backward_93 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       long* out_ptr6,
                       float* out_ptr7,
                       bool* out_ptr8,
                       float* out_ptr9)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(43L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(43L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_ptr1 + static_cast<long>(x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                return tmp7;
                            }
                            ;
                            auto tmp8 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp6(), to_float_mask(tmp5));
                            auto tmp9 = [&]
                            {
                                auto tmp10 = masked_load(in_ptr1 + static_cast<long>(x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                auto tmp11 = at::vec::clamp_min(tmp10, decltype(tmp10)(0));
                                return tmp11;
                            }
                            ;
                            auto tmp12 = decltype(tmp9())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp9(), to_float_mask(tmp5));
                            tmp8.store(out_ptr3 + static_cast<long>(x3 + (432L*x2) + (18576L*x1) + (798768L*x0)));
                            tmp12.store(out_ptr4 + static_cast<long>(x3 + (432L*x2) + (18576L*x1) + (798768L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(21L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(432L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(864L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(18576L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(19008L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(19440L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(37152L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(37584L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(38016L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (86L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (86L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (86L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(43L + (2L*x3) + (86L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(44L + (2L*x3) + (86L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(45L + (2L*x3) + (86L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(86L + (2L*x3) + (86L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(87L + (2L*x3) + (86L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(88L + (2L*x3) + (86L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr5[static_cast<long>(x1 + (432L*x3) + (9072L*x2) + (190512L*x0))] = tmp16;
                            out_ptr6[static_cast<long>(x1 + (432L*x3) + (9072L*x2) + (190512L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6096384L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr2[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr7[static_cast<long>(x0)] = tmp1;
                out_ptr8[static_cast<long>(x0)] = tmp3;
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(47L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(47L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr7 + static_cast<long>((-37152L) + x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr9 + static_cast<long>(x3 + (432L*x2) + (20304L*x1) + (954288L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_94 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_95 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(43L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(43L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_ptr1 + static_cast<long>(x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                return tmp7;
                            }
                            ;
                            auto tmp8 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp6(), to_float_mask(tmp5));
                            tmp8.store(out_ptr3 + static_cast<long>(x3 + (432L*x2) + (18576L*x1) + (798768L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(21L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(432L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(864L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(18576L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(19008L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(19440L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(37152L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(37584L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(38016L + x1 + (864L*x3) + (37152L*x2) + (798768L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (86L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (86L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (86L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(43L + (2L*x3) + (86L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(44L + (2L*x3) + (86L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(45L + (2L*x3) + (86L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(86L + (2L*x3) + (86L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(87L + (2L*x3) + (86L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(88L + (2L*x3) + (86L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr4[static_cast<long>(x1 + (432L*x3) + (9072L*x2) + (190512L*x0))] = tmp16;
                            out_ptr5[static_cast<long>(x1 + (432L*x3) + (9072L*x2) + (190512L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(45L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(45L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr2 + static_cast<long>((-18576L) + x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr6 + static_cast<long>(x3 + (432L*x2) + (19440L*x1) + (874800L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_96 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_97 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(43L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(43L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_ptr1 + static_cast<long>(x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                return tmp7;
                            }
                            ;
                            auto tmp8 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp6(), to_float_mask(tmp5));
                            tmp8.store(out_ptr3 + static_cast<long>(x3 + (432L*x2) + (18576L*x1) + (798768L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_98 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_99 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_100 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_101 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_102 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_103 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_104 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr4 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr8[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr9[static_cast<long>(x2)];
                        auto tmp3 = in_ptr10[static_cast<long>(x2)];
                        auto tmp10 = in_ptr11[static_cast<long>(x2)];
                        auto tmp12 = in_ptr12[static_cast<long>(x2)];
                        auto tmp14 = in_ptr13[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr4[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        float tmp32[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp22 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            auto tmp21 = tmp19 - tmp20;
                            auto tmp23 = tmp22 / tmp5;
                            auto tmp24 = tmp23 + tmp8;
                            auto tmp25 = tmp24.rsqrt();
                            auto tmp26 = tmp21 * tmp25;
                            auto tmp28 = tmp26 * tmp27;
                            auto tmp30 = tmp28 + tmp29;
                            auto tmp31 = tmp30 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                            tmp31.store(tmp32 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr5 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                        at::vec::transpose_mxn<float,8,8>(tmp32, 8, out_ptr6 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr14[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr15[static_cast<long>(x2)];
                        auto tmp3 = in_ptr16[static_cast<long>(x2)];
                        auto tmp10 = in_ptr17[static_cast<long>(x2)];
                        auto tmp12 = in_ptr18[static_cast<long>(x2)];
                        auto tmp14 = in_ptr19[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr20[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp17 = in_ptr21[static_cast<long>(x2)];
                        auto tmp19 = in_ptr22[static_cast<long>(x2)];
                        auto tmp24 = in_ptr23[static_cast<long>(x2)];
                        auto tmp26 = in_ptr24[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        auto tmp18 = decltype(tmp16)(tmp16 - tmp17);
                        auto tmp20 = tmp19 / tmp4;
                        auto tmp21 = decltype(tmp20)(tmp20 + tmp6);
                        auto tmp22 = 1 / std::sqrt(tmp21);
                        auto tmp23 = decltype(tmp18)(tmp18 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp27)(tmp27 + tmp14);
                        out_ptr5[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp15;
                        out_ptr6[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(168L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1080L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x2 + (2160L*x1) + (90720L*x0)));
                        auto tmp1 = static_cast<float>(1.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 * tmp2;
                        tmp3.store(out_ptr7 + static_cast<long>(x2 + (1080L*x1) + (22680L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_105 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(1080L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(1L + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>(46440L + x3 + (1080L*x2) + (45360L*x1) + (1905120L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr0 + static_cast<long>(x3 + (1080L*x2) + (45360L*x1) + (1905120L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(21L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2160L*x3) + (90720L*x2) + (1905120L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x1 + (1080L*x3) + (22680L*x2) + (476280L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_106 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(216);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (216L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(432);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-216L) + x1 + (216L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    out_ptr0[static_cast<long>(x1 + (432L*x0))] = tmp14;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr4 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_107 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_108 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_109 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-21L) + x2 + (21L*x1));
                            auto tmp78 = c10::convert<long>((-22L) + x2 + (21L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-20L) + x2 + (21L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (21L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (21L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (21L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(20L + x2 + (21L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(21L + x2 + (21L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(22L + x2 + (21L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_110 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_111 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-21L) + x2 + (21L*x1));
                            auto tmp78 = c10::convert<long>((-22L) + x2 + (21L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-20L) + x2 + (21L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (21L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (21L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (21L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(20L + x2 + (21L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(21L + x2 + (21L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(22L + x2 + (21L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_112 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_113 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_114 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_115 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_116 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_117 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_118 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_119 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(3528.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(3528.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_120 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_121 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_122 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_123 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-21L) + x2 + (21L*x1));
                            auto tmp78 = c10::convert<long>((-22L) + x2 + (21L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-20L) + x2 + (21L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (21L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (21L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (21L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(20L + x2 + (21L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(21L + x2 + (21L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(22L + x2 + (21L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_124 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_125 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-21L) + x2 + (21L*x1));
                            auto tmp78 = c10::convert<long>((-22L) + x2 + (21L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-20L) + x2 + (21L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (21L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (21L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (21L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(20L + x2 + (21L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(21L + x2 + (21L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(22L + x2 + (21L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_126 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_127 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_128 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_129 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_130 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_131 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_132 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_133 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(3528.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(3528.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_134 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_135 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_136 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_137 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-21L) + x2 + (21L*x1));
                            auto tmp78 = c10::convert<long>((-22L) + x2 + (21L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-20L) + x2 + (21L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (21L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (21L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (21L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(20L + x2 + (21L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(21L + x2 + (21L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(22L + x2 + (21L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_138 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_139 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-21L) + x2 + (21L*x1));
                            auto tmp78 = c10::convert<long>((-22L) + x2 + (21L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-20L) + x2 + (21L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (21L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (21L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (21L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(20L + x2 + (21L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(21L + x2 + (21L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(22L + x2 + (21L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_140 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_141 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_142 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_143 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_144 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_145 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_146 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_147 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(3528.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(3528.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(3528.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(3528.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_148 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_relu_149 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3528L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(3528.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(3528.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(25L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(25L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr3 + static_cast<long>((-38016L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr4 + static_cast<long>(x3 + (864L*x2) + (21600L*x1) + (540000L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_150 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_relu_threshold_backward_151 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       long* out_ptr6,
                       float* out_ptr7,
                       bool* out_ptr8,
                       float* out_ptr9)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(23L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(23L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-19008L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = [&]
                            {
                                auto tmp15 = masked_load(in_ptr1 + static_cast<long>((-19008L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                                return tmp16;
                            }
                            ;
                            auto tmp17 = decltype(tmp14())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp14(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (864L*x2) + (19872L*x1) + (457056L*x0)));
                            tmp17.store(out_ptr4 + static_cast<long>(x3 + (864L*x2) + (19872L*x1) + (457056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(11L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(864L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(1728L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(19872L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(20736L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(21600L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(39744L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(40608L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(41472L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (46L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (46L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (46L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(23L + (2L*x3) + (46L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(24L + (2L*x3) + (46L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(25L + (2L*x3) + (46L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(46L + (2L*x3) + (46L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(47L + (2L*x3) + (46L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(48L + (2L*x3) + (46L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr5[static_cast<long>(x1 + (864L*x3) + (9504L*x2) + (104544L*x0))] = tmp16;
                            out_ptr6[static_cast<long>(x1 + (864L*x3) + (9504L*x2) + (104544L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr2[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr7[static_cast<long>(x0)] = tmp1;
                out_ptr8[static_cast<long>(x0)] = tmp3;
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(27L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(27L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-3L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr7 + static_cast<long>((-57024L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr9 + static_cast<long>(x3 + (864L*x2) + (23328L*x1) + (629856L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_152 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_153 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(23L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(23L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-19008L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (864L*x2) + (19872L*x1) + (457056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(11L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = out_ptr3[static_cast<long>(x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp1 = out_ptr3[static_cast<long>(864L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp3 = out_ptr3[static_cast<long>(1728L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp5 = out_ptr3[static_cast<long>(19872L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp7 = out_ptr3[static_cast<long>(20736L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp9 = out_ptr3[static_cast<long>(21600L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp11 = out_ptr3[static_cast<long>(39744L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp13 = out_ptr3[static_cast<long>(40608L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp15 = out_ptr3[static_cast<long>(41472L + x1 + (1728L*x3) + (39744L*x2) + (457056L*x0))];
                            auto tmp2 = max_propagate_nan(tmp1, tmp0);
                            auto tmp4 = max_propagate_nan(tmp3, tmp2);
                            auto tmp6 = max_propagate_nan(tmp5, tmp4);
                            auto tmp8 = max_propagate_nan(tmp7, tmp6);
                            auto tmp10 = max_propagate_nan(tmp9, tmp8);
                            auto tmp12 = max_propagate_nan(tmp11, tmp10);
                            auto tmp14 = max_propagate_nan(tmp13, tmp12);
                            auto tmp16 = max_propagate_nan(tmp15, tmp14);
                            auto tmp17 = tmp1 > tmp0;
                            auto tmp18 = c10::convert<long>(1L + (2L*x3) + (46L*x2));
                            auto tmp19 = c10::convert<long>((2L*x3) + (46L*x2));
                            auto tmp20 = tmp17 ? tmp18 : tmp19;
                            auto tmp21 = tmp3 > tmp2;
                            auto tmp22 = c10::convert<long>(2L + (2L*x3) + (46L*x2));
                            auto tmp23 = tmp21 ? tmp22 : tmp20;
                            auto tmp24 = tmp5 > tmp4;
                            auto tmp25 = c10::convert<long>(23L + (2L*x3) + (46L*x2));
                            auto tmp26 = tmp24 ? tmp25 : tmp23;
                            auto tmp27 = tmp7 > tmp6;
                            auto tmp28 = c10::convert<long>(24L + (2L*x3) + (46L*x2));
                            auto tmp29 = tmp27 ? tmp28 : tmp26;
                            auto tmp30 = tmp9 > tmp8;
                            auto tmp31 = c10::convert<long>(25L + (2L*x3) + (46L*x2));
                            auto tmp32 = tmp30 ? tmp31 : tmp29;
                            auto tmp33 = tmp11 > tmp10;
                            auto tmp34 = c10::convert<long>(46L + (2L*x3) + (46L*x2));
                            auto tmp35 = tmp33 ? tmp34 : tmp32;
                            auto tmp36 = tmp13 > tmp12;
                            auto tmp37 = c10::convert<long>(47L + (2L*x3) + (46L*x2));
                            auto tmp38 = tmp36 ? tmp37 : tmp35;
                            auto tmp39 = tmp15 > tmp14;
                            auto tmp40 = c10::convert<long>(48L + (2L*x3) + (46L*x2));
                            auto tmp41 = tmp39 ? tmp40 : tmp38;
                            out_ptr4[static_cast<long>(x1 + (864L*x3) + (9504L*x2) + (104544L*x0))] = tmp16;
                            out_ptr5[static_cast<long>(x1 + (864L*x3) + (9504L*x2) + (104544L*x0))] = tmp41;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(25L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(25L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr2 + static_cast<long>((-38016L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr6 + static_cast<long>(x3 + (864L*x2) + (21600L*x1) + (540000L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_154 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_155 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(23L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(23L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr1 + static_cast<long>((-19008L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr3 + static_cast<long>(x3 + (864L*x2) + (19872L*x1) + (457056L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_156 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_157 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_158 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_159 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_160 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_161 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_162 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr4 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr8[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr9[static_cast<long>(x2)];
                        auto tmp3 = in_ptr10[static_cast<long>(x2)];
                        auto tmp10 = in_ptr11[static_cast<long>(x2)];
                        auto tmp12 = in_ptr12[static_cast<long>(x2)];
                        auto tmp14 = in_ptr13[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr4[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        float tmp32[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp22 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            auto tmp21 = tmp19 - tmp20;
                            auto tmp23 = tmp22 / tmp5;
                            auto tmp24 = tmp23 + tmp8;
                            auto tmp25 = tmp24.rsqrt();
                            auto tmp26 = tmp21 * tmp25;
                            auto tmp28 = tmp26 * tmp27;
                            auto tmp30 = tmp28 + tmp29;
                            auto tmp31 = tmp30 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                            tmp31.store(tmp32 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr5 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                        at::vec::transpose_mxn<float,8,8>(tmp32, 8, out_ptr6 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr14[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr15[static_cast<long>(x2)];
                        auto tmp3 = in_ptr16[static_cast<long>(x2)];
                        auto tmp10 = in_ptr17[static_cast<long>(x2)];
                        auto tmp12 = in_ptr18[static_cast<long>(x2)];
                        auto tmp14 = in_ptr19[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp16 = in_ptr20[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp17 = in_ptr21[static_cast<long>(x2)];
                        auto tmp19 = in_ptr22[static_cast<long>(x2)];
                        auto tmp24 = in_ptr23[static_cast<long>(x2)];
                        auto tmp26 = in_ptr24[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        auto tmp18 = decltype(tmp16)(tmp16 - tmp17);
                        auto tmp20 = tmp19 / tmp4;
                        auto tmp21 = decltype(tmp20)(tmp20 + tmp6);
                        auto tmp22 = 1 / std::sqrt(tmp21);
                        auto tmp23 = decltype(tmp18)(tmp18 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp27)(tmp27 + tmp14);
                        out_ptr5[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp15;
                        out_ptr6[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(2160L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x3 + (4320L*x2) + (90720L*x1) + (952560L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr7 + static_cast<long>(x3 + (2160L*x2) + (23760L*x1) + (261360L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_163 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(2160L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(1L + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>(47520L + x3 + (2160L*x2) + (45360L*x1) + (952560L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp13.store(out_ptr0 + static_cast<long>(x3 + (2160L*x2) + (45360L*x1) + (952560L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(11L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (4320L*x3) + (90720L*x2) + (952560L*x0)));
                            auto tmp1 = static_cast<float>(1.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 * tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x1 + (2160L*x3) + (23760L*x2) + (261360L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_164 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(432);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (432L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(864);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-432L) + x1 + (432L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    out_ptr0[static_cast<long>(x1 + (864L*x0))] = tmp14;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr4 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr5 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_165 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_166 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_167 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-11L) + x2 + (11L*x1));
                            auto tmp78 = c10::convert<long>((-12L) + x2 + (11L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-10L) + x2 + (11L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (11L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (11L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (11L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(10L + x2 + (11L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(11L + x2 + (11L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(12L + x2 + (11L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_168 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_169 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-11L) + x2 + (11L*x1));
                            auto tmp78 = c10::convert<long>((-12L) + x2 + (11L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-10L) + x2 + (11L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (11L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (11L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (11L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(10L + x2 + (11L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(11L + x2 + (11L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(12L + x2 + (11L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_170 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_171 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_172 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_173 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_174 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_175 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_176 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_177 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(968.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(968.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_178 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_179 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_180 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_181 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-11L) + x2 + (11L*x1));
                            auto tmp78 = c10::convert<long>((-12L) + x2 + (11L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-10L) + x2 + (11L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (11L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (11L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (11L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(10L + x2 + (11L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(11L + x2 + (11L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(12L + x2 + (11L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_182 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_183 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-11L) + x2 + (11L*x1));
                            auto tmp78 = c10::convert<long>((-12L) + x2 + (11L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-10L) + x2 + (11L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (11L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (11L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (11L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(10L + x2 + (11L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(11L + x2 + (11L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(12L + x2 + (11L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_184 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_185 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_186 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_187 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_188 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_189 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_190 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_191 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(968.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(968.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp15;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_192 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_193 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    tmp15.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr4 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_194 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_195 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-11L) + x2 + (11L*x1));
                            auto tmp78 = c10::convert<long>((-12L) + x2 + (11L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-10L) + x2 + (11L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (11L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (11L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (11L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(10L + x2 + (11L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(11L + x2 + (11L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(12L + x2 + (11L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr5 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_196 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_197 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       long* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = in_ptr1[static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = in_ptr1[static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-11L) + x2 + (11L*x1));
                            auto tmp78 = c10::convert<long>((-12L) + x2 + (11L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = in_ptr1[static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-10L) + x2 + (11L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = in_ptr1[static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + x2 + (11L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_ptr1[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>(x2 + (11L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = in_ptr1[static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + x2 + (11L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = in_ptr1[static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(10L + x2 + (11L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = in_ptr1[static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(11L + x2 + (11L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = in_ptr1[static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(12L + x2 + (11L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr3[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp69;
                            out_ptr4[static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_198 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_199 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_200 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_201 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp29[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp19 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp24 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp18 = tmp16 - tmp17;
                            auto tmp20 = tmp19 / tmp5;
                            auto tmp21 = tmp20 + tmp8;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp23 = tmp18 * tmp22;
                            auto tmp25 = tmp23 * tmp24;
                            auto tmp27 = tmp25 + tmp26;
                            auto tmp28 = tmp15 + tmp27;
                            tmp28.store(tmp29 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp29, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x2)];
                        auto tmp3 = in_ptr3[static_cast<long>(x2)];
                        auto tmp10 = in_ptr4[static_cast<long>(x2)];
                        auto tmp12 = in_ptr5[static_cast<long>(x2)];
                        auto tmp14 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp15 = out_ptr0[static_cast<long>(x2)];
                        auto tmp17 = out_ptr1[static_cast<long>(x2)];
                        auto tmp22 = in_ptr6[static_cast<long>(x2)];
                        auto tmp24 = in_ptr7[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                        auto tmp18 = tmp17 / tmp4;
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp6);
                        auto tmp20 = 1 / std::sqrt(tmp19);
                        auto tmp21 = decltype(tmp16)(tmp16 * tmp20);
                        auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 + tmp24);
                        auto tmp26 = decltype(tmp13)(tmp13 + tmp25);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp26;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_202 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_203 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_204 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(968.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_mean_relu_view_205 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    auto out_ptr7 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(968L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(968.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(968.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            tmp21.store(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr7 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        float tmp22[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr13 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp22, 8);
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp19, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp13 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp16 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp20 = at::vec::Vectorized<float>::loadu(tmp19 + static_cast<long>(8L*x1_inner));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(tmp22 + static_cast<long>(8L*x1_inner));
                            auto tmp24 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp27 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp33 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp36 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(968.0);
                            auto tmp7 = tmp5 / tmp6;
                            auto tmp8 = static_cast<float>(0.001);
                            auto tmp9 = decltype(tmp7)(tmp7 + tmp8);
                            auto tmp10 = 1 / std::sqrt(tmp9);
                            auto tmp11 = at::vec::Vectorized<float>(tmp10);
                            auto tmp12 = tmp4 * tmp11;
                            auto tmp14 = at::vec::Vectorized<float>(tmp13);
                            auto tmp15 = tmp12 * tmp14;
                            auto tmp17 = at::vec::Vectorized<float>(tmp16);
                            auto tmp18 = tmp15 + tmp17;
                            auto tmp21 = tmp18 + tmp20;
                            auto tmp25 = at::vec::Vectorized<float>(tmp24);
                            auto tmp26 = tmp23 - tmp25;
                            auto tmp28 = tmp27 / tmp6;
                            auto tmp29 = decltype(tmp28)(tmp28 + tmp8);
                            auto tmp30 = 1 / std::sqrt(tmp29);
                            auto tmp31 = at::vec::Vectorized<float>(tmp30);
                            auto tmp32 = tmp26 * tmp31;
                            auto tmp34 = at::vec::Vectorized<float>(tmp33);
                            auto tmp35 = tmp32 * tmp34;
                            auto tmp37 = at::vec::Vectorized<float>(tmp36);
                            auto tmp38 = tmp35 + tmp37;
                            auto tmp39 = tmp38 + tmp20;
                            tmp21.store(out_ptr4 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            tmp39.store(out_ptr5 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp17 = tmp15 + tmp16;
                        auto tmp20 = tmp18 - tmp19;
                        auto tmp22 = tmp21 / tmp5;
                        auto tmp23 = tmp22 + tmp8;
                        auto tmp24 = tmp23.rsqrt();
                        auto tmp25 = tmp20 * tmp24;
                        auto tmp27 = tmp25 * tmp26;
                        auto tmp29 = tmp27 + tmp28;
                        auto tmp30 = tmp29 + tmp16;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr4[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp30.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr5[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp18[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x2));
                            auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2));
                            auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(968.0);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 / tmp5;
                            auto tmp7 = static_cast<float>(0.001);
                            auto tmp8 = at::vec::Vectorized<float>(tmp7);
                            auto tmp9 = tmp6 + tmp8;
                            auto tmp10 = tmp9.rsqrt();
                            auto tmp11 = tmp2 * tmp10;
                            auto tmp13 = tmp11 * tmp12;
                            auto tmp15 = tmp13 + tmp14;
                            auto tmp17 = tmp15 + tmp16;
                            tmp17.store(tmp18 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp18, 8, out_ptr6 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x2)];
                        auto tmp3 = out_ptr1[static_cast<long>(x2)];
                        auto tmp10 = in_ptr18[static_cast<long>(x2)];
                        auto tmp12 = in_ptr19[static_cast<long>(x2)];
                        auto tmp14 = in_ptr20[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(968.0);
                        auto tmp5 = tmp3 / tmp4;
                        auto tmp6 = static_cast<float>(0.001);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = 1 / std::sqrt(tmp7);
                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                        auto tmp15 = decltype(tmp13)(tmp13 + tmp14);
                        out_ptr6[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(34560L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (121L*x0)));
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp_acc0_vec = tmp_acc0_vec + tmp1;
                    }
                    #pragma omp simd simdlen(4)  reduction(+:tmp_acc0)
                    for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr21[static_cast<long>(x1 + (121L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        tmp_acc0 = tmp_acc0 + tmp1;
                    }
                    tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                    out_ptr7[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(34560L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr7 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(121.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    tmp3.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_relu_threshold_backward_206 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       float* in_out_ptr14,
                       float* in_out_ptr15,
                       float* in_out_ptr16,
                       float* in_out_ptr17,
                       float* in_out_ptr18,
                       float* in_out_ptr19,
                       float* in_out_ptr20,
                       float* in_out_ptr21,
                       float* in_out_ptr22,
                       float* in_out_ptr23,
                       float* in_out_ptr24,
                       float* in_out_ptr25,
                       float* in_out_ptr26,
                       float* in_out_ptr27,
                       float* in_out_ptr28,
                       float* in_out_ptr29,
                       float* in_out_ptr30,
                       float* in_out_ptr31,
                       float* in_out_ptr32,
                       float* in_out_ptr33,
                       float* in_out_ptr34,
                       float* in_out_ptr35,
                       float* in_out_ptr36,
                       float* in_out_ptr37,
                       float* in_out_ptr38,
                       float* in_out_ptr39,
                       float* in_out_ptr40,
                       float* in_out_ptr41,
                       float* in_out_ptr42,
                       float* in_out_ptr43,
                       float* in_out_ptr44,
                       float* in_out_ptr45,
                       float* in_out_ptr46,
                       float* in_out_ptr47,
                       float* in_out_ptr48,
                       float* in_out_ptr49,
                       float* in_out_ptr50,
                       float* in_out_ptr51,
                       float* in_out_ptr52,
                       float* in_out_ptr53,
                       float* in_out_ptr54,
                       float* in_out_ptr55,
                       float* in_out_ptr56,
                       float* in_out_ptr57,
                       float* in_out_ptr58,
                       float* in_out_ptr59,
                       float* in_out_ptr60,
                       float* in_out_ptr61,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const long* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const long* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const long* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const long* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const long* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const long* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const long* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const long* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const long* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const long* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const long* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const long* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const long* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const long* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const long* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const long* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const long* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const long* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const long* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const long* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const long* in_ptr87,
                       const float* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const long* in_ptr91,
                       const float* in_ptr92,
                       const float* in_ptr93,
                       const float* in_ptr94,
                       const long* in_ptr95,
                       const float* in_ptr96,
                       const float* in_ptr97,
                       const float* in_ptr98,
                       const long* in_ptr99,
                       const float* in_ptr100,
                       const float* in_ptr101,
                       const float* in_ptr102,
                       const long* in_ptr103,
                       const float* in_ptr104,
                       const float* in_ptr105,
                       const float* in_ptr106,
                       const long* in_ptr107,
                       const float* in_ptr108,
                       const float* in_ptr109,
                       const float* in_ptr110,
                       const long* in_ptr111,
                       const float* in_ptr112,
                       const float* in_ptr113,
                       const float* in_ptr114,
                       const long* in_ptr115,
                       const float* in_ptr116,
                       const float* in_ptr117,
                       const float* in_ptr118,
                       const long* in_ptr119,
                       const float* in_ptr120,
                       const float* in_ptr121,
                       const float* in_ptr122,
                       const long* in_ptr123,
                       const float* in_ptr124,
                       const float* in_ptr125,
                       const float* in_ptr126,
                       const long* in_ptr127,
                       const float* in_ptr128,
                       const float* in_ptr129,
                       const float* in_ptr130,
                       const long* in_ptr131,
                       const float* in_ptr132,
                       const float* in_ptr133,
                       const float* in_ptr134,
                       const long* in_ptr135,
                       const float* in_ptr136,
                       const float* in_ptr137,
                       const float* in_ptr138,
                       const long* in_ptr139,
                       const float* in_ptr140,
                       const float* in_ptr141,
                       const float* in_ptr142,
                       const long* in_ptr143,
                       const float* in_ptr144,
                       const float* in_ptr145,
                       const float* in_ptr146,
                       const long* in_ptr147,
                       const float* in_ptr148,
                       const float* in_ptr149,
                       const float* in_ptr150,
                       const long* in_ptr151,
                       const float* in_ptr152,
                       const float* in_ptr153,
                       const float* in_ptr154,
                       const long* in_ptr155,
                       const float* in_ptr156,
                       const float* in_ptr157,
                       const float* in_ptr158,
                       const long* in_ptr159,
                       const float* in_ptr160,
                       const float* in_ptr161,
                       const float* in_ptr162,
                       const long* in_ptr163,
                       const float* in_ptr164,
                       const float* in_ptr165,
                       const float* in_ptr166,
                       const long* in_ptr167,
                       const float* in_ptr168,
                       const float* in_ptr169,
                       const float* in_ptr170,
                       const long* in_ptr171,
                       const float* in_ptr172,
                       const float* in_ptr173,
                       const float* in_ptr174,
                       const long* in_ptr175,
                       const float* in_ptr176,
                       const float* in_ptr177,
                       const float* in_ptr178,
                       const long* in_ptr179,
                       const float* in_ptr180,
                       const float* in_ptr181,
                       const float* in_ptr182,
                       const long* in_ptr183,
                       const float* in_ptr184,
                       const float* in_ptr185,
                       const float* in_ptr186,
                       const long* in_ptr187,
                       const float* in_ptr188,
                       const float* in_ptr189,
                       const float* in_ptr190,
                       const long* in_ptr191,
                       const float* in_ptr192,
                       const float* in_ptr193,
                       const float* in_ptr194,
                       const long* in_ptr195,
                       const float* in_ptr196,
                       const float* in_ptr197,
                       const float* in_ptr198,
                       const long* in_ptr199,
                       const float* in_ptr200,
                       const float* in_ptr201,
                       const float* in_ptr202,
                       const long* in_ptr203,
                       const float* in_ptr204,
                       const float* in_ptr205,
                       const float* in_ptr206,
                       const long* in_ptr207,
                       const float* in_ptr208,
                       const float* in_ptr209,
                       const float* in_ptr210,
                       const long* in_ptr211,
                       const float* in_ptr212,
                       const float* in_ptr213,
                       const float* in_ptr214,
                       const long* in_ptr215,
                       const float* in_ptr216,
                       const float* in_ptr217,
                       const float* in_ptr218,
                       const long* in_ptr219,
                       const float* in_ptr220,
                       const float* in_ptr221,
                       const float* in_ptr222,
                       const long* in_ptr223,
                       const float* in_ptr224,
                       const float* in_ptr225,
                       const float* in_ptr226,
                       const long* in_ptr227,
                       const float* in_ptr228,
                       const float* in_ptr229,
                       const float* in_ptr230,
                       const long* in_ptr231,
                       const float* in_ptr232,
                       const float* in_ptr233,
                       const float* in_ptr234,
                       const long* in_ptr235,
                       const float* in_ptr236,
                       const float* in_ptr237,
                       const float* in_ptr238,
                       const long* in_ptr239,
                       const float* in_ptr240,
                       const float* in_ptr241,
                       const float* in_ptr242,
                       const long* in_ptr243,
                       const float* in_ptr244,
                       const float* in_ptr245,
                       const float* in_ptr246,
                       const long* in_ptr247,
                       const float* in_ptr248,
                       const float* in_ptr249,
                       const float* in_ptr250,
                       bool* out_ptr0,
                       bool* out_ptr1,
                       bool* out_ptr2,
                       bool* out_ptr3,
                       long* out_ptr5,
                       float* out_ptr7,
                       float* out_ptr8,
                       float* out_ptr10,
                       float* out_ptr11,
                       long* out_ptr13,
                       float* out_ptr15,
                       float* out_ptr16,
                       long* out_ptr18,
                       float* out_ptr20,
                       float* out_ptr21,
                       long* out_ptr23,
                       float* out_ptr25,
                       float* out_ptr26,
                       long* out_ptr28,
                       float* out_ptr30,
                       float* out_ptr31,
                       long* out_ptr33,
                       float* out_ptr35,
                       float* out_ptr36,
                       long* out_ptr38,
                       float* out_ptr40,
                       float* out_ptr41,
                       long* out_ptr43,
                       float* out_ptr45,
                       float* out_ptr46,
                       long* out_ptr48,
                       float* out_ptr50,
                       float* out_ptr51,
                       long* out_ptr53,
                       float* out_ptr55,
                       float* out_ptr56,
                       long* out_ptr58,
                       float* out_ptr60,
                       float* out_ptr61,
                       long* out_ptr63,
                       float* out_ptr65,
                       float* out_ptr66,
                       long* out_ptr68,
                       float* out_ptr70,
                       float* out_ptr71,
                       long* out_ptr73,
                       float* out_ptr75,
                       float* out_ptr76,
                       long* out_ptr78,
                       float* out_ptr80,
                       float* out_ptr81,
                       long* out_ptr83,
                       float* out_ptr85,
                       float* out_ptr86,
                       long* out_ptr88,
                       float* out_ptr90,
                       float* out_ptr91,
                       long* out_ptr93,
                       float* out_ptr95,
                       float* out_ptr96,
                       long* out_ptr98,
                       float* out_ptr100,
                       float* out_ptr101,
                       long* out_ptr103,
                       float* out_ptr105,
                       float* out_ptr106,
                       long* out_ptr108,
                       float* out_ptr110,
                       float* out_ptr111,
                       long* out_ptr113,
                       float* out_ptr115,
                       float* out_ptr116,
                       long* out_ptr118,
                       float* out_ptr120,
                       float* out_ptr121,
                       long* out_ptr123,
                       float* out_ptr125,
                       float* out_ptr126,
                       long* out_ptr128,
                       float* out_ptr130,
                       float* out_ptr131,
                       long* out_ptr133,
                       float* out_ptr135,
                       float* out_ptr136,
                       long* out_ptr138,
                       float* out_ptr140,
                       float* out_ptr141,
                       long* out_ptr143,
                       float* out_ptr145,
                       float* out_ptr146,
                       long* out_ptr148,
                       float* out_ptr150,
                       float* out_ptr151,
                       long* out_ptr153,
                       float* out_ptr155,
                       float* out_ptr156,
                       long* out_ptr158,
                       float* out_ptr160,
                       float* out_ptr161,
                       long* out_ptr163,
                       float* out_ptr165,
                       float* out_ptr166,
                       long* out_ptr168,
                       float* out_ptr170,
                       float* out_ptr171,
                       long* out_ptr173,
                       float* out_ptr175,
                       float* out_ptr176,
                       long* out_ptr178,
                       float* out_ptr180,
                       float* out_ptr181,
                       long* out_ptr183,
                       float* out_ptr185,
                       float* out_ptr186,
                       long* out_ptr188,
                       float* out_ptr190,
                       float* out_ptr191,
                       long* out_ptr193,
                       float* out_ptr195,
                       float* out_ptr196,
                       long* out_ptr198,
                       float* out_ptr200,
                       float* out_ptr201,
                       long* out_ptr203,
                       float* out_ptr205,
                       float* out_ptr206,
                       long* out_ptr208,
                       float* out_ptr210,
                       float* out_ptr211,
                       long* out_ptr213,
                       float* out_ptr215,
                       float* out_ptr216,
                       long* out_ptr218,
                       float* out_ptr220,
                       float* out_ptr221,
                       long* out_ptr223,
                       float* out_ptr225,
                       float* out_ptr226,
                       long* out_ptr228,
                       float* out_ptr230,
                       float* out_ptr231,
                       long* out_ptr233,
                       float* out_ptr235,
                       float* out_ptr236,
                       long* out_ptr238,
                       float* out_ptr240,
                       float* out_ptr241,
                       long* out_ptr243,
                       float* out_ptr245,
                       float* out_ptr246,
                       long* out_ptr248,
                       float* out_ptr250,
                       float* out_ptr251,
                       long* out_ptr253,
                       float* out_ptr255,
                       float* out_ptr256,
                       long* out_ptr258,
                       float* out_ptr260,
                       float* out_ptr261,
                       long* out_ptr263,
                       float* out_ptr265,
                       float* out_ptr266,
                       long* out_ptr268,
                       float* out_ptr270,
                       float* out_ptr271,
                       long* out_ptr273,
                       float* out_ptr275,
                       float* out_ptr276,
                       long* out_ptr278,
                       float* out_ptr280,
                       float* out_ptr281,
                       long* out_ptr283,
                       float* out_ptr285,
                       float* out_ptr286,
                       long* out_ptr288,
                       float* out_ptr290,
                       float* out_ptr291,
                       long* out_ptr293,
                       float* out_ptr295,
                       float* out_ptr296,
                       long* out_ptr298,
                       float* out_ptr300,
                       float* out_ptr301,
                       long* out_ptr303,
                       float* out_ptr305,
                       float* out_ptr306,
                       long* out_ptr308,
                       float* out_ptr310,
                       float* out_ptr311)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (121L*x1) + (522720L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        auto tmp2 = static_cast<float>(0.0);
                        auto tmp3 = tmp1 <= tmp2;
                        out_ptr0[static_cast<long>(x1 + (4320L*x2) + (522720L*x0))] = tmp3;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr1[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr1[static_cast<long>(x0)] = tmp3;
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6096384L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr2[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr2[static_cast<long>(x0)] = tmp3;
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(5952096L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr3[static_cast<long>(x0)];
                auto tmp1 = tmp0 * (tmp0>0);
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = tmp1 <= tmp2;
                out_ptr3[static_cast<long>(x0)] = tmp3;
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr4[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr5[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr7 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr7 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr8 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(217800.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000045913893085);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr8 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr10 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr10 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr8[static_cast<long>(x0)];
                    auto tmp3 = in_ptr9[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr10[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr11 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(217800.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000045913893085);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr11 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr1[static_cast<long>(x0)];
                    auto tmp7 = in_ptr10[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(217800.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000045913893085);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr11[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr11[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr13[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr15 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr15 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr12[static_cast<long>(x0)];
                    auto tmp3 = in_ptr13[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr15[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr16 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr16 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr2[static_cast<long>(x0)];
                    auto tmp7 = in_ptr14[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr16[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr15[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr18[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr20 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr20 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr16[static_cast<long>(x0)];
                    auto tmp3 = in_ptr17[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr20[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr21 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr21 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr3[static_cast<long>(x0)];
                    auto tmp7 = in_ptr18[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr21[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr19[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr23[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr25 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr25 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr20[static_cast<long>(x0)];
                    auto tmp3 = in_ptr21[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr25[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr26 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr26 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr4[static_cast<long>(x0)];
                    auto tmp7 = in_ptr22[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr26[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr23[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr28[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr30 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr30 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr24[static_cast<long>(x0)];
                    auto tmp3 = in_ptr25[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr30[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr31 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr31 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr5[static_cast<long>(x0)];
                    auto tmp7 = in_ptr26[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr31[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr27[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr33[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr35 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr35 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr28[static_cast<long>(x0)];
                    auto tmp3 = in_ptr29[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr35[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr36 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr36 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr6[static_cast<long>(x0)];
                    auto tmp7 = in_ptr30[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr36[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr31[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr38[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr40 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr40 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr32[static_cast<long>(x0)];
                    auto tmp3 = in_ptr33[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr40[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr41 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr41 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr7[static_cast<long>(x0)];
                    auto tmp7 = in_ptr34[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr41[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr35[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr43[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr45 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr45 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr36[static_cast<long>(x0)];
                    auto tmp3 = in_ptr37[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr45[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr46 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr46 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr8[static_cast<long>(x0)];
                    auto tmp7 = in_ptr38[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr46[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr39[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr48[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr50 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr50 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr40[static_cast<long>(x0)];
                    auto tmp3 = in_ptr41[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr50[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr51 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr51 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr9[static_cast<long>(x0)];
                    auto tmp7 = in_ptr42[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr51[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr43[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr53[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr55 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr55 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr44[static_cast<long>(x0)];
                    auto tmp3 = in_ptr45[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr55[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr56 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr56 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr10[static_cast<long>(x0)];
                    auto tmp7 = in_ptr46[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr56[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr47[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr58[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr60 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr60 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr48[static_cast<long>(x0)];
                    auto tmp3 = in_ptr49[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr60[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr61 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr61 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr11[static_cast<long>(x0)];
                    auto tmp7 = in_ptr50[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr61[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr51[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr63[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr65 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr65 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr52[static_cast<long>(x0)];
                    auto tmp3 = in_ptr53[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr65[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr66 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr66 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr12[static_cast<long>(x0)];
                    auto tmp7 = in_ptr54[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr66[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr55[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr68[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr70 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr70 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr56[static_cast<long>(x0)];
                    auto tmp3 = in_ptr57[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr70[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr71 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr71 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr13[static_cast<long>(x0)];
                    auto tmp7 = in_ptr58[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr71[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr59[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr73[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr75 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr75 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr60[static_cast<long>(x0)];
                    auto tmp3 = in_ptr61[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr75[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr14 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr76 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr76 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr14[static_cast<long>(x0)];
                    auto tmp7 = in_ptr62[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr76[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr63[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr78[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr80 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr80 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr64[static_cast<long>(x0)];
                    auto tmp3 = in_ptr65[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr80[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(48L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr15 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr81 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr81 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(48L); x0<static_cast<long>(54L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr15[static_cast<long>(x0)];
                    auto tmp7 = in_ptr66[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr81[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr67[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr83[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr85 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr85 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr68[static_cast<long>(x0)];
                    auto tmp3 = in_ptr69[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr85[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr16 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr86 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr86 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr16[static_cast<long>(x0)];
                    auto tmp7 = in_ptr70[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr86[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr71[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr88[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr90 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr90 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr72[static_cast<long>(x0)];
                    auto tmp3 = in_ptr73[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr90[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr17 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr91 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000181451978734);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr91 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr17[static_cast<long>(x0)];
                    auto tmp7 = in_ptr74[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(55112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000181451978734);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr91[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr75[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr93[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr95 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr95 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr76[static_cast<long>(x0)];
                    auto tmp3 = in_ptr77[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr95[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr18 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr96 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr96 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr18[static_cast<long>(x0)];
                    auto tmp7 = in_ptr78[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr96[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr79[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr98[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr80 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr100 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr100 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr80[static_cast<long>(x0)];
                    auto tmp3 = in_ptr81[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr100[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr19 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr101 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr101 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr19[static_cast<long>(x0)];
                    auto tmp7 = in_ptr82[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr101[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr83[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr103[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr84 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr105 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr105 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr84[static_cast<long>(x0)];
                    auto tmp3 = in_ptr85[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr105[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr20 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr106 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr106 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr20[static_cast<long>(x0)];
                    auto tmp7 = in_ptr86[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr106[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr87[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr108[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr88 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr110 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr110 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr88[static_cast<long>(x0)];
                    auto tmp3 = in_ptr89[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr110[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr21 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr111 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr111 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr21[static_cast<long>(x0)];
                    auto tmp7 = in_ptr90[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr111[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr91[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr113[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr92 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr115 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr115 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr92[static_cast<long>(x0)];
                    auto tmp3 = in_ptr93[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr115[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr22 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr116 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr116 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr22[static_cast<long>(x0)];
                    auto tmp7 = in_ptr94[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr116[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr95[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr118[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr96 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr120 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr120 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr96[static_cast<long>(x0)];
                    auto tmp3 = in_ptr97[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr120[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr23 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr121 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr121 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr23[static_cast<long>(x0)];
                    auto tmp7 = in_ptr98[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr121[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr99[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr123[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr100 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr125 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr125 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr100[static_cast<long>(x0)];
                    auto tmp3 = in_ptr101[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr125[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr24 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr126 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr126 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr24[static_cast<long>(x0)];
                    auto tmp7 = in_ptr102[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr126[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr103[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr128[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr104 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr130 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr130 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr104[static_cast<long>(x0)];
                    auto tmp3 = in_ptr105[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr130[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr25 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr131 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr131 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr25[static_cast<long>(x0)];
                    auto tmp7 = in_ptr106[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr131[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr107[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr133[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr108 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr135 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr135 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr108[static_cast<long>(x0)];
                    auto tmp3 = in_ptr109[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr135[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr26 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr136 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr136 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr26[static_cast<long>(x0)];
                    auto tmp7 = in_ptr110[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr136[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr111[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr138[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr112 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr140 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr140 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr112[static_cast<long>(x0)];
                    auto tmp3 = in_ptr113[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr140[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr27 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr141 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr141 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr27[static_cast<long>(x0)];
                    auto tmp7 = in_ptr114[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr141[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr115[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr143[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr116 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr145 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr145 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr116[static_cast<long>(x0)];
                    auto tmp3 = in_ptr117[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr145[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr28 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr146 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr146 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr28[static_cast<long>(x0)];
                    auto tmp7 = in_ptr118[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr146[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr119[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr148[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr120 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr150 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr150 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr120[static_cast<long>(x0)];
                    auto tmp3 = in_ptr121[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr150[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr29 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr151 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr151 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr29[static_cast<long>(x0)];
                    auto tmp7 = in_ptr122[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr151[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr123[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr153[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr124 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr155 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr155 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr124[static_cast<long>(x0)];
                    auto tmp3 = in_ptr125[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr155[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr30 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr156 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr156 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(104L); x0<static_cast<long>(108L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr30[static_cast<long>(x0)];
                    auto tmp7 = in_ptr126[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000708666997378);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr156[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr127[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr158[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr128 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr160 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr160 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr31 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr161 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr161 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr131[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr163[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr132 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr165 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr165 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr32 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr166 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr166 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr135[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr168[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr136 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr170 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr170 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr33 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr171 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr171 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr139[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr173[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr140 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr175 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr175 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr34 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr176 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr176 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr143[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr178[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr144 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr180 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr180 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr35 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr181 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr181 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr147[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr183[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr148 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr185 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr185 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr36 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr186 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr186 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr151[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr188[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr152 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr190 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr190 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr37 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr191 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr191 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr155[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr193[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr156 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr195 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr195 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr38 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr196 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr196 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr159[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr198[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr160 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr200 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr200 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr39 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr201 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr201 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr163[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr203[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr164 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr205 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr205 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr40 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr206 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr206 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr167[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr208[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr168 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr210 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr210 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr41 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr211 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr211 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr171[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr213[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr172 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr215 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr215 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr42 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr216 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr216 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr175[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr218[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr176 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr220 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr220 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr43 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr221 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr221 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr179[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr223[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr180 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr225 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr225 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr44 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr226 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr226 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr183[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr228[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr184 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr230 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr230 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr45 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr231 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr231 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr187[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr233[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr188 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr235 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr235 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr46 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr236 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr236 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr191[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr238[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr192 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr240 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr240 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr47 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr241 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr241 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr195[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr243[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr196 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr245 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr245 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr48 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr246 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr246 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr199[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr248[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr200 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr250 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr250 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr49 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr251 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr251 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr203[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr253[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr204 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr255 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr255 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr50 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr256 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr256 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr207[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr258[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr208 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr260 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr260 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr51 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr261 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr261 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr211[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr263[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr212 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr265 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr265 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr52 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr266 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr266 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr215[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr268[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr216 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr270 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr270 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr53 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr271 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr271 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr219[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr273[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr220 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr275 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr275 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr54 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr276 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr276 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr223[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr278[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr224 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr280 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr280 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr55 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr281 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr281 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr227[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr283[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr228 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr285 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr285 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr56 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr286 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr286 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr231[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr288[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr232 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr290 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr290 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr57 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr291 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr291 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr235[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr293[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr236 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr295 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr295 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr58 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr296 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr296 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr239[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr298[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr240 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr300 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr300 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr59 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr301 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr301 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr243[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr303[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr244 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr305 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr305 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr60 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr306 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr306 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr247[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr308[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr248 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr310 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr310 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr61 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr311 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(14112.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000708666997378);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr311 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_207 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       float* in_out_ptr14,
                       float* in_out_ptr15,
                       float* in_out_ptr16,
                       float* in_out_ptr17,
                       float* in_out_ptr18,
                       float* in_out_ptr19,
                       float* in_out_ptr20,
                       float* in_out_ptr21,
                       float* in_out_ptr22,
                       float* in_out_ptr23,
                       float* in_out_ptr24,
                       float* in_out_ptr25,
                       float* in_out_ptr26,
                       float* in_out_ptr27,
                       float* in_out_ptr28,
                       float* in_out_ptr29,
                       float* in_out_ptr30,
                       float* in_out_ptr31,
                       float* in_out_ptr32,
                       float* in_out_ptr33,
                       float* in_out_ptr34,
                       float* in_out_ptr35,
                       float* in_out_ptr36,
                       float* in_out_ptr37,
                       float* in_out_ptr38,
                       float* in_out_ptr39,
                       float* in_out_ptr40,
                       float* in_out_ptr41,
                       float* in_out_ptr42,
                       float* in_out_ptr43,
                       float* in_out_ptr44,
                       float* in_out_ptr45,
                       float* in_out_ptr46,
                       float* in_out_ptr47,
                       float* in_out_ptr48,
                       float* in_out_ptr49,
                       float* in_out_ptr50,
                       float* in_out_ptr51,
                       float* in_out_ptr52,
                       float* in_out_ptr53,
                       float* in_out_ptr54,
                       float* in_out_ptr55,
                       float* in_out_ptr56,
                       float* in_out_ptr57,
                       float* in_out_ptr58,
                       float* in_out_ptr59,
                       float* in_out_ptr60,
                       float* in_out_ptr61,
                       const long* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const long* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const long* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const long* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const long* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const long* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const long* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const long* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const long* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const long* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const long* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const long* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const long* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const long* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const long* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const long* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const long* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const long* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const long* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const long* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const long* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const long* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const long* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91,
                       const long* in_ptr92,
                       const float* in_ptr93,
                       const float* in_ptr94,
                       const float* in_ptr95,
                       const long* in_ptr96,
                       const float* in_ptr97,
                       const float* in_ptr98,
                       const float* in_ptr99,
                       const long* in_ptr100,
                       const float* in_ptr101,
                       const float* in_ptr102,
                       const float* in_ptr103,
                       const long* in_ptr104,
                       const float* in_ptr105,
                       const float* in_ptr106,
                       const float* in_ptr107,
                       const long* in_ptr108,
                       const float* in_ptr109,
                       const float* in_ptr110,
                       const float* in_ptr111,
                       const long* in_ptr112,
                       const float* in_ptr113,
                       const float* in_ptr114,
                       const float* in_ptr115,
                       const long* in_ptr116,
                       const float* in_ptr117,
                       const float* in_ptr118,
                       const float* in_ptr119,
                       const long* in_ptr120,
                       const float* in_ptr121,
                       const float* in_ptr122,
                       const float* in_ptr123,
                       const long* in_ptr124,
                       const float* in_ptr125,
                       const float* in_ptr126,
                       const float* in_ptr127,
                       const long* in_ptr128,
                       const float* in_ptr129,
                       const float* in_ptr130,
                       const float* in_ptr131,
                       const long* in_ptr132,
                       const float* in_ptr133,
                       const float* in_ptr134,
                       const float* in_ptr135,
                       const long* in_ptr136,
                       const float* in_ptr137,
                       const float* in_ptr138,
                       const float* in_ptr139,
                       const long* in_ptr140,
                       const float* in_ptr141,
                       const float* in_ptr142,
                       const float* in_ptr143,
                       const long* in_ptr144,
                       const float* in_ptr145,
                       const float* in_ptr146,
                       const float* in_ptr147,
                       const long* in_ptr148,
                       const float* in_ptr149,
                       const float* in_ptr150,
                       const float* in_ptr151,
                       const long* in_ptr152,
                       const float* in_ptr153,
                       const float* in_ptr154,
                       const float* in_ptr155,
                       const long* in_ptr156,
                       const float* in_ptr157,
                       const float* in_ptr158,
                       const float* in_ptr159,
                       const long* in_ptr160,
                       const float* in_ptr161,
                       const float* in_ptr162,
                       const float* in_ptr163,
                       const long* in_ptr164,
                       const float* in_ptr165,
                       const float* in_ptr166,
                       const float* in_ptr167,
                       const long* in_ptr168,
                       const float* in_ptr169,
                       const float* in_ptr170,
                       const float* in_ptr171,
                       const long* in_ptr172,
                       const float* in_ptr173,
                       const float* in_ptr174,
                       const float* in_ptr175,
                       const long* in_ptr176,
                       const float* in_ptr177,
                       const float* in_ptr178,
                       const float* in_ptr179,
                       const long* in_ptr180,
                       const float* in_ptr181,
                       const float* in_ptr182,
                       const float* in_ptr183,
                       const long* in_ptr184,
                       const float* in_ptr185,
                       const float* in_ptr186,
                       const float* in_ptr187,
                       const long* in_ptr188,
                       const float* in_ptr189,
                       const float* in_ptr190,
                       const float* in_ptr191,
                       const long* in_ptr192,
                       const float* in_ptr193,
                       const float* in_ptr194,
                       const float* in_ptr195,
                       const long* in_ptr196,
                       const float* in_ptr197,
                       const float* in_ptr198,
                       const float* in_ptr199,
                       const long* in_ptr200,
                       const float* in_ptr201,
                       const float* in_ptr202,
                       const float* in_ptr203,
                       const long* in_ptr204,
                       const float* in_ptr205,
                       const float* in_ptr206,
                       const float* in_ptr207,
                       const long* in_ptr208,
                       const float* in_ptr209,
                       const float* in_ptr210,
                       const float* in_ptr211,
                       const long* in_ptr212,
                       const float* in_ptr213,
                       const float* in_ptr214,
                       const float* in_ptr215,
                       const long* in_ptr216,
                       const float* in_ptr217,
                       const float* in_ptr218,
                       const float* in_ptr219,
                       const long* in_ptr220,
                       const float* in_ptr221,
                       const float* in_ptr222,
                       const float* in_ptr223,
                       const long* in_ptr224,
                       const float* in_ptr225,
                       const float* in_ptr226,
                       const float* in_ptr227,
                       const long* in_ptr228,
                       const float* in_ptr229,
                       const float* in_ptr230,
                       const float* in_ptr231,
                       const long* in_ptr232,
                       const float* in_ptr233,
                       const float* in_ptr234,
                       const float* in_ptr235,
                       const long* in_ptr236,
                       const float* in_ptr237,
                       const float* in_ptr238,
                       const float* in_ptr239,
                       const long* in_ptr240,
                       const float* in_ptr241,
                       const float* in_ptr242,
                       const float* in_ptr243,
                       const long* in_ptr244,
                       const float* in_ptr245,
                       const float* in_ptr246,
                       const float* in_ptr247,
                       const long* in_ptr248,
                       const float* in_ptr249,
                       const float* in_ptr250,
                       long* out_ptr1,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr6,
                       float* out_ptr8,
                       float* out_ptr9,
                       long* out_ptr11,
                       float* out_ptr13,
                       float* out_ptr14,
                       long* out_ptr16,
                       float* out_ptr18,
                       float* out_ptr19,
                       long* out_ptr21,
                       float* out_ptr23,
                       float* out_ptr24,
                       long* out_ptr26,
                       float* out_ptr28,
                       float* out_ptr29,
                       long* out_ptr31,
                       float* out_ptr33,
                       float* out_ptr34,
                       long* out_ptr36,
                       float* out_ptr38,
                       float* out_ptr39,
                       long* out_ptr41,
                       float* out_ptr43,
                       float* out_ptr44,
                       long* out_ptr46,
                       float* out_ptr48,
                       float* out_ptr49,
                       long* out_ptr51,
                       float* out_ptr53,
                       float* out_ptr54,
                       long* out_ptr56,
                       float* out_ptr58,
                       float* out_ptr59,
                       long* out_ptr61,
                       float* out_ptr63,
                       float* out_ptr64,
                       long* out_ptr66,
                       float* out_ptr68,
                       float* out_ptr69,
                       long* out_ptr71,
                       float* out_ptr73,
                       float* out_ptr74,
                       long* out_ptr76,
                       float* out_ptr78,
                       float* out_ptr79,
                       long* out_ptr81,
                       float* out_ptr83,
                       float* out_ptr84,
                       long* out_ptr86,
                       float* out_ptr88,
                       float* out_ptr89,
                       long* out_ptr91,
                       float* out_ptr93,
                       float* out_ptr94,
                       long* out_ptr96,
                       float* out_ptr98,
                       float* out_ptr99,
                       long* out_ptr101,
                       float* out_ptr103,
                       float* out_ptr104,
                       long* out_ptr106,
                       float* out_ptr108,
                       float* out_ptr109,
                       long* out_ptr111,
                       float* out_ptr113,
                       float* out_ptr114,
                       long* out_ptr116,
                       float* out_ptr118,
                       float* out_ptr119,
                       long* out_ptr121,
                       float* out_ptr123,
                       float* out_ptr124,
                       long* out_ptr126,
                       float* out_ptr128,
                       float* out_ptr129,
                       long* out_ptr131,
                       float* out_ptr133,
                       float* out_ptr134,
                       long* out_ptr136,
                       float* out_ptr138,
                       float* out_ptr139,
                       long* out_ptr141,
                       float* out_ptr143,
                       float* out_ptr144,
                       long* out_ptr146,
                       float* out_ptr148,
                       float* out_ptr149,
                       long* out_ptr151,
                       float* out_ptr153,
                       float* out_ptr154,
                       long* out_ptr156,
                       float* out_ptr158,
                       float* out_ptr159,
                       long* out_ptr161,
                       float* out_ptr163,
                       float* out_ptr164,
                       long* out_ptr166,
                       float* out_ptr168,
                       float* out_ptr169,
                       long* out_ptr171,
                       float* out_ptr173,
                       float* out_ptr174,
                       long* out_ptr176,
                       float* out_ptr178,
                       float* out_ptr179,
                       long* out_ptr181,
                       float* out_ptr183,
                       float* out_ptr184,
                       long* out_ptr186,
                       float* out_ptr188,
                       float* out_ptr189,
                       long* out_ptr191,
                       float* out_ptr193,
                       float* out_ptr194,
                       long* out_ptr196,
                       float* out_ptr198,
                       float* out_ptr199,
                       long* out_ptr201,
                       float* out_ptr203,
                       float* out_ptr204,
                       long* out_ptr206,
                       float* out_ptr208,
                       float* out_ptr209,
                       long* out_ptr211,
                       float* out_ptr213,
                       float* out_ptr214,
                       long* out_ptr216,
                       float* out_ptr218,
                       float* out_ptr219,
                       long* out_ptr221,
                       float* out_ptr223,
                       float* out_ptr224,
                       long* out_ptr226,
                       float* out_ptr228,
                       float* out_ptr229,
                       long* out_ptr231,
                       float* out_ptr233,
                       float* out_ptr234,
                       long* out_ptr236,
                       float* out_ptr238,
                       float* out_ptr239,
                       long* out_ptr241,
                       float* out_ptr243,
                       float* out_ptr244,
                       long* out_ptr246,
                       float* out_ptr248,
                       float* out_ptr249,
                       long* out_ptr251,
                       float* out_ptr253,
                       float* out_ptr254,
                       long* out_ptr256,
                       float* out_ptr258,
                       float* out_ptr259,
                       long* out_ptr261,
                       float* out_ptr263,
                       float* out_ptr264,
                       long* out_ptr266,
                       float* out_ptr268,
                       float* out_ptr269,
                       long* out_ptr271,
                       float* out_ptr273,
                       float* out_ptr274,
                       long* out_ptr276,
                       float* out_ptr278,
                       float* out_ptr279,
                       long* out_ptr281,
                       float* out_ptr283,
                       float* out_ptr284,
                       long* out_ptr286,
                       float* out_ptr288,
                       float* out_ptr289,
                       long* out_ptr291,
                       float* out_ptr293,
                       float* out_ptr294,
                       long* out_ptr296,
                       float* out_ptr298,
                       float* out_ptr299,
                       long* out_ptr301,
                       float* out_ptr303,
                       float* out_ptr304,
                       long* out_ptr306,
                       float* out_ptr308,
                       float* out_ptr309,
                       long* out_ptr311,
                       float* out_ptr313)
{
    {
        auto tmp0 = in_ptr0[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr1[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr3 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr4 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr4[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr6[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr8 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr8 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr9 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr9 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr8[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr11[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr13 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr13 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr14 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr14 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr12[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr16[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr18 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr18 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr19 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr19 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr16[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr21[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr23 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr23 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr24 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr24 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr20[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr26[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr28 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr28 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr29 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr29 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr24[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr31[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr33 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr33 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr34 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr34 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr28[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr36[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr38 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr38 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr39 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr39 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr32[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr41[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr43 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr43 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr44 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr44 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr36[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr46[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr48 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr48 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr49 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr49 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr40[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr51[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr53 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr53 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr54 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr54 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr44[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr56[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr58 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr58 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr59 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr59 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr48[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr61[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr63 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr63 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr64 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr64 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr52[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr66[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr68 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr68 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr69 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr69 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr56[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr71[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr73 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr73 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr14 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr74 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr74 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr60[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr76[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr78 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr78 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr15 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr79 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr79 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr64[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr81[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr83 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr83 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr16 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr84 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr84 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr68[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr86[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr88 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr88 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr17 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr89 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr89 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr72[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr91[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr93 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr93 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr18 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr94 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr94 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr76[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr96[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr98 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr98 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr19 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr99 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr99 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr80[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr101[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr103 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr103 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr20 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr104 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr104 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr84[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr106[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr85 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr108 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr108 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr21 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr109 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr109 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr88[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr111[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr89 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr113 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr113 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr22 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr114 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr114 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr92[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr116[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr93 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr118 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr118 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr23 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr119 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr119 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr96[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr121[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr97 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr123 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr123 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(216L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr24 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr124 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr124 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr100[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr126[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr101 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr128 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr128 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr25 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr129 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr129 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr104[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr131[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr105 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr133 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr133 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr26 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr134 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(14112.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0000708666997378);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr134 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr108[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr136[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr109 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr138 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr138 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr27 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr139 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr139 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr112[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr141[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr113 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr143 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr143 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr28 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr144 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr144 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr116[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr146[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr117 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr148 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr148 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr29 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr149 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr149 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr120[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr151[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr121 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr153 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr153 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr30 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr154 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr154 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr124[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr156[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr125 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr158 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr158 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr31 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr159 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr159 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr128[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr161[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr129 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr163 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr163 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr32 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr164 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr164 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr132[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr166[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr133 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr168 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr168 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr33 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr169 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr169 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr136[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr171[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr137 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr173 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr173 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr34 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr174 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr174 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr140[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr176[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr141 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr178 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr178 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr35 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr179 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr179 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr144[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr181[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr145 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr183 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr183 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr36 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr184 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr184 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr148[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr186[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr149 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr188 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr188 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr37 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr189 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr189 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr152[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr191[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr153 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr193 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr193 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr38 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr194 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr194 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr156[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr196[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr157 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr198 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr198 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr39 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr199 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr199 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr160[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr201[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr161 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr203 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr203 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr40 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr204 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr204 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr164[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr206[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr165 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr208 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr208 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr41 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr209 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr209 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr168[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr211[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr169 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr213 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr213 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr42 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr214 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr214 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr172[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr216[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr173 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr218 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr218 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr43 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr219 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr219 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr176[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr221[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr177 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr223 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr223 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr44 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr224 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr224 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr180[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr226[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr181 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr228 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr228 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr45 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr229 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr229 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr184[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr231[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr185 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr233 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr233 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr46 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr234 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr234 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr188[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr236[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr189 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr238 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr238 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr47 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr239 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr239 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr192[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr241[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr193 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr243 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr243 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr48 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr244 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr244 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr196[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr246[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr197 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr248 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr248 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr49 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr249 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr249 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr200[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr251[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr201 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr253 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr253 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr50 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr254 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr254 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr204[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr256[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr205 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr258 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr258 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr51 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr259 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr259 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr208[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr261[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr209 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr263 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr263 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr52 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr264 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr264 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr212[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr266[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr213 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr268 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr268 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr53 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr269 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr269 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr216[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr271[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr217 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr273 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr273 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr54 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr274 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr274 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr220[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr276[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr221 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr278 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr278 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr55 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr279 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr279 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr224[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr281[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr225 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr283 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr283 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr56 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr284 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr284 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr228[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr286[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr229 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr288 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr288 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr57 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr289 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr289 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr232[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr291[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr233 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr293 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr293 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr58 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr294 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr294 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr236[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr296[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr237 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr298 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr298 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr59 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr299 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr299 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr240[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr301[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr241 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr303 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr303 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr60 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr304 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr304 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr244[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr306[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr245 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr308 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr308 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr61 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr309 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr309 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr248[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr311[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr249 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr313 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr313 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_208 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       float* in_out_ptr14,
                       float* in_out_ptr15,
                       float* in_out_ptr16,
                       float* in_out_ptr17,
                       float* in_out_ptr18,
                       float* in_out_ptr19,
                       float* in_out_ptr20,
                       float* in_out_ptr21,
                       float* in_out_ptr22,
                       float* in_out_ptr23,
                       float* in_out_ptr24,
                       float* in_out_ptr25,
                       float* in_out_ptr26,
                       float* in_out_ptr27,
                       float* in_out_ptr28,
                       float* in_out_ptr29,
                       float* in_out_ptr30,
                       float* in_out_ptr31,
                       float* in_out_ptr32,
                       float* in_out_ptr33,
                       float* in_out_ptr34,
                       float* in_out_ptr35,
                       float* in_out_ptr36,
                       float* in_out_ptr37,
                       float* in_out_ptr38,
                       float* in_out_ptr39,
                       float* in_out_ptr40,
                       float* in_out_ptr41,
                       float* in_out_ptr42,
                       float* in_out_ptr43,
                       float* in_out_ptr44,
                       float* in_out_ptr45,
                       float* in_out_ptr46,
                       float* in_out_ptr47,
                       float* in_out_ptr48,
                       float* in_out_ptr49,
                       float* in_out_ptr50,
                       float* in_out_ptr51,
                       float* in_out_ptr52,
                       float* in_out_ptr53,
                       float* in_out_ptr54,
                       float* in_out_ptr55,
                       float* in_out_ptr56,
                       float* in_out_ptr57,
                       float* in_out_ptr58,
                       float* in_out_ptr59,
                       float* in_out_ptr60,
                       float* in_out_ptr61,
                       float* in_out_ptr62,
                       const float* in_ptr0,
                       const long* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const long* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const long* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const long* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const long* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const long* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const long* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const long* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const long* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const long* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const long* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const long* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const long* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const long* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const long* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const long* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const long* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const long* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const long* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const long* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const long* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const long* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const float* in_ptr88,
                       const long* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91,
                       const float* in_ptr92,
                       const long* in_ptr93,
                       const float* in_ptr94,
                       const float* in_ptr95,
                       const float* in_ptr96,
                       const long* in_ptr97,
                       const float* in_ptr98,
                       const float* in_ptr99,
                       const float* in_ptr100,
                       const long* in_ptr101,
                       const float* in_ptr102,
                       const float* in_ptr103,
                       const float* in_ptr104,
                       const long* in_ptr105,
                       const float* in_ptr106,
                       const float* in_ptr107,
                       const float* in_ptr108,
                       const long* in_ptr109,
                       const float* in_ptr110,
                       const float* in_ptr111,
                       const float* in_ptr112,
                       const long* in_ptr113,
                       const float* in_ptr114,
                       const float* in_ptr115,
                       const float* in_ptr116,
                       const long* in_ptr117,
                       const float* in_ptr118,
                       const float* in_ptr119,
                       const float* in_ptr120,
                       const long* in_ptr121,
                       const float* in_ptr122,
                       const float* in_ptr123,
                       const float* in_ptr124,
                       const long* in_ptr125,
                       const float* in_ptr126,
                       const float* in_ptr127,
                       const float* in_ptr128,
                       const long* in_ptr129,
                       const float* in_ptr130,
                       const float* in_ptr131,
                       const float* in_ptr132,
                       const long* in_ptr133,
                       const float* in_ptr134,
                       const float* in_ptr135,
                       const float* in_ptr136,
                       const long* in_ptr137,
                       const float* in_ptr138,
                       const float* in_ptr139,
                       const float* in_ptr140,
                       const long* in_ptr141,
                       const float* in_ptr142,
                       const float* in_ptr143,
                       const float* in_ptr144,
                       const long* in_ptr145,
                       const float* in_ptr146,
                       const float* in_ptr147,
                       const float* in_ptr148,
                       const long* in_ptr149,
                       const float* in_ptr150,
                       const float* in_ptr151,
                       const float* in_ptr152,
                       const long* in_ptr153,
                       const float* in_ptr154,
                       const float* in_ptr155,
                       const float* in_ptr156,
                       const long* in_ptr157,
                       const float* in_ptr158,
                       const float* in_ptr159,
                       const float* in_ptr160,
                       const long* in_ptr161,
                       const float* in_ptr162,
                       const float* in_ptr163,
                       const float* in_ptr164,
                       const long* in_ptr165,
                       const float* in_ptr166,
                       const float* in_ptr167,
                       const float* in_ptr168,
                       const long* in_ptr169,
                       const float* in_ptr170,
                       const float* in_ptr171,
                       const float* in_ptr172,
                       const long* in_ptr173,
                       const float* in_ptr174,
                       const float* in_ptr175,
                       const float* in_ptr176,
                       const long* in_ptr177,
                       const float* in_ptr178,
                       const float* in_ptr179,
                       const float* in_ptr180,
                       const long* in_ptr181,
                       const float* in_ptr182,
                       const float* in_ptr183,
                       const float* in_ptr184,
                       const long* in_ptr185,
                       const float* in_ptr186,
                       const float* in_ptr187,
                       const float* in_ptr188,
                       const long* in_ptr189,
                       const float* in_ptr190,
                       const float* in_ptr191,
                       const float* in_ptr192,
                       const long* in_ptr193,
                       const float* in_ptr194,
                       const float* in_ptr195,
                       const float* in_ptr196,
                       const long* in_ptr197,
                       const float* in_ptr198,
                       const float* in_ptr199,
                       const float* in_ptr200,
                       const long* in_ptr201,
                       const float* in_ptr202,
                       const float* in_ptr203,
                       const float* in_ptr204,
                       const long* in_ptr205,
                       const float* in_ptr206,
                       const float* in_ptr207,
                       const float* in_ptr208,
                       const long* in_ptr209,
                       const float* in_ptr210,
                       const float* in_ptr211,
                       const float* in_ptr212,
                       const long* in_ptr213,
                       const float* in_ptr214,
                       const float* in_ptr215,
                       const float* in_ptr216,
                       const long* in_ptr217,
                       const float* in_ptr218,
                       const float* in_ptr219,
                       const float* in_ptr220,
                       const long* in_ptr221,
                       const float* in_ptr222,
                       const float* in_ptr223,
                       const float* in_ptr224,
                       const long* in_ptr225,
                       const float* in_ptr226,
                       const float* in_ptr227,
                       const float* in_ptr228,
                       const long* in_ptr229,
                       const float* in_ptr230,
                       const float* in_ptr231,
                       const float* in_ptr232,
                       const long* in_ptr233,
                       const float* in_ptr234,
                       const float* in_ptr235,
                       const float* in_ptr236,
                       const long* in_ptr237,
                       const float* in_ptr238,
                       const float* in_ptr239,
                       const float* in_ptr240,
                       const long* in_ptr241,
                       const float* in_ptr242,
                       const float* in_ptr243,
                       const float* in_ptr244,
                       const long* in_ptr245,
                       const float* in_ptr246,
                       const float* in_ptr247,
                       const float* in_ptr248,
                       const long* in_ptr249,
                       float* out_ptr0,
                       long* out_ptr2,
                       float* out_ptr4,
                       float* out_ptr5,
                       long* out_ptr7,
                       float* out_ptr9,
                       float* out_ptr10,
                       long* out_ptr12,
                       float* out_ptr14,
                       float* out_ptr15,
                       long* out_ptr17,
                       float* out_ptr19,
                       float* out_ptr20,
                       long* out_ptr22,
                       float* out_ptr24,
                       float* out_ptr25,
                       long* out_ptr27,
                       float* out_ptr29,
                       float* out_ptr30,
                       long* out_ptr32,
                       float* out_ptr34,
                       float* out_ptr35,
                       long* out_ptr37,
                       float* out_ptr39,
                       float* out_ptr40,
                       long* out_ptr42,
                       float* out_ptr44,
                       float* out_ptr45,
                       long* out_ptr47,
                       float* out_ptr49,
                       float* out_ptr50,
                       long* out_ptr52,
                       float* out_ptr54,
                       float* out_ptr55,
                       long* out_ptr57,
                       float* out_ptr59,
                       float* out_ptr60,
                       long* out_ptr62,
                       float* out_ptr64,
                       float* out_ptr65,
                       long* out_ptr67,
                       float* out_ptr69,
                       float* out_ptr70,
                       long* out_ptr72,
                       float* out_ptr74,
                       float* out_ptr75,
                       long* out_ptr77,
                       float* out_ptr79,
                       float* out_ptr80,
                       long* out_ptr82,
                       float* out_ptr84,
                       float* out_ptr85,
                       long* out_ptr87,
                       float* out_ptr89,
                       float* out_ptr90,
                       long* out_ptr92,
                       float* out_ptr94,
                       float* out_ptr95,
                       long* out_ptr97,
                       float* out_ptr99,
                       float* out_ptr100,
                       long* out_ptr102,
                       float* out_ptr104,
                       float* out_ptr105,
                       long* out_ptr107,
                       float* out_ptr109,
                       float* out_ptr110,
                       long* out_ptr112,
                       float* out_ptr114,
                       float* out_ptr115,
                       long* out_ptr117,
                       float* out_ptr119,
                       float* out_ptr120,
                       long* out_ptr122,
                       float* out_ptr124,
                       float* out_ptr125,
                       long* out_ptr127,
                       float* out_ptr129,
                       float* out_ptr130,
                       long* out_ptr132,
                       float* out_ptr134,
                       float* out_ptr135,
                       long* out_ptr137,
                       float* out_ptr139,
                       float* out_ptr140,
                       long* out_ptr142,
                       float* out_ptr144,
                       float* out_ptr145,
                       long* out_ptr147,
                       float* out_ptr149,
                       float* out_ptr150,
                       long* out_ptr152,
                       float* out_ptr154,
                       float* out_ptr155,
                       long* out_ptr157,
                       float* out_ptr159,
                       float* out_ptr160,
                       long* out_ptr162,
                       float* out_ptr164,
                       float* out_ptr165,
                       long* out_ptr167,
                       float* out_ptr169,
                       float* out_ptr170,
                       long* out_ptr172,
                       float* out_ptr174,
                       float* out_ptr175,
                       long* out_ptr177,
                       float* out_ptr179,
                       float* out_ptr180,
                       long* out_ptr182,
                       float* out_ptr184,
                       float* out_ptr185,
                       long* out_ptr187,
                       float* out_ptr189,
                       float* out_ptr190,
                       long* out_ptr192,
                       float* out_ptr194,
                       float* out_ptr195,
                       long* out_ptr197,
                       float* out_ptr199,
                       float* out_ptr200,
                       long* out_ptr202,
                       float* out_ptr204,
                       float* out_ptr205,
                       long* out_ptr207,
                       float* out_ptr209,
                       float* out_ptr210,
                       long* out_ptr212,
                       float* out_ptr214,
                       float* out_ptr215,
                       long* out_ptr217,
                       float* out_ptr219,
                       float* out_ptr220,
                       long* out_ptr222,
                       float* out_ptr224,
                       float* out_ptr225,
                       long* out_ptr227,
                       float* out_ptr229,
                       float* out_ptr230,
                       long* out_ptr232,
                       float* out_ptr234,
                       float* out_ptr235,
                       long* out_ptr237,
                       float* out_ptr239,
                       float* out_ptr240,
                       long* out_ptr242,
                       float* out_ptr244,
                       float* out_ptr245,
                       long* out_ptr247,
                       float* out_ptr249,
                       float* out_ptr250,
                       long* out_ptr252,
                       float* out_ptr254,
                       float* out_ptr255,
                       long* out_ptr257,
                       float* out_ptr259,
                       float* out_ptr260,
                       long* out_ptr262,
                       float* out_ptr264,
                       float* out_ptr265,
                       long* out_ptr267,
                       float* out_ptr269,
                       float* out_ptr270,
                       long* out_ptr272,
                       float* out_ptr274,
                       float* out_ptr275,
                       long* out_ptr277,
                       float* out_ptr279,
                       float* out_ptr280,
                       long* out_ptr282,
                       float* out_ptr284,
                       float* out_ptr285,
                       long* out_ptr287,
                       float* out_ptr289,
                       float* out_ptr290,
                       long* out_ptr292,
                       float* out_ptr294,
                       float* out_ptr295,
                       long* out_ptr297,
                       float* out_ptr299,
                       float* out_ptr300,
                       long* out_ptr302,
                       float* out_ptr304,
                       float* out_ptr305,
                       long* out_ptr307,
                       float* out_ptr309,
                       float* out_ptr310,
                       long* out_ptr312)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr1[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr2[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr4 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr5 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr5 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr5[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr7[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr9 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr9 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr10 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr10 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr9[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr12[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr14 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr14 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr15 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr15 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr13[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr17[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr19 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr19 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr20 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr20 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr17[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr22[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr24 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr24 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr25 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr25 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr21[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr27[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr29 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr29 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr30 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr30 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr25[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr32[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr34 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr34 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr35 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr35 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr29[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr37[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr39 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr39 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr40 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr40 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr33[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr42[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr44 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr44 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr45 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr45 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr37[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr47[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr49 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr49 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr50 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr50 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr41[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr52[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr54 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr54 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr55 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr55 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr45[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr57[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr59 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr59 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr60 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr60 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr49[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr62[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr64 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr64 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr65 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr65 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr53[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr67[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr69 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr69 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr14 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr70 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr70 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr57[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr72[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr74 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr74 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr15 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr75 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr75 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr61[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr77[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr79 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr79 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr16 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr80 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr80 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr65[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr82[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr84 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr84 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr17 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr85 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr85 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr69[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr87[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr89 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr89 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr18 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr90 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr90 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr73[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr92[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr94 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr94 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr19 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr95 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr95 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr77[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr97[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr99 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr99 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr20 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr100 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr100 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr81[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr102[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr82 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr104 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr104 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr21 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr105 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(3528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0002835270768358);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr105 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr85[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr107[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr86 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr109 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr109 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr22 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr110 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr110 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr89[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr112[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr90 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr114 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr114 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr23 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr115 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr115 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr93[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr117[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr94 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr119 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr119 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr24 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr120 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr120 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr97[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr122[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr98 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr124 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr124 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr25 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr125 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr125 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr101[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr127[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr102 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr129 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr129 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr26 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr130 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr130 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr105[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr132[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr106 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr134 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr134 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr27 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr135 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr135 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr109[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr137[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr110 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr139 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr139 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr28 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr140 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr140 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr113[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr142[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr114 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr144 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr144 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr29 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr145 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr145 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr117[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr147[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr118 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr149 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr149 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr30 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr150 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr150 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr121[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr152[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr122 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr154 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr154 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr31 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr155 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr155 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr125[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr157[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr126 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr159 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr159 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr32 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr160 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr160 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr129[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr162[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr130 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr164 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr164 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr33 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr165 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr165 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr133[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr167[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr134 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr169 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr169 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr34 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr170 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr170 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr137[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr172[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr138 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr174 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr174 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr35 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr175 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr175 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr141[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr177[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr142 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr179 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr179 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr36 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr180 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr180 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr145[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr182[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr146 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr184 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr184 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr37 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr185 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr185 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr149[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr187[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr150 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr189 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr189 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr38 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr190 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr190 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr153[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr192[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr154 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr194 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr194 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr39 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr195 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr195 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr157[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr197[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr158 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr199 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr199 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr40 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr200 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr200 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr161[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr202[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr162 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr204 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr204 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr41 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr205 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr205 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr165[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr207[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr166 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr209 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr209 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr42 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr210 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr210 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr169[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr212[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr170 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr214 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr214 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr43 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr215 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr215 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr173[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr217[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr174 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr219 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr219 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr44 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr220 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr220 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr177[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr222[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr178 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr224 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr224 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr45 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr225 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr225 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr181[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr227[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr182 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr229 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr229 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr46 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr230 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr230 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr185[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr232[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr186 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr234 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr234 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr47 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr235 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr235 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr189[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr237[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr190 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr239 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr239 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr48 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr240 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr240 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr193[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr242[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr194 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr244 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr244 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr49 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr245 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr245 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr197[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr247[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr198 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr249 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr249 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr50 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr250 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr250 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr201[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr252[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr202 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr254 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr254 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr51 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr255 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr255 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr205[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr257[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr206 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr259 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr259 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr52 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr260 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr260 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr209[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr262[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr210 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr264 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr264 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr53 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr265 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr265 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr213[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr267[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr214 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr269 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr269 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr54 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr270 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr270 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr217[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr272[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr218 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr274 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr274 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr55 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr275 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr275 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr221[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr277[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr222 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr279 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr279 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr56 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr280 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr280 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr225[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr282[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr226 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr284 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr284 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr57 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr285 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr285 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr229[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr287[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr230 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr289 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr289 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr58 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr290 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr290 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr233[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr292[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr234 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr294 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr294 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr59 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr295 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr295 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr237[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr297[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr238 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr299 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr299 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr60 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr300 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr300 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr241[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr302[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr242 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr304 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr304 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr61 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr305 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr305 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr245[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr307[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr246 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr309 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr309 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr62 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr310 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr310 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr249[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr312[static_cast<long>(0L)] = tmp2;
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_209 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const long* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const long* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const long* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const long* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const long* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const long* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const long* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const long* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const long* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const long* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const long* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const long* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const long* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const long* in_ptr55,
                       float* out_ptr1,
                       float* out_ptr2,
                       long* out_ptr4,
                       float* out_ptr6,
                       float* out_ptr7,
                       long* out_ptr9,
                       float* out_ptr11,
                       float* out_ptr12,
                       long* out_ptr14,
                       float* out_ptr16,
                       float* out_ptr17,
                       long* out_ptr19,
                       float* out_ptr21,
                       float* out_ptr22,
                       long* out_ptr24,
                       float* out_ptr26,
                       float* out_ptr27,
                       long* out_ptr29,
                       float* out_ptr31,
                       float* out_ptr32,
                       long* out_ptr34,
                       float* out_ptr36,
                       float* out_ptr37,
                       long* out_ptr39,
                       float* out_ptr41,
                       float* out_ptr42,
                       long* out_ptr44,
                       float* out_ptr46,
                       float* out_ptr47,
                       long* out_ptr49,
                       float* out_ptr51,
                       float* out_ptr52,
                       long* out_ptr54,
                       float* out_ptr56,
                       float* out_ptr57,
                       long* out_ptr59,
                       float* out_ptr61,
                       float* out_ptr62,
                       long* out_ptr64,
                       float* out_ptr66,
                       float* out_ptr67,
                       long* out_ptr69)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr1 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr2 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr3[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr4[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr6 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr6 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr7 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr7 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr7[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr9[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr11 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr11 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr12 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr12 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr11[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr14[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr16 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr16 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr17 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr17 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr15[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr19[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr21 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr21 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr22 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr22 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr19[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr24[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr26 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr26 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr27 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr27 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr23[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr29[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr31 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr31 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr32 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr32 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr27[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr34[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr36 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr36 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr37 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr37 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr31[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr39[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr41 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr41 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr42 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr42 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr35[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr44[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr46 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr46 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr47 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr47 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr39[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr49[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr51 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr51 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr52 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr52 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr43[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr54[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr56 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr56 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr57 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr57 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr47[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr59[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr61 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr61 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr62 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr62 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr51[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr64[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr66 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr66 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr67 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(968.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.001034126163392);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr67 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr55[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr69[static_cast<long>(0L)] = tmp2;
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121, primals_1122, primals_1123, primals_1124, primals_1125, primals_1126, primals_1127, primals_1128, primals_1129, primals_1130, primals_1131, primals_1132, primals_1133, primals_1134, primals_1135, primals_1136, primals_1137, primals_1138, primals_1139, primals_1140, primals_1141, primals_1142, primals_1143, primals_1144, primals_1145, primals_1146, primals_1147, primals_1148, primals_1149, primals_1150, primals_1151, primals_1152, primals_1153, primals_1154, primals_1155, primals_1156, primals_1157, primals_1158, primals_1159, primals_1160, primals_1161, primals_1162, primals_1163, primals_1164, primals_1165, primals_1166, primals_1167, primals_1168, primals_1169, primals_1170, primals_1171, primals_1172, primals_1173, primals_1174, primals_1175, primals_1176, primals_1177, primals_1178, primals_1179, primals_1180, primals_1181, primals_1182, primals_1183, primals_1184, primals_1185, primals_1186, primals_1187, primals_1188, primals_1189, primals_1190, primals_1191, primals_1192, primals_1193, primals_1194, primals_1195, primals_1196, primals_1197, primals_1198, primals_1199, primals_1200, primals_1201, primals_1202, primals_1203, primals_1204, primals_1205, primals_1206, primals_1207, primals_1208, primals_1209, primals_1210, primals_1211, primals_1212, primals_1213, primals_1214, primals_1215, primals_1216, primals_1217, primals_1218, primals_1219, primals_1220, primals_1221, primals_1222, primals_1223, primals_1224, primals_1225, primals_1226, primals_1227, primals_1228, primals_1229, primals_1230, primals_1231, primals_1232, primals_1233, primals_1234, primals_1235, primals_1236, primals_1237, primals_1238, primals_1239, primals_1240, primals_1241, primals_1242, primals_1243, primals_1244, primals_1245, primals_1246, primals_1247, primals_1248, primals_1249, primals_1250, primals_1251, primals_1252, primals_1253, primals_1254, primals_1255, primals_1256, primals_1257, primals_1258, primals_1259, primals_1260, primals_1261, primals_1262, primals_1263, primals_1264, primals_1265, primals_1266, primals_1267, primals_1268, primals_1269, primals_1270, primals_1271, primals_1272, primals_1273, primals_1274, primals_1275, primals_1276, primals_1277, primals_1278, primals_1279, primals_1280, primals_1281, primals_1282, primals_1283, primals_1284, primals_1285, primals_1286, primals_1287, primals_1288, primals_1289, primals_1290, primals_1291, primals_1292, primals_1293, primals_1294, primals_1295, primals_1296, primals_1297, primals_1298, primals_1299, primals_1300, primals_1301, primals_1302, primals_1303, primals_1304, primals_1305, primals_1306, primals_1307, primals_1308, primals_1309, primals_1310, primals_1311, primals_1312, primals_1313, primals_1314, primals_1315, primals_1316, primals_1317, primals_1318, primals_1319, primals_1320, primals_1321, primals_1322, primals_1323, primals_1324, primals_1325, primals_1326, primals_1327, primals_1328, primals_1329, primals_1330, primals_1331, primals_1332, primals_1333, primals_1334, primals_1335, primals_1336, primals_1337, primals_1338, primals_1339, primals_1340, primals_1341, primals_1342, primals_1343, primals_1344, primals_1345, primals_1346, primals_1347, primals_1348, primals_1349, primals_1350, primals_1351, primals_1352, primals_1353, primals_1354, primals_1355, primals_1356, primals_1357, primals_1358, primals_1359, primals_1360, primals_1361, primals_1362, primals_1363, primals_1364, primals_1365, primals_1366, primals_1367, primals_1368, primals_1369, primals_1370, primals_1371, primals_1372, primals_1373, primals_1374, primals_1375, primals_1376, primals_1377, primals_1378, primals_1379, primals_1380, primals_1381 = args
    args.clear()
    assert_size_stride(primals_1, (96, ), (1, ))
    assert_size_stride(primals_2, (96, ), (1, ))
    assert_size_stride(primals_3, (96, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_4, (54, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_5, (54, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_6, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_7, (96, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_8, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_9, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_10, (108, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_11, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_12, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_13, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_14, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_15, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_16, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_17, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_18, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_19, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_20, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_21, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_22, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_23, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_24, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_25, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_26, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_27, (96, 3, 3, 3), (27, 9, 3, 1))
    assert_size_stride(primals_28, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_29, (54, ), (1, ))
    assert_size_stride(primals_30, (54, ), (1, ))
    assert_size_stride(primals_31, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_32, (54, ), (1, ))
    assert_size_stride(primals_33, (54, ), (1, ))
    assert_size_stride(primals_34, (54, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_35, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_36, (54, ), (1, ))
    assert_size_stride(primals_37, (54, ), (1, ))
    assert_size_stride(primals_38, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_39, (54, ), (1, ))
    assert_size_stride(primals_40, (54, ), (1, ))
    assert_size_stride(primals_41, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_42, (54, ), (1, ))
    assert_size_stride(primals_43, (54, ), (1, ))
    assert_size_stride(primals_44, (54, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_45, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_46, (54, ), (1, ))
    assert_size_stride(primals_47, (54, ), (1, ))
    assert_size_stride(primals_48, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_49, (54, ), (1, ))
    assert_size_stride(primals_50, (54, ), (1, ))
    assert_size_stride(primals_51, (54, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_52, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_53, (54, ), (1, ))
    assert_size_stride(primals_54, (54, ), (1, ))
    assert_size_stride(primals_55, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_56, (54, ), (1, ))
    assert_size_stride(primals_57, (54, ), (1, ))
    assert_size_stride(primals_58, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_59, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_60, (54, ), (1, ))
    assert_size_stride(primals_61, (54, ), (1, ))
    assert_size_stride(primals_62, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_63, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_64, (54, ), (1, ))
    assert_size_stride(primals_65, (54, ), (1, ))
    assert_size_stride(primals_66, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_67, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_68, (54, ), (1, ))
    assert_size_stride(primals_69, (54, ), (1, ))
    assert_size_stride(primals_70, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_71, (54, ), (1, ))
    assert_size_stride(primals_72, (54, ), (1, ))
    assert_size_stride(primals_73, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_74, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(primals_75, (54, ), (1, ))
    assert_size_stride(primals_76, (54, ), (1, ))
    assert_size_stride(primals_77, (54, ), (1, ))
    assert_size_stride(primals_78, (54, ), (1, ))
    assert_size_stride(primals_79, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_80, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_81, (108, ), (1, ))
    assert_size_stride(primals_82, (108, ), (1, ))
    assert_size_stride(primals_83, (108, 270, 1, 1), (270, 1, 1, 1))
    assert_size_stride(primals_84, (108, ), (1, ))
    assert_size_stride(primals_85, (108, ), (1, ))
    assert_size_stride(primals_86, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_87, (108, ), (1, ))
    assert_size_stride(primals_88, (108, ), (1, ))
    assert_size_stride(primals_89, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_90, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_91, (108, ), (1, ))
    assert_size_stride(primals_92, (108, ), (1, ))
    assert_size_stride(primals_93, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_94, (108, ), (1, ))
    assert_size_stride(primals_95, (108, ), (1, ))
    assert_size_stride(primals_96, (108, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_97, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_98, (108, ), (1, ))
    assert_size_stride(primals_99, (108, ), (1, ))
    assert_size_stride(primals_100, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_101, (108, ), (1, ))
    assert_size_stride(primals_102, (108, ), (1, ))
    assert_size_stride(primals_103, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_104, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_105, (108, ), (1, ))
    assert_size_stride(primals_106, (108, ), (1, ))
    assert_size_stride(primals_107, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_108, (108, ), (1, ))
    assert_size_stride(primals_109, (108, ), (1, ))
    assert_size_stride(primals_110, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_111, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_112, (108, ), (1, ))
    assert_size_stride(primals_113, (108, ), (1, ))
    assert_size_stride(primals_114, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_115, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_116, (108, ), (1, ))
    assert_size_stride(primals_117, (108, ), (1, ))
    assert_size_stride(primals_118, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_119, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_120, (108, ), (1, ))
    assert_size_stride(primals_121, (108, ), (1, ))
    assert_size_stride(primals_122, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_123, (108, ), (1, ))
    assert_size_stride(primals_124, (108, ), (1, ))
    assert_size_stride(primals_125, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_126, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(primals_127, (108, ), (1, ))
    assert_size_stride(primals_128, (108, ), (1, ))
    assert_size_stride(primals_129, (108, ), (1, ))
    assert_size_stride(primals_130, (108, ), (1, ))
    assert_size_stride(primals_131, (108, 270, 1, 1), (270, 1, 1, 1))
    assert_size_stride(primals_132, (108, 270, 1, 1), (270, 1, 1, 1))
    assert_size_stride(primals_133, (216, ), (1, ))
    assert_size_stride(primals_134, (216, ), (1, ))
    assert_size_stride(primals_135, (216, 540, 1, 1), (540, 1, 1, 1))
    assert_size_stride(primals_136, (216, ), (1, ))
    assert_size_stride(primals_137, (216, ), (1, ))
    assert_size_stride(primals_138, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_139, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_140, (216, ), (1, ))
    assert_size_stride(primals_141, (216, ), (1, ))
    assert_size_stride(primals_142, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_143, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_144, (216, ), (1, ))
    assert_size_stride(primals_145, (216, ), (1, ))
    assert_size_stride(primals_146, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_147, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_148, (216, ), (1, ))
    assert_size_stride(primals_149, (216, ), (1, ))
    assert_size_stride(primals_150, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_151, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_152, (216, ), (1, ))
    assert_size_stride(primals_153, (216, ), (1, ))
    assert_size_stride(primals_154, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_155, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_156, (216, ), (1, ))
    assert_size_stride(primals_157, (216, ), (1, ))
    assert_size_stride(primals_158, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_159, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_160, (216, ), (1, ))
    assert_size_stride(primals_161, (216, ), (1, ))
    assert_size_stride(primals_162, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_163, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_164, (216, ), (1, ))
    assert_size_stride(primals_165, (216, ), (1, ))
    assert_size_stride(primals_166, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_167, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_168, (216, ), (1, ))
    assert_size_stride(primals_169, (216, ), (1, ))
    assert_size_stride(primals_170, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_171, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_172, (216, ), (1, ))
    assert_size_stride(primals_173, (216, ), (1, ))
    assert_size_stride(primals_174, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_175, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_176, (216, ), (1, ))
    assert_size_stride(primals_177, (216, ), (1, ))
    assert_size_stride(primals_178, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_179, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_180, (216, ), (1, ))
    assert_size_stride(primals_181, (216, ), (1, ))
    assert_size_stride(primals_182, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_183, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_184, (216, ), (1, ))
    assert_size_stride(primals_185, (216, ), (1, ))
    assert_size_stride(primals_186, (216, 540, 1, 1), (540, 1, 1, 1))
    assert_size_stride(primals_187, (216, ), (1, ))
    assert_size_stride(primals_188, (216, ), (1, ))
    assert_size_stride(primals_189, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_190, (216, ), (1, ))
    assert_size_stride(primals_191, (216, ), (1, ))
    assert_size_stride(primals_192, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_193, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_194, (216, ), (1, ))
    assert_size_stride(primals_195, (216, ), (1, ))
    assert_size_stride(primals_196, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_197, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_198, (216, ), (1, ))
    assert_size_stride(primals_199, (216, ), (1, ))
    assert_size_stride(primals_200, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_201, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_202, (216, ), (1, ))
    assert_size_stride(primals_203, (216, ), (1, ))
    assert_size_stride(primals_204, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_205, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_206, (216, ), (1, ))
    assert_size_stride(primals_207, (216, ), (1, ))
    assert_size_stride(primals_208, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_209, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_210, (216, ), (1, ))
    assert_size_stride(primals_211, (216, ), (1, ))
    assert_size_stride(primals_212, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_213, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_214, (216, ), (1, ))
    assert_size_stride(primals_215, (216, ), (1, ))
    assert_size_stride(primals_216, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_217, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_218, (216, ), (1, ))
    assert_size_stride(primals_219, (216, ), (1, ))
    assert_size_stride(primals_220, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_221, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_222, (216, ), (1, ))
    assert_size_stride(primals_223, (216, ), (1, ))
    assert_size_stride(primals_224, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_225, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_226, (216, ), (1, ))
    assert_size_stride(primals_227, (216, ), (1, ))
    assert_size_stride(primals_228, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_229, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_230, (216, ), (1, ))
    assert_size_stride(primals_231, (216, ), (1, ))
    assert_size_stride(primals_232, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_233, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_234, (216, ), (1, ))
    assert_size_stride(primals_235, (216, ), (1, ))
    assert_size_stride(primals_236, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_237, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_238, (216, ), (1, ))
    assert_size_stride(primals_239, (216, ), (1, ))
    assert_size_stride(primals_240, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_241, (216, ), (1, ))
    assert_size_stride(primals_242, (216, ), (1, ))
    assert_size_stride(primals_243, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_244, (216, ), (1, ))
    assert_size_stride(primals_245, (216, ), (1, ))
    assert_size_stride(primals_246, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_247, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_248, (216, ), (1, ))
    assert_size_stride(primals_249, (216, ), (1, ))
    assert_size_stride(primals_250, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_251, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_252, (216, ), (1, ))
    assert_size_stride(primals_253, (216, ), (1, ))
    assert_size_stride(primals_254, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_255, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_256, (216, ), (1, ))
    assert_size_stride(primals_257, (216, ), (1, ))
    assert_size_stride(primals_258, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_259, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_260, (216, ), (1, ))
    assert_size_stride(primals_261, (216, ), (1, ))
    assert_size_stride(primals_262, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_263, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_264, (216, ), (1, ))
    assert_size_stride(primals_265, (216, ), (1, ))
    assert_size_stride(primals_266, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_267, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_268, (216, ), (1, ))
    assert_size_stride(primals_269, (216, ), (1, ))
    assert_size_stride(primals_270, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_271, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_272, (216, ), (1, ))
    assert_size_stride(primals_273, (216, ), (1, ))
    assert_size_stride(primals_274, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_275, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_276, (216, ), (1, ))
    assert_size_stride(primals_277, (216, ), (1, ))
    assert_size_stride(primals_278, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_279, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_280, (216, ), (1, ))
    assert_size_stride(primals_281, (216, ), (1, ))
    assert_size_stride(primals_282, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_283, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_284, (216, ), (1, ))
    assert_size_stride(primals_285, (216, ), (1, ))
    assert_size_stride(primals_286, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_287, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_288, (216, ), (1, ))
    assert_size_stride(primals_289, (216, ), (1, ))
    assert_size_stride(primals_290, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_291, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_292, (216, ), (1, ))
    assert_size_stride(primals_293, (216, ), (1, ))
    assert_size_stride(primals_294, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_295, (216, ), (1, ))
    assert_size_stride(primals_296, (216, ), (1, ))
    assert_size_stride(primals_297, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_298, (216, ), (1, ))
    assert_size_stride(primals_299, (216, ), (1, ))
    assert_size_stride(primals_300, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_301, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_302, (216, ), (1, ))
    assert_size_stride(primals_303, (216, ), (1, ))
    assert_size_stride(primals_304, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_305, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_306, (216, ), (1, ))
    assert_size_stride(primals_307, (216, ), (1, ))
    assert_size_stride(primals_308, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_309, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_310, (216, ), (1, ))
    assert_size_stride(primals_311, (216, ), (1, ))
    assert_size_stride(primals_312, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_313, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_314, (216, ), (1, ))
    assert_size_stride(primals_315, (216, ), (1, ))
    assert_size_stride(primals_316, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_317, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_318, (216, ), (1, ))
    assert_size_stride(primals_319, (216, ), (1, ))
    assert_size_stride(primals_320, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_321, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_322, (216, ), (1, ))
    assert_size_stride(primals_323, (216, ), (1, ))
    assert_size_stride(primals_324, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_325, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_326, (216, ), (1, ))
    assert_size_stride(primals_327, (216, ), (1, ))
    assert_size_stride(primals_328, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_329, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_330, (216, ), (1, ))
    assert_size_stride(primals_331, (216, ), (1, ))
    assert_size_stride(primals_332, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_333, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_334, (216, ), (1, ))
    assert_size_stride(primals_335, (216, ), (1, ))
    assert_size_stride(primals_336, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_337, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_338, (216, ), (1, ))
    assert_size_stride(primals_339, (216, ), (1, ))
    assert_size_stride(primals_340, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_341, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_342, (216, ), (1, ))
    assert_size_stride(primals_343, (216, ), (1, ))
    assert_size_stride(primals_344, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_345, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(primals_346, (216, ), (1, ))
    assert_size_stride(primals_347, (216, ), (1, ))
    assert_size_stride(primals_348, (432, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_349, (432, ), (1, ))
    assert_size_stride(primals_350, (432, ), (1, ))
    assert_size_stride(primals_351, (432, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_352, (432, ), (1, ))
    assert_size_stride(primals_353, (432, ), (1, ))
    assert_size_stride(primals_354, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_355, (432, ), (1, ))
    assert_size_stride(primals_356, (432, ), (1, ))
    assert_size_stride(primals_357, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_358, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_359, (432, ), (1, ))
    assert_size_stride(primals_360, (432, ), (1, ))
    assert_size_stride(primals_361, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_362, (432, ), (1, ))
    assert_size_stride(primals_363, (432, ), (1, ))
    assert_size_stride(primals_364, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_365, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_366, (432, ), (1, ))
    assert_size_stride(primals_367, (432, ), (1, ))
    assert_size_stride(primals_368, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_369, (432, ), (1, ))
    assert_size_stride(primals_370, (432, ), (1, ))
    assert_size_stride(primals_371, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_372, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_373, (432, ), (1, ))
    assert_size_stride(primals_374, (432, ), (1, ))
    assert_size_stride(primals_375, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_376, (432, ), (1, ))
    assert_size_stride(primals_377, (432, ), (1, ))
    assert_size_stride(primals_378, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_379, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_380, (432, ), (1, ))
    assert_size_stride(primals_381, (432, ), (1, ))
    assert_size_stride(primals_382, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_383, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_384, (432, ), (1, ))
    assert_size_stride(primals_385, (432, ), (1, ))
    assert_size_stride(primals_386, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_387, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_388, (432, ), (1, ))
    assert_size_stride(primals_389, (432, ), (1, ))
    assert_size_stride(primals_390, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_391, (432, ), (1, ))
    assert_size_stride(primals_392, (432, ), (1, ))
    assert_size_stride(primals_393, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_394, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_395, (432, ), (1, ))
    assert_size_stride(primals_396, (432, ), (1, ))
    assert_size_stride(primals_397, (432, ), (1, ))
    assert_size_stride(primals_398, (432, ), (1, ))
    assert_size_stride(primals_399, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_400, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(primals_401, (432, ), (1, ))
    assert_size_stride(primals_402, (432, ), (1, ))
    assert_size_stride(primals_403, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_404, (432, ), (1, ))
    assert_size_stride(primals_405, (432, ), (1, ))
    assert_size_stride(primals_406, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_407, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_408, (432, ), (1, ))
    assert_size_stride(primals_409, (432, ), (1, ))
    assert_size_stride(primals_410, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_411, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_412, (432, ), (1, ))
    assert_size_stride(primals_413, (432, ), (1, ))
    assert_size_stride(primals_414, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_415, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_416, (432, ), (1, ))
    assert_size_stride(primals_417, (432, ), (1, ))
    assert_size_stride(primals_418, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_419, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_420, (432, ), (1, ))
    assert_size_stride(primals_421, (432, ), (1, ))
    assert_size_stride(primals_422, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_423, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_424, (432, ), (1, ))
    assert_size_stride(primals_425, (432, ), (1, ))
    assert_size_stride(primals_426, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_427, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_428, (432, ), (1, ))
    assert_size_stride(primals_429, (432, ), (1, ))
    assert_size_stride(primals_430, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_431, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_432, (432, ), (1, ))
    assert_size_stride(primals_433, (432, ), (1, ))
    assert_size_stride(primals_434, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_435, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_436, (432, ), (1, ))
    assert_size_stride(primals_437, (432, ), (1, ))
    assert_size_stride(primals_438, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_439, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_440, (432, ), (1, ))
    assert_size_stride(primals_441, (432, ), (1, ))
    assert_size_stride(primals_442, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_443, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_444, (432, ), (1, ))
    assert_size_stride(primals_445, (432, ), (1, ))
    assert_size_stride(primals_446, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_447, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_448, (432, ), (1, ))
    assert_size_stride(primals_449, (432, ), (1, ))
    assert_size_stride(primals_450, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_451, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_452, (432, ), (1, ))
    assert_size_stride(primals_453, (432, ), (1, ))
    assert_size_stride(primals_454, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_455, (432, ), (1, ))
    assert_size_stride(primals_456, (432, ), (1, ))
    assert_size_stride(primals_457, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_458, (432, ), (1, ))
    assert_size_stride(primals_459, (432, ), (1, ))
    assert_size_stride(primals_460, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_461, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_462, (432, ), (1, ))
    assert_size_stride(primals_463, (432, ), (1, ))
    assert_size_stride(primals_464, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_465, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_466, (432, ), (1, ))
    assert_size_stride(primals_467, (432, ), (1, ))
    assert_size_stride(primals_468, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_469, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_470, (432, ), (1, ))
    assert_size_stride(primals_471, (432, ), (1, ))
    assert_size_stride(primals_472, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_473, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_474, (432, ), (1, ))
    assert_size_stride(primals_475, (432, ), (1, ))
    assert_size_stride(primals_476, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_477, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_478, (432, ), (1, ))
    assert_size_stride(primals_479, (432, ), (1, ))
    assert_size_stride(primals_480, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_481, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_482, (432, ), (1, ))
    assert_size_stride(primals_483, (432, ), (1, ))
    assert_size_stride(primals_484, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_485, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_486, (432, ), (1, ))
    assert_size_stride(primals_487, (432, ), (1, ))
    assert_size_stride(primals_488, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_489, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_490, (432, ), (1, ))
    assert_size_stride(primals_491, (432, ), (1, ))
    assert_size_stride(primals_492, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_493, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_494, (432, ), (1, ))
    assert_size_stride(primals_495, (432, ), (1, ))
    assert_size_stride(primals_496, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_497, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_498, (432, ), (1, ))
    assert_size_stride(primals_499, (432, ), (1, ))
    assert_size_stride(primals_500, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_501, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_502, (432, ), (1, ))
    assert_size_stride(primals_503, (432, ), (1, ))
    assert_size_stride(primals_504, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_505, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_506, (432, ), (1, ))
    assert_size_stride(primals_507, (432, ), (1, ))
    assert_size_stride(primals_508, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_509, (432, ), (1, ))
    assert_size_stride(primals_510, (432, ), (1, ))
    assert_size_stride(primals_511, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_512, (432, ), (1, ))
    assert_size_stride(primals_513, (432, ), (1, ))
    assert_size_stride(primals_514, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_515, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_516, (432, ), (1, ))
    assert_size_stride(primals_517, (432, ), (1, ))
    assert_size_stride(primals_518, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_519, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_520, (432, ), (1, ))
    assert_size_stride(primals_521, (432, ), (1, ))
    assert_size_stride(primals_522, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_523, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_524, (432, ), (1, ))
    assert_size_stride(primals_525, (432, ), (1, ))
    assert_size_stride(primals_526, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_527, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_528, (432, ), (1, ))
    assert_size_stride(primals_529, (432, ), (1, ))
    assert_size_stride(primals_530, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_531, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_532, (432, ), (1, ))
    assert_size_stride(primals_533, (432, ), (1, ))
    assert_size_stride(primals_534, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_535, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_536, (432, ), (1, ))
    assert_size_stride(primals_537, (432, ), (1, ))
    assert_size_stride(primals_538, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_539, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_540, (432, ), (1, ))
    assert_size_stride(primals_541, (432, ), (1, ))
    assert_size_stride(primals_542, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_543, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_544, (432, ), (1, ))
    assert_size_stride(primals_545, (432, ), (1, ))
    assert_size_stride(primals_546, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_547, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_548, (432, ), (1, ))
    assert_size_stride(primals_549, (432, ), (1, ))
    assert_size_stride(primals_550, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_551, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_552, (432, ), (1, ))
    assert_size_stride(primals_553, (432, ), (1, ))
    assert_size_stride(primals_554, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_555, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_556, (432, ), (1, ))
    assert_size_stride(primals_557, (432, ), (1, ))
    assert_size_stride(primals_558, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_559, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(primals_560, (432, ), (1, ))
    assert_size_stride(primals_561, (432, ), (1, ))
    assert_size_stride(primals_562, (864, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_563, (864, ), (1, ))
    assert_size_stride(primals_564, (864, ), (1, ))
    assert_size_stride(primals_565, (864, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_566, (864, ), (1, ))
    assert_size_stride(primals_567, (864, ), (1, ))
    assert_size_stride(primals_568, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_569, (864, ), (1, ))
    assert_size_stride(primals_570, (864, ), (1, ))
    assert_size_stride(primals_571, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_572, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_573, (864, ), (1, ))
    assert_size_stride(primals_574, (864, ), (1, ))
    assert_size_stride(primals_575, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_576, (864, ), (1, ))
    assert_size_stride(primals_577, (864, ), (1, ))
    assert_size_stride(primals_578, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_579, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_580, (864, ), (1, ))
    assert_size_stride(primals_581, (864, ), (1, ))
    assert_size_stride(primals_582, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_583, (864, ), (1, ))
    assert_size_stride(primals_584, (864, ), (1, ))
    assert_size_stride(primals_585, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_586, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_587, (864, ), (1, ))
    assert_size_stride(primals_588, (864, ), (1, ))
    assert_size_stride(primals_589, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_590, (864, ), (1, ))
    assert_size_stride(primals_591, (864, ), (1, ))
    assert_size_stride(primals_592, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_593, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_594, (864, ), (1, ))
    assert_size_stride(primals_595, (864, ), (1, ))
    assert_size_stride(primals_596, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_597, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_598, (864, ), (1, ))
    assert_size_stride(primals_599, (864, ), (1, ))
    assert_size_stride(primals_600, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_601, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_602, (864, ), (1, ))
    assert_size_stride(primals_603, (864, ), (1, ))
    assert_size_stride(primals_604, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_605, (864, ), (1, ))
    assert_size_stride(primals_606, (864, ), (1, ))
    assert_size_stride(primals_607, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_608, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_609, (864, ), (1, ))
    assert_size_stride(primals_610, (864, ), (1, ))
    assert_size_stride(primals_611, (864, ), (1, ))
    assert_size_stride(primals_612, (864, ), (1, ))
    assert_size_stride(primals_613, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_614, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(primals_615, (864, ), (1, ))
    assert_size_stride(primals_616, (864, ), (1, ))
    assert_size_stride(primals_617, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(primals_618, (864, ), (1, ))
    assert_size_stride(primals_619, (864, ), (1, ))
    assert_size_stride(primals_620, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_621, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_622, (864, ), (1, ))
    assert_size_stride(primals_623, (864, ), (1, ))
    assert_size_stride(primals_624, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_625, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_626, (864, ), (1, ))
    assert_size_stride(primals_627, (864, ), (1, ))
    assert_size_stride(primals_628, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_629, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_630, (864, ), (1, ))
    assert_size_stride(primals_631, (864, ), (1, ))
    assert_size_stride(primals_632, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_633, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_634, (864, ), (1, ))
    assert_size_stride(primals_635, (864, ), (1, ))
    assert_size_stride(primals_636, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_637, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_638, (864, ), (1, ))
    assert_size_stride(primals_639, (864, ), (1, ))
    assert_size_stride(primals_640, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_641, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_642, (864, ), (1, ))
    assert_size_stride(primals_643, (864, ), (1, ))
    assert_size_stride(primals_644, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_645, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_646, (864, ), (1, ))
    assert_size_stride(primals_647, (864, ), (1, ))
    assert_size_stride(primals_648, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_649, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_650, (864, ), (1, ))
    assert_size_stride(primals_651, (864, ), (1, ))
    assert_size_stride(primals_652, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_653, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_654, (864, ), (1, ))
    assert_size_stride(primals_655, (864, ), (1, ))
    assert_size_stride(primals_656, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_657, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_658, (864, ), (1, ))
    assert_size_stride(primals_659, (864, ), (1, ))
    assert_size_stride(primals_660, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_661, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_662, (864, ), (1, ))
    assert_size_stride(primals_663, (864, ), (1, ))
    assert_size_stride(primals_664, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_665, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_666, (864, ), (1, ))
    assert_size_stride(primals_667, (864, ), (1, ))
    assert_size_stride(primals_668, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(primals_669, (864, ), (1, ))
    assert_size_stride(primals_670, (864, ), (1, ))
    assert_size_stride(primals_671, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(primals_672, (864, ), (1, ))
    assert_size_stride(primals_673, (864, ), (1, ))
    assert_size_stride(primals_674, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_675, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_676, (864, ), (1, ))
    assert_size_stride(primals_677, (864, ), (1, ))
    assert_size_stride(primals_678, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_679, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_680, (864, ), (1, ))
    assert_size_stride(primals_681, (864, ), (1, ))
    assert_size_stride(primals_682, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_683, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_684, (864, ), (1, ))
    assert_size_stride(primals_685, (864, ), (1, ))
    assert_size_stride(primals_686, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_687, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_688, (864, ), (1, ))
    assert_size_stride(primals_689, (864, ), (1, ))
    assert_size_stride(primals_690, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_691, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_692, (864, ), (1, ))
    assert_size_stride(primals_693, (864, ), (1, ))
    assert_size_stride(primals_694, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_695, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_696, (864, ), (1, ))
    assert_size_stride(primals_697, (864, ), (1, ))
    assert_size_stride(primals_698, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_699, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_700, (864, ), (1, ))
    assert_size_stride(primals_701, (864, ), (1, ))
    assert_size_stride(primals_702, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_703, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_704, (864, ), (1, ))
    assert_size_stride(primals_705, (864, ), (1, ))
    assert_size_stride(primals_706, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_707, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_708, (864, ), (1, ))
    assert_size_stride(primals_709, (864, ), (1, ))
    assert_size_stride(primals_710, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_711, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_712, (864, ), (1, ))
    assert_size_stride(primals_713, (864, ), (1, ))
    assert_size_stride(primals_714, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_715, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_716, (864, ), (1, ))
    assert_size_stride(primals_717, (864, ), (1, ))
    assert_size_stride(primals_718, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_719, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_720, (864, ), (1, ))
    assert_size_stride(primals_721, (864, ), (1, ))
    assert_size_stride(primals_722, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(primals_723, (864, ), (1, ))
    assert_size_stride(primals_724, (864, ), (1, ))
    assert_size_stride(primals_725, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(primals_726, (864, ), (1, ))
    assert_size_stride(primals_727, (864, ), (1, ))
    assert_size_stride(primals_728, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_729, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_730, (864, ), (1, ))
    assert_size_stride(primals_731, (864, ), (1, ))
    assert_size_stride(primals_732, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_733, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_734, (864, ), (1, ))
    assert_size_stride(primals_735, (864, ), (1, ))
    assert_size_stride(primals_736, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_737, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_738, (864, ), (1, ))
    assert_size_stride(primals_739, (864, ), (1, ))
    assert_size_stride(primals_740, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(primals_741, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_742, (864, ), (1, ))
    assert_size_stride(primals_743, (864, ), (1, ))
    assert_size_stride(primals_744, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_745, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_746, (864, ), (1, ))
    assert_size_stride(primals_747, (864, ), (1, ))
    assert_size_stride(primals_748, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(primals_749, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_750, (864, ), (1, ))
    assert_size_stride(primals_751, (864, ), (1, ))
    assert_size_stride(primals_752, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_753, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_754, (864, ), (1, ))
    assert_size_stride(primals_755, (864, ), (1, ))
    assert_size_stride(primals_756, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_757, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_758, (864, ), (1, ))
    assert_size_stride(primals_759, (864, ), (1, ))
    assert_size_stride(primals_760, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_761, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_762, (864, ), (1, ))
    assert_size_stride(primals_763, (864, ), (1, ))
    assert_size_stride(primals_764, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_765, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_766, (864, ), (1, ))
    assert_size_stride(primals_767, (864, ), (1, ))
    assert_size_stride(primals_768, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_769, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_770, (864, ), (1, ))
    assert_size_stride(primals_771, (864, ), (1, ))
    assert_size_stride(primals_772, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(primals_773, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_774, (864, ), (1, ))
    assert_size_stride(primals_775, (864, ), (1, ))
    assert_size_stride(primals_776, (1000, 4320), (4320, 1))
    assert_size_stride(primals_777, (1000, ), (1, ))
    assert_size_stride(primals_778, (), ())
    assert_size_stride(primals_779, (96, ), (1, ))
    assert_size_stride(primals_780, (96, ), (1, ))
    assert_size_stride(primals_781, (54, ), (1, ))
    assert_size_stride(primals_782, (54, ), (1, ))
    assert_size_stride(primals_783, (), ())
    assert_size_stride(primals_784, (54, ), (1, ))
    assert_size_stride(primals_785, (54, ), (1, ))
    assert_size_stride(primals_786, (), ())
    assert_size_stride(primals_787, (54, ), (1, ))
    assert_size_stride(primals_788, (54, ), (1, ))
    assert_size_stride(primals_789, (), ())
    assert_size_stride(primals_790, (54, ), (1, ))
    assert_size_stride(primals_791, (54, ), (1, ))
    assert_size_stride(primals_792, (), ())
    assert_size_stride(primals_793, (54, ), (1, ))
    assert_size_stride(primals_794, (54, ), (1, ))
    assert_size_stride(primals_795, (), ())
    assert_size_stride(primals_796, (54, ), (1, ))
    assert_size_stride(primals_797, (54, ), (1, ))
    assert_size_stride(primals_798, (), ())
    assert_size_stride(primals_799, (54, ), (1, ))
    assert_size_stride(primals_800, (54, ), (1, ))
    assert_size_stride(primals_801, (), ())
    assert_size_stride(primals_802, (54, ), (1, ))
    assert_size_stride(primals_803, (54, ), (1, ))
    assert_size_stride(primals_804, (), ())
    assert_size_stride(primals_805, (54, ), (1, ))
    assert_size_stride(primals_806, (54, ), (1, ))
    assert_size_stride(primals_807, (), ())
    assert_size_stride(primals_808, (54, ), (1, ))
    assert_size_stride(primals_809, (54, ), (1, ))
    assert_size_stride(primals_810, (), ())
    assert_size_stride(primals_811, (54, ), (1, ))
    assert_size_stride(primals_812, (54, ), (1, ))
    assert_size_stride(primals_813, (), ())
    assert_size_stride(primals_814, (54, ), (1, ))
    assert_size_stride(primals_815, (54, ), (1, ))
    assert_size_stride(primals_816, (), ())
    assert_size_stride(primals_817, (54, ), (1, ))
    assert_size_stride(primals_818, (54, ), (1, ))
    assert_size_stride(primals_819, (), ())
    assert_size_stride(primals_820, (54, ), (1, ))
    assert_size_stride(primals_821, (54, ), (1, ))
    assert_size_stride(primals_822, (), ())
    assert_size_stride(primals_823, (54, ), (1, ))
    assert_size_stride(primals_824, (54, ), (1, ))
    assert_size_stride(primals_825, (), ())
    assert_size_stride(primals_826, (108, ), (1, ))
    assert_size_stride(primals_827, (108, ), (1, ))
    assert_size_stride(primals_828, (), ())
    assert_size_stride(primals_829, (108, ), (1, ))
    assert_size_stride(primals_830, (108, ), (1, ))
    assert_size_stride(primals_831, (), ())
    assert_size_stride(primals_832, (108, ), (1, ))
    assert_size_stride(primals_833, (108, ), (1, ))
    assert_size_stride(primals_834, (), ())
    assert_size_stride(primals_835, (108, ), (1, ))
    assert_size_stride(primals_836, (108, ), (1, ))
    assert_size_stride(primals_837, (), ())
    assert_size_stride(primals_838, (108, ), (1, ))
    assert_size_stride(primals_839, (108, ), (1, ))
    assert_size_stride(primals_840, (), ())
    assert_size_stride(primals_841, (108, ), (1, ))
    assert_size_stride(primals_842, (108, ), (1, ))
    assert_size_stride(primals_843, (), ())
    assert_size_stride(primals_844, (108, ), (1, ))
    assert_size_stride(primals_845, (108, ), (1, ))
    assert_size_stride(primals_846, (), ())
    assert_size_stride(primals_847, (108, ), (1, ))
    assert_size_stride(primals_848, (108, ), (1, ))
    assert_size_stride(primals_849, (), ())
    assert_size_stride(primals_850, (108, ), (1, ))
    assert_size_stride(primals_851, (108, ), (1, ))
    assert_size_stride(primals_852, (), ())
    assert_size_stride(primals_853, (108, ), (1, ))
    assert_size_stride(primals_854, (108, ), (1, ))
    assert_size_stride(primals_855, (), ())
    assert_size_stride(primals_856, (108, ), (1, ))
    assert_size_stride(primals_857, (108, ), (1, ))
    assert_size_stride(primals_858, (), ())
    assert_size_stride(primals_859, (108, ), (1, ))
    assert_size_stride(primals_860, (108, ), (1, ))
    assert_size_stride(primals_861, (), ())
    assert_size_stride(primals_862, (108, ), (1, ))
    assert_size_stride(primals_863, (108, ), (1, ))
    assert_size_stride(primals_864, (), ())
    assert_size_stride(primals_865, (108, ), (1, ))
    assert_size_stride(primals_866, (108, ), (1, ))
    assert_size_stride(primals_867, (), ())
    assert_size_stride(primals_868, (108, ), (1, ))
    assert_size_stride(primals_869, (108, ), (1, ))
    assert_size_stride(primals_870, (), ())
    assert_size_stride(primals_871, (216, ), (1, ))
    assert_size_stride(primals_872, (216, ), (1, ))
    assert_size_stride(primals_873, (), ())
    assert_size_stride(primals_874, (216, ), (1, ))
    assert_size_stride(primals_875, (216, ), (1, ))
    assert_size_stride(primals_876, (), ())
    assert_size_stride(primals_877, (216, ), (1, ))
    assert_size_stride(primals_878, (216, ), (1, ))
    assert_size_stride(primals_879, (), ())
    assert_size_stride(primals_880, (216, ), (1, ))
    assert_size_stride(primals_881, (216, ), (1, ))
    assert_size_stride(primals_882, (), ())
    assert_size_stride(primals_883, (216, ), (1, ))
    assert_size_stride(primals_884, (216, ), (1, ))
    assert_size_stride(primals_885, (), ())
    assert_size_stride(primals_886, (216, ), (1, ))
    assert_size_stride(primals_887, (216, ), (1, ))
    assert_size_stride(primals_888, (), ())
    assert_size_stride(primals_889, (216, ), (1, ))
    assert_size_stride(primals_890, (216, ), (1, ))
    assert_size_stride(primals_891, (), ())
    assert_size_stride(primals_892, (216, ), (1, ))
    assert_size_stride(primals_893, (216, ), (1, ))
    assert_size_stride(primals_894, (), ())
    assert_size_stride(primals_895, (216, ), (1, ))
    assert_size_stride(primals_896, (216, ), (1, ))
    assert_size_stride(primals_897, (), ())
    assert_size_stride(primals_898, (216, ), (1, ))
    assert_size_stride(primals_899, (216, ), (1, ))
    assert_size_stride(primals_900, (), ())
    assert_size_stride(primals_901, (216, ), (1, ))
    assert_size_stride(primals_902, (216, ), (1, ))
    assert_size_stride(primals_903, (), ())
    assert_size_stride(primals_904, (216, ), (1, ))
    assert_size_stride(primals_905, (216, ), (1, ))
    assert_size_stride(primals_906, (), ())
    assert_size_stride(primals_907, (216, ), (1, ))
    assert_size_stride(primals_908, (216, ), (1, ))
    assert_size_stride(primals_909, (), ())
    assert_size_stride(primals_910, (216, ), (1, ))
    assert_size_stride(primals_911, (216, ), (1, ))
    assert_size_stride(primals_912, (), ())
    assert_size_stride(primals_913, (216, ), (1, ))
    assert_size_stride(primals_914, (216, ), (1, ))
    assert_size_stride(primals_915, (), ())
    assert_size_stride(primals_916, (216, ), (1, ))
    assert_size_stride(primals_917, (216, ), (1, ))
    assert_size_stride(primals_918, (), ())
    assert_size_stride(primals_919, (216, ), (1, ))
    assert_size_stride(primals_920, (216, ), (1, ))
    assert_size_stride(primals_921, (), ())
    assert_size_stride(primals_922, (216, ), (1, ))
    assert_size_stride(primals_923, (216, ), (1, ))
    assert_size_stride(primals_924, (), ())
    assert_size_stride(primals_925, (216, ), (1, ))
    assert_size_stride(primals_926, (216, ), (1, ))
    assert_size_stride(primals_927, (), ())
    assert_size_stride(primals_928, (216, ), (1, ))
    assert_size_stride(primals_929, (216, ), (1, ))
    assert_size_stride(primals_930, (), ())
    assert_size_stride(primals_931, (216, ), (1, ))
    assert_size_stride(primals_932, (216, ), (1, ))
    assert_size_stride(primals_933, (), ())
    assert_size_stride(primals_934, (216, ), (1, ))
    assert_size_stride(primals_935, (216, ), (1, ))
    assert_size_stride(primals_936, (), ())
    assert_size_stride(primals_937, (216, ), (1, ))
    assert_size_stride(primals_938, (216, ), (1, ))
    assert_size_stride(primals_939, (), ())
    assert_size_stride(primals_940, (216, ), (1, ))
    assert_size_stride(primals_941, (216, ), (1, ))
    assert_size_stride(primals_942, (), ())
    assert_size_stride(primals_943, (216, ), (1, ))
    assert_size_stride(primals_944, (216, ), (1, ))
    assert_size_stride(primals_945, (), ())
    assert_size_stride(primals_946, (216, ), (1, ))
    assert_size_stride(primals_947, (216, ), (1, ))
    assert_size_stride(primals_948, (), ())
    assert_size_stride(primals_949, (216, ), (1, ))
    assert_size_stride(primals_950, (216, ), (1, ))
    assert_size_stride(primals_951, (), ())
    assert_size_stride(primals_952, (216, ), (1, ))
    assert_size_stride(primals_953, (216, ), (1, ))
    assert_size_stride(primals_954, (), ())
    assert_size_stride(primals_955, (216, ), (1, ))
    assert_size_stride(primals_956, (216, ), (1, ))
    assert_size_stride(primals_957, (), ())
    assert_size_stride(primals_958, (216, ), (1, ))
    assert_size_stride(primals_959, (216, ), (1, ))
    assert_size_stride(primals_960, (), ())
    assert_size_stride(primals_961, (216, ), (1, ))
    assert_size_stride(primals_962, (216, ), (1, ))
    assert_size_stride(primals_963, (), ())
    assert_size_stride(primals_964, (216, ), (1, ))
    assert_size_stride(primals_965, (216, ), (1, ))
    assert_size_stride(primals_966, (), ())
    assert_size_stride(primals_967, (216, ), (1, ))
    assert_size_stride(primals_968, (216, ), (1, ))
    assert_size_stride(primals_969, (), ())
    assert_size_stride(primals_970, (216, ), (1, ))
    assert_size_stride(primals_971, (216, ), (1, ))
    assert_size_stride(primals_972, (), ())
    assert_size_stride(primals_973, (216, ), (1, ))
    assert_size_stride(primals_974, (216, ), (1, ))
    assert_size_stride(primals_975, (), ())
    assert_size_stride(primals_976, (216, ), (1, ))
    assert_size_stride(primals_977, (216, ), (1, ))
    assert_size_stride(primals_978, (), ())
    assert_size_stride(primals_979, (216, ), (1, ))
    assert_size_stride(primals_980, (216, ), (1, ))
    assert_size_stride(primals_981, (), ())
    assert_size_stride(primals_982, (216, ), (1, ))
    assert_size_stride(primals_983, (216, ), (1, ))
    assert_size_stride(primals_984, (), ())
    assert_size_stride(primals_985, (216, ), (1, ))
    assert_size_stride(primals_986, (216, ), (1, ))
    assert_size_stride(primals_987, (), ())
    assert_size_stride(primals_988, (216, ), (1, ))
    assert_size_stride(primals_989, (216, ), (1, ))
    assert_size_stride(primals_990, (), ())
    assert_size_stride(primals_991, (216, ), (1, ))
    assert_size_stride(primals_992, (216, ), (1, ))
    assert_size_stride(primals_993, (), ())
    assert_size_stride(primals_994, (216, ), (1, ))
    assert_size_stride(primals_995, (216, ), (1, ))
    assert_size_stride(primals_996, (), ())
    assert_size_stride(primals_997, (216, ), (1, ))
    assert_size_stride(primals_998, (216, ), (1, ))
    assert_size_stride(primals_999, (), ())
    assert_size_stride(primals_1000, (216, ), (1, ))
    assert_size_stride(primals_1001, (216, ), (1, ))
    assert_size_stride(primals_1002, (), ())
    assert_size_stride(primals_1003, (216, ), (1, ))
    assert_size_stride(primals_1004, (216, ), (1, ))
    assert_size_stride(primals_1005, (), ())
    assert_size_stride(primals_1006, (216, ), (1, ))
    assert_size_stride(primals_1007, (216, ), (1, ))
    assert_size_stride(primals_1008, (), ())
    assert_size_stride(primals_1009, (216, ), (1, ))
    assert_size_stride(primals_1010, (216, ), (1, ))
    assert_size_stride(primals_1011, (), ())
    assert_size_stride(primals_1012, (216, ), (1, ))
    assert_size_stride(primals_1013, (216, ), (1, ))
    assert_size_stride(primals_1014, (), ())
    assert_size_stride(primals_1015, (216, ), (1, ))
    assert_size_stride(primals_1016, (216, ), (1, ))
    assert_size_stride(primals_1017, (), ())
    assert_size_stride(primals_1018, (216, ), (1, ))
    assert_size_stride(primals_1019, (216, ), (1, ))
    assert_size_stride(primals_1020, (), ())
    assert_size_stride(primals_1021, (216, ), (1, ))
    assert_size_stride(primals_1022, (216, ), (1, ))
    assert_size_stride(primals_1023, (), ())
    assert_size_stride(primals_1024, (216, ), (1, ))
    assert_size_stride(primals_1025, (216, ), (1, ))
    assert_size_stride(primals_1026, (), ())
    assert_size_stride(primals_1027, (216, ), (1, ))
    assert_size_stride(primals_1028, (216, ), (1, ))
    assert_size_stride(primals_1029, (), ())
    assert_size_stride(primals_1030, (216, ), (1, ))
    assert_size_stride(primals_1031, (216, ), (1, ))
    assert_size_stride(primals_1032, (), ())
    assert_size_stride(primals_1033, (216, ), (1, ))
    assert_size_stride(primals_1034, (216, ), (1, ))
    assert_size_stride(primals_1035, (), ())
    assert_size_stride(primals_1036, (216, ), (1, ))
    assert_size_stride(primals_1037, (216, ), (1, ))
    assert_size_stride(primals_1038, (), ())
    assert_size_stride(primals_1039, (432, ), (1, ))
    assert_size_stride(primals_1040, (432, ), (1, ))
    assert_size_stride(primals_1041, (), ())
    assert_size_stride(primals_1042, (432, ), (1, ))
    assert_size_stride(primals_1043, (432, ), (1, ))
    assert_size_stride(primals_1044, (), ())
    assert_size_stride(primals_1045, (432, ), (1, ))
    assert_size_stride(primals_1046, (432, ), (1, ))
    assert_size_stride(primals_1047, (), ())
    assert_size_stride(primals_1048, (432, ), (1, ))
    assert_size_stride(primals_1049, (432, ), (1, ))
    assert_size_stride(primals_1050, (), ())
    assert_size_stride(primals_1051, (432, ), (1, ))
    assert_size_stride(primals_1052, (432, ), (1, ))
    assert_size_stride(primals_1053, (), ())
    assert_size_stride(primals_1054, (432, ), (1, ))
    assert_size_stride(primals_1055, (432, ), (1, ))
    assert_size_stride(primals_1056, (), ())
    assert_size_stride(primals_1057, (432, ), (1, ))
    assert_size_stride(primals_1058, (432, ), (1, ))
    assert_size_stride(primals_1059, (), ())
    assert_size_stride(primals_1060, (432, ), (1, ))
    assert_size_stride(primals_1061, (432, ), (1, ))
    assert_size_stride(primals_1062, (), ())
    assert_size_stride(primals_1063, (432, ), (1, ))
    assert_size_stride(primals_1064, (432, ), (1, ))
    assert_size_stride(primals_1065, (), ())
    assert_size_stride(primals_1066, (432, ), (1, ))
    assert_size_stride(primals_1067, (432, ), (1, ))
    assert_size_stride(primals_1068, (), ())
    assert_size_stride(primals_1069, (432, ), (1, ))
    assert_size_stride(primals_1070, (432, ), (1, ))
    assert_size_stride(primals_1071, (), ())
    assert_size_stride(primals_1072, (432, ), (1, ))
    assert_size_stride(primals_1073, (432, ), (1, ))
    assert_size_stride(primals_1074, (), ())
    assert_size_stride(primals_1075, (432, ), (1, ))
    assert_size_stride(primals_1076, (432, ), (1, ))
    assert_size_stride(primals_1077, (), ())
    assert_size_stride(primals_1078, (432, ), (1, ))
    assert_size_stride(primals_1079, (432, ), (1, ))
    assert_size_stride(primals_1080, (), ())
    assert_size_stride(primals_1081, (432, ), (1, ))
    assert_size_stride(primals_1082, (432, ), (1, ))
    assert_size_stride(primals_1083, (), ())
    assert_size_stride(primals_1084, (432, ), (1, ))
    assert_size_stride(primals_1085, (432, ), (1, ))
    assert_size_stride(primals_1086, (), ())
    assert_size_stride(primals_1087, (432, ), (1, ))
    assert_size_stride(primals_1088, (432, ), (1, ))
    assert_size_stride(primals_1089, (), ())
    assert_size_stride(primals_1090, (432, ), (1, ))
    assert_size_stride(primals_1091, (432, ), (1, ))
    assert_size_stride(primals_1092, (), ())
    assert_size_stride(primals_1093, (432, ), (1, ))
    assert_size_stride(primals_1094, (432, ), (1, ))
    assert_size_stride(primals_1095, (), ())
    assert_size_stride(primals_1096, (432, ), (1, ))
    assert_size_stride(primals_1097, (432, ), (1, ))
    assert_size_stride(primals_1098, (), ())
    assert_size_stride(primals_1099, (432, ), (1, ))
    assert_size_stride(primals_1100, (432, ), (1, ))
    assert_size_stride(primals_1101, (), ())
    assert_size_stride(primals_1102, (432, ), (1, ))
    assert_size_stride(primals_1103, (432, ), (1, ))
    assert_size_stride(primals_1104, (), ())
    assert_size_stride(primals_1105, (432, ), (1, ))
    assert_size_stride(primals_1106, (432, ), (1, ))
    assert_size_stride(primals_1107, (), ())
    assert_size_stride(primals_1108, (432, ), (1, ))
    assert_size_stride(primals_1109, (432, ), (1, ))
    assert_size_stride(primals_1110, (), ())
    assert_size_stride(primals_1111, (432, ), (1, ))
    assert_size_stride(primals_1112, (432, ), (1, ))
    assert_size_stride(primals_1113, (), ())
    assert_size_stride(primals_1114, (432, ), (1, ))
    assert_size_stride(primals_1115, (432, ), (1, ))
    assert_size_stride(primals_1116, (), ())
    assert_size_stride(primals_1117, (432, ), (1, ))
    assert_size_stride(primals_1118, (432, ), (1, ))
    assert_size_stride(primals_1119, (), ())
    assert_size_stride(primals_1120, (432, ), (1, ))
    assert_size_stride(primals_1121, (432, ), (1, ))
    assert_size_stride(primals_1122, (), ())
    assert_size_stride(primals_1123, (432, ), (1, ))
    assert_size_stride(primals_1124, (432, ), (1, ))
    assert_size_stride(primals_1125, (), ())
    assert_size_stride(primals_1126, (432, ), (1, ))
    assert_size_stride(primals_1127, (432, ), (1, ))
    assert_size_stride(primals_1128, (), ())
    assert_size_stride(primals_1129, (432, ), (1, ))
    assert_size_stride(primals_1130, (432, ), (1, ))
    assert_size_stride(primals_1131, (), ())
    assert_size_stride(primals_1132, (432, ), (1, ))
    assert_size_stride(primals_1133, (432, ), (1, ))
    assert_size_stride(primals_1134, (), ())
    assert_size_stride(primals_1135, (432, ), (1, ))
    assert_size_stride(primals_1136, (432, ), (1, ))
    assert_size_stride(primals_1137, (), ())
    assert_size_stride(primals_1138, (432, ), (1, ))
    assert_size_stride(primals_1139, (432, ), (1, ))
    assert_size_stride(primals_1140, (), ())
    assert_size_stride(primals_1141, (432, ), (1, ))
    assert_size_stride(primals_1142, (432, ), (1, ))
    assert_size_stride(primals_1143, (), ())
    assert_size_stride(primals_1144, (432, ), (1, ))
    assert_size_stride(primals_1145, (432, ), (1, ))
    assert_size_stride(primals_1146, (), ())
    assert_size_stride(primals_1147, (432, ), (1, ))
    assert_size_stride(primals_1148, (432, ), (1, ))
    assert_size_stride(primals_1149, (), ())
    assert_size_stride(primals_1150, (432, ), (1, ))
    assert_size_stride(primals_1151, (432, ), (1, ))
    assert_size_stride(primals_1152, (), ())
    assert_size_stride(primals_1153, (432, ), (1, ))
    assert_size_stride(primals_1154, (432, ), (1, ))
    assert_size_stride(primals_1155, (), ())
    assert_size_stride(primals_1156, (432, ), (1, ))
    assert_size_stride(primals_1157, (432, ), (1, ))
    assert_size_stride(primals_1158, (), ())
    assert_size_stride(primals_1159, (432, ), (1, ))
    assert_size_stride(primals_1160, (432, ), (1, ))
    assert_size_stride(primals_1161, (), ())
    assert_size_stride(primals_1162, (432, ), (1, ))
    assert_size_stride(primals_1163, (432, ), (1, ))
    assert_size_stride(primals_1164, (), ())
    assert_size_stride(primals_1165, (432, ), (1, ))
    assert_size_stride(primals_1166, (432, ), (1, ))
    assert_size_stride(primals_1167, (), ())
    assert_size_stride(primals_1168, (432, ), (1, ))
    assert_size_stride(primals_1169, (432, ), (1, ))
    assert_size_stride(primals_1170, (), ())
    assert_size_stride(primals_1171, (432, ), (1, ))
    assert_size_stride(primals_1172, (432, ), (1, ))
    assert_size_stride(primals_1173, (), ())
    assert_size_stride(primals_1174, (432, ), (1, ))
    assert_size_stride(primals_1175, (432, ), (1, ))
    assert_size_stride(primals_1176, (), ())
    assert_size_stride(primals_1177, (432, ), (1, ))
    assert_size_stride(primals_1178, (432, ), (1, ))
    assert_size_stride(primals_1179, (), ())
    assert_size_stride(primals_1180, (432, ), (1, ))
    assert_size_stride(primals_1181, (432, ), (1, ))
    assert_size_stride(primals_1182, (), ())
    assert_size_stride(primals_1183, (432, ), (1, ))
    assert_size_stride(primals_1184, (432, ), (1, ))
    assert_size_stride(primals_1185, (), ())
    assert_size_stride(primals_1186, (432, ), (1, ))
    assert_size_stride(primals_1187, (432, ), (1, ))
    assert_size_stride(primals_1188, (), ())
    assert_size_stride(primals_1189, (432, ), (1, ))
    assert_size_stride(primals_1190, (432, ), (1, ))
    assert_size_stride(primals_1191, (), ())
    assert_size_stride(primals_1192, (432, ), (1, ))
    assert_size_stride(primals_1193, (432, ), (1, ))
    assert_size_stride(primals_1194, (), ())
    assert_size_stride(primals_1195, (432, ), (1, ))
    assert_size_stride(primals_1196, (432, ), (1, ))
    assert_size_stride(primals_1197, (), ())
    assert_size_stride(primals_1198, (432, ), (1, ))
    assert_size_stride(primals_1199, (432, ), (1, ))
    assert_size_stride(primals_1200, (), ())
    assert_size_stride(primals_1201, (432, ), (1, ))
    assert_size_stride(primals_1202, (432, ), (1, ))
    assert_size_stride(primals_1203, (), ())
    assert_size_stride(primals_1204, (432, ), (1, ))
    assert_size_stride(primals_1205, (432, ), (1, ))
    assert_size_stride(primals_1206, (), ())
    assert_size_stride(primals_1207, (432, ), (1, ))
    assert_size_stride(primals_1208, (432, ), (1, ))
    assert_size_stride(primals_1209, (), ())
    assert_size_stride(primals_1210, (864, ), (1, ))
    assert_size_stride(primals_1211, (864, ), (1, ))
    assert_size_stride(primals_1212, (), ())
    assert_size_stride(primals_1213, (864, ), (1, ))
    assert_size_stride(primals_1214, (864, ), (1, ))
    assert_size_stride(primals_1215, (), ())
    assert_size_stride(primals_1216, (864, ), (1, ))
    assert_size_stride(primals_1217, (864, ), (1, ))
    assert_size_stride(primals_1218, (), ())
    assert_size_stride(primals_1219, (864, ), (1, ))
    assert_size_stride(primals_1220, (864, ), (1, ))
    assert_size_stride(primals_1221, (), ())
    assert_size_stride(primals_1222, (864, ), (1, ))
    assert_size_stride(primals_1223, (864, ), (1, ))
    assert_size_stride(primals_1224, (), ())
    assert_size_stride(primals_1225, (864, ), (1, ))
    assert_size_stride(primals_1226, (864, ), (1, ))
    assert_size_stride(primals_1227, (), ())
    assert_size_stride(primals_1228, (864, ), (1, ))
    assert_size_stride(primals_1229, (864, ), (1, ))
    assert_size_stride(primals_1230, (), ())
    assert_size_stride(primals_1231, (864, ), (1, ))
    assert_size_stride(primals_1232, (864, ), (1, ))
    assert_size_stride(primals_1233, (), ())
    assert_size_stride(primals_1234, (864, ), (1, ))
    assert_size_stride(primals_1235, (864, ), (1, ))
    assert_size_stride(primals_1236, (), ())
    assert_size_stride(primals_1237, (864, ), (1, ))
    assert_size_stride(primals_1238, (864, ), (1, ))
    assert_size_stride(primals_1239, (), ())
    assert_size_stride(primals_1240, (864, ), (1, ))
    assert_size_stride(primals_1241, (864, ), (1, ))
    assert_size_stride(primals_1242, (), ())
    assert_size_stride(primals_1243, (864, ), (1, ))
    assert_size_stride(primals_1244, (864, ), (1, ))
    assert_size_stride(primals_1245, (), ())
    assert_size_stride(primals_1246, (864, ), (1, ))
    assert_size_stride(primals_1247, (864, ), (1, ))
    assert_size_stride(primals_1248, (), ())
    assert_size_stride(primals_1249, (864, ), (1, ))
    assert_size_stride(primals_1250, (864, ), (1, ))
    assert_size_stride(primals_1251, (), ())
    assert_size_stride(primals_1252, (864, ), (1, ))
    assert_size_stride(primals_1253, (864, ), (1, ))
    assert_size_stride(primals_1254, (), ())
    assert_size_stride(primals_1255, (864, ), (1, ))
    assert_size_stride(primals_1256, (864, ), (1, ))
    assert_size_stride(primals_1257, (), ())
    assert_size_stride(primals_1258, (864, ), (1, ))
    assert_size_stride(primals_1259, (864, ), (1, ))
    assert_size_stride(primals_1260, (), ())
    assert_size_stride(primals_1261, (864, ), (1, ))
    assert_size_stride(primals_1262, (864, ), (1, ))
    assert_size_stride(primals_1263, (), ())
    assert_size_stride(primals_1264, (864, ), (1, ))
    assert_size_stride(primals_1265, (864, ), (1, ))
    assert_size_stride(primals_1266, (), ())
    assert_size_stride(primals_1267, (864, ), (1, ))
    assert_size_stride(primals_1268, (864, ), (1, ))
    assert_size_stride(primals_1269, (), ())
    assert_size_stride(primals_1270, (864, ), (1, ))
    assert_size_stride(primals_1271, (864, ), (1, ))
    assert_size_stride(primals_1272, (), ())
    assert_size_stride(primals_1273, (864, ), (1, ))
    assert_size_stride(primals_1274, (864, ), (1, ))
    assert_size_stride(primals_1275, (), ())
    assert_size_stride(primals_1276, (864, ), (1, ))
    assert_size_stride(primals_1277, (864, ), (1, ))
    assert_size_stride(primals_1278, (), ())
    assert_size_stride(primals_1279, (864, ), (1, ))
    assert_size_stride(primals_1280, (864, ), (1, ))
    assert_size_stride(primals_1281, (), ())
    assert_size_stride(primals_1282, (864, ), (1, ))
    assert_size_stride(primals_1283, (864, ), (1, ))
    assert_size_stride(primals_1284, (), ())
    assert_size_stride(primals_1285, (864, ), (1, ))
    assert_size_stride(primals_1286, (864, ), (1, ))
    assert_size_stride(primals_1287, (), ())
    assert_size_stride(primals_1288, (864, ), (1, ))
    assert_size_stride(primals_1289, (864, ), (1, ))
    assert_size_stride(primals_1290, (), ())
    assert_size_stride(primals_1291, (864, ), (1, ))
    assert_size_stride(primals_1292, (864, ), (1, ))
    assert_size_stride(primals_1293, (), ())
    assert_size_stride(primals_1294, (864, ), (1, ))
    assert_size_stride(primals_1295, (864, ), (1, ))
    assert_size_stride(primals_1296, (), ())
    assert_size_stride(primals_1297, (864, ), (1, ))
    assert_size_stride(primals_1298, (864, ), (1, ))
    assert_size_stride(primals_1299, (), ())
    assert_size_stride(primals_1300, (864, ), (1, ))
    assert_size_stride(primals_1301, (864, ), (1, ))
    assert_size_stride(primals_1302, (), ())
    assert_size_stride(primals_1303, (864, ), (1, ))
    assert_size_stride(primals_1304, (864, ), (1, ))
    assert_size_stride(primals_1305, (), ())
    assert_size_stride(primals_1306, (864, ), (1, ))
    assert_size_stride(primals_1307, (864, ), (1, ))
    assert_size_stride(primals_1308, (), ())
    assert_size_stride(primals_1309, (864, ), (1, ))
    assert_size_stride(primals_1310, (864, ), (1, ))
    assert_size_stride(primals_1311, (), ())
    assert_size_stride(primals_1312, (864, ), (1, ))
    assert_size_stride(primals_1313, (864, ), (1, ))
    assert_size_stride(primals_1314, (), ())
    assert_size_stride(primals_1315, (864, ), (1, ))
    assert_size_stride(primals_1316, (864, ), (1, ))
    assert_size_stride(primals_1317, (), ())
    assert_size_stride(primals_1318, (864, ), (1, ))
    assert_size_stride(primals_1319, (864, ), (1, ))
    assert_size_stride(primals_1320, (), ())
    assert_size_stride(primals_1321, (864, ), (1, ))
    assert_size_stride(primals_1322, (864, ), (1, ))
    assert_size_stride(primals_1323, (), ())
    assert_size_stride(primals_1324, (864, ), (1, ))
    assert_size_stride(primals_1325, (864, ), (1, ))
    assert_size_stride(primals_1326, (), ())
    assert_size_stride(primals_1327, (864, ), (1, ))
    assert_size_stride(primals_1328, (864, ), (1, ))
    assert_size_stride(primals_1329, (), ())
    assert_size_stride(primals_1330, (864, ), (1, ))
    assert_size_stride(primals_1331, (864, ), (1, ))
    assert_size_stride(primals_1332, (), ())
    assert_size_stride(primals_1333, (864, ), (1, ))
    assert_size_stride(primals_1334, (864, ), (1, ))
    assert_size_stride(primals_1335, (), ())
    assert_size_stride(primals_1336, (864, ), (1, ))
    assert_size_stride(primals_1337, (864, ), (1, ))
    assert_size_stride(primals_1338, (), ())
    assert_size_stride(primals_1339, (864, ), (1, ))
    assert_size_stride(primals_1340, (864, ), (1, ))
    assert_size_stride(primals_1341, (), ())
    assert_size_stride(primals_1342, (864, ), (1, ))
    assert_size_stride(primals_1343, (864, ), (1, ))
    assert_size_stride(primals_1344, (), ())
    assert_size_stride(primals_1345, (864, ), (1, ))
    assert_size_stride(primals_1346, (864, ), (1, ))
    assert_size_stride(primals_1347, (), ())
    assert_size_stride(primals_1348, (864, ), (1, ))
    assert_size_stride(primals_1349, (864, ), (1, ))
    assert_size_stride(primals_1350, (), ())
    assert_size_stride(primals_1351, (864, ), (1, ))
    assert_size_stride(primals_1352, (864, ), (1, ))
    assert_size_stride(primals_1353, (), ())
    assert_size_stride(primals_1354, (864, ), (1, ))
    assert_size_stride(primals_1355, (864, ), (1, ))
    assert_size_stride(primals_1356, (), ())
    assert_size_stride(primals_1357, (864, ), (1, ))
    assert_size_stride(primals_1358, (864, ), (1, ))
    assert_size_stride(primals_1359, (), ())
    assert_size_stride(primals_1360, (864, ), (1, ))
    assert_size_stride(primals_1361, (864, ), (1, ))
    assert_size_stride(primals_1362, (), ())
    assert_size_stride(primals_1363, (864, ), (1, ))
    assert_size_stride(primals_1364, (864, ), (1, ))
    assert_size_stride(primals_1365, (), ())
    assert_size_stride(primals_1366, (864, ), (1, ))
    assert_size_stride(primals_1367, (864, ), (1, ))
    assert_size_stride(primals_1368, (), ())
    assert_size_stride(primals_1369, (864, ), (1, ))
    assert_size_stride(primals_1370, (864, ), (1, ))
    assert_size_stride(primals_1371, (), ())
    assert_size_stride(primals_1372, (864, ), (1, ))
    assert_size_stride(primals_1373, (864, ), (1, ))
    assert_size_stride(primals_1374, (), ())
    assert_size_stride(primals_1375, (864, ), (1, ))
    assert_size_stride(primals_1376, (864, ), (1, ))
    assert_size_stride(primals_1377, (), ())
    assert_size_stride(primals_1378, (864, ), (1, ))
    assert_size_stride(primals_1379, (864, ), (1, ))
    assert_size_stride(primals_1380, (), ())
    assert_size_stride(primals_1381, (8, 3, 331, 331), (328683, 109561, 331, 1))
    buf0 = empty_strided((96, 3, 3, 3), (27, 1, 9, 3), device='cpu', dtype=torch.float32)
    buf1 = empty_strided((8, 3, 331, 331), (328683, 1, 993, 3), device='cpu', dtype=torch.float32)
    cpp_fused_0(c_void_p(primals_27.data_ptr()), c_void_p(primals_1381.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(buf1.data_ptr()))
    del primals_1381
    del primals_27
    # Source Nodes: [x], Original ATen: [aten.convolution]
    buf2 = extern_kernels.convolution(buf1, buf0, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf2, (8, 96, 165, 165), (2613600, 1, 15840, 96))
    buf3 = empty_strided((1, 96, 1, 1), (96, 1, 96, 96), device='cpu', dtype=torch.float32)
    buf4 = empty_strided((1, 96, 1, 1), (96, 1, 96, 96), device='cpu', dtype=torch.float32)
    buf6 = empty((96, ), device='cpu', dtype=torch.float32)
    buf7 = empty_strided((8, 96, 165, 165), (2613600, 1, 15840, 96), device='cpu', dtype=torch.float32)
    buf8 = empty_strided((8, 96, 165, 165), (2613600, 1, 15840, 96), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_1(c_void_p(buf2.data_ptr()), c_void_p(primals_1.data_ptr()), c_void_p(primals_2.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(buf4.data_ptr()), c_void_p(buf6.data_ptr()), c_void_p(buf7.data_ptr()), c_void_p(buf8.data_ptr()))
    del primals_2
    # Source Nodes: [x_6], Original ATen: [aten.convolution]
    buf9 = extern_kernels.convolution(buf8, primals_28, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf9, (8, 54, 165, 165), (1470150, 1, 8910, 54))
    buf10 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf11 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf13 = empty((54, ), device='cpu', dtype=torch.float32)
    buf14 = empty_strided((8, 54, 165, 165), (1470150, 1, 8910, 54), device='cpu', dtype=torch.float32)
    buf15 = empty_strided((8, 96, 169, 169), (2741856, 1, 16224, 96), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_2(c_void_p(buf9.data_ptr()), c_void_p(primals_29.data_ptr()), c_void_p(primals_30.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(buf11.data_ptr()), c_void_p(buf13.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf15.data_ptr()))
    del primals_30
    # Source Nodes: [x_11], Original ATen: [aten.convolution]
    buf16 = extern_kernels.convolution(buf15, primals_3, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=96, bias=None)
    assert_size_stride(buf16, (8, 96, 83, 83), (661344, 1, 7968, 96))
    # Source Nodes: [x_13], Original ATen: [aten.convolution]
    buf17 = extern_kernels.convolution(buf16, primals_31, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf17, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf18 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf19 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf21 = empty((54, ), device='cpu', dtype=torch.float32)
    buf22 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_3(c_void_p(buf17.data_ptr()), c_void_p(primals_32.data_ptr()), c_void_p(primals_33.data_ptr()), c_void_p(buf18.data_ptr()), c_void_p(buf19.data_ptr()), c_void_p(buf21.data_ptr()), c_void_p(buf22.data_ptr()))
    del primals_33
    # Source Nodes: [x_16], Original ATen: [aten.convolution]
    buf23 = extern_kernels.convolution(buf22, primals_34, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf23, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_18], Original ATen: [aten.convolution]
    buf24 = extern_kernels.convolution(buf23, primals_35, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf24, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf25 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf26 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf28 = empty((54, ), device='cpu', dtype=torch.float32)
    buf29 = empty_strided((8, 96, 167, 167), (2677344, 1, 16032, 96), device='cpu', dtype=torch.float32)
    buf30 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.float32)
    buf31 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_4(c_void_p(buf24.data_ptr()), c_void_p(buf7.data_ptr()), c_void_p(buf25.data_ptr()), c_void_p(buf26.data_ptr()), c_void_p(buf28.data_ptr()), c_void_p(buf29.data_ptr()), c_void_p(buf30.data_ptr()), c_void_p(buf31.data_ptr()))
    # Source Nodes: [l__mod___cell_stem_0_comb_iter_0_right_conv], Original ATen: [aten.convolution]
    buf32 = extern_kernels.convolution(buf30, primals_38, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf32, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf33 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf34 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf36 = empty((54, ), device='cpu', dtype=torch.float32)
    buf121 = empty((8, 270, 83, 83), device='cpu', dtype=torch.float32)
    buf37 = reinterpret_tensor(buf121, (8, 54, 83, 83), (1860030, 6889, 83, 1), 0)  # alias
    buf38 = empty_strided((8, 54, 165, 165), (1470150, 1, 8910, 54), device='cpu', dtype=torch.float32)
    buf1537 = empty_strided((8, 54, 165, 165), (1470150, 1, 8910, 54), device='cpu', dtype=torch.bool)
    buf39 = empty_strided((8, 54, 171, 171), (1579014, 1, 9234, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_constant_pad_nd_relu_threshold_backward_5(c_void_p(buf32.data_ptr()), c_void_p(buf24.data_ptr()), c_void_p(buf25.data_ptr()), c_void_p(buf26.data_ptr()), c_void_p(primals_36.data_ptr()), c_void_p(primals_37.data_ptr()), c_void_p(primals_39.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf33.data_ptr()), c_void_p(buf34.data_ptr()), c_void_p(buf36.data_ptr()), c_void_p(buf37.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(buf1537.data_ptr()), c_void_p(buf39.data_ptr()))
    del primals_37
    del primals_40
    # Source Nodes: [x_25], Original ATen: [aten.convolution]
    buf40 = extern_kernels.convolution(buf39, primals_4, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf40, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_27], Original ATen: [aten.convolution]
    buf41 = extern_kernels.convolution(buf40, primals_41, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf41, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf42 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf43 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf45 = empty((54, ), device='cpu', dtype=torch.float32)
    buf46 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_6(c_void_p(buf41.data_ptr()), c_void_p(primals_42.data_ptr()), c_void_p(primals_43.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(buf43.data_ptr()), c_void_p(buf45.data_ptr()), c_void_p(buf46.data_ptr()))
    del primals_43
    # Source Nodes: [x_30], Original ATen: [aten.convolution]
    buf47 = extern_kernels.convolution(buf46, primals_44, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf47, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_32], Original ATen: [aten.convolution]
    buf48 = extern_kernels.convolution(buf47, primals_45, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf48, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf49 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf50 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf52 = empty((54, ), device='cpu', dtype=torch.float32)
    buf53 = empty_strided((8, 54, 167, 167), (1506006, 1, 9018, 54), device='cpu', dtype=torch.float32)
    buf54 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    buf55 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.int64)
    buf56 = empty_strided((8, 54, 169, 169), (1542294, 1, 9126, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_7(c_void_p(buf48.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(buf50.data_ptr()), c_void_p(buf52.data_ptr()), c_void_p(buf53.data_ptr()), c_void_p(buf54.data_ptr()), c_void_p(buf55.data_ptr()), c_void_p(buf56.data_ptr()))
    del buf14
    # Source Nodes: [x_39], Original ATen: [aten.convolution]
    buf57 = extern_kernels.convolution(buf56, primals_5, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf57, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_41], Original ATen: [aten.convolution]
    buf58 = extern_kernels.convolution(buf57, primals_48, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf58, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf59 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf60 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf62 = empty((54, ), device='cpu', dtype=torch.float32)
    buf63 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_8(c_void_p(buf58.data_ptr()), c_void_p(primals_49.data_ptr()), c_void_p(primals_50.data_ptr()), c_void_p(buf59.data_ptr()), c_void_p(buf60.data_ptr()), c_void_p(buf62.data_ptr()), c_void_p(buf63.data_ptr()))
    del primals_50
    # Source Nodes: [x_44], Original ATen: [aten.convolution]
    buf64 = extern_kernels.convolution(buf63, primals_51, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf64, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_46], Original ATen: [aten.convolution]
    buf65 = extern_kernels.convolution(buf64, primals_52, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf65, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf66 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf67 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf69 = empty((54, ), device='cpu', dtype=torch.float32)
    buf70 = empty_strided((8, 54, 167, 167), (1506006, 1, 9018, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_9(c_void_p(buf65.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(buf66.data_ptr()), c_void_p(buf67.data_ptr()), c_void_p(buf69.data_ptr()), c_void_p(buf70.data_ptr()))
    # Source Nodes: [x_51], Original ATen: [aten.convolution]
    buf71 = extern_kernels.convolution(buf70, primals_6, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf71, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_53], Original ATen: [aten.convolution]
    buf72 = extern_kernels.convolution(buf71, primals_55, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf72, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf73 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf74 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf76 = empty((54, ), device='cpu', dtype=torch.float32)
    buf77 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_10(c_void_p(buf72.data_ptr()), c_void_p(primals_56.data_ptr()), c_void_p(primals_57.data_ptr()), c_void_p(buf73.data_ptr()), c_void_p(buf74.data_ptr()), c_void_p(buf76.data_ptr()), c_void_p(buf77.data_ptr()))
    del primals_57
    # Source Nodes: [x_56], Original ATen: [aten.convolution]
    buf78 = extern_kernels.convolution(buf77, primals_58, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf78, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_58], Original ATen: [aten.convolution]
    buf79 = extern_kernels.convolution(buf78, primals_59, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf79, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf80 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf81 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf83 = empty((54, ), device='cpu', dtype=torch.float32)
    buf84 = reinterpret_tensor(buf121, (8, 54, 83, 83), (1860030, 6889, 83, 1), 744012)  # alias
    buf85 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_11(c_void_p(buf79.data_ptr()), c_void_p(buf65.data_ptr()), c_void_p(buf66.data_ptr()), c_void_p(buf67.data_ptr()), c_void_p(primals_53.data_ptr()), c_void_p(primals_54.data_ptr()), c_void_p(primals_60.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(buf80.data_ptr()), c_void_p(buf81.data_ptr()), c_void_p(buf83.data_ptr()), c_void_p(buf84.data_ptr()), c_void_p(buf85.data_ptr()))
    del primals_54
    del primals_61
    # Source Nodes: [x_61], Original ATen: [aten.convolution]
    buf86 = extern_kernels.convolution(buf85, primals_62, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf86, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_63], Original ATen: [aten.convolution]
    buf87 = extern_kernels.convolution(buf86, primals_63, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf87, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf88 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf89 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf91 = empty((54, ), device='cpu', dtype=torch.float32)
    buf92 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_12(c_void_p(buf87.data_ptr()), c_void_p(primals_64.data_ptr()), c_void_p(primals_65.data_ptr()), c_void_p(buf88.data_ptr()), c_void_p(buf89.data_ptr()), c_void_p(buf91.data_ptr()), c_void_p(buf92.data_ptr()))
    del primals_65
    # Source Nodes: [x_66], Original ATen: [aten.convolution]
    buf93 = extern_kernels.convolution(buf92, primals_66, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf93, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_68], Original ATen: [aten.convolution]
    buf94 = extern_kernels.convolution(buf93, primals_67, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf94, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf95 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf96 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf98 = empty((54, ), device='cpu', dtype=torch.float32)
    buf99 = empty_strided((8, 96, 167, 167), (2677344, 1, 16032, 96), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_13(c_void_p(buf94.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(buf95.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(buf98.data_ptr()), c_void_p(buf99.data_ptr()))
    # Source Nodes: [x_75], Original ATen: [aten.convolution]
    buf100 = extern_kernels.convolution(buf99, primals_7, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=96, bias=None)
    assert_size_stride(buf100, (8, 96, 83, 83), (661344, 1, 7968, 96))
    # Source Nodes: [x_77], Original ATen: [aten.convolution]
    buf101 = extern_kernels.convolution(buf100, primals_70, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf101, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf102 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf103 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf105 = empty((54, ), device='cpu', dtype=torch.float32)
    buf106 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_14(c_void_p(buf101.data_ptr()), c_void_p(primals_71.data_ptr()), c_void_p(primals_72.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(buf103.data_ptr()), c_void_p(buf105.data_ptr()), c_void_p(buf106.data_ptr()))
    del primals_72
    # Source Nodes: [x_80], Original ATen: [aten.convolution]
    buf107 = extern_kernels.convolution(buf106, primals_73, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf107, (8, 54, 83, 83), (372006, 1, 4482, 54))
    # Source Nodes: [x_82], Original ATen: [aten.convolution]
    buf108 = extern_kernels.convolution(buf107, primals_74, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf108, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf109 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf110 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf112 = empty((54, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_15(c_void_p(buf108.data_ptr()), c_void_p(buf109.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(buf112.data_ptr()))
    # Source Nodes: [x_87], Original ATen: [aten.convolution]
    buf113 = extern_kernels.convolution(buf38, primals_8, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf113, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf114 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf115 = empty_strided((1, 54, 1, 1), (54, 1, 54, 54), device='cpu', dtype=torch.float32)
    buf117 = empty((54, ), device='cpu', dtype=torch.float32)
    buf118 = reinterpret_tensor(buf121, (8, 54, 83, 83), (1860030, 6889, 83, 1), 1488024)  # alias
    buf119 = reinterpret_tensor(buf121, (8, 54, 83, 83), (1860030, 6889, 83, 1), 372006)  # alias
    buf120 = reinterpret_tensor(buf121, (8, 54, 83, 83), (1860030, 6889, 83, 1), 1116018)  # alias
    buf122 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_16(c_void_p(buf113.data_ptr()), c_void_p(buf108.data_ptr()), c_void_p(buf109.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(primals_75.data_ptr()), c_void_p(primals_76.data_ptr()), c_void_p(primals_77.data_ptr()), c_void_p(primals_78.data_ptr()), c_void_p(buf48.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(buf50.data_ptr()), c_void_p(primals_46.data_ptr()), c_void_p(primals_47.data_ptr()), c_void_p(buf54.data_ptr()), c_void_p(buf94.data_ptr()), c_void_p(buf95.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(primals_68.data_ptr()), c_void_p(primals_69.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(buf115.data_ptr()), c_void_p(buf117.data_ptr()), c_void_p(buf118.data_ptr()), c_void_p(buf119.data_ptr()), c_void_p(buf120.data_ptr()), c_void_p(buf122.data_ptr()))
    del buf118
    del buf119
    del buf120
    del buf37
    del buf54
    del buf84
    del primals_47
    del primals_69
    del primals_76
    del primals_78
    # Source Nodes: [x_path1], Original ATen: [aten.convolution]
    buf123 = extern_kernels.convolution(buf122, primals_79, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf123, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf124 = buf7; del buf7  # reuse
    buf125 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_constant_pad_nd_17(c_void_p(buf8.data_ptr()), c_void_p(buf124.data_ptr()), c_void_p(buf125.data_ptr()))
    # Source Nodes: [x_path2], Original ATen: [aten.convolution]
    buf126 = extern_kernels.convolution(buf125, primals_80, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf126, (8, 54, 83, 83), (372006, 1, 4482, 54))
    buf127 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.float32)
    buf128 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf129 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf131 = empty((108, ), device='cpu', dtype=torch.float32)
    buf132 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.float32)
    buf133 = empty_strided((8, 270, 83, 83), (1860030, 1, 22410, 270), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_18(c_void_p(buf123.data_ptr()), c_void_p(buf126.data_ptr()), c_void_p(primals_81.data_ptr()), c_void_p(primals_82.data_ptr()), c_void_p(buf121.data_ptr()), c_void_p(buf127.data_ptr()), c_void_p(buf128.data_ptr()), c_void_p(buf129.data_ptr()), c_void_p(buf131.data_ptr()), c_void_p(buf132.data_ptr()), c_void_p(buf133.data_ptr()))
    del buf123
    del buf126
    del primals_82
    # Source Nodes: [x_91], Original ATen: [aten.convolution]
    buf134 = extern_kernels.convolution(buf133, primals_83, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf134, (8, 108, 83, 83), (744012, 1, 8964, 108))
    buf135 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf136 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf138 = empty((108, ), device='cpu', dtype=torch.float32)
    buf139 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.float32)
    buf140 = empty_strided((8, 108, 87, 87), (817452, 1, 9396, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_relu_19(c_void_p(buf134.data_ptr()), c_void_p(primals_84.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(buf132.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(buf136.data_ptr()), c_void_p(buf138.data_ptr()), c_void_p(buf139.data_ptr()), c_void_p(buf140.data_ptr()))
    del primals_85
    # Source Nodes: [x_96], Original ATen: [aten.convolution]
    buf141 = extern_kernels.convolution(buf140, primals_9, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf141, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_98], Original ATen: [aten.convolution]
    buf142 = extern_kernels.convolution(buf141, primals_86, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf142, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf143 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf144 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf146 = empty((108, ), device='cpu', dtype=torch.float32)
    buf147 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_20(c_void_p(buf142.data_ptr()), c_void_p(primals_87.data_ptr()), c_void_p(primals_88.data_ptr()), c_void_p(buf143.data_ptr()), c_void_p(buf144.data_ptr()), c_void_p(buf146.data_ptr()), c_void_p(buf147.data_ptr()))
    del primals_88
    # Source Nodes: [x_101], Original ATen: [aten.convolution]
    buf148 = extern_kernels.convolution(buf147, primals_89, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf148, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_103], Original ATen: [aten.convolution]
    buf149 = extern_kernels.convolution(buf148, primals_90, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf149, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf150 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf151 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf153 = empty((108, ), device='cpu', dtype=torch.float32)
    buf154 = empty_strided((8, 108, 85, 85), (780300, 1, 9180, 108), device='cpu', dtype=torch.float32)
    buf218 = empty_strided((8, 108, 85, 85), (780300, 1, 9180, 108), device='cpu', dtype=torch.float32)
    buf155 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    buf156 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.int64)
    buf157 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.float32)
    buf1535 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.bool)
    buf158 = empty_strided((8, 108, 89, 89), (855468, 1, 9612, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_relu_threshold_backward_21(c_void_p(buf149.data_ptr()), c_void_p(buf132.data_ptr()), c_void_p(buf139.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(buf151.data_ptr()), c_void_p(buf153.data_ptr()), c_void_p(buf154.data_ptr()), c_void_p(buf218.data_ptr()), c_void_p(buf155.data_ptr()), c_void_p(buf156.data_ptr()), c_void_p(buf157.data_ptr()), c_void_p(buf1535.data_ptr()), c_void_p(buf158.data_ptr()))
    # Source Nodes: [x_110], Original ATen: [aten.convolution]
    buf159 = extern_kernels.convolution(buf158, primals_10, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf159, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_112], Original ATen: [aten.convolution]
    buf160 = extern_kernels.convolution(buf159, primals_93, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf160, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf161 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf162 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf164 = empty((108, ), device='cpu', dtype=torch.float32)
    buf165 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_22(c_void_p(buf160.data_ptr()), c_void_p(primals_94.data_ptr()), c_void_p(primals_95.data_ptr()), c_void_p(buf161.data_ptr()), c_void_p(buf162.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(buf165.data_ptr()))
    del primals_95
    # Source Nodes: [x_115], Original ATen: [aten.convolution]
    buf166 = extern_kernels.convolution(buf165, primals_96, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf166, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_117], Original ATen: [aten.convolution]
    buf167 = extern_kernels.convolution(buf166, primals_97, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf167, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf168 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf169 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf171 = empty((108, ), device='cpu', dtype=torch.float32)
    buf172 = empty_strided((8, 108, 85, 85), (780300, 1, 9180, 108), device='cpu', dtype=torch.float32)
    buf173 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    buf174 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.int64)
    buf175 = empty_strided((8, 108, 87, 87), (817452, 1, 9396, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_23(c_void_p(buf167.data_ptr()), c_void_p(buf139.data_ptr()), c_void_p(buf157.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(buf169.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(buf172.data_ptr()), c_void_p(buf173.data_ptr()), c_void_p(buf174.data_ptr()), c_void_p(buf175.data_ptr()))
    del buf139
    # Source Nodes: [x_124], Original ATen: [aten.convolution]
    buf176 = extern_kernels.convolution(buf175, primals_11, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf176, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_126], Original ATen: [aten.convolution]
    buf177 = extern_kernels.convolution(buf176, primals_100, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf177, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf178 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf179 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf181 = empty((108, ), device='cpu', dtype=torch.float32)
    buf182 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_24(c_void_p(buf177.data_ptr()), c_void_p(primals_101.data_ptr()), c_void_p(primals_102.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(buf179.data_ptr()), c_void_p(buf181.data_ptr()), c_void_p(buf182.data_ptr()))
    del primals_102
    # Source Nodes: [x_129], Original ATen: [aten.convolution]
    buf183 = extern_kernels.convolution(buf182, primals_103, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf183, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_131], Original ATen: [aten.convolution]
    buf184 = extern_kernels.convolution(buf183, primals_104, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf184, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf185 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf186 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf188 = empty((108, ), device='cpu', dtype=torch.float32)
    buf189 = empty_strided((8, 108, 85, 85), (780300, 1, 9180, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_25(c_void_p(buf184.data_ptr()), c_void_p(buf157.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(buf186.data_ptr()), c_void_p(buf188.data_ptr()), c_void_p(buf189.data_ptr()))
    # Source Nodes: [x_136], Original ATen: [aten.convolution]
    buf190 = extern_kernels.convolution(buf189, primals_12, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf190, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_138], Original ATen: [aten.convolution]
    buf191 = extern_kernels.convolution(buf190, primals_107, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf191, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf192 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf193 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf195 = empty((108, ), device='cpu', dtype=torch.float32)
    buf196 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_26(c_void_p(buf191.data_ptr()), c_void_p(primals_108.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(buf192.data_ptr()), c_void_p(buf193.data_ptr()), c_void_p(buf195.data_ptr()), c_void_p(buf196.data_ptr()))
    del primals_109
    # Source Nodes: [x_141], Original ATen: [aten.convolution]
    buf197 = extern_kernels.convolution(buf196, primals_110, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf197, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_143], Original ATen: [aten.convolution]
    buf198 = extern_kernels.convolution(buf197, primals_111, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf198, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf199 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf200 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf202 = empty((108, ), device='cpu', dtype=torch.float32)
    buf241 = empty((8, 540, 42, 42), device='cpu', dtype=torch.float32)
    buf203 = reinterpret_tensor(buf241, (8, 108, 42, 42), (952560, 1764, 42, 1), 381024)  # alias
    buf204 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_27(c_void_p(buf198.data_ptr()), c_void_p(buf184.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(buf186.data_ptr()), c_void_p(primals_105.data_ptr()), c_void_p(primals_106.data_ptr()), c_void_p(primals_112.data_ptr()), c_void_p(primals_113.data_ptr()), c_void_p(buf199.data_ptr()), c_void_p(buf200.data_ptr()), c_void_p(buf202.data_ptr()), c_void_p(buf203.data_ptr()), c_void_p(buf204.data_ptr()))
    del primals_106
    del primals_113
    # Source Nodes: [x_146], Original ATen: [aten.convolution]
    buf205 = extern_kernels.convolution(buf204, primals_114, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf205, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_148], Original ATen: [aten.convolution]
    buf206 = extern_kernels.convolution(buf205, primals_115, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf206, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf207 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf208 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf210 = empty((108, ), device='cpu', dtype=torch.float32)
    buf211 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_28(c_void_p(buf206.data_ptr()), c_void_p(primals_116.data_ptr()), c_void_p(primals_117.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(buf208.data_ptr()), c_void_p(buf210.data_ptr()), c_void_p(buf211.data_ptr()))
    del primals_117
    # Source Nodes: [x_151], Original ATen: [aten.convolution]
    buf212 = extern_kernels.convolution(buf211, primals_118, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf212, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_153], Original ATen: [aten.convolution]
    buf213 = extern_kernels.convolution(buf212, primals_119, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf213, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf214 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf215 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf217 = empty((108, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_29(c_void_p(buf213.data_ptr()), c_void_p(buf214.data_ptr()), c_void_p(buf215.data_ptr()), c_void_p(buf217.data_ptr()))
    # Source Nodes: [x_160], Original ATen: [aten.convolution]
    buf219 = extern_kernels.convolution(buf218, primals_13, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf219, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_162], Original ATen: [aten.convolution]
    buf220 = extern_kernels.convolution(buf219, primals_122, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf220, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf221 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf222 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf224 = empty((108, ), device='cpu', dtype=torch.float32)
    buf225 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_30(c_void_p(buf220.data_ptr()), c_void_p(primals_123.data_ptr()), c_void_p(primals_124.data_ptr()), c_void_p(buf221.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(buf224.data_ptr()), c_void_p(buf225.data_ptr()))
    del primals_124
    # Source Nodes: [x_165], Original ATen: [aten.convolution]
    buf226 = extern_kernels.convolution(buf225, primals_125, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf226, (8, 108, 42, 42), (190512, 1, 4536, 108))
    # Source Nodes: [x_167], Original ATen: [aten.convolution]
    buf227 = extern_kernels.convolution(buf226, primals_126, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf227, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf228 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf229 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf231 = empty((108, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_31(c_void_p(buf227.data_ptr()), c_void_p(buf228.data_ptr()), c_void_p(buf229.data_ptr()), c_void_p(buf231.data_ptr()))
    # Source Nodes: [x_172], Original ATen: [aten.convolution]
    buf232 = extern_kernels.convolution(buf157, primals_14, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf232, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf233 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf234 = empty_strided((1, 108, 1, 1), (108, 1, 108, 108), device='cpu', dtype=torch.float32)
    buf236 = empty((108, ), device='cpu', dtype=torch.float32)
    buf237 = reinterpret_tensor(buf241, (8, 108, 42, 42), (952560, 1764, 42, 1), 762048)  # alias
    buf238 = reinterpret_tensor(buf241, (8, 108, 42, 42), (952560, 1764, 42, 1), 0)  # alias
    buf239 = reinterpret_tensor(buf241, (8, 108, 42, 42), (952560, 1764, 42, 1), 190512)  # alias
    buf240 = reinterpret_tensor(buf241, (8, 108, 42, 42), (952560, 1764, 42, 1), 571536)  # alias
    buf242 = empty_strided((8, 270, 42, 42), (476280, 1, 11340, 270), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_32(c_void_p(buf232.data_ptr()), c_void_p(buf227.data_ptr()), c_void_p(buf228.data_ptr()), c_void_p(buf229.data_ptr()), c_void_p(primals_127.data_ptr()), c_void_p(primals_128.data_ptr()), c_void_p(primals_129.data_ptr()), c_void_p(primals_130.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(buf151.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(primals_92.data_ptr()), c_void_p(buf155.data_ptr()), c_void_p(buf167.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(buf169.data_ptr()), c_void_p(primals_98.data_ptr()), c_void_p(primals_99.data_ptr()), c_void_p(buf173.data_ptr()), c_void_p(buf213.data_ptr()), c_void_p(buf214.data_ptr()), c_void_p(buf215.data_ptr()), c_void_p(primals_120.data_ptr()), c_void_p(primals_121.data_ptr()), c_void_p(buf133.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(buf234.data_ptr()), c_void_p(buf236.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(buf238.data_ptr()), c_void_p(buf239.data_ptr()), c_void_p(buf240.data_ptr()), c_void_p(buf242.data_ptr()))
    del buf203
    del buf237
    del buf238
    del buf239
    del buf240
    del primals_121
    del primals_128
    del primals_130
    del primals_92
    del primals_99
    # Source Nodes: [x_path1_1], Original ATen: [aten.convolution]
    buf243 = extern_kernels.convolution(buf242, primals_131, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf243, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf244 = reinterpret_tensor(buf121, (8, 270, 83, 83), (1860030, 1, 22410, 270), 0); del buf121  # reuse
    buf245 = empty_strided((8, 270, 42, 42), (476280, 1, 11340, 270), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_constant_pad_nd_33(c_void_p(buf133.data_ptr()), c_void_p(buf244.data_ptr()), c_void_p(buf245.data_ptr()))
    # Source Nodes: [x_path2_1], Original ATen: [aten.convolution]
    buf246 = extern_kernels.convolution(buf245, primals_132, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf246, (8, 108, 42, 42), (190512, 1, 4536, 108))
    buf247 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf248 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf249 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf251 = empty((216, ), device='cpu', dtype=torch.float32)
    buf252 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf253 = empty_strided((8, 540, 42, 42), (952560, 1, 22680, 540), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_34(c_void_p(buf243.data_ptr()), c_void_p(buf246.data_ptr()), c_void_p(primals_133.data_ptr()), c_void_p(primals_134.data_ptr()), c_void_p(buf241.data_ptr()), c_void_p(buf247.data_ptr()), c_void_p(buf248.data_ptr()), c_void_p(buf249.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(buf252.data_ptr()), c_void_p(buf253.data_ptr()))
    del primals_134
    # Source Nodes: [x_176], Original ATen: [aten.convolution]
    buf254 = extern_kernels.convolution(buf253, primals_135, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf254, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf255 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf256 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf258 = empty((216, ), device='cpu', dtype=torch.float32)
    buf259 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf260 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_35(c_void_p(buf254.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(primals_137.data_ptr()), c_void_p(buf252.data_ptr()), c_void_p(buf255.data_ptr()), c_void_p(buf256.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(buf259.data_ptr()), c_void_p(buf260.data_ptr()))
    del primals_137
    # Source Nodes: [x_179], Original ATen: [aten.convolution]
    buf261 = extern_kernels.convolution(buf260, primals_138, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf261, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_181], Original ATen: [aten.convolution]
    buf262 = extern_kernels.convolution(buf261, primals_139, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf262, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf263 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf264 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf266 = empty((216, ), device='cpu', dtype=torch.float32)
    buf267 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_36(c_void_p(buf262.data_ptr()), c_void_p(primals_140.data_ptr()), c_void_p(primals_141.data_ptr()), c_void_p(buf263.data_ptr()), c_void_p(buf264.data_ptr()), c_void_p(buf266.data_ptr()), c_void_p(buf267.data_ptr()))
    del primals_141
    # Source Nodes: [x_184], Original ATen: [aten.convolution]
    buf268 = extern_kernels.convolution(buf267, primals_142, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf268, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_186], Original ATen: [aten.convolution]
    buf269 = extern_kernels.convolution(buf268, primals_143, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf269, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf270 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf271 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf273 = empty((216, ), device='cpu', dtype=torch.float32)
    buf274 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf275 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    buf276 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_37(c_void_p(buf269.data_ptr()), c_void_p(buf252.data_ptr()), c_void_p(buf259.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(buf273.data_ptr()), c_void_p(buf274.data_ptr()), c_void_p(buf275.data_ptr()), c_void_p(buf276.data_ptr()))
    # Source Nodes: [x_189], Original ATen: [aten.convolution]
    buf277 = extern_kernels.convolution(buf276, primals_146, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf277, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_191], Original ATen: [aten.convolution]
    buf278 = extern_kernels.convolution(buf277, primals_147, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf278, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf279 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf280 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf282 = empty((216, ), device='cpu', dtype=torch.float32)
    buf283 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_38(c_void_p(buf278.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(primals_149.data_ptr()), c_void_p(buf279.data_ptr()), c_void_p(buf280.data_ptr()), c_void_p(buf282.data_ptr()), c_void_p(buf283.data_ptr()))
    del primals_149
    # Source Nodes: [x_194], Original ATen: [aten.convolution]
    buf284 = extern_kernels.convolution(buf283, primals_150, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf284, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_196], Original ATen: [aten.convolution]
    buf285 = extern_kernels.convolution(buf284, primals_151, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf285, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf286 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf287 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf289 = empty((216, ), device='cpu', dtype=torch.float32)
    buf290 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf291 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_39(c_void_p(buf285.data_ptr()), c_void_p(buf259.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(buf287.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(buf290.data_ptr()), c_void_p(buf291.data_ptr()))
    # Source Nodes: [x_199], Original ATen: [aten.convolution]
    buf292 = extern_kernels.convolution(buf276, primals_154, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf292, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_201], Original ATen: [aten.convolution]
    buf293 = extern_kernels.convolution(buf292, primals_155, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf293, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf294 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf295 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf297 = empty((216, ), device='cpu', dtype=torch.float32)
    buf298 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_40(c_void_p(buf293.data_ptr()), c_void_p(primals_156.data_ptr()), c_void_p(primals_157.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(buf295.data_ptr()), c_void_p(buf297.data_ptr()), c_void_p(buf298.data_ptr()))
    del primals_157
    # Source Nodes: [x_204], Original ATen: [aten.convolution]
    buf299 = extern_kernels.convolution(buf298, primals_158, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf299, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_206], Original ATen: [aten.convolution]
    buf300 = extern_kernels.convolution(buf299, primals_159, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf300, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf301 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf302 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf304 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_41(c_void_p(buf300.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(buf302.data_ptr()), c_void_p(buf304.data_ptr()))
    # Source Nodes: [x_209], Original ATen: [aten.convolution]
    buf305 = extern_kernels.convolution(buf276, primals_162, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf305, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_211], Original ATen: [aten.convolution]
    buf306 = extern_kernels.convolution(buf305, primals_163, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf306, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf307 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf308 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf310 = empty((216, ), device='cpu', dtype=torch.float32)
    buf311 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_42(c_void_p(buf306.data_ptr()), c_void_p(primals_164.data_ptr()), c_void_p(primals_165.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(buf308.data_ptr()), c_void_p(buf310.data_ptr()), c_void_p(buf311.data_ptr()))
    del primals_165
    # Source Nodes: [x_214], Original ATen: [aten.convolution]
    buf312 = extern_kernels.convolution(buf311, primals_166, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf312, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_216], Original ATen: [aten.convolution]
    buf313 = extern_kernels.convolution(buf312, primals_167, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf313, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf314 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf315 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf317 = empty((216, ), device='cpu', dtype=torch.float32)
    buf350 = empty((8, 1080, 42, 42), device='cpu', dtype=torch.float32)
    buf318 = reinterpret_tensor(buf350, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf319 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_43(c_void_p(buf313.data_ptr()), c_void_p(buf300.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(buf302.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(primals_161.data_ptr()), c_void_p(primals_168.data_ptr()), c_void_p(primals_169.data_ptr()), c_void_p(buf314.data_ptr()), c_void_p(buf315.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(buf318.data_ptr()), c_void_p(buf319.data_ptr()))
    del primals_161
    del primals_169
    # Source Nodes: [x_219], Original ATen: [aten.convolution]
    buf320 = extern_kernels.convolution(buf319, primals_170, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf320, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_221], Original ATen: [aten.convolution]
    buf321 = extern_kernels.convolution(buf320, primals_171, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf321, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf322 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf323 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf325 = empty((216, ), device='cpu', dtype=torch.float32)
    buf326 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_44(c_void_p(buf321.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(primals_173.data_ptr()), c_void_p(buf322.data_ptr()), c_void_p(buf323.data_ptr()), c_void_p(buf325.data_ptr()), c_void_p(buf326.data_ptr()))
    del primals_173
    # Source Nodes: [x_224], Original ATen: [aten.convolution]
    buf327 = extern_kernels.convolution(buf326, primals_174, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf327, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_226], Original ATen: [aten.convolution]
    buf328 = extern_kernels.convolution(buf327, primals_175, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf328, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf329 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf330 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf332 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_45(c_void_p(buf328.data_ptr()), c_void_p(buf329.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(buf332.data_ptr()))
    # Source Nodes: [x_229], Original ATen: [aten.convolution]
    buf333 = extern_kernels.convolution(buf260, primals_178, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf333, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_231], Original ATen: [aten.convolution]
    buf334 = extern_kernels.convolution(buf333, primals_179, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf334, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf335 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf336 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf338 = empty((216, ), device='cpu', dtype=torch.float32)
    buf339 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_46(c_void_p(buf334.data_ptr()), c_void_p(primals_180.data_ptr()), c_void_p(primals_181.data_ptr()), c_void_p(buf335.data_ptr()), c_void_p(buf336.data_ptr()), c_void_p(buf338.data_ptr()), c_void_p(buf339.data_ptr()))
    del primals_181
    # Source Nodes: [x_234], Original ATen: [aten.convolution]
    buf340 = extern_kernels.convolution(buf339, primals_182, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf340, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_236], Original ATen: [aten.convolution]
    buf341 = extern_kernels.convolution(buf340, primals_183, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf341, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf342 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf343 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf345 = empty((216, ), device='cpu', dtype=torch.float32)
    buf346 = reinterpret_tensor(buf350, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf347 = reinterpret_tensor(buf350, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf348 = reinterpret_tensor(buf350, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf349 = reinterpret_tensor(buf350, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_47(c_void_p(buf341.data_ptr()), c_void_p(buf269.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(primals_144.data_ptr()), c_void_p(primals_145.data_ptr()), c_void_p(buf274.data_ptr()), c_void_p(buf285.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(buf287.data_ptr()), c_void_p(primals_152.data_ptr()), c_void_p(primals_153.data_ptr()), c_void_p(buf290.data_ptr()), c_void_p(buf328.data_ptr()), c_void_p(buf329.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(primals_176.data_ptr()), c_void_p(primals_177.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(primals_185.data_ptr()), c_void_p(buf259.data_ptr()), c_void_p(buf342.data_ptr()), c_void_p(buf343.data_ptr()), c_void_p(buf345.data_ptr()), c_void_p(buf346.data_ptr()), c_void_p(buf347.data_ptr()), c_void_p(buf348.data_ptr()), c_void_p(buf349.data_ptr()))
    del buf318
    del buf346
    del buf347
    del buf348
    del buf349
    del primals_145
    del primals_153
    del primals_177
    del primals_185
    # Source Nodes: [x_239], Original ATen: [aten.convolution]
    buf351 = extern_kernels.convolution(buf253, primals_186, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf351, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf352 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf353 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf355 = empty((216, ), device='cpu', dtype=torch.float32)
    buf356 = buf290; del buf290  # reuse
    buf357 = empty_strided((8, 1080, 42, 42), (1905120, 1, 45360, 1080), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_48(c_void_p(buf351.data_ptr()), c_void_p(primals_187.data_ptr()), c_void_p(primals_188.data_ptr()), c_void_p(buf350.data_ptr()), c_void_p(buf352.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(buf355.data_ptr()), c_void_p(buf356.data_ptr()), c_void_p(buf357.data_ptr()))
    del primals_188
    # Source Nodes: [x_242], Original ATen: [aten.convolution]
    buf358 = extern_kernels.convolution(buf357, primals_189, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf358, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf359 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf360 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf362 = empty((216, ), device='cpu', dtype=torch.float32)
    buf363 = buf274; del buf274  # reuse
    buf364 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_49(c_void_p(buf358.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(primals_191.data_ptr()), c_void_p(buf356.data_ptr()), c_void_p(buf359.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(buf362.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf364.data_ptr()))
    del primals_191
    # Source Nodes: [x_245], Original ATen: [aten.convolution]
    buf365 = extern_kernels.convolution(buf364, primals_192, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf365, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_247], Original ATen: [aten.convolution]
    buf366 = extern_kernels.convolution(buf365, primals_193, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf366, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf367 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf368 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf370 = empty((216, ), device='cpu', dtype=torch.float32)
    buf371 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_50(c_void_p(buf366.data_ptr()), c_void_p(primals_194.data_ptr()), c_void_p(primals_195.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(buf368.data_ptr()), c_void_p(buf370.data_ptr()), c_void_p(buf371.data_ptr()))
    del primals_195
    # Source Nodes: [x_250], Original ATen: [aten.convolution]
    buf372 = extern_kernels.convolution(buf371, primals_196, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf372, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_252], Original ATen: [aten.convolution]
    buf373 = extern_kernels.convolution(buf372, primals_197, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf373, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf374 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf375 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf377 = empty((216, ), device='cpu', dtype=torch.float32)
    buf378 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf379 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    buf380 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_51(c_void_p(buf373.data_ptr()), c_void_p(buf356.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf374.data_ptr()), c_void_p(buf375.data_ptr()), c_void_p(buf377.data_ptr()), c_void_p(buf378.data_ptr()), c_void_p(buf379.data_ptr()), c_void_p(buf380.data_ptr()))
    # Source Nodes: [x_255], Original ATen: [aten.convolution]
    buf381 = extern_kernels.convolution(buf380, primals_200, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf381, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_257], Original ATen: [aten.convolution]
    buf382 = extern_kernels.convolution(buf381, primals_201, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf382, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf383 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf384 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf386 = empty((216, ), device='cpu', dtype=torch.float32)
    buf387 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_52(c_void_p(buf382.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(primals_203.data_ptr()), c_void_p(buf383.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf386.data_ptr()), c_void_p(buf387.data_ptr()))
    del primals_203
    # Source Nodes: [x_260], Original ATen: [aten.convolution]
    buf388 = extern_kernels.convolution(buf387, primals_204, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf388, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_262], Original ATen: [aten.convolution]
    buf389 = extern_kernels.convolution(buf388, primals_205, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf389, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf390 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf391 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf393 = empty((216, ), device='cpu', dtype=torch.float32)
    buf394 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf395 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_53(c_void_p(buf389.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf390.data_ptr()), c_void_p(buf391.data_ptr()), c_void_p(buf393.data_ptr()), c_void_p(buf394.data_ptr()), c_void_p(buf395.data_ptr()))
    # Source Nodes: [x_265], Original ATen: [aten.convolution]
    buf396 = extern_kernels.convolution(buf380, primals_208, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf396, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_267], Original ATen: [aten.convolution]
    buf397 = extern_kernels.convolution(buf396, primals_209, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf397, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf398 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf399 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf401 = empty((216, ), device='cpu', dtype=torch.float32)
    buf402 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_54(c_void_p(buf397.data_ptr()), c_void_p(primals_210.data_ptr()), c_void_p(primals_211.data_ptr()), c_void_p(buf398.data_ptr()), c_void_p(buf399.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(buf402.data_ptr()))
    del primals_211
    # Source Nodes: [x_270], Original ATen: [aten.convolution]
    buf403 = extern_kernels.convolution(buf402, primals_212, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf403, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_272], Original ATen: [aten.convolution]
    buf404 = extern_kernels.convolution(buf403, primals_213, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf404, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf405 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf406 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf408 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_55(c_void_p(buf404.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(buf406.data_ptr()), c_void_p(buf408.data_ptr()))
    # Source Nodes: [x_275], Original ATen: [aten.convolution]
    buf409 = extern_kernels.convolution(buf380, primals_216, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf409, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_277], Original ATen: [aten.convolution]
    buf410 = extern_kernels.convolution(buf409, primals_217, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf410, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf411 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf412 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf414 = empty((216, ), device='cpu', dtype=torch.float32)
    buf415 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_56(c_void_p(buf410.data_ptr()), c_void_p(primals_218.data_ptr()), c_void_p(primals_219.data_ptr()), c_void_p(buf411.data_ptr()), c_void_p(buf412.data_ptr()), c_void_p(buf414.data_ptr()), c_void_p(buf415.data_ptr()))
    del primals_219
    # Source Nodes: [x_280], Original ATen: [aten.convolution]
    buf416 = extern_kernels.convolution(buf415, primals_220, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf416, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_282], Original ATen: [aten.convolution]
    buf417 = extern_kernels.convolution(buf416, primals_221, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf417, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf418 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf419 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf421 = empty((216, ), device='cpu', dtype=torch.float32)
    buf454 = buf350; del buf350  # reuse
    buf422 = reinterpret_tensor(buf454, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf423 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_57(c_void_p(buf417.data_ptr()), c_void_p(buf404.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(buf406.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(primals_215.data_ptr()), c_void_p(primals_222.data_ptr()), c_void_p(primals_223.data_ptr()), c_void_p(buf418.data_ptr()), c_void_p(buf419.data_ptr()), c_void_p(buf421.data_ptr()), c_void_p(buf422.data_ptr()), c_void_p(buf423.data_ptr()))
    del primals_215
    del primals_223
    # Source Nodes: [x_285], Original ATen: [aten.convolution]
    buf424 = extern_kernels.convolution(buf423, primals_224, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf424, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_287], Original ATen: [aten.convolution]
    buf425 = extern_kernels.convolution(buf424, primals_225, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf425, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf426 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf427 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf429 = empty((216, ), device='cpu', dtype=torch.float32)
    buf430 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_58(c_void_p(buf425.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(primals_227.data_ptr()), c_void_p(buf426.data_ptr()), c_void_p(buf427.data_ptr()), c_void_p(buf429.data_ptr()), c_void_p(buf430.data_ptr()))
    del primals_227
    # Source Nodes: [x_290], Original ATen: [aten.convolution]
    buf431 = extern_kernels.convolution(buf430, primals_228, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf431, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_292], Original ATen: [aten.convolution]
    buf432 = extern_kernels.convolution(buf431, primals_229, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf432, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf433 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf434 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf436 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_59(c_void_p(buf432.data_ptr()), c_void_p(buf433.data_ptr()), c_void_p(buf434.data_ptr()), c_void_p(buf436.data_ptr()))
    # Source Nodes: [x_295], Original ATen: [aten.convolution]
    buf437 = extern_kernels.convolution(buf364, primals_232, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf437, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_297], Original ATen: [aten.convolution]
    buf438 = extern_kernels.convolution(buf437, primals_233, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf438, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf439 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf440 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf442 = empty((216, ), device='cpu', dtype=torch.float32)
    buf443 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_60(c_void_p(buf438.data_ptr()), c_void_p(primals_234.data_ptr()), c_void_p(primals_235.data_ptr()), c_void_p(buf439.data_ptr()), c_void_p(buf440.data_ptr()), c_void_p(buf442.data_ptr()), c_void_p(buf443.data_ptr()))
    del primals_235
    # Source Nodes: [x_300], Original ATen: [aten.convolution]
    buf444 = extern_kernels.convolution(buf443, primals_236, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf444, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_302], Original ATen: [aten.convolution]
    buf445 = extern_kernels.convolution(buf444, primals_237, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf445, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf446 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf447 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf449 = empty((216, ), device='cpu', dtype=torch.float32)
    buf450 = reinterpret_tensor(buf454, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf451 = reinterpret_tensor(buf454, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf452 = reinterpret_tensor(buf454, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf453 = reinterpret_tensor(buf454, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_61(c_void_p(buf445.data_ptr()), c_void_p(buf373.data_ptr()), c_void_p(buf374.data_ptr()), c_void_p(buf375.data_ptr()), c_void_p(primals_198.data_ptr()), c_void_p(primals_199.data_ptr()), c_void_p(buf378.data_ptr()), c_void_p(buf389.data_ptr()), c_void_p(buf390.data_ptr()), c_void_p(buf391.data_ptr()), c_void_p(primals_206.data_ptr()), c_void_p(primals_207.data_ptr()), c_void_p(buf394.data_ptr()), c_void_p(buf432.data_ptr()), c_void_p(buf433.data_ptr()), c_void_p(buf434.data_ptr()), c_void_p(primals_230.data_ptr()), c_void_p(primals_231.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(primals_239.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(buf449.data_ptr()), c_void_p(buf450.data_ptr()), c_void_p(buf451.data_ptr()), c_void_p(buf452.data_ptr()), c_void_p(buf453.data_ptr()))
    del buf422
    del buf450
    del buf451
    del buf452
    del buf453
    del primals_199
    del primals_207
    del primals_231
    del primals_239
    # Source Nodes: [x_305], Original ATen: [aten.convolution]
    buf455 = extern_kernels.convolution(buf357, primals_240, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf455, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf456 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf457 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf459 = empty((216, ), device='cpu', dtype=torch.float32)
    buf460 = buf394; del buf394  # reuse
    buf461 = empty_strided((8, 1080, 42, 42), (1905120, 1, 45360, 1080), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_62(c_void_p(buf455.data_ptr()), c_void_p(primals_241.data_ptr()), c_void_p(primals_242.data_ptr()), c_void_p(buf454.data_ptr()), c_void_p(buf456.data_ptr()), c_void_p(buf457.data_ptr()), c_void_p(buf459.data_ptr()), c_void_p(buf460.data_ptr()), c_void_p(buf461.data_ptr()))
    del primals_242
    # Source Nodes: [x_308], Original ATen: [aten.convolution]
    buf462 = extern_kernels.convolution(buf461, primals_243, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf462, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf463 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf464 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf466 = empty((216, ), device='cpu', dtype=torch.float32)
    buf467 = buf378; del buf378  # reuse
    buf468 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_63(c_void_p(buf462.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(primals_245.data_ptr()), c_void_p(buf460.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf464.data_ptr()), c_void_p(buf466.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(buf468.data_ptr()))
    del primals_245
    # Source Nodes: [x_311], Original ATen: [aten.convolution]
    buf469 = extern_kernels.convolution(buf468, primals_246, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf469, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_313], Original ATen: [aten.convolution]
    buf470 = extern_kernels.convolution(buf469, primals_247, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf470, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf471 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf472 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf474 = empty((216, ), device='cpu', dtype=torch.float32)
    buf475 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_64(c_void_p(buf470.data_ptr()), c_void_p(primals_248.data_ptr()), c_void_p(primals_249.data_ptr()), c_void_p(buf471.data_ptr()), c_void_p(buf472.data_ptr()), c_void_p(buf474.data_ptr()), c_void_p(buf475.data_ptr()))
    del primals_249
    # Source Nodes: [x_316], Original ATen: [aten.convolution]
    buf476 = extern_kernels.convolution(buf475, primals_250, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf476, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_318], Original ATen: [aten.convolution]
    buf477 = extern_kernels.convolution(buf476, primals_251, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf477, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf478 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf479 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf481 = empty((216, ), device='cpu', dtype=torch.float32)
    buf482 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf483 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    buf484 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_65(c_void_p(buf477.data_ptr()), c_void_p(buf460.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(buf479.data_ptr()), c_void_p(buf481.data_ptr()), c_void_p(buf482.data_ptr()), c_void_p(buf483.data_ptr()), c_void_p(buf484.data_ptr()))
    # Source Nodes: [x_321], Original ATen: [aten.convolution]
    buf485 = extern_kernels.convolution(buf484, primals_254, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf485, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_323], Original ATen: [aten.convolution]
    buf486 = extern_kernels.convolution(buf485, primals_255, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf486, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf487 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf488 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf490 = empty((216, ), device='cpu', dtype=torch.float32)
    buf491 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_66(c_void_p(buf486.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(primals_257.data_ptr()), c_void_p(buf487.data_ptr()), c_void_p(buf488.data_ptr()), c_void_p(buf490.data_ptr()), c_void_p(buf491.data_ptr()))
    del primals_257
    # Source Nodes: [x_326], Original ATen: [aten.convolution]
    buf492 = extern_kernels.convolution(buf491, primals_258, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf492, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_328], Original ATen: [aten.convolution]
    buf493 = extern_kernels.convolution(buf492, primals_259, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf493, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf494 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf495 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf497 = empty((216, ), device='cpu', dtype=torch.float32)
    buf498 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf499 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_67(c_void_p(buf493.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(buf494.data_ptr()), c_void_p(buf495.data_ptr()), c_void_p(buf497.data_ptr()), c_void_p(buf498.data_ptr()), c_void_p(buf499.data_ptr()))
    # Source Nodes: [x_331], Original ATen: [aten.convolution]
    buf500 = extern_kernels.convolution(buf484, primals_262, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf500, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_333], Original ATen: [aten.convolution]
    buf501 = extern_kernels.convolution(buf500, primals_263, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf501, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf502 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf503 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf505 = empty((216, ), device='cpu', dtype=torch.float32)
    buf506 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_68(c_void_p(buf501.data_ptr()), c_void_p(primals_264.data_ptr()), c_void_p(primals_265.data_ptr()), c_void_p(buf502.data_ptr()), c_void_p(buf503.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(buf506.data_ptr()))
    del primals_265
    # Source Nodes: [x_336], Original ATen: [aten.convolution]
    buf507 = extern_kernels.convolution(buf506, primals_266, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf507, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_338], Original ATen: [aten.convolution]
    buf508 = extern_kernels.convolution(buf507, primals_267, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf508, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf509 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf510 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf512 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_69(c_void_p(buf508.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(buf512.data_ptr()))
    # Source Nodes: [x_341], Original ATen: [aten.convolution]
    buf513 = extern_kernels.convolution(buf484, primals_270, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf513, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_343], Original ATen: [aten.convolution]
    buf514 = extern_kernels.convolution(buf513, primals_271, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf514, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf515 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf516 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf518 = empty((216, ), device='cpu', dtype=torch.float32)
    buf519 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_70(c_void_p(buf514.data_ptr()), c_void_p(primals_272.data_ptr()), c_void_p(primals_273.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(buf516.data_ptr()), c_void_p(buf518.data_ptr()), c_void_p(buf519.data_ptr()))
    del primals_273
    # Source Nodes: [x_346], Original ATen: [aten.convolution]
    buf520 = extern_kernels.convolution(buf519, primals_274, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf520, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_348], Original ATen: [aten.convolution]
    buf521 = extern_kernels.convolution(buf520, primals_275, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf521, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf522 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf523 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf525 = empty((216, ), device='cpu', dtype=torch.float32)
    buf558 = buf454; del buf454  # reuse
    buf526 = reinterpret_tensor(buf558, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf527 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_71(c_void_p(buf521.data_ptr()), c_void_p(buf508.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(primals_268.data_ptr()), c_void_p(primals_269.data_ptr()), c_void_p(primals_276.data_ptr()), c_void_p(primals_277.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(buf523.data_ptr()), c_void_p(buf525.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(buf527.data_ptr()))
    del primals_269
    del primals_277
    # Source Nodes: [x_351], Original ATen: [aten.convolution]
    buf528 = extern_kernels.convolution(buf527, primals_278, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf528, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_353], Original ATen: [aten.convolution]
    buf529 = extern_kernels.convolution(buf528, primals_279, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf529, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf530 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf531 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf533 = empty((216, ), device='cpu', dtype=torch.float32)
    buf534 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_72(c_void_p(buf529.data_ptr()), c_void_p(primals_280.data_ptr()), c_void_p(primals_281.data_ptr()), c_void_p(buf530.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(buf534.data_ptr()))
    del primals_281
    # Source Nodes: [x_356], Original ATen: [aten.convolution]
    buf535 = extern_kernels.convolution(buf534, primals_282, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf535, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_358], Original ATen: [aten.convolution]
    buf536 = extern_kernels.convolution(buf535, primals_283, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf536, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf537 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf538 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf540 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_73(c_void_p(buf536.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(buf538.data_ptr()), c_void_p(buf540.data_ptr()))
    # Source Nodes: [x_361], Original ATen: [aten.convolution]
    buf541 = extern_kernels.convolution(buf468, primals_286, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf541, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_363], Original ATen: [aten.convolution]
    buf542 = extern_kernels.convolution(buf541, primals_287, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf542, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf543 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf544 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf546 = empty((216, ), device='cpu', dtype=torch.float32)
    buf547 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_74(c_void_p(buf542.data_ptr()), c_void_p(primals_288.data_ptr()), c_void_p(primals_289.data_ptr()), c_void_p(buf543.data_ptr()), c_void_p(buf544.data_ptr()), c_void_p(buf546.data_ptr()), c_void_p(buf547.data_ptr()))
    del primals_289
    # Source Nodes: [x_366], Original ATen: [aten.convolution]
    buf548 = extern_kernels.convolution(buf547, primals_290, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf548, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_368], Original ATen: [aten.convolution]
    buf549 = extern_kernels.convolution(buf548, primals_291, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf549, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf550 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf551 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf553 = empty((216, ), device='cpu', dtype=torch.float32)
    buf554 = reinterpret_tensor(buf558, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf555 = reinterpret_tensor(buf558, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf556 = reinterpret_tensor(buf558, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf557 = reinterpret_tensor(buf558, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_75(c_void_p(buf549.data_ptr()), c_void_p(buf477.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(buf479.data_ptr()), c_void_p(primals_252.data_ptr()), c_void_p(primals_253.data_ptr()), c_void_p(buf482.data_ptr()), c_void_p(buf493.data_ptr()), c_void_p(buf494.data_ptr()), c_void_p(buf495.data_ptr()), c_void_p(primals_260.data_ptr()), c_void_p(primals_261.data_ptr()), c_void_p(buf498.data_ptr()), c_void_p(buf536.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(buf538.data_ptr()), c_void_p(primals_284.data_ptr()), c_void_p(primals_285.data_ptr()), c_void_p(primals_292.data_ptr()), c_void_p(primals_293.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(buf551.data_ptr()), c_void_p(buf553.data_ptr()), c_void_p(buf554.data_ptr()), c_void_p(buf555.data_ptr()), c_void_p(buf556.data_ptr()), c_void_p(buf557.data_ptr()))
    del buf526
    del buf554
    del buf555
    del buf556
    del buf557
    del primals_253
    del primals_261
    del primals_285
    del primals_293
    # Source Nodes: [x_371], Original ATen: [aten.convolution]
    buf559 = extern_kernels.convolution(buf461, primals_294, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf559, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf560 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf561 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf563 = empty((216, ), device='cpu', dtype=torch.float32)
    buf564 = buf498; del buf498  # reuse
    buf565 = empty_strided((8, 1080, 42, 42), (1905120, 1, 45360, 1080), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_76(c_void_p(buf559.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(primals_296.data_ptr()), c_void_p(buf558.data_ptr()), c_void_p(buf560.data_ptr()), c_void_p(buf561.data_ptr()), c_void_p(buf563.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(buf565.data_ptr()))
    del primals_296
    # Source Nodes: [x_374], Original ATen: [aten.convolution]
    buf566 = extern_kernels.convolution(buf565, primals_297, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf566, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf567 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf568 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf570 = empty((216, ), device='cpu', dtype=torch.float32)
    buf571 = buf482; del buf482  # reuse
    buf572 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_77(c_void_p(buf566.data_ptr()), c_void_p(primals_298.data_ptr()), c_void_p(primals_299.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(buf567.data_ptr()), c_void_p(buf568.data_ptr()), c_void_p(buf570.data_ptr()), c_void_p(buf571.data_ptr()), c_void_p(buf572.data_ptr()))
    del primals_299
    # Source Nodes: [x_377], Original ATen: [aten.convolution]
    buf573 = extern_kernels.convolution(buf572, primals_300, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf573, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_379], Original ATen: [aten.convolution]
    buf574 = extern_kernels.convolution(buf573, primals_301, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf574, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf575 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf576 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf578 = empty((216, ), device='cpu', dtype=torch.float32)
    buf579 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_78(c_void_p(buf574.data_ptr()), c_void_p(primals_302.data_ptr()), c_void_p(primals_303.data_ptr()), c_void_p(buf575.data_ptr()), c_void_p(buf576.data_ptr()), c_void_p(buf578.data_ptr()), c_void_p(buf579.data_ptr()))
    del primals_303
    # Source Nodes: [x_382], Original ATen: [aten.convolution]
    buf580 = extern_kernels.convolution(buf579, primals_304, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf580, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_384], Original ATen: [aten.convolution]
    buf581 = extern_kernels.convolution(buf580, primals_305, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf581, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf582 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf583 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf585 = empty((216, ), device='cpu', dtype=torch.float32)
    buf586 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf587 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    buf588 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_79(c_void_p(buf581.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(buf571.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(buf583.data_ptr()), c_void_p(buf585.data_ptr()), c_void_p(buf586.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(buf588.data_ptr()))
    # Source Nodes: [x_387], Original ATen: [aten.convolution]
    buf589 = extern_kernels.convolution(buf588, primals_308, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf589, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_389], Original ATen: [aten.convolution]
    buf590 = extern_kernels.convolution(buf589, primals_309, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf590, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf591 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf592 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf594 = empty((216, ), device='cpu', dtype=torch.float32)
    buf595 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_80(c_void_p(buf590.data_ptr()), c_void_p(primals_310.data_ptr()), c_void_p(primals_311.data_ptr()), c_void_p(buf591.data_ptr()), c_void_p(buf592.data_ptr()), c_void_p(buf594.data_ptr()), c_void_p(buf595.data_ptr()))
    del primals_311
    # Source Nodes: [x_392], Original ATen: [aten.convolution]
    buf596 = extern_kernels.convolution(buf595, primals_312, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf596, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_394], Original ATen: [aten.convolution]
    buf597 = extern_kernels.convolution(buf596, primals_313, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf597, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf598 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf599 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf601 = empty((216, ), device='cpu', dtype=torch.float32)
    buf602 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf603 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_81(c_void_p(buf597.data_ptr()), c_void_p(buf571.data_ptr()), c_void_p(buf598.data_ptr()), c_void_p(buf599.data_ptr()), c_void_p(buf601.data_ptr()), c_void_p(buf602.data_ptr()), c_void_p(buf603.data_ptr()))
    # Source Nodes: [x_397], Original ATen: [aten.convolution]
    buf604 = extern_kernels.convolution(buf588, primals_316, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf604, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_399], Original ATen: [aten.convolution]
    buf605 = extern_kernels.convolution(buf604, primals_317, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf605, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf606 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf607 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf609 = empty((216, ), device='cpu', dtype=torch.float32)
    buf610 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_82(c_void_p(buf605.data_ptr()), c_void_p(primals_318.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(buf606.data_ptr()), c_void_p(buf607.data_ptr()), c_void_p(buf609.data_ptr()), c_void_p(buf610.data_ptr()))
    del primals_319
    # Source Nodes: [x_402], Original ATen: [aten.convolution]
    buf611 = extern_kernels.convolution(buf610, primals_320, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf611, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_404], Original ATen: [aten.convolution]
    buf612 = extern_kernels.convolution(buf611, primals_321, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf612, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf613 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf614 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf616 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_83(c_void_p(buf612.data_ptr()), c_void_p(buf613.data_ptr()), c_void_p(buf614.data_ptr()), c_void_p(buf616.data_ptr()))
    # Source Nodes: [x_407], Original ATen: [aten.convolution]
    buf617 = extern_kernels.convolution(buf588, primals_324, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf617, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_409], Original ATen: [aten.convolution]
    buf618 = extern_kernels.convolution(buf617, primals_325, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf618, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf619 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf620 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf622 = empty((216, ), device='cpu', dtype=torch.float32)
    buf623 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_84(c_void_p(buf618.data_ptr()), c_void_p(primals_326.data_ptr()), c_void_p(primals_327.data_ptr()), c_void_p(buf619.data_ptr()), c_void_p(buf620.data_ptr()), c_void_p(buf622.data_ptr()), c_void_p(buf623.data_ptr()))
    del primals_327
    # Source Nodes: [x_412], Original ATen: [aten.convolution]
    buf624 = extern_kernels.convolution(buf623, primals_328, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf624, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_414], Original ATen: [aten.convolution]
    buf625 = extern_kernels.convolution(buf624, primals_329, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf625, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf626 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf627 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf629 = empty((216, ), device='cpu', dtype=torch.float32)
    buf662 = buf558; del buf558  # reuse
    buf630 = reinterpret_tensor(buf662, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf631 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_85(c_void_p(buf625.data_ptr()), c_void_p(buf612.data_ptr()), c_void_p(buf613.data_ptr()), c_void_p(buf614.data_ptr()), c_void_p(primals_322.data_ptr()), c_void_p(primals_323.data_ptr()), c_void_p(primals_330.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(buf626.data_ptr()), c_void_p(buf627.data_ptr()), c_void_p(buf629.data_ptr()), c_void_p(buf630.data_ptr()), c_void_p(buf631.data_ptr()))
    del primals_323
    del primals_331
    # Source Nodes: [x_417], Original ATen: [aten.convolution]
    buf632 = extern_kernels.convolution(buf631, primals_332, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf632, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_419], Original ATen: [aten.convolution]
    buf633 = extern_kernels.convolution(buf632, primals_333, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf633, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf634 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf635 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf637 = empty((216, ), device='cpu', dtype=torch.float32)
    buf638 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_86(c_void_p(buf633.data_ptr()), c_void_p(primals_334.data_ptr()), c_void_p(primals_335.data_ptr()), c_void_p(buf634.data_ptr()), c_void_p(buf635.data_ptr()), c_void_p(buf637.data_ptr()), c_void_p(buf638.data_ptr()))
    del primals_335
    # Source Nodes: [x_422], Original ATen: [aten.convolution]
    buf639 = extern_kernels.convolution(buf638, primals_336, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf639, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_424], Original ATen: [aten.convolution]
    buf640 = extern_kernels.convolution(buf639, primals_337, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf640, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf641 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf642 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf644 = empty((216, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_87(c_void_p(buf640.data_ptr()), c_void_p(buf641.data_ptr()), c_void_p(buf642.data_ptr()), c_void_p(buf644.data_ptr()))
    # Source Nodes: [x_427], Original ATen: [aten.convolution]
    buf645 = extern_kernels.convolution(buf572, primals_340, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf645, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_429], Original ATen: [aten.convolution]
    buf646 = extern_kernels.convolution(buf645, primals_341, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf646, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf647 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf648 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf650 = empty((216, ), device='cpu', dtype=torch.float32)
    buf651 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_88(c_void_p(buf646.data_ptr()), c_void_p(primals_342.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(buf648.data_ptr()), c_void_p(buf650.data_ptr()), c_void_p(buf651.data_ptr()))
    del primals_343
    # Source Nodes: [x_432], Original ATen: [aten.convolution]
    buf652 = extern_kernels.convolution(buf651, primals_344, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf652, (8, 216, 42, 42), (381024, 1, 9072, 216))
    # Source Nodes: [x_434], Original ATen: [aten.convolution]
    buf653 = extern_kernels.convolution(buf652, primals_345, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf653, (8, 216, 42, 42), (381024, 1, 9072, 216))
    buf654 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf655 = empty_strided((1, 216, 1, 1), (216, 1, 216, 216), device='cpu', dtype=torch.float32)
    buf657 = empty((216, ), device='cpu', dtype=torch.float32)
    buf658 = reinterpret_tensor(buf662, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf659 = reinterpret_tensor(buf662, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf660 = reinterpret_tensor(buf662, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf661 = reinterpret_tensor(buf662, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_89(c_void_p(buf653.data_ptr()), c_void_p(buf581.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(buf583.data_ptr()), c_void_p(primals_306.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(buf586.data_ptr()), c_void_p(buf597.data_ptr()), c_void_p(buf598.data_ptr()), c_void_p(buf599.data_ptr()), c_void_p(primals_314.data_ptr()), c_void_p(primals_315.data_ptr()), c_void_p(buf602.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(buf641.data_ptr()), c_void_p(buf642.data_ptr()), c_void_p(primals_338.data_ptr()), c_void_p(primals_339.data_ptr()), c_void_p(primals_346.data_ptr()), c_void_p(primals_347.data_ptr()), c_void_p(buf571.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(buf655.data_ptr()), c_void_p(buf657.data_ptr()), c_void_p(buf658.data_ptr()), c_void_p(buf659.data_ptr()), c_void_p(buf660.data_ptr()), c_void_p(buf661.data_ptr()))
    del buf630
    del buf658
    del buf659
    del buf660
    del buf661
    del primals_307
    del primals_315
    del primals_339
    del primals_347
    # Source Nodes: [x_437], Original ATen: [aten.convolution]
    buf663 = extern_kernels.convolution(buf565, primals_348, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf663, (8, 432, 42, 42), (762048, 1, 18144, 432))
    buf664 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf665 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf667 = empty((432, ), device='cpu', dtype=torch.float32)
    buf668 = empty_strided((8, 432, 42, 42), (762048, 1, 18144, 432), device='cpu', dtype=torch.float32)
    buf669 = empty_strided((8, 1080, 42, 42), (1905120, 1, 45360, 1080), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_90(c_void_p(buf663.data_ptr()), c_void_p(primals_349.data_ptr()), c_void_p(primals_350.data_ptr()), c_void_p(buf662.data_ptr()), c_void_p(buf664.data_ptr()), c_void_p(buf665.data_ptr()), c_void_p(buf667.data_ptr()), c_void_p(buf668.data_ptr()), c_void_p(buf669.data_ptr()))
    del primals_350
    # Source Nodes: [x_440], Original ATen: [aten.convolution]
    buf670 = extern_kernels.convolution(buf669, primals_351, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf670, (8, 432, 42, 42), (762048, 1, 18144, 432))
    buf671 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf672 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf674 = empty((432, ), device='cpu', dtype=torch.float32)
    buf675 = empty_strided((8, 432, 42, 42), (762048, 1, 18144, 432), device='cpu', dtype=torch.float32)
    buf676 = empty_strided((8, 432, 45, 45), (874800, 1, 19440, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_relu_91(c_void_p(buf670.data_ptr()), c_void_p(primals_352.data_ptr()), c_void_p(primals_353.data_ptr()), c_void_p(buf668.data_ptr()), c_void_p(buf671.data_ptr()), c_void_p(buf672.data_ptr()), c_void_p(buf674.data_ptr()), c_void_p(buf675.data_ptr()), c_void_p(buf676.data_ptr()))
    del primals_353
    # Source Nodes: [x_445], Original ATen: [aten.convolution]
    buf677 = extern_kernels.convolution(buf676, primals_15, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf677, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_447], Original ATen: [aten.convolution]
    buf678 = extern_kernels.convolution(buf677, primals_354, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf678, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf679 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf680 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf682 = empty((432, ), device='cpu', dtype=torch.float32)
    buf683 = reinterpret_tensor(buf246, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf246  # reuse
    cpp_fused__native_batch_norm_legit_functional_relu_92(c_void_p(buf678.data_ptr()), c_void_p(primals_355.data_ptr()), c_void_p(primals_356.data_ptr()), c_void_p(buf679.data_ptr()), c_void_p(buf680.data_ptr()), c_void_p(buf682.data_ptr()), c_void_p(buf683.data_ptr()))
    del primals_356
    # Source Nodes: [x_450], Original ATen: [aten.convolution]
    buf684 = extern_kernels.convolution(buf683, primals_357, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf684, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_452], Original ATen: [aten.convolution]
    buf685 = extern_kernels.convolution(buf684, primals_358, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf685, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf686 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf687 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf689 = empty((432, ), device='cpu', dtype=torch.float32)
    buf690 = empty_strided((8, 432, 43, 43), (798768, 1, 18576, 432), device='cpu', dtype=torch.float32)
    buf754 = empty_strided((8, 432, 43, 43), (798768, 1, 18576, 432), device='cpu', dtype=torch.float32)
    buf691 = reinterpret_tensor(buf243, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf243  # reuse
    buf692 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    buf693 = empty_strided((8, 432, 42, 42), (762048, 1, 18144, 432), device='cpu', dtype=torch.float32)
    buf1533 = empty_strided((8, 432, 42, 42), (762048, 1, 18144, 432), device='cpu', dtype=torch.bool)
    buf694 = empty_strided((8, 432, 47, 47), (954288, 1, 20304, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_relu_threshold_backward_93(c_void_p(buf685.data_ptr()), c_void_p(buf668.data_ptr()), c_void_p(buf675.data_ptr()), c_void_p(buf686.data_ptr()), c_void_p(buf687.data_ptr()), c_void_p(buf689.data_ptr()), c_void_p(buf690.data_ptr()), c_void_p(buf754.data_ptr()), c_void_p(buf691.data_ptr()), c_void_p(buf692.data_ptr()), c_void_p(buf693.data_ptr()), c_void_p(buf1533.data_ptr()), c_void_p(buf694.data_ptr()))
    # Source Nodes: [x_459], Original ATen: [aten.convolution]
    buf695 = extern_kernels.convolution(buf694, primals_16, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf695, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_461], Original ATen: [aten.convolution]
    buf696 = extern_kernels.convolution(buf695, primals_361, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf696, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf697 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf698 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf700 = empty((432, ), device='cpu', dtype=torch.float32)
    buf701 = reinterpret_tensor(buf173, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf173  # reuse
    cpp_fused__native_batch_norm_legit_functional_relu_94(c_void_p(buf696.data_ptr()), c_void_p(primals_362.data_ptr()), c_void_p(primals_363.data_ptr()), c_void_p(buf697.data_ptr()), c_void_p(buf698.data_ptr()), c_void_p(buf700.data_ptr()), c_void_p(buf701.data_ptr()))
    del primals_363
    # Source Nodes: [x_464], Original ATen: [aten.convolution]
    buf702 = extern_kernels.convolution(buf701, primals_364, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf702, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_466], Original ATen: [aten.convolution]
    buf703 = extern_kernels.convolution(buf702, primals_365, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf703, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf704 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf705 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf707 = empty((432, ), device='cpu', dtype=torch.float32)
    buf708 = empty_strided((8, 432, 43, 43), (798768, 1, 18576, 432), device='cpu', dtype=torch.float32)
    buf709 = reinterpret_tensor(buf155, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf155  # reuse
    buf710 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    buf711 = empty_strided((8, 432, 45, 45), (874800, 1, 19440, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_95(c_void_p(buf703.data_ptr()), c_void_p(buf675.data_ptr()), c_void_p(buf693.data_ptr()), c_void_p(buf704.data_ptr()), c_void_p(buf705.data_ptr()), c_void_p(buf707.data_ptr()), c_void_p(buf708.data_ptr()), c_void_p(buf709.data_ptr()), c_void_p(buf710.data_ptr()), c_void_p(buf711.data_ptr()))
    del buf675
    # Source Nodes: [x_473], Original ATen: [aten.convolution]
    buf712 = extern_kernels.convolution(buf711, primals_17, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf712, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_475], Original ATen: [aten.convolution]
    buf713 = extern_kernels.convolution(buf712, primals_368, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf713, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf714 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf715 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf717 = empty((432, ), device='cpu', dtype=torch.float32)
    buf718 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_96(c_void_p(buf713.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(primals_370.data_ptr()), c_void_p(buf714.data_ptr()), c_void_p(buf715.data_ptr()), c_void_p(buf717.data_ptr()), c_void_p(buf718.data_ptr()))
    del primals_370
    # Source Nodes: [x_478], Original ATen: [aten.convolution]
    buf719 = extern_kernels.convolution(buf718, primals_371, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf719, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_480], Original ATen: [aten.convolution]
    buf720 = extern_kernels.convolution(buf719, primals_372, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf720, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf721 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf722 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf724 = empty((432, ), device='cpu', dtype=torch.float32)
    buf725 = empty_strided((8, 432, 43, 43), (798768, 1, 18576, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_97(c_void_p(buf720.data_ptr()), c_void_p(buf693.data_ptr()), c_void_p(buf721.data_ptr()), c_void_p(buf722.data_ptr()), c_void_p(buf724.data_ptr()), c_void_p(buf725.data_ptr()))
    # Source Nodes: [x_485], Original ATen: [aten.convolution]
    buf726 = extern_kernels.convolution(buf725, primals_18, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf726, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_487], Original ATen: [aten.convolution]
    buf727 = extern_kernels.convolution(buf726, primals_375, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf727, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf728 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf729 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf731 = empty((432, ), device='cpu', dtype=torch.float32)
    buf732 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_98(c_void_p(buf727.data_ptr()), c_void_p(primals_376.data_ptr()), c_void_p(primals_377.data_ptr()), c_void_p(buf728.data_ptr()), c_void_p(buf729.data_ptr()), c_void_p(buf731.data_ptr()), c_void_p(buf732.data_ptr()))
    del primals_377
    # Source Nodes: [x_490], Original ATen: [aten.convolution]
    buf733 = extern_kernels.convolution(buf732, primals_378, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf733, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_492], Original ATen: [aten.convolution]
    buf734 = extern_kernels.convolution(buf733, primals_379, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf734, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf735 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf736 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf738 = empty((432, ), device='cpu', dtype=torch.float32)
    buf777 = reinterpret_tensor(buf241, (8, 2160, 21, 21), (952560, 441, 21, 1), 0); del buf241  # reuse
    buf739 = reinterpret_tensor(buf777, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf740 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_99(c_void_p(buf734.data_ptr()), c_void_p(buf720.data_ptr()), c_void_p(buf721.data_ptr()), c_void_p(buf722.data_ptr()), c_void_p(primals_373.data_ptr()), c_void_p(primals_374.data_ptr()), c_void_p(primals_380.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(buf735.data_ptr()), c_void_p(buf736.data_ptr()), c_void_p(buf738.data_ptr()), c_void_p(buf739.data_ptr()), c_void_p(buf740.data_ptr()))
    del primals_374
    del primals_381
    # Source Nodes: [x_495], Original ATen: [aten.convolution]
    buf741 = extern_kernels.convolution(buf740, primals_382, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf741, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_497], Original ATen: [aten.convolution]
    buf742 = extern_kernels.convolution(buf741, primals_383, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf742, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf743 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf744 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf746 = empty((432, ), device='cpu', dtype=torch.float32)
    buf747 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_100(c_void_p(buf742.data_ptr()), c_void_p(primals_384.data_ptr()), c_void_p(primals_385.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(buf744.data_ptr()), c_void_p(buf746.data_ptr()), c_void_p(buf747.data_ptr()))
    del primals_385
    # Source Nodes: [x_500], Original ATen: [aten.convolution]
    buf748 = extern_kernels.convolution(buf747, primals_386, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf748, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_502], Original ATen: [aten.convolution]
    buf749 = extern_kernels.convolution(buf748, primals_387, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf749, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf750 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf751 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf753 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_101(c_void_p(buf749.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(buf751.data_ptr()), c_void_p(buf753.data_ptr()))
    # Source Nodes: [x_509], Original ATen: [aten.convolution]
    buf755 = extern_kernels.convolution(buf754, primals_19, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf755, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_511], Original ATen: [aten.convolution]
    buf756 = extern_kernels.convolution(buf755, primals_390, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf756, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf757 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf758 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf760 = empty((432, ), device='cpu', dtype=torch.float32)
    buf761 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_102(c_void_p(buf756.data_ptr()), c_void_p(primals_391.data_ptr()), c_void_p(primals_392.data_ptr()), c_void_p(buf757.data_ptr()), c_void_p(buf758.data_ptr()), c_void_p(buf760.data_ptr()), c_void_p(buf761.data_ptr()))
    del primals_392
    # Source Nodes: [x_514], Original ATen: [aten.convolution]
    buf762 = extern_kernels.convolution(buf761, primals_393, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf762, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_516], Original ATen: [aten.convolution]
    buf763 = extern_kernels.convolution(buf762, primals_394, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf763, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf764 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf765 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf767 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_103(c_void_p(buf763.data_ptr()), c_void_p(buf764.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(buf767.data_ptr()))
    # Source Nodes: [x_521], Original ATen: [aten.convolution]
    buf768 = extern_kernels.convolution(buf693, primals_20, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf768, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf769 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf770 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf772 = empty((432, ), device='cpu', dtype=torch.float32)
    buf773 = reinterpret_tensor(buf777, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    buf774 = reinterpret_tensor(buf777, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf775 = reinterpret_tensor(buf777, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf776 = reinterpret_tensor(buf777, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf778 = empty_strided((8, 1080, 21, 21), (476280, 1, 22680, 1080), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_104(c_void_p(buf768.data_ptr()), c_void_p(buf763.data_ptr()), c_void_p(buf764.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_395.data_ptr()), c_void_p(primals_396.data_ptr()), c_void_p(primals_397.data_ptr()), c_void_p(primals_398.data_ptr()), c_void_p(buf685.data_ptr()), c_void_p(buf686.data_ptr()), c_void_p(buf687.data_ptr()), c_void_p(primals_359.data_ptr()), c_void_p(primals_360.data_ptr()), c_void_p(buf691.data_ptr()), c_void_p(buf703.data_ptr()), c_void_p(buf704.data_ptr()), c_void_p(buf705.data_ptr()), c_void_p(primals_366.data_ptr()), c_void_p(primals_367.data_ptr()), c_void_p(buf709.data_ptr()), c_void_p(buf749.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(buf751.data_ptr()), c_void_p(primals_388.data_ptr()), c_void_p(primals_389.data_ptr()), c_void_p(buf669.data_ptr()), c_void_p(buf769.data_ptr()), c_void_p(buf770.data_ptr()), c_void_p(buf772.data_ptr()), c_void_p(buf773.data_ptr()), c_void_p(buf774.data_ptr()), c_void_p(buf775.data_ptr()), c_void_p(buf776.data_ptr()), c_void_p(buf778.data_ptr()))
    del buf739
    del buf773
    del buf774
    del buf775
    del buf776
    del primals_360
    del primals_367
    del primals_389
    del primals_396
    del primals_398
    # Source Nodes: [x_path1_2], Original ATen: [aten.convolution]
    buf779 = extern_kernels.convolution(buf778, primals_399, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf779, (8, 216, 21, 21), (95256, 1, 4536, 216))
    buf780 = reinterpret_tensor(buf662, (8, 1080, 42, 42), (1905120, 1, 45360, 1080), 0); del buf662  # reuse
    buf781 = empty_strided((8, 1080, 21, 21), (476280, 1, 22680, 1080), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_constant_pad_nd_105(c_void_p(buf669.data_ptr()), c_void_p(buf780.data_ptr()), c_void_p(buf781.data_ptr()))
    # Source Nodes: [x_path2_2], Original ATen: [aten.convolution]
    buf782 = extern_kernels.convolution(buf781, primals_400, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf782, (8, 216, 21, 21), (95256, 1, 4536, 216))
    buf783 = buf709; del buf709  # reuse
    buf784 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf785 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf787 = empty((432, ), device='cpu', dtype=torch.float32)
    buf788 = buf691; del buf691  # reuse
    buf789 = empty_strided((8, 2160, 21, 21), (952560, 1, 45360, 2160), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_106(c_void_p(buf779.data_ptr()), c_void_p(buf782.data_ptr()), c_void_p(primals_401.data_ptr()), c_void_p(primals_402.data_ptr()), c_void_p(buf777.data_ptr()), c_void_p(buf783.data_ptr()), c_void_p(buf784.data_ptr()), c_void_p(buf785.data_ptr()), c_void_p(buf787.data_ptr()), c_void_p(buf788.data_ptr()), c_void_p(buf789.data_ptr()))
    del buf779
    del buf782
    del primals_402
    # Source Nodes: [x_525], Original ATen: [aten.convolution]
    buf790 = extern_kernels.convolution(buf789, primals_403, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf790, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf791 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf792 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf794 = empty((432, ), device='cpu', dtype=torch.float32)
    buf795 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf796 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_107(c_void_p(buf790.data_ptr()), c_void_p(primals_404.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(buf788.data_ptr()), c_void_p(buf791.data_ptr()), c_void_p(buf792.data_ptr()), c_void_p(buf794.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(buf796.data_ptr()))
    del primals_405
    # Source Nodes: [x_528], Original ATen: [aten.convolution]
    buf797 = extern_kernels.convolution(buf796, primals_406, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf797, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_530], Original ATen: [aten.convolution]
    buf798 = extern_kernels.convolution(buf797, primals_407, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf798, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf799 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf800 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf802 = empty((432, ), device='cpu', dtype=torch.float32)
    buf803 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_108(c_void_p(buf798.data_ptr()), c_void_p(primals_408.data_ptr()), c_void_p(primals_409.data_ptr()), c_void_p(buf799.data_ptr()), c_void_p(buf800.data_ptr()), c_void_p(buf802.data_ptr()), c_void_p(buf803.data_ptr()))
    del primals_409
    # Source Nodes: [x_533], Original ATen: [aten.convolution]
    buf804 = extern_kernels.convolution(buf803, primals_410, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf804, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_535], Original ATen: [aten.convolution]
    buf805 = extern_kernels.convolution(buf804, primals_411, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf805, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf806 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf807 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf809 = empty((432, ), device='cpu', dtype=torch.float32)
    buf810 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf811 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    buf812 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_109(c_void_p(buf805.data_ptr()), c_void_p(buf788.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(buf806.data_ptr()), c_void_p(buf807.data_ptr()), c_void_p(buf809.data_ptr()), c_void_p(buf810.data_ptr()), c_void_p(buf811.data_ptr()), c_void_p(buf812.data_ptr()))
    # Source Nodes: [x_538], Original ATen: [aten.convolution]
    buf813 = extern_kernels.convolution(buf812, primals_414, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf813, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_540], Original ATen: [aten.convolution]
    buf814 = extern_kernels.convolution(buf813, primals_415, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf814, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf815 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf816 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf818 = empty((432, ), device='cpu', dtype=torch.float32)
    buf819 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_110(c_void_p(buf814.data_ptr()), c_void_p(primals_416.data_ptr()), c_void_p(primals_417.data_ptr()), c_void_p(buf815.data_ptr()), c_void_p(buf816.data_ptr()), c_void_p(buf818.data_ptr()), c_void_p(buf819.data_ptr()))
    del primals_417
    # Source Nodes: [x_543], Original ATen: [aten.convolution]
    buf820 = extern_kernels.convolution(buf819, primals_418, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf820, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_545], Original ATen: [aten.convolution]
    buf821 = extern_kernels.convolution(buf820, primals_419, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf821, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf822 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf823 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf825 = empty((432, ), device='cpu', dtype=torch.float32)
    buf826 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf827 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_111(c_void_p(buf821.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(buf822.data_ptr()), c_void_p(buf823.data_ptr()), c_void_p(buf825.data_ptr()), c_void_p(buf826.data_ptr()), c_void_p(buf827.data_ptr()))
    # Source Nodes: [x_548], Original ATen: [aten.convolution]
    buf828 = extern_kernels.convolution(buf812, primals_422, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf828, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_550], Original ATen: [aten.convolution]
    buf829 = extern_kernels.convolution(buf828, primals_423, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf829, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf830 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf831 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf833 = empty((432, ), device='cpu', dtype=torch.float32)
    buf834 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_112(c_void_p(buf829.data_ptr()), c_void_p(primals_424.data_ptr()), c_void_p(primals_425.data_ptr()), c_void_p(buf830.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(buf833.data_ptr()), c_void_p(buf834.data_ptr()))
    del primals_425
    # Source Nodes: [x_553], Original ATen: [aten.convolution]
    buf835 = extern_kernels.convolution(buf834, primals_426, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf835, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_555], Original ATen: [aten.convolution]
    buf836 = extern_kernels.convolution(buf835, primals_427, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf836, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf837 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf838 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf840 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_113(c_void_p(buf836.data_ptr()), c_void_p(buf837.data_ptr()), c_void_p(buf838.data_ptr()), c_void_p(buf840.data_ptr()))
    # Source Nodes: [x_558], Original ATen: [aten.convolution]
    buf841 = extern_kernels.convolution(buf812, primals_430, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf841, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_560], Original ATen: [aten.convolution]
    buf842 = extern_kernels.convolution(buf841, primals_431, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf842, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf843 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf844 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf846 = empty((432, ), device='cpu', dtype=torch.float32)
    buf847 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_114(c_void_p(buf842.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_433.data_ptr()), c_void_p(buf843.data_ptr()), c_void_p(buf844.data_ptr()), c_void_p(buf846.data_ptr()), c_void_p(buf847.data_ptr()))
    del primals_433
    # Source Nodes: [x_563], Original ATen: [aten.convolution]
    buf848 = extern_kernels.convolution(buf847, primals_434, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf848, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_565], Original ATen: [aten.convolution]
    buf849 = extern_kernels.convolution(buf848, primals_435, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf849, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf850 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf851 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf853 = empty((432, ), device='cpu', dtype=torch.float32)
    buf886 = buf777; del buf777  # reuse
    buf854 = reinterpret_tensor(buf886, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf855 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_115(c_void_p(buf849.data_ptr()), c_void_p(buf836.data_ptr()), c_void_p(buf837.data_ptr()), c_void_p(buf838.data_ptr()), c_void_p(primals_428.data_ptr()), c_void_p(primals_429.data_ptr()), c_void_p(primals_436.data_ptr()), c_void_p(primals_437.data_ptr()), c_void_p(buf850.data_ptr()), c_void_p(buf851.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(buf854.data_ptr()), c_void_p(buf855.data_ptr()))
    del primals_429
    del primals_437
    # Source Nodes: [x_568], Original ATen: [aten.convolution]
    buf856 = extern_kernels.convolution(buf855, primals_438, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf856, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_570], Original ATen: [aten.convolution]
    buf857 = extern_kernels.convolution(buf856, primals_439, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf857, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf858 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf859 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf861 = empty((432, ), device='cpu', dtype=torch.float32)
    buf862 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_116(c_void_p(buf857.data_ptr()), c_void_p(primals_440.data_ptr()), c_void_p(primals_441.data_ptr()), c_void_p(buf858.data_ptr()), c_void_p(buf859.data_ptr()), c_void_p(buf861.data_ptr()), c_void_p(buf862.data_ptr()))
    del primals_441
    # Source Nodes: [x_573], Original ATen: [aten.convolution]
    buf863 = extern_kernels.convolution(buf862, primals_442, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf863, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_575], Original ATen: [aten.convolution]
    buf864 = extern_kernels.convolution(buf863, primals_443, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf864, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf865 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf866 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf868 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_117(c_void_p(buf864.data_ptr()), c_void_p(buf865.data_ptr()), c_void_p(buf866.data_ptr()), c_void_p(buf868.data_ptr()))
    # Source Nodes: [x_578], Original ATen: [aten.convolution]
    buf869 = extern_kernels.convolution(buf796, primals_446, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf869, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_580], Original ATen: [aten.convolution]
    buf870 = extern_kernels.convolution(buf869, primals_447, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf870, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf871 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf872 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf874 = empty((432, ), device='cpu', dtype=torch.float32)
    buf875 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_118(c_void_p(buf870.data_ptr()), c_void_p(primals_448.data_ptr()), c_void_p(primals_449.data_ptr()), c_void_p(buf871.data_ptr()), c_void_p(buf872.data_ptr()), c_void_p(buf874.data_ptr()), c_void_p(buf875.data_ptr()))
    del primals_449
    # Source Nodes: [x_583], Original ATen: [aten.convolution]
    buf876 = extern_kernels.convolution(buf875, primals_450, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf876, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_585], Original ATen: [aten.convolution]
    buf877 = extern_kernels.convolution(buf876, primals_451, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf877, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf878 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf879 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf881 = empty((432, ), device='cpu', dtype=torch.float32)
    buf882 = reinterpret_tensor(buf886, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf883 = reinterpret_tensor(buf886, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf884 = reinterpret_tensor(buf886, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf885 = reinterpret_tensor(buf886, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_119(c_void_p(buf877.data_ptr()), c_void_p(buf805.data_ptr()), c_void_p(buf806.data_ptr()), c_void_p(buf807.data_ptr()), c_void_p(primals_412.data_ptr()), c_void_p(primals_413.data_ptr()), c_void_p(buf810.data_ptr()), c_void_p(buf821.data_ptr()), c_void_p(buf822.data_ptr()), c_void_p(buf823.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(primals_421.data_ptr()), c_void_p(buf826.data_ptr()), c_void_p(buf864.data_ptr()), c_void_p(buf865.data_ptr()), c_void_p(buf866.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_445.data_ptr()), c_void_p(primals_452.data_ptr()), c_void_p(primals_453.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(buf878.data_ptr()), c_void_p(buf879.data_ptr()), c_void_p(buf881.data_ptr()), c_void_p(buf882.data_ptr()), c_void_p(buf883.data_ptr()), c_void_p(buf884.data_ptr()), c_void_p(buf885.data_ptr()))
    del buf854
    del buf882
    del buf883
    del buf884
    del buf885
    del primals_413
    del primals_421
    del primals_445
    del primals_453
    # Source Nodes: [x_588], Original ATen: [aten.convolution]
    buf887 = extern_kernels.convolution(buf789, primals_454, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf887, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf888 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf889 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf891 = empty((432, ), device='cpu', dtype=torch.float32)
    buf892 = buf826; del buf826  # reuse
    buf893 = empty_strided((8, 2160, 21, 21), (952560, 1, 45360, 2160), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_120(c_void_p(buf887.data_ptr()), c_void_p(primals_455.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(buf886.data_ptr()), c_void_p(buf888.data_ptr()), c_void_p(buf889.data_ptr()), c_void_p(buf891.data_ptr()), c_void_p(buf892.data_ptr()), c_void_p(buf893.data_ptr()))
    del primals_456
    # Source Nodes: [x_591], Original ATen: [aten.convolution]
    buf894 = extern_kernels.convolution(buf893, primals_457, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf894, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf895 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf896 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf898 = empty((432, ), device='cpu', dtype=torch.float32)
    buf899 = buf810; del buf810  # reuse
    buf900 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_121(c_void_p(buf894.data_ptr()), c_void_p(primals_458.data_ptr()), c_void_p(primals_459.data_ptr()), c_void_p(buf892.data_ptr()), c_void_p(buf895.data_ptr()), c_void_p(buf896.data_ptr()), c_void_p(buf898.data_ptr()), c_void_p(buf899.data_ptr()), c_void_p(buf900.data_ptr()))
    del primals_459
    # Source Nodes: [x_594], Original ATen: [aten.convolution]
    buf901 = extern_kernels.convolution(buf900, primals_460, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf901, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_596], Original ATen: [aten.convolution]
    buf902 = extern_kernels.convolution(buf901, primals_461, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf902, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf903 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf904 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf906 = empty((432, ), device='cpu', dtype=torch.float32)
    buf907 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_122(c_void_p(buf902.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_463.data_ptr()), c_void_p(buf903.data_ptr()), c_void_p(buf904.data_ptr()), c_void_p(buf906.data_ptr()), c_void_p(buf907.data_ptr()))
    del primals_463
    # Source Nodes: [x_599], Original ATen: [aten.convolution]
    buf908 = extern_kernels.convolution(buf907, primals_464, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf908, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_601], Original ATen: [aten.convolution]
    buf909 = extern_kernels.convolution(buf908, primals_465, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf909, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf910 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf911 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf913 = empty((432, ), device='cpu', dtype=torch.float32)
    buf914 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf915 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    buf916 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_123(c_void_p(buf909.data_ptr()), c_void_p(buf892.data_ptr()), c_void_p(buf899.data_ptr()), c_void_p(buf910.data_ptr()), c_void_p(buf911.data_ptr()), c_void_p(buf913.data_ptr()), c_void_p(buf914.data_ptr()), c_void_p(buf915.data_ptr()), c_void_p(buf916.data_ptr()))
    # Source Nodes: [x_604], Original ATen: [aten.convolution]
    buf917 = extern_kernels.convolution(buf916, primals_468, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf917, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_606], Original ATen: [aten.convolution]
    buf918 = extern_kernels.convolution(buf917, primals_469, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf918, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf919 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf920 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf922 = empty((432, ), device='cpu', dtype=torch.float32)
    buf923 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_124(c_void_p(buf918.data_ptr()), c_void_p(primals_470.data_ptr()), c_void_p(primals_471.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(buf920.data_ptr()), c_void_p(buf922.data_ptr()), c_void_p(buf923.data_ptr()))
    del primals_471
    # Source Nodes: [x_609], Original ATen: [aten.convolution]
    buf924 = extern_kernels.convolution(buf923, primals_472, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf924, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_611], Original ATen: [aten.convolution]
    buf925 = extern_kernels.convolution(buf924, primals_473, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf925, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf926 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf927 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf929 = empty((432, ), device='cpu', dtype=torch.float32)
    buf930 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf931 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_125(c_void_p(buf925.data_ptr()), c_void_p(buf899.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(buf927.data_ptr()), c_void_p(buf929.data_ptr()), c_void_p(buf930.data_ptr()), c_void_p(buf931.data_ptr()))
    # Source Nodes: [x_614], Original ATen: [aten.convolution]
    buf932 = extern_kernels.convolution(buf916, primals_476, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf932, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_616], Original ATen: [aten.convolution]
    buf933 = extern_kernels.convolution(buf932, primals_477, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf933, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf934 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf935 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf937 = empty((432, ), device='cpu', dtype=torch.float32)
    buf938 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_126(c_void_p(buf933.data_ptr()), c_void_p(primals_478.data_ptr()), c_void_p(primals_479.data_ptr()), c_void_p(buf934.data_ptr()), c_void_p(buf935.data_ptr()), c_void_p(buf937.data_ptr()), c_void_p(buf938.data_ptr()))
    del primals_479
    # Source Nodes: [x_619], Original ATen: [aten.convolution]
    buf939 = extern_kernels.convolution(buf938, primals_480, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf939, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_621], Original ATen: [aten.convolution]
    buf940 = extern_kernels.convolution(buf939, primals_481, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf940, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf941 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf942 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf944 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_127(c_void_p(buf940.data_ptr()), c_void_p(buf941.data_ptr()), c_void_p(buf942.data_ptr()), c_void_p(buf944.data_ptr()))
    # Source Nodes: [x_624], Original ATen: [aten.convolution]
    buf945 = extern_kernels.convolution(buf916, primals_484, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf945, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_626], Original ATen: [aten.convolution]
    buf946 = extern_kernels.convolution(buf945, primals_485, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf946, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf947 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf948 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf950 = empty((432, ), device='cpu', dtype=torch.float32)
    buf951 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_128(c_void_p(buf946.data_ptr()), c_void_p(primals_486.data_ptr()), c_void_p(primals_487.data_ptr()), c_void_p(buf947.data_ptr()), c_void_p(buf948.data_ptr()), c_void_p(buf950.data_ptr()), c_void_p(buf951.data_ptr()))
    del primals_487
    # Source Nodes: [x_629], Original ATen: [aten.convolution]
    buf952 = extern_kernels.convolution(buf951, primals_488, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf952, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_631], Original ATen: [aten.convolution]
    buf953 = extern_kernels.convolution(buf952, primals_489, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf953, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf954 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf955 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf957 = empty((432, ), device='cpu', dtype=torch.float32)
    buf990 = buf886; del buf886  # reuse
    buf958 = reinterpret_tensor(buf990, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf959 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_129(c_void_p(buf953.data_ptr()), c_void_p(buf940.data_ptr()), c_void_p(buf941.data_ptr()), c_void_p(buf942.data_ptr()), c_void_p(primals_482.data_ptr()), c_void_p(primals_483.data_ptr()), c_void_p(primals_490.data_ptr()), c_void_p(primals_491.data_ptr()), c_void_p(buf954.data_ptr()), c_void_p(buf955.data_ptr()), c_void_p(buf957.data_ptr()), c_void_p(buf958.data_ptr()), c_void_p(buf959.data_ptr()))
    del primals_483
    del primals_491
    # Source Nodes: [x_634], Original ATen: [aten.convolution]
    buf960 = extern_kernels.convolution(buf959, primals_492, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf960, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_636], Original ATen: [aten.convolution]
    buf961 = extern_kernels.convolution(buf960, primals_493, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf961, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf962 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf963 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf965 = empty((432, ), device='cpu', dtype=torch.float32)
    buf966 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_130(c_void_p(buf961.data_ptr()), c_void_p(primals_494.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(buf962.data_ptr()), c_void_p(buf963.data_ptr()), c_void_p(buf965.data_ptr()), c_void_p(buf966.data_ptr()))
    del primals_495
    # Source Nodes: [x_639], Original ATen: [aten.convolution]
    buf967 = extern_kernels.convolution(buf966, primals_496, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf967, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_641], Original ATen: [aten.convolution]
    buf968 = extern_kernels.convolution(buf967, primals_497, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf968, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf969 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf970 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf972 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_131(c_void_p(buf968.data_ptr()), c_void_p(buf969.data_ptr()), c_void_p(buf970.data_ptr()), c_void_p(buf972.data_ptr()))
    # Source Nodes: [x_644], Original ATen: [aten.convolution]
    buf973 = extern_kernels.convolution(buf900, primals_500, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf973, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_646], Original ATen: [aten.convolution]
    buf974 = extern_kernels.convolution(buf973, primals_501, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf974, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf975 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf976 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf978 = empty((432, ), device='cpu', dtype=torch.float32)
    buf979 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_132(c_void_p(buf974.data_ptr()), c_void_p(primals_502.data_ptr()), c_void_p(primals_503.data_ptr()), c_void_p(buf975.data_ptr()), c_void_p(buf976.data_ptr()), c_void_p(buf978.data_ptr()), c_void_p(buf979.data_ptr()))
    del primals_503
    # Source Nodes: [x_649], Original ATen: [aten.convolution]
    buf980 = extern_kernels.convolution(buf979, primals_504, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf980, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_651], Original ATen: [aten.convolution]
    buf981 = extern_kernels.convolution(buf980, primals_505, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf981, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf982 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf983 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf985 = empty((432, ), device='cpu', dtype=torch.float32)
    buf986 = reinterpret_tensor(buf990, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf987 = reinterpret_tensor(buf990, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf988 = reinterpret_tensor(buf990, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf989 = reinterpret_tensor(buf990, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_133(c_void_p(buf981.data_ptr()), c_void_p(buf909.data_ptr()), c_void_p(buf910.data_ptr()), c_void_p(buf911.data_ptr()), c_void_p(primals_466.data_ptr()), c_void_p(primals_467.data_ptr()), c_void_p(buf914.data_ptr()), c_void_p(buf925.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(buf927.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_475.data_ptr()), c_void_p(buf930.data_ptr()), c_void_p(buf968.data_ptr()), c_void_p(buf969.data_ptr()), c_void_p(buf970.data_ptr()), c_void_p(primals_498.data_ptr()), c_void_p(primals_499.data_ptr()), c_void_p(primals_506.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(buf899.data_ptr()), c_void_p(buf982.data_ptr()), c_void_p(buf983.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(buf986.data_ptr()), c_void_p(buf987.data_ptr()), c_void_p(buf988.data_ptr()), c_void_p(buf989.data_ptr()))
    del buf958
    del buf986
    del buf987
    del buf988
    del buf989
    del primals_467
    del primals_475
    del primals_499
    del primals_507
    # Source Nodes: [x_654], Original ATen: [aten.convolution]
    buf991 = extern_kernels.convolution(buf893, primals_508, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf991, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf992 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf993 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf995 = empty((432, ), device='cpu', dtype=torch.float32)
    buf996 = buf930; del buf930  # reuse
    buf997 = empty_strided((8, 2160, 21, 21), (952560, 1, 45360, 2160), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_134(c_void_p(buf991.data_ptr()), c_void_p(primals_509.data_ptr()), c_void_p(primals_510.data_ptr()), c_void_p(buf990.data_ptr()), c_void_p(buf992.data_ptr()), c_void_p(buf993.data_ptr()), c_void_p(buf995.data_ptr()), c_void_p(buf996.data_ptr()), c_void_p(buf997.data_ptr()))
    del primals_510
    # Source Nodes: [x_657], Original ATen: [aten.convolution]
    buf998 = extern_kernels.convolution(buf997, primals_511, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf998, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf999 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1000 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1002 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1003 = buf914; del buf914  # reuse
    buf1004 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_135(c_void_p(buf998.data_ptr()), c_void_p(primals_512.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(buf996.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(buf1000.data_ptr()), c_void_p(buf1002.data_ptr()), c_void_p(buf1003.data_ptr()), c_void_p(buf1004.data_ptr()))
    del primals_513
    # Source Nodes: [x_660], Original ATen: [aten.convolution]
    buf1005 = extern_kernels.convolution(buf1004, primals_514, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1005, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_662], Original ATen: [aten.convolution]
    buf1006 = extern_kernels.convolution(buf1005, primals_515, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1006, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1007 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1008 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1010 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1011 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_136(c_void_p(buf1006.data_ptr()), c_void_p(primals_516.data_ptr()), c_void_p(primals_517.data_ptr()), c_void_p(buf1007.data_ptr()), c_void_p(buf1008.data_ptr()), c_void_p(buf1010.data_ptr()), c_void_p(buf1011.data_ptr()))
    del primals_517
    # Source Nodes: [x_665], Original ATen: [aten.convolution]
    buf1012 = extern_kernels.convolution(buf1011, primals_518, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1012, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_667], Original ATen: [aten.convolution]
    buf1013 = extern_kernels.convolution(buf1012, primals_519, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1013, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1014 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1015 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1017 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1018 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf1019 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    buf1020 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_137(c_void_p(buf1013.data_ptr()), c_void_p(buf996.data_ptr()), c_void_p(buf1003.data_ptr()), c_void_p(buf1014.data_ptr()), c_void_p(buf1015.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(buf1018.data_ptr()), c_void_p(buf1019.data_ptr()), c_void_p(buf1020.data_ptr()))
    # Source Nodes: [x_670], Original ATen: [aten.convolution]
    buf1021 = extern_kernels.convolution(buf1020, primals_522, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1021, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_672], Original ATen: [aten.convolution]
    buf1022 = extern_kernels.convolution(buf1021, primals_523, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1022, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1023 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1024 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1026 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1027 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_138(c_void_p(buf1022.data_ptr()), c_void_p(primals_524.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(buf1023.data_ptr()), c_void_p(buf1024.data_ptr()), c_void_p(buf1026.data_ptr()), c_void_p(buf1027.data_ptr()))
    del primals_525
    # Source Nodes: [x_675], Original ATen: [aten.convolution]
    buf1028 = extern_kernels.convolution(buf1027, primals_526, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1028, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_677], Original ATen: [aten.convolution]
    buf1029 = extern_kernels.convolution(buf1028, primals_527, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1029, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1030 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1031 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1033 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1034 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    buf1035 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_139(c_void_p(buf1029.data_ptr()), c_void_p(buf1003.data_ptr()), c_void_p(buf1030.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(buf1033.data_ptr()), c_void_p(buf1034.data_ptr()), c_void_p(buf1035.data_ptr()))
    # Source Nodes: [x_680], Original ATen: [aten.convolution]
    buf1036 = extern_kernels.convolution(buf1020, primals_530, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1036, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_682], Original ATen: [aten.convolution]
    buf1037 = extern_kernels.convolution(buf1036, primals_531, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1037, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1038 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1039 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1041 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1042 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_140(c_void_p(buf1037.data_ptr()), c_void_p(primals_532.data_ptr()), c_void_p(primals_533.data_ptr()), c_void_p(buf1038.data_ptr()), c_void_p(buf1039.data_ptr()), c_void_p(buf1041.data_ptr()), c_void_p(buf1042.data_ptr()))
    del primals_533
    # Source Nodes: [x_685], Original ATen: [aten.convolution]
    buf1043 = extern_kernels.convolution(buf1042, primals_534, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1043, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_687], Original ATen: [aten.convolution]
    buf1044 = extern_kernels.convolution(buf1043, primals_535, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1044, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1045 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1046 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1048 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_141(c_void_p(buf1044.data_ptr()), c_void_p(buf1045.data_ptr()), c_void_p(buf1046.data_ptr()), c_void_p(buf1048.data_ptr()))
    # Source Nodes: [x_690], Original ATen: [aten.convolution]
    buf1049 = extern_kernels.convolution(buf1020, primals_538, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1049, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_692], Original ATen: [aten.convolution]
    buf1050 = extern_kernels.convolution(buf1049, primals_539, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1050, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1051 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1052 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1054 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1055 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_142(c_void_p(buf1050.data_ptr()), c_void_p(primals_540.data_ptr()), c_void_p(primals_541.data_ptr()), c_void_p(buf1051.data_ptr()), c_void_p(buf1052.data_ptr()), c_void_p(buf1054.data_ptr()), c_void_p(buf1055.data_ptr()))
    del primals_541
    # Source Nodes: [x_695], Original ATen: [aten.convolution]
    buf1056 = extern_kernels.convolution(buf1055, primals_542, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1056, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_697], Original ATen: [aten.convolution]
    buf1057 = extern_kernels.convolution(buf1056, primals_543, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1057, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1058 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1059 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1061 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1094 = buf990; del buf990  # reuse
    buf1062 = reinterpret_tensor(buf1094, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf1063 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_143(c_void_p(buf1057.data_ptr()), c_void_p(buf1044.data_ptr()), c_void_p(buf1045.data_ptr()), c_void_p(buf1046.data_ptr()), c_void_p(primals_536.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_544.data_ptr()), c_void_p(primals_545.data_ptr()), c_void_p(buf1058.data_ptr()), c_void_p(buf1059.data_ptr()), c_void_p(buf1061.data_ptr()), c_void_p(buf1062.data_ptr()), c_void_p(buf1063.data_ptr()))
    del primals_537
    del primals_545
    # Source Nodes: [x_700], Original ATen: [aten.convolution]
    buf1064 = extern_kernels.convolution(buf1063, primals_546, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1064, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_702], Original ATen: [aten.convolution]
    buf1065 = extern_kernels.convolution(buf1064, primals_547, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1065, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1066 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1067 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1069 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1070 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_144(c_void_p(buf1065.data_ptr()), c_void_p(primals_548.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(buf1066.data_ptr()), c_void_p(buf1067.data_ptr()), c_void_p(buf1069.data_ptr()), c_void_p(buf1070.data_ptr()))
    del primals_549
    # Source Nodes: [x_705], Original ATen: [aten.convolution]
    buf1071 = extern_kernels.convolution(buf1070, primals_550, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1071, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_707], Original ATen: [aten.convolution]
    buf1072 = extern_kernels.convolution(buf1071, primals_551, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1072, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1073 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1074 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1076 = empty((432, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_145(c_void_p(buf1072.data_ptr()), c_void_p(buf1073.data_ptr()), c_void_p(buf1074.data_ptr()), c_void_p(buf1076.data_ptr()))
    # Source Nodes: [x_710], Original ATen: [aten.convolution]
    buf1077 = extern_kernels.convolution(buf1004, primals_554, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1077, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_712], Original ATen: [aten.convolution]
    buf1078 = extern_kernels.convolution(buf1077, primals_555, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1078, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1079 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1080 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1082 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1083 = empty_strided((8, 432, 21, 21), (190512, 1, 9072, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_146(c_void_p(buf1078.data_ptr()), c_void_p(primals_556.data_ptr()), c_void_p(primals_557.data_ptr()), c_void_p(buf1079.data_ptr()), c_void_p(buf1080.data_ptr()), c_void_p(buf1082.data_ptr()), c_void_p(buf1083.data_ptr()))
    del primals_557
    # Source Nodes: [x_715], Original ATen: [aten.convolution]
    buf1084 = extern_kernels.convolution(buf1083, primals_558, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf1084, (8, 432, 21, 21), (190512, 1, 9072, 432))
    # Source Nodes: [x_717], Original ATen: [aten.convolution]
    buf1085 = extern_kernels.convolution(buf1084, primals_559, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1085, (8, 432, 21, 21), (190512, 1, 9072, 432))
    buf1086 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1087 = empty_strided((1, 432, 1, 1), (432, 1, 432, 432), device='cpu', dtype=torch.float32)
    buf1089 = empty((432, ), device='cpu', dtype=torch.float32)
    buf1090 = reinterpret_tensor(buf1094, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf1091 = reinterpret_tensor(buf1094, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf1092 = reinterpret_tensor(buf1094, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf1093 = reinterpret_tensor(buf1094, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_147(c_void_p(buf1085.data_ptr()), c_void_p(buf1013.data_ptr()), c_void_p(buf1014.data_ptr()), c_void_p(buf1015.data_ptr()), c_void_p(primals_520.data_ptr()), c_void_p(primals_521.data_ptr()), c_void_p(buf1018.data_ptr()), c_void_p(buf1029.data_ptr()), c_void_p(buf1030.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(primals_528.data_ptr()), c_void_p(primals_529.data_ptr()), c_void_p(buf1034.data_ptr()), c_void_p(buf1072.data_ptr()), c_void_p(buf1073.data_ptr()), c_void_p(buf1074.data_ptr()), c_void_p(primals_552.data_ptr()), c_void_p(primals_553.data_ptr()), c_void_p(primals_560.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(buf1003.data_ptr()), c_void_p(buf1086.data_ptr()), c_void_p(buf1087.data_ptr()), c_void_p(buf1089.data_ptr()), c_void_p(buf1090.data_ptr()), c_void_p(buf1091.data_ptr()), c_void_p(buf1092.data_ptr()), c_void_p(buf1093.data_ptr()))
    del buf1018
    del buf1034
    del buf1062
    del buf1090
    del buf1091
    del buf1092
    del buf1093
    del primals_521
    del primals_529
    del primals_553
    del primals_561
    # Source Nodes: [x_720], Original ATen: [aten.convolution]
    buf1095 = extern_kernels.convolution(buf997, primals_562, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1095, (8, 864, 21, 21), (381024, 1, 18144, 864))
    buf1096 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1097 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1099 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1100 = reinterpret_tensor(buf602, (8, 864, 21, 21), (381024, 1, 18144, 864), 0); del buf602  # reuse
    buf1101 = empty_strided((8, 2160, 21, 21), (952560, 1, 45360, 2160), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_148(c_void_p(buf1095.data_ptr()), c_void_p(primals_563.data_ptr()), c_void_p(primals_564.data_ptr()), c_void_p(buf1094.data_ptr()), c_void_p(buf1096.data_ptr()), c_void_p(buf1097.data_ptr()), c_void_p(buf1099.data_ptr()), c_void_p(buf1100.data_ptr()), c_void_p(buf1101.data_ptr()))
    del primals_564
    # Source Nodes: [x_723], Original ATen: [aten.convolution]
    buf1102 = extern_kernels.convolution(buf1101, primals_565, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1102, (8, 864, 21, 21), (381024, 1, 18144, 864))
    buf1103 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1104 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1106 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1107 = reinterpret_tensor(buf586, (8, 864, 21, 21), (381024, 1, 18144, 864), 0); del buf586  # reuse
    buf1108 = empty_strided((8, 864, 25, 25), (540000, 1, 21600, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_relu_149(c_void_p(buf1102.data_ptr()), c_void_p(primals_566.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(buf1100.data_ptr()), c_void_p(buf1103.data_ptr()), c_void_p(buf1104.data_ptr()), c_void_p(buf1106.data_ptr()), c_void_p(buf1107.data_ptr()), c_void_p(buf1108.data_ptr()))
    del primals_567
    # Source Nodes: [x_728], Original ATen: [aten.convolution]
    buf1109 = extern_kernels.convolution(buf1108, primals_21, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1109, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_730], Original ATen: [aten.convolution]
    buf1110 = extern_kernels.convolution(buf1109, primals_568, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1110, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1111 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1112 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1114 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1115 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_150(c_void_p(buf1110.data_ptr()), c_void_p(primals_569.data_ptr()), c_void_p(primals_570.data_ptr()), c_void_p(buf1111.data_ptr()), c_void_p(buf1112.data_ptr()), c_void_p(buf1114.data_ptr()), c_void_p(buf1115.data_ptr()))
    del primals_570
    # Source Nodes: [x_733], Original ATen: [aten.convolution]
    buf1116 = extern_kernels.convolution(buf1115, primals_571, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1116, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_735], Original ATen: [aten.convolution]
    buf1117 = extern_kernels.convolution(buf1116, primals_572, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1117, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1118 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1119 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1121 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1122 = empty_strided((8, 864, 23, 23), (457056, 1, 19872, 864), device='cpu', dtype=torch.float32)
    buf1186 = empty_strided((8, 864, 23, 23), (457056, 1, 19872, 864), device='cpu', dtype=torch.float32)
    buf1123 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1124 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    buf1125 = empty_strided((8, 864, 21, 21), (381024, 1, 18144, 864), device='cpu', dtype=torch.float32)
    buf1531 = empty_strided((8, 864, 21, 21), (381024, 1, 18144, 864), device='cpu', dtype=torch.bool)
    buf1126 = empty_strided((8, 864, 27, 27), (629856, 1, 23328, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_relu_threshold_backward_151(c_void_p(buf1117.data_ptr()), c_void_p(buf1100.data_ptr()), c_void_p(buf1107.data_ptr()), c_void_p(buf1118.data_ptr()), c_void_p(buf1119.data_ptr()), c_void_p(buf1121.data_ptr()), c_void_p(buf1122.data_ptr()), c_void_p(buf1186.data_ptr()), c_void_p(buf1123.data_ptr()), c_void_p(buf1124.data_ptr()), c_void_p(buf1125.data_ptr()), c_void_p(buf1531.data_ptr()), c_void_p(buf1126.data_ptr()))
    # Source Nodes: [x_742], Original ATen: [aten.convolution]
    buf1127 = extern_kernels.convolution(buf1126, primals_22, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1127, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_744], Original ATen: [aten.convolution]
    buf1128 = extern_kernels.convolution(buf1127, primals_575, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1128, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1129 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1130 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1132 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1133 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_152(c_void_p(buf1128.data_ptr()), c_void_p(primals_576.data_ptr()), c_void_p(primals_577.data_ptr()), c_void_p(buf1129.data_ptr()), c_void_p(buf1130.data_ptr()), c_void_p(buf1132.data_ptr()), c_void_p(buf1133.data_ptr()))
    del primals_577
    # Source Nodes: [x_747], Original ATen: [aten.convolution]
    buf1134 = extern_kernels.convolution(buf1133, primals_578, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1134, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_749], Original ATen: [aten.convolution]
    buf1135 = extern_kernels.convolution(buf1134, primals_579, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1135, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1136 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1137 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1139 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1140 = empty_strided((8, 864, 23, 23), (457056, 1, 19872, 864), device='cpu', dtype=torch.float32)
    buf1141 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1142 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    buf1143 = empty_strided((8, 864, 25, 25), (540000, 1, 21600, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_max_pool2d_with_indices_153(c_void_p(buf1135.data_ptr()), c_void_p(buf1107.data_ptr()), c_void_p(buf1125.data_ptr()), c_void_p(buf1136.data_ptr()), c_void_p(buf1137.data_ptr()), c_void_p(buf1139.data_ptr()), c_void_p(buf1140.data_ptr()), c_void_p(buf1141.data_ptr()), c_void_p(buf1142.data_ptr()), c_void_p(buf1143.data_ptr()))
    del buf1107
    # Source Nodes: [x_756], Original ATen: [aten.convolution]
    buf1144 = extern_kernels.convolution(buf1143, primals_23, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1144, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_758], Original ATen: [aten.convolution]
    buf1145 = extern_kernels.convolution(buf1144, primals_582, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1145, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1146 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1147 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1149 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1150 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_154(c_void_p(buf1145.data_ptr()), c_void_p(primals_583.data_ptr()), c_void_p(primals_584.data_ptr()), c_void_p(buf1146.data_ptr()), c_void_p(buf1147.data_ptr()), c_void_p(buf1149.data_ptr()), c_void_p(buf1150.data_ptr()))
    del primals_584
    # Source Nodes: [x_761], Original ATen: [aten.convolution]
    buf1151 = extern_kernels.convolution(buf1150, primals_585, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1151, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_763], Original ATen: [aten.convolution]
    buf1152 = extern_kernels.convolution(buf1151, primals_586, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1152, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1153 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1154 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1156 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1157 = empty_strided((8, 864, 23, 23), (457056, 1, 19872, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_constant_pad_nd_155(c_void_p(buf1152.data_ptr()), c_void_p(buf1125.data_ptr()), c_void_p(buf1153.data_ptr()), c_void_p(buf1154.data_ptr()), c_void_p(buf1156.data_ptr()), c_void_p(buf1157.data_ptr()))
    # Source Nodes: [x_768], Original ATen: [aten.convolution]
    buf1158 = extern_kernels.convolution(buf1157, primals_24, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1158, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_770], Original ATen: [aten.convolution]
    buf1159 = extern_kernels.convolution(buf1158, primals_589, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1159, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1160 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1161 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1163 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1164 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_156(c_void_p(buf1159.data_ptr()), c_void_p(primals_590.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(buf1160.data_ptr()), c_void_p(buf1161.data_ptr()), c_void_p(buf1163.data_ptr()), c_void_p(buf1164.data_ptr()))
    del primals_591
    # Source Nodes: [x_773], Original ATen: [aten.convolution]
    buf1165 = extern_kernels.convolution(buf1164, primals_592, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1165, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_775], Original ATen: [aten.convolution]
    buf1166 = extern_kernels.convolution(buf1165, primals_593, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1166, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1167 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1168 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1170 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1209 = empty((8, 4320, 11, 11), device='cpu', dtype=torch.float32)
    buf1171 = reinterpret_tensor(buf1209, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf1172 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_157(c_void_p(buf1166.data_ptr()), c_void_p(buf1152.data_ptr()), c_void_p(buf1153.data_ptr()), c_void_p(buf1154.data_ptr()), c_void_p(primals_587.data_ptr()), c_void_p(primals_588.data_ptr()), c_void_p(primals_594.data_ptr()), c_void_p(primals_595.data_ptr()), c_void_p(buf1167.data_ptr()), c_void_p(buf1168.data_ptr()), c_void_p(buf1170.data_ptr()), c_void_p(buf1171.data_ptr()), c_void_p(buf1172.data_ptr()))
    del primals_588
    del primals_595
    # Source Nodes: [x_778], Original ATen: [aten.convolution]
    buf1173 = extern_kernels.convolution(buf1172, primals_596, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1173, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_780], Original ATen: [aten.convolution]
    buf1174 = extern_kernels.convolution(buf1173, primals_597, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1174, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1175 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1176 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1178 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1179 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_158(c_void_p(buf1174.data_ptr()), c_void_p(primals_598.data_ptr()), c_void_p(primals_599.data_ptr()), c_void_p(buf1175.data_ptr()), c_void_p(buf1176.data_ptr()), c_void_p(buf1178.data_ptr()), c_void_p(buf1179.data_ptr()))
    del primals_599
    # Source Nodes: [x_783], Original ATen: [aten.convolution]
    buf1180 = extern_kernels.convolution(buf1179, primals_600, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1180, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_785], Original ATen: [aten.convolution]
    buf1181 = extern_kernels.convolution(buf1180, primals_601, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1181, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1182 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1183 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1185 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_159(c_void_p(buf1181.data_ptr()), c_void_p(buf1182.data_ptr()), c_void_p(buf1183.data_ptr()), c_void_p(buf1185.data_ptr()))
    # Source Nodes: [x_792], Original ATen: [aten.convolution]
    buf1187 = extern_kernels.convolution(buf1186, primals_25, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1187, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_794], Original ATen: [aten.convolution]
    buf1188 = extern_kernels.convolution(buf1187, primals_604, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1188, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1189 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1190 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1192 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1193 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_160(c_void_p(buf1188.data_ptr()), c_void_p(primals_605.data_ptr()), c_void_p(primals_606.data_ptr()), c_void_p(buf1189.data_ptr()), c_void_p(buf1190.data_ptr()), c_void_p(buf1192.data_ptr()), c_void_p(buf1193.data_ptr()))
    del primals_606
    # Source Nodes: [x_797], Original ATen: [aten.convolution]
    buf1194 = extern_kernels.convolution(buf1193, primals_607, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1194, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_799], Original ATen: [aten.convolution]
    buf1195 = extern_kernels.convolution(buf1194, primals_608, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1195, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1196 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1197 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1199 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_161(c_void_p(buf1195.data_ptr()), c_void_p(buf1196.data_ptr()), c_void_p(buf1197.data_ptr()), c_void_p(buf1199.data_ptr()))
    # Source Nodes: [x_804], Original ATen: [aten.convolution]
    buf1200 = extern_kernels.convolution(buf1125, primals_26, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1200, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1201 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1202 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1204 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1205 = reinterpret_tensor(buf1209, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    buf1206 = reinterpret_tensor(buf1209, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf1207 = reinterpret_tensor(buf1209, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf1208 = reinterpret_tensor(buf1209, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf1210 = empty_strided((8, 2160, 11, 11), (261360, 1, 23760, 2160), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_avg_pool2d_162(c_void_p(buf1200.data_ptr()), c_void_p(buf1195.data_ptr()), c_void_p(buf1196.data_ptr()), c_void_p(buf1197.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_610.data_ptr()), c_void_p(primals_611.data_ptr()), c_void_p(primals_612.data_ptr()), c_void_p(buf1117.data_ptr()), c_void_p(buf1118.data_ptr()), c_void_p(buf1119.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_574.data_ptr()), c_void_p(buf1123.data_ptr()), c_void_p(buf1135.data_ptr()), c_void_p(buf1136.data_ptr()), c_void_p(buf1137.data_ptr()), c_void_p(primals_580.data_ptr()), c_void_p(primals_581.data_ptr()), c_void_p(buf1141.data_ptr()), c_void_p(buf1181.data_ptr()), c_void_p(buf1182.data_ptr()), c_void_p(buf1183.data_ptr()), c_void_p(primals_602.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(buf1101.data_ptr()), c_void_p(buf1201.data_ptr()), c_void_p(buf1202.data_ptr()), c_void_p(buf1204.data_ptr()), c_void_p(buf1205.data_ptr()), c_void_p(buf1206.data_ptr()), c_void_p(buf1207.data_ptr()), c_void_p(buf1208.data_ptr()), c_void_p(buf1210.data_ptr()))
    del buf1171
    del buf1205
    del buf1206
    del buf1207
    del buf1208
    del primals_574
    del primals_581
    del primals_603
    del primals_610
    del primals_612
    # Source Nodes: [x_path1_3], Original ATen: [aten.convolution]
    buf1211 = extern_kernels.convolution(buf1210, primals_613, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1211, (8, 432, 11, 11), (52272, 1, 4752, 432))
    buf1212 = reinterpret_tensor(buf1094, (8, 2160, 21, 21), (952560, 1, 45360, 2160), 0); del buf1094  # reuse
    buf1213 = empty_strided((8, 2160, 11, 11), (261360, 1, 23760, 2160), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_constant_pad_nd_163(c_void_p(buf1101.data_ptr()), c_void_p(buf1212.data_ptr()), c_void_p(buf1213.data_ptr()))
    # Source Nodes: [x_path2_3], Original ATen: [aten.convolution]
    buf1214 = extern_kernels.convolution(buf1213, primals_614, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1214, (8, 432, 11, 11), (52272, 1, 4752, 432))
    buf1215 = buf1141; del buf1141  # reuse
    buf1216 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1217 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1219 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1220 = buf1123; del buf1123  # reuse
    buf1221 = empty_strided((8, 4320, 11, 11), (522720, 1, 47520, 4320), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_164(c_void_p(buf1211.data_ptr()), c_void_p(buf1214.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_616.data_ptr()), c_void_p(buf1209.data_ptr()), c_void_p(buf1215.data_ptr()), c_void_p(buf1216.data_ptr()), c_void_p(buf1217.data_ptr()), c_void_p(buf1219.data_ptr()), c_void_p(buf1220.data_ptr()), c_void_p(buf1221.data_ptr()))
    del buf1211
    del buf1214
    del primals_616
    # Source Nodes: [x_808], Original ATen: [aten.convolution]
    buf1222 = extern_kernels.convolution(buf1221, primals_617, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1222, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1223 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1224 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1226 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1227 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1228 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_165(c_void_p(buf1222.data_ptr()), c_void_p(primals_618.data_ptr()), c_void_p(primals_619.data_ptr()), c_void_p(buf1220.data_ptr()), c_void_p(buf1223.data_ptr()), c_void_p(buf1224.data_ptr()), c_void_p(buf1226.data_ptr()), c_void_p(buf1227.data_ptr()), c_void_p(buf1228.data_ptr()))
    del primals_619
    # Source Nodes: [x_811], Original ATen: [aten.convolution]
    buf1229 = extern_kernels.convolution(buf1228, primals_620, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1229, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_813], Original ATen: [aten.convolution]
    buf1230 = extern_kernels.convolution(buf1229, primals_621, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1230, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1231 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1232 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1234 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1235 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_166(c_void_p(buf1230.data_ptr()), c_void_p(primals_622.data_ptr()), c_void_p(primals_623.data_ptr()), c_void_p(buf1231.data_ptr()), c_void_p(buf1232.data_ptr()), c_void_p(buf1234.data_ptr()), c_void_p(buf1235.data_ptr()))
    del primals_623
    # Source Nodes: [x_816], Original ATen: [aten.convolution]
    buf1236 = extern_kernels.convolution(buf1235, primals_624, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1236, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_818], Original ATen: [aten.convolution]
    buf1237 = extern_kernels.convolution(buf1236, primals_625, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1237, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1238 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1239 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1241 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1242 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1243 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    buf1244 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_167(c_void_p(buf1237.data_ptr()), c_void_p(buf1220.data_ptr()), c_void_p(buf1227.data_ptr()), c_void_p(buf1238.data_ptr()), c_void_p(buf1239.data_ptr()), c_void_p(buf1241.data_ptr()), c_void_p(buf1242.data_ptr()), c_void_p(buf1243.data_ptr()), c_void_p(buf1244.data_ptr()))
    # Source Nodes: [x_821], Original ATen: [aten.convolution]
    buf1245 = extern_kernels.convolution(buf1244, primals_628, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1245, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_823], Original ATen: [aten.convolution]
    buf1246 = extern_kernels.convolution(buf1245, primals_629, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1246, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1247 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1248 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1250 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1251 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_168(c_void_p(buf1246.data_ptr()), c_void_p(primals_630.data_ptr()), c_void_p(primals_631.data_ptr()), c_void_p(buf1247.data_ptr()), c_void_p(buf1248.data_ptr()), c_void_p(buf1250.data_ptr()), c_void_p(buf1251.data_ptr()))
    del primals_631
    # Source Nodes: [x_826], Original ATen: [aten.convolution]
    buf1252 = extern_kernels.convolution(buf1251, primals_632, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1252, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_828], Original ATen: [aten.convolution]
    buf1253 = extern_kernels.convolution(buf1252, primals_633, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1253, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1254 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1255 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1257 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1258 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1259 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_169(c_void_p(buf1253.data_ptr()), c_void_p(buf1227.data_ptr()), c_void_p(buf1254.data_ptr()), c_void_p(buf1255.data_ptr()), c_void_p(buf1257.data_ptr()), c_void_p(buf1258.data_ptr()), c_void_p(buf1259.data_ptr()))
    # Source Nodes: [x_831], Original ATen: [aten.convolution]
    buf1260 = extern_kernels.convolution(buf1244, primals_636, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1260, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_833], Original ATen: [aten.convolution]
    buf1261 = extern_kernels.convolution(buf1260, primals_637, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1261, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1262 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1263 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1265 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1266 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_170(c_void_p(buf1261.data_ptr()), c_void_p(primals_638.data_ptr()), c_void_p(primals_639.data_ptr()), c_void_p(buf1262.data_ptr()), c_void_p(buf1263.data_ptr()), c_void_p(buf1265.data_ptr()), c_void_p(buf1266.data_ptr()))
    del primals_639
    # Source Nodes: [x_836], Original ATen: [aten.convolution]
    buf1267 = extern_kernels.convolution(buf1266, primals_640, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1267, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_838], Original ATen: [aten.convolution]
    buf1268 = extern_kernels.convolution(buf1267, primals_641, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1268, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1269 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1270 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1272 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_171(c_void_p(buf1268.data_ptr()), c_void_p(buf1269.data_ptr()), c_void_p(buf1270.data_ptr()), c_void_p(buf1272.data_ptr()))
    # Source Nodes: [x_841], Original ATen: [aten.convolution]
    buf1273 = extern_kernels.convolution(buf1244, primals_644, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1273, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_843], Original ATen: [aten.convolution]
    buf1274 = extern_kernels.convolution(buf1273, primals_645, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1274, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1275 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1276 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1278 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1279 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_172(c_void_p(buf1274.data_ptr()), c_void_p(primals_646.data_ptr()), c_void_p(primals_647.data_ptr()), c_void_p(buf1275.data_ptr()), c_void_p(buf1276.data_ptr()), c_void_p(buf1278.data_ptr()), c_void_p(buf1279.data_ptr()))
    del primals_647
    # Source Nodes: [x_846], Original ATen: [aten.convolution]
    buf1280 = extern_kernels.convolution(buf1279, primals_648, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1280, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_848], Original ATen: [aten.convolution]
    buf1281 = extern_kernels.convolution(buf1280, primals_649, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1281, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1282 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1283 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1285 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1318 = buf1209; del buf1209  # reuse
    buf1286 = reinterpret_tensor(buf1318, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf1287 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_173(c_void_p(buf1281.data_ptr()), c_void_p(buf1268.data_ptr()), c_void_p(buf1269.data_ptr()), c_void_p(buf1270.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(primals_643.data_ptr()), c_void_p(primals_650.data_ptr()), c_void_p(primals_651.data_ptr()), c_void_p(buf1282.data_ptr()), c_void_p(buf1283.data_ptr()), c_void_p(buf1285.data_ptr()), c_void_p(buf1286.data_ptr()), c_void_p(buf1287.data_ptr()))
    del primals_643
    del primals_651
    # Source Nodes: [x_851], Original ATen: [aten.convolution]
    buf1288 = extern_kernels.convolution(buf1287, primals_652, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1288, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_853], Original ATen: [aten.convolution]
    buf1289 = extern_kernels.convolution(buf1288, primals_653, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1289, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1290 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1291 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1293 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1294 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_174(c_void_p(buf1289.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_655.data_ptr()), c_void_p(buf1290.data_ptr()), c_void_p(buf1291.data_ptr()), c_void_p(buf1293.data_ptr()), c_void_p(buf1294.data_ptr()))
    del primals_655
    # Source Nodes: [x_856], Original ATen: [aten.convolution]
    buf1295 = extern_kernels.convolution(buf1294, primals_656, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1295, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_858], Original ATen: [aten.convolution]
    buf1296 = extern_kernels.convolution(buf1295, primals_657, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1296, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1297 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1298 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1300 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_175(c_void_p(buf1296.data_ptr()), c_void_p(buf1297.data_ptr()), c_void_p(buf1298.data_ptr()), c_void_p(buf1300.data_ptr()))
    # Source Nodes: [x_861], Original ATen: [aten.convolution]
    buf1301 = extern_kernels.convolution(buf1228, primals_660, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1301, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_863], Original ATen: [aten.convolution]
    buf1302 = extern_kernels.convolution(buf1301, primals_661, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1302, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1303 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1304 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1306 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1307 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_176(c_void_p(buf1302.data_ptr()), c_void_p(primals_662.data_ptr()), c_void_p(primals_663.data_ptr()), c_void_p(buf1303.data_ptr()), c_void_p(buf1304.data_ptr()), c_void_p(buf1306.data_ptr()), c_void_p(buf1307.data_ptr()))
    del primals_663
    # Source Nodes: [x_866], Original ATen: [aten.convolution]
    buf1308 = extern_kernels.convolution(buf1307, primals_664, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1308, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_868], Original ATen: [aten.convolution]
    buf1309 = extern_kernels.convolution(buf1308, primals_665, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1309, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1310 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1311 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1313 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1314 = reinterpret_tensor(buf1318, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf1315 = reinterpret_tensor(buf1318, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf1316 = reinterpret_tensor(buf1318, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf1317 = reinterpret_tensor(buf1318, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_177(c_void_p(buf1309.data_ptr()), c_void_p(buf1237.data_ptr()), c_void_p(buf1238.data_ptr()), c_void_p(buf1239.data_ptr()), c_void_p(primals_626.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(buf1242.data_ptr()), c_void_p(buf1253.data_ptr()), c_void_p(buf1254.data_ptr()), c_void_p(buf1255.data_ptr()), c_void_p(primals_634.data_ptr()), c_void_p(primals_635.data_ptr()), c_void_p(buf1258.data_ptr()), c_void_p(buf1296.data_ptr()), c_void_p(buf1297.data_ptr()), c_void_p(buf1298.data_ptr()), c_void_p(primals_658.data_ptr()), c_void_p(primals_659.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_667.data_ptr()), c_void_p(buf1227.data_ptr()), c_void_p(buf1310.data_ptr()), c_void_p(buf1311.data_ptr()), c_void_p(buf1313.data_ptr()), c_void_p(buf1314.data_ptr()), c_void_p(buf1315.data_ptr()), c_void_p(buf1316.data_ptr()), c_void_p(buf1317.data_ptr()))
    del buf1286
    del buf1314
    del buf1315
    del buf1316
    del buf1317
    del primals_627
    del primals_635
    del primals_659
    del primals_667
    # Source Nodes: [x_871], Original ATen: [aten.convolution]
    buf1319 = extern_kernels.convolution(buf1221, primals_668, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1319, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1320 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1321 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1323 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1324 = buf1258; del buf1258  # reuse
    buf1325 = empty_strided((8, 4320, 11, 11), (522720, 1, 47520, 4320), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_178(c_void_p(buf1319.data_ptr()), c_void_p(primals_669.data_ptr()), c_void_p(primals_670.data_ptr()), c_void_p(buf1318.data_ptr()), c_void_p(buf1320.data_ptr()), c_void_p(buf1321.data_ptr()), c_void_p(buf1323.data_ptr()), c_void_p(buf1324.data_ptr()), c_void_p(buf1325.data_ptr()))
    del primals_670
    # Source Nodes: [x_874], Original ATen: [aten.convolution]
    buf1326 = extern_kernels.convolution(buf1325, primals_671, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1326, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1327 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1328 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1330 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1331 = buf1242; del buf1242  # reuse
    buf1332 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_179(c_void_p(buf1326.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_673.data_ptr()), c_void_p(buf1324.data_ptr()), c_void_p(buf1327.data_ptr()), c_void_p(buf1328.data_ptr()), c_void_p(buf1330.data_ptr()), c_void_p(buf1331.data_ptr()), c_void_p(buf1332.data_ptr()))
    del primals_673
    # Source Nodes: [x_877], Original ATen: [aten.convolution]
    buf1333 = extern_kernels.convolution(buf1332, primals_674, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1333, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_879], Original ATen: [aten.convolution]
    buf1334 = extern_kernels.convolution(buf1333, primals_675, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1334, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1335 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1336 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1338 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1339 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_180(c_void_p(buf1334.data_ptr()), c_void_p(primals_676.data_ptr()), c_void_p(primals_677.data_ptr()), c_void_p(buf1335.data_ptr()), c_void_p(buf1336.data_ptr()), c_void_p(buf1338.data_ptr()), c_void_p(buf1339.data_ptr()))
    del primals_677
    # Source Nodes: [x_882], Original ATen: [aten.convolution]
    buf1340 = extern_kernels.convolution(buf1339, primals_678, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1340, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_884], Original ATen: [aten.convolution]
    buf1341 = extern_kernels.convolution(buf1340, primals_679, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1341, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1342 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1343 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1345 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1346 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1347 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    buf1348 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_181(c_void_p(buf1341.data_ptr()), c_void_p(buf1324.data_ptr()), c_void_p(buf1331.data_ptr()), c_void_p(buf1342.data_ptr()), c_void_p(buf1343.data_ptr()), c_void_p(buf1345.data_ptr()), c_void_p(buf1346.data_ptr()), c_void_p(buf1347.data_ptr()), c_void_p(buf1348.data_ptr()))
    # Source Nodes: [x_887], Original ATen: [aten.convolution]
    buf1349 = extern_kernels.convolution(buf1348, primals_682, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1349, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_889], Original ATen: [aten.convolution]
    buf1350 = extern_kernels.convolution(buf1349, primals_683, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1350, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1351 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1352 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1354 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1355 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_182(c_void_p(buf1350.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_685.data_ptr()), c_void_p(buf1351.data_ptr()), c_void_p(buf1352.data_ptr()), c_void_p(buf1354.data_ptr()), c_void_p(buf1355.data_ptr()))
    del primals_685
    # Source Nodes: [x_892], Original ATen: [aten.convolution]
    buf1356 = extern_kernels.convolution(buf1355, primals_686, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1356, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_894], Original ATen: [aten.convolution]
    buf1357 = extern_kernels.convolution(buf1356, primals_687, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1357, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1358 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1359 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1361 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1362 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1363 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_183(c_void_p(buf1357.data_ptr()), c_void_p(buf1331.data_ptr()), c_void_p(buf1358.data_ptr()), c_void_p(buf1359.data_ptr()), c_void_p(buf1361.data_ptr()), c_void_p(buf1362.data_ptr()), c_void_p(buf1363.data_ptr()))
    # Source Nodes: [x_897], Original ATen: [aten.convolution]
    buf1364 = extern_kernels.convolution(buf1348, primals_690, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1364, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_899], Original ATen: [aten.convolution]
    buf1365 = extern_kernels.convolution(buf1364, primals_691, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1365, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1366 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1367 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1369 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1370 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_184(c_void_p(buf1365.data_ptr()), c_void_p(primals_692.data_ptr()), c_void_p(primals_693.data_ptr()), c_void_p(buf1366.data_ptr()), c_void_p(buf1367.data_ptr()), c_void_p(buf1369.data_ptr()), c_void_p(buf1370.data_ptr()))
    del primals_693
    # Source Nodes: [x_902], Original ATen: [aten.convolution]
    buf1371 = extern_kernels.convolution(buf1370, primals_694, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1371, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_904], Original ATen: [aten.convolution]
    buf1372 = extern_kernels.convolution(buf1371, primals_695, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1372, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1373 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1374 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1376 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_185(c_void_p(buf1372.data_ptr()), c_void_p(buf1373.data_ptr()), c_void_p(buf1374.data_ptr()), c_void_p(buf1376.data_ptr()))
    # Source Nodes: [x_907], Original ATen: [aten.convolution]
    buf1377 = extern_kernels.convolution(buf1348, primals_698, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1377, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_909], Original ATen: [aten.convolution]
    buf1378 = extern_kernels.convolution(buf1377, primals_699, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1378, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1379 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1380 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1382 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1383 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_186(c_void_p(buf1378.data_ptr()), c_void_p(primals_700.data_ptr()), c_void_p(primals_701.data_ptr()), c_void_p(buf1379.data_ptr()), c_void_p(buf1380.data_ptr()), c_void_p(buf1382.data_ptr()), c_void_p(buf1383.data_ptr()))
    del primals_701
    # Source Nodes: [x_912], Original ATen: [aten.convolution]
    buf1384 = extern_kernels.convolution(buf1383, primals_702, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1384, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_914], Original ATen: [aten.convolution]
    buf1385 = extern_kernels.convolution(buf1384, primals_703, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1385, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1386 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1387 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1389 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1422 = buf1318; del buf1318  # reuse
    buf1390 = reinterpret_tensor(buf1422, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf1391 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_187(c_void_p(buf1385.data_ptr()), c_void_p(buf1372.data_ptr()), c_void_p(buf1373.data_ptr()), c_void_p(buf1374.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_697.data_ptr()), c_void_p(primals_704.data_ptr()), c_void_p(primals_705.data_ptr()), c_void_p(buf1386.data_ptr()), c_void_p(buf1387.data_ptr()), c_void_p(buf1389.data_ptr()), c_void_p(buf1390.data_ptr()), c_void_p(buf1391.data_ptr()))
    del primals_697
    del primals_705
    # Source Nodes: [x_917], Original ATen: [aten.convolution]
    buf1392 = extern_kernels.convolution(buf1391, primals_706, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1392, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_919], Original ATen: [aten.convolution]
    buf1393 = extern_kernels.convolution(buf1392, primals_707, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1393, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1394 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1395 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1397 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1398 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_188(c_void_p(buf1393.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_709.data_ptr()), c_void_p(buf1394.data_ptr()), c_void_p(buf1395.data_ptr()), c_void_p(buf1397.data_ptr()), c_void_p(buf1398.data_ptr()))
    del primals_709
    # Source Nodes: [x_922], Original ATen: [aten.convolution]
    buf1399 = extern_kernels.convolution(buf1398, primals_710, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1399, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_924], Original ATen: [aten.convolution]
    buf1400 = extern_kernels.convolution(buf1399, primals_711, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1400, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1401 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1402 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1404 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_189(c_void_p(buf1400.data_ptr()), c_void_p(buf1401.data_ptr()), c_void_p(buf1402.data_ptr()), c_void_p(buf1404.data_ptr()))
    # Source Nodes: [x_927], Original ATen: [aten.convolution]
    buf1405 = extern_kernels.convolution(buf1332, primals_714, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1405, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_929], Original ATen: [aten.convolution]
    buf1406 = extern_kernels.convolution(buf1405, primals_715, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1406, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1407 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1408 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1410 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1411 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_190(c_void_p(buf1406.data_ptr()), c_void_p(primals_716.data_ptr()), c_void_p(primals_717.data_ptr()), c_void_p(buf1407.data_ptr()), c_void_p(buf1408.data_ptr()), c_void_p(buf1410.data_ptr()), c_void_p(buf1411.data_ptr()))
    del primals_717
    # Source Nodes: [x_932], Original ATen: [aten.convolution]
    buf1412 = extern_kernels.convolution(buf1411, primals_718, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1412, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_934], Original ATen: [aten.convolution]
    buf1413 = extern_kernels.convolution(buf1412, primals_719, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1413, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1414 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1415 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1417 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1418 = reinterpret_tensor(buf1422, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf1419 = reinterpret_tensor(buf1422, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf1420 = reinterpret_tensor(buf1422, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf1421 = reinterpret_tensor(buf1422, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    cpp_fused__native_batch_norm_legit_functional_add_191(c_void_p(buf1413.data_ptr()), c_void_p(buf1341.data_ptr()), c_void_p(buf1342.data_ptr()), c_void_p(buf1343.data_ptr()), c_void_p(primals_680.data_ptr()), c_void_p(primals_681.data_ptr()), c_void_p(buf1346.data_ptr()), c_void_p(buf1357.data_ptr()), c_void_p(buf1358.data_ptr()), c_void_p(buf1359.data_ptr()), c_void_p(primals_688.data_ptr()), c_void_p(primals_689.data_ptr()), c_void_p(buf1362.data_ptr()), c_void_p(buf1400.data_ptr()), c_void_p(buf1401.data_ptr()), c_void_p(buf1402.data_ptr()), c_void_p(primals_712.data_ptr()), c_void_p(primals_713.data_ptr()), c_void_p(primals_720.data_ptr()), c_void_p(primals_721.data_ptr()), c_void_p(buf1331.data_ptr()), c_void_p(buf1414.data_ptr()), c_void_p(buf1415.data_ptr()), c_void_p(buf1417.data_ptr()), c_void_p(buf1418.data_ptr()), c_void_p(buf1419.data_ptr()), c_void_p(buf1420.data_ptr()), c_void_p(buf1421.data_ptr()))
    del buf1390
    del buf1418
    del buf1419
    del buf1420
    del buf1421
    del primals_681
    del primals_689
    del primals_713
    del primals_721
    # Source Nodes: [x_937], Original ATen: [aten.convolution]
    buf1423 = extern_kernels.convolution(buf1325, primals_722, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1423, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1424 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1425 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1427 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1428 = buf1362; del buf1362  # reuse
    buf1429 = empty_strided((8, 4320, 11, 11), (522720, 1, 47520, 4320), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_192(c_void_p(buf1423.data_ptr()), c_void_p(primals_723.data_ptr()), c_void_p(primals_724.data_ptr()), c_void_p(buf1422.data_ptr()), c_void_p(buf1424.data_ptr()), c_void_p(buf1425.data_ptr()), c_void_p(buf1427.data_ptr()), c_void_p(buf1428.data_ptr()), c_void_p(buf1429.data_ptr()))
    del primals_724
    # Source Nodes: [x_940], Original ATen: [aten.convolution]
    buf1430 = extern_kernels.convolution(buf1429, primals_725, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1430, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1431 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1432 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1434 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1435 = buf1346; del buf1346  # reuse
    buf1436 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_193(c_void_p(buf1430.data_ptr()), c_void_p(primals_726.data_ptr()), c_void_p(primals_727.data_ptr()), c_void_p(buf1428.data_ptr()), c_void_p(buf1431.data_ptr()), c_void_p(buf1432.data_ptr()), c_void_p(buf1434.data_ptr()), c_void_p(buf1435.data_ptr()), c_void_p(buf1436.data_ptr()))
    del primals_727
    # Source Nodes: [x_943], Original ATen: [aten.convolution]
    buf1437 = extern_kernels.convolution(buf1436, primals_728, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1437, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_945], Original ATen: [aten.convolution]
    buf1438 = extern_kernels.convolution(buf1437, primals_729, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1438, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1439 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1440 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1442 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1443 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_194(c_void_p(buf1438.data_ptr()), c_void_p(primals_730.data_ptr()), c_void_p(primals_731.data_ptr()), c_void_p(buf1439.data_ptr()), c_void_p(buf1440.data_ptr()), c_void_p(buf1442.data_ptr()), c_void_p(buf1443.data_ptr()))
    del primals_731
    # Source Nodes: [x_948], Original ATen: [aten.convolution]
    buf1444 = extern_kernels.convolution(buf1443, primals_732, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1444, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_950], Original ATen: [aten.convolution]
    buf1445 = extern_kernels.convolution(buf1444, primals_733, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1445, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1446 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1447 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1449 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1450 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1451 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    buf1452 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_195(c_void_p(buf1445.data_ptr()), c_void_p(buf1428.data_ptr()), c_void_p(buf1435.data_ptr()), c_void_p(buf1446.data_ptr()), c_void_p(buf1447.data_ptr()), c_void_p(buf1449.data_ptr()), c_void_p(buf1450.data_ptr()), c_void_p(buf1451.data_ptr()), c_void_p(buf1452.data_ptr()))
    # Source Nodes: [x_953], Original ATen: [aten.convolution]
    buf1453 = extern_kernels.convolution(buf1452, primals_736, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1453, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_955], Original ATen: [aten.convolution]
    buf1454 = extern_kernels.convolution(buf1453, primals_737, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1454, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1455 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1456 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1458 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1459 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_196(c_void_p(buf1454.data_ptr()), c_void_p(primals_738.data_ptr()), c_void_p(primals_739.data_ptr()), c_void_p(buf1455.data_ptr()), c_void_p(buf1456.data_ptr()), c_void_p(buf1458.data_ptr()), c_void_p(buf1459.data_ptr()))
    del primals_739
    # Source Nodes: [x_958], Original ATen: [aten.convolution]
    buf1460 = extern_kernels.convolution(buf1459, primals_740, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1460, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_960], Original ATen: [aten.convolution]
    buf1461 = extern_kernels.convolution(buf1460, primals_741, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1461, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1462 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1463 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1465 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1466 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf1467 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.int64)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_197(c_void_p(buf1461.data_ptr()), c_void_p(buf1435.data_ptr()), c_void_p(buf1462.data_ptr()), c_void_p(buf1463.data_ptr()), c_void_p(buf1465.data_ptr()), c_void_p(buf1466.data_ptr()), c_void_p(buf1467.data_ptr()))
    # Source Nodes: [x_963], Original ATen: [aten.convolution]
    buf1468 = extern_kernels.convolution(buf1452, primals_744, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1468, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_965], Original ATen: [aten.convolution]
    buf1469 = extern_kernels.convolution(buf1468, primals_745, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1469, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1470 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1471 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1473 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1474 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_198(c_void_p(buf1469.data_ptr()), c_void_p(primals_746.data_ptr()), c_void_p(primals_747.data_ptr()), c_void_p(buf1470.data_ptr()), c_void_p(buf1471.data_ptr()), c_void_p(buf1473.data_ptr()), c_void_p(buf1474.data_ptr()))
    del primals_747
    # Source Nodes: [x_968], Original ATen: [aten.convolution]
    buf1475 = extern_kernels.convolution(buf1474, primals_748, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1475, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_970], Original ATen: [aten.convolution]
    buf1476 = extern_kernels.convolution(buf1475, primals_749, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1476, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1477 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1478 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1480 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_199(c_void_p(buf1476.data_ptr()), c_void_p(buf1477.data_ptr()), c_void_p(buf1478.data_ptr()), c_void_p(buf1480.data_ptr()))
    # Source Nodes: [x_973], Original ATen: [aten.convolution]
    buf1481 = extern_kernels.convolution(buf1452, primals_752, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1481, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_975], Original ATen: [aten.convolution]
    buf1482 = extern_kernels.convolution(buf1481, primals_753, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1482, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1483 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1484 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1486 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1487 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_200(c_void_p(buf1482.data_ptr()), c_void_p(primals_754.data_ptr()), c_void_p(primals_755.data_ptr()), c_void_p(buf1483.data_ptr()), c_void_p(buf1484.data_ptr()), c_void_p(buf1486.data_ptr()), c_void_p(buf1487.data_ptr()))
    del primals_755
    # Source Nodes: [x_978], Original ATen: [aten.convolution]
    buf1488 = extern_kernels.convolution(buf1487, primals_756, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1488, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_980], Original ATen: [aten.convolution]
    buf1489 = extern_kernels.convolution(buf1488, primals_757, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1489, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1490 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1491 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1493 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1526 = buf1422; del buf1422  # reuse
    buf1494 = reinterpret_tensor(buf1526, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf1495 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_relu_201(c_void_p(buf1489.data_ptr()), c_void_p(buf1476.data_ptr()), c_void_p(buf1477.data_ptr()), c_void_p(buf1478.data_ptr()), c_void_p(primals_750.data_ptr()), c_void_p(primals_751.data_ptr()), c_void_p(primals_758.data_ptr()), c_void_p(primals_759.data_ptr()), c_void_p(buf1490.data_ptr()), c_void_p(buf1491.data_ptr()), c_void_p(buf1493.data_ptr()), c_void_p(buf1494.data_ptr()), c_void_p(buf1495.data_ptr()))
    del primals_751
    del primals_759
    # Source Nodes: [x_983], Original ATen: [aten.convolution]
    buf1496 = extern_kernels.convolution(buf1495, primals_760, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1496, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_985], Original ATen: [aten.convolution]
    buf1497 = extern_kernels.convolution(buf1496, primals_761, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1497, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1498 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1499 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1501 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1502 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_202(c_void_p(buf1497.data_ptr()), c_void_p(primals_762.data_ptr()), c_void_p(primals_763.data_ptr()), c_void_p(buf1498.data_ptr()), c_void_p(buf1499.data_ptr()), c_void_p(buf1501.data_ptr()), c_void_p(buf1502.data_ptr()))
    del primals_763
    # Source Nodes: [x_988], Original ATen: [aten.convolution]
    buf1503 = extern_kernels.convolution(buf1502, primals_764, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1503, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_990], Original ATen: [aten.convolution]
    buf1504 = extern_kernels.convolution(buf1503, primals_765, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1504, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1505 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1506 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1508 = empty((864, ), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_203(c_void_p(buf1504.data_ptr()), c_void_p(buf1505.data_ptr()), c_void_p(buf1506.data_ptr()), c_void_p(buf1508.data_ptr()))
    # Source Nodes: [x_993], Original ATen: [aten.convolution]
    buf1509 = extern_kernels.convolution(buf1436, primals_768, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1509, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_995], Original ATen: [aten.convolution]
    buf1510 = extern_kernels.convolution(buf1509, primals_769, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1510, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1511 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1512 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1514 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1515 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_204(c_void_p(buf1510.data_ptr()), c_void_p(primals_770.data_ptr()), c_void_p(primals_771.data_ptr()), c_void_p(buf1511.data_ptr()), c_void_p(buf1512.data_ptr()), c_void_p(buf1514.data_ptr()), c_void_p(buf1515.data_ptr()))
    del primals_771
    # Source Nodes: [x_998], Original ATen: [aten.convolution]
    buf1516 = extern_kernels.convolution(buf1515, primals_772, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf1516, (8, 864, 11, 11), (104544, 1, 9504, 864))
    # Source Nodes: [x_1000], Original ATen: [aten.convolution]
    buf1517 = extern_kernels.convolution(buf1516, primals_773, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf1517, (8, 864, 11, 11), (104544, 1, 9504, 864))
    buf1518 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1519 = empty_strided((1, 864, 1, 1), (864, 1, 864, 864), device='cpu', dtype=torch.float32)
    buf1521 = empty((864, ), device='cpu', dtype=torch.float32)
    buf1522 = reinterpret_tensor(buf1526, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf1523 = reinterpret_tensor(buf1526, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf1524 = reinterpret_tensor(buf1526, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf1525 = reinterpret_tensor(buf1526, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    buf1527 = empty_strided((8, 4320, 1, 1), (4320, 1, 34560, 34560), device='cpu', dtype=torch.float32)
    buf1528 = reinterpret_tensor(buf1527, (8, 4320), (4320, 1), 0); del buf1527  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_mean_relu_view_205(c_void_p(buf1528.data_ptr()), c_void_p(buf1517.data_ptr()), c_void_p(buf1445.data_ptr()), c_void_p(buf1446.data_ptr()), c_void_p(buf1447.data_ptr()), c_void_p(primals_734.data_ptr()), c_void_p(primals_735.data_ptr()), c_void_p(buf1450.data_ptr()), c_void_p(buf1461.data_ptr()), c_void_p(buf1462.data_ptr()), c_void_p(buf1463.data_ptr()), c_void_p(primals_742.data_ptr()), c_void_p(primals_743.data_ptr()), c_void_p(buf1466.data_ptr()), c_void_p(buf1504.data_ptr()), c_void_p(buf1505.data_ptr()), c_void_p(buf1506.data_ptr()), c_void_p(primals_766.data_ptr()), c_void_p(primals_767.data_ptr()), c_void_p(primals_774.data_ptr()), c_void_p(primals_775.data_ptr()), c_void_p(buf1435.data_ptr()), c_void_p(buf1526.data_ptr()), c_void_p(buf1518.data_ptr()), c_void_p(buf1519.data_ptr()), c_void_p(buf1521.data_ptr()), c_void_p(buf1522.data_ptr()), c_void_p(buf1523.data_ptr()), c_void_p(buf1524.data_ptr()), c_void_p(buf1525.data_ptr()))
    del buf1450
    del buf1466
    del buf1494
    del buf1522
    del buf1523
    del buf1524
    del buf1525
    del primals_735
    del primals_743
    del primals_767
    del primals_775
    buf1529 = empty((8, 1000), device='cpu', dtype=torch.float32)
    # Source Nodes: [pred], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_777, buf1528, reinterpret_tensor(primals_776, (4320, 1000), (1, 4320), 0), alpha=1, beta=1, out=buf1529)
    del primals_777
    buf1530 = empty_strided((8, 4320, 11, 11), (522720, 1, 47520, 4320), device='cpu', dtype=torch.bool)
    buf1532 = empty_strided((8, 864, 21, 21), (381024, 1, 18144, 864), device='cpu', dtype=torch.bool)
    buf1534 = empty_strided((8, 432, 42, 42), (762048, 1, 18144, 432), device='cpu', dtype=torch.bool)
    buf1536 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.bool)
    buf1544 = reinterpret_tensor(buf4, (96, ), (1, ), 0); del buf4  # reuse
    buf1550 = reinterpret_tensor(buf11, (54, ), (1, ), 0); del buf11  # reuse
    buf1558 = reinterpret_tensor(buf19, (54, ), (1, ), 0); del buf19  # reuse
    buf1566 = reinterpret_tensor(buf26, (54, ), (1, ), 0); del buf26  # reuse
    buf1574 = reinterpret_tensor(buf34, (54, ), (1, ), 0); del buf34  # reuse
    buf1582 = reinterpret_tensor(buf43, (54, ), (1, ), 0); del buf43  # reuse
    buf1590 = reinterpret_tensor(buf50, (54, ), (1, ), 0); del buf50  # reuse
    buf1598 = reinterpret_tensor(buf60, (54, ), (1, ), 0); del buf60  # reuse
    buf1606 = reinterpret_tensor(buf67, (54, ), (1, ), 0); del buf67  # reuse
    buf1614 = reinterpret_tensor(buf74, (54, ), (1, ), 0); del buf74  # reuse
    buf1622 = reinterpret_tensor(buf81, (54, ), (1, ), 0); del buf81  # reuse
    buf1630 = reinterpret_tensor(buf89, (54, ), (1, ), 0); del buf89  # reuse
    buf1638 = reinterpret_tensor(buf96, (54, ), (1, ), 0); del buf96  # reuse
    buf1646 = reinterpret_tensor(buf103, (54, ), (1, ), 0); del buf103  # reuse
    buf1654 = reinterpret_tensor(buf110, (54, ), (1, ), 0); del buf110  # reuse
    buf1662 = reinterpret_tensor(buf115, (54, ), (1, ), 0); del buf115  # reuse
    buf1670 = reinterpret_tensor(buf129, (108, ), (1, ), 0); del buf129  # reuse
    buf1678 = reinterpret_tensor(buf136, (108, ), (1, ), 0); del buf136  # reuse
    buf1686 = reinterpret_tensor(buf144, (108, ), (1, ), 0); del buf144  # reuse
    buf1694 = reinterpret_tensor(buf151, (108, ), (1, ), 0); del buf151  # reuse
    buf1702 = reinterpret_tensor(buf162, (108, ), (1, ), 0); del buf162  # reuse
    buf1710 = reinterpret_tensor(buf169, (108, ), (1, ), 0); del buf169  # reuse
    buf1718 = reinterpret_tensor(buf179, (108, ), (1, ), 0); del buf179  # reuse
    buf1726 = reinterpret_tensor(buf186, (108, ), (1, ), 0); del buf186  # reuse
    buf1734 = reinterpret_tensor(buf193, (108, ), (1, ), 0); del buf193  # reuse
    buf1742 = reinterpret_tensor(buf200, (108, ), (1, ), 0); del buf200  # reuse
    buf1750 = reinterpret_tensor(buf208, (108, ), (1, ), 0); del buf208  # reuse
    buf1758 = reinterpret_tensor(buf215, (108, ), (1, ), 0); del buf215  # reuse
    buf1766 = reinterpret_tensor(buf222, (108, ), (1, ), 0); del buf222  # reuse
    buf1774 = reinterpret_tensor(buf229, (108, ), (1, ), 0); del buf229  # reuse
    buf1782 = reinterpret_tensor(buf234, (108, ), (1, ), 0); del buf234  # reuse
    buf1790 = reinterpret_tensor(buf249, (216, ), (1, ), 0); del buf249  # reuse
    buf1798 = reinterpret_tensor(buf256, (216, ), (1, ), 0); del buf256  # reuse
    buf1806 = reinterpret_tensor(buf264, (216, ), (1, ), 0); del buf264  # reuse
    buf1814 = reinterpret_tensor(buf271, (216, ), (1, ), 0); del buf271  # reuse
    buf1822 = reinterpret_tensor(buf280, (216, ), (1, ), 0); del buf280  # reuse
    buf1830 = reinterpret_tensor(buf287, (216, ), (1, ), 0); del buf287  # reuse
    buf1838 = reinterpret_tensor(buf295, (216, ), (1, ), 0); del buf295  # reuse
    buf1846 = reinterpret_tensor(buf302, (216, ), (1, ), 0); del buf302  # reuse
    buf1854 = reinterpret_tensor(buf308, (216, ), (1, ), 0); del buf308  # reuse
    buf1862 = reinterpret_tensor(buf315, (216, ), (1, ), 0); del buf315  # reuse
    buf1870 = reinterpret_tensor(buf323, (216, ), (1, ), 0); del buf323  # reuse
    buf1878 = reinterpret_tensor(buf330, (216, ), (1, ), 0); del buf330  # reuse
    buf1886 = reinterpret_tensor(buf336, (216, ), (1, ), 0); del buf336  # reuse
    buf1894 = reinterpret_tensor(buf343, (216, ), (1, ), 0); del buf343  # reuse
    buf1902 = reinterpret_tensor(buf353, (216, ), (1, ), 0); del buf353  # reuse
    buf1910 = reinterpret_tensor(buf360, (216, ), (1, ), 0); del buf360  # reuse
    buf1918 = reinterpret_tensor(buf368, (216, ), (1, ), 0); del buf368  # reuse
    buf1926 = reinterpret_tensor(buf375, (216, ), (1, ), 0); del buf375  # reuse
    buf1934 = reinterpret_tensor(buf384, (216, ), (1, ), 0); del buf384  # reuse
    buf1942 = reinterpret_tensor(buf391, (216, ), (1, ), 0); del buf391  # reuse
    buf1950 = reinterpret_tensor(buf399, (216, ), (1, ), 0); del buf399  # reuse
    buf1958 = reinterpret_tensor(buf406, (216, ), (1, ), 0); del buf406  # reuse
    buf1966 = reinterpret_tensor(buf412, (216, ), (1, ), 0); del buf412  # reuse
    buf1974 = reinterpret_tensor(buf419, (216, ), (1, ), 0); del buf419  # reuse
    buf1982 = reinterpret_tensor(buf427, (216, ), (1, ), 0); del buf427  # reuse
    buf1990 = reinterpret_tensor(buf434, (216, ), (1, ), 0); del buf434  # reuse
    buf1998 = reinterpret_tensor(buf440, (216, ), (1, ), 0); del buf440  # reuse
    buf2006 = reinterpret_tensor(buf447, (216, ), (1, ), 0); del buf447  # reuse
    buf2014 = reinterpret_tensor(buf457, (216, ), (1, ), 0); del buf457  # reuse
    buf2022 = reinterpret_tensor(buf464, (216, ), (1, ), 0); del buf464  # reuse
    buf2030 = reinterpret_tensor(buf472, (216, ), (1, ), 0); del buf472  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_relu_threshold_backward_206(c_void_p(buf1544.data_ptr()), c_void_p(buf1550.data_ptr()), c_void_p(buf1558.data_ptr()), c_void_p(buf1566.data_ptr()), c_void_p(buf1574.data_ptr()), c_void_p(buf1582.data_ptr()), c_void_p(buf1590.data_ptr()), c_void_p(buf1598.data_ptr()), c_void_p(buf1606.data_ptr()), c_void_p(buf1614.data_ptr()), c_void_p(buf1622.data_ptr()), c_void_p(buf1630.data_ptr()), c_void_p(buf1638.data_ptr()), c_void_p(buf1646.data_ptr()), c_void_p(buf1654.data_ptr()), c_void_p(buf1662.data_ptr()), c_void_p(buf1670.data_ptr()), c_void_p(buf1678.data_ptr()), c_void_p(buf1686.data_ptr()), c_void_p(buf1694.data_ptr()), c_void_p(buf1702.data_ptr()), c_void_p(buf1710.data_ptr()), c_void_p(buf1718.data_ptr()), c_void_p(buf1726.data_ptr()), c_void_p(buf1734.data_ptr()), c_void_p(buf1742.data_ptr()), c_void_p(buf1750.data_ptr()), c_void_p(buf1758.data_ptr()), c_void_p(buf1766.data_ptr()), c_void_p(buf1774.data_ptr()), c_void_p(buf1782.data_ptr()), c_void_p(buf1790.data_ptr()), c_void_p(buf1798.data_ptr()), c_void_p(buf1806.data_ptr()), c_void_p(buf1814.data_ptr()), c_void_p(buf1822.data_ptr()), c_void_p(buf1830.data_ptr()), c_void_p(buf1838.data_ptr()), c_void_p(buf1846.data_ptr()), c_void_p(buf1854.data_ptr()), c_void_p(buf1862.data_ptr()), c_void_p(buf1870.data_ptr()), c_void_p(buf1878.data_ptr()), c_void_p(buf1886.data_ptr()), c_void_p(buf1894.data_ptr()), c_void_p(buf1902.data_ptr()), c_void_p(buf1910.data_ptr()), c_void_p(buf1918.data_ptr()), c_void_p(buf1926.data_ptr()), c_void_p(buf1934.data_ptr()), c_void_p(buf1942.data_ptr()), c_void_p(buf1950.data_ptr()), c_void_p(buf1958.data_ptr()), c_void_p(buf1966.data_ptr()), c_void_p(buf1974.data_ptr()), c_void_p(buf1982.data_ptr()), c_void_p(buf1990.data_ptr()), c_void_p(buf1998.data_ptr()), c_void_p(buf2006.data_ptr()), c_void_p(buf2014.data_ptr()), c_void_p(buf2022.data_ptr()), c_void_p(buf2030.data_ptr()), c_void_p(buf1526.data_ptr()), c_void_p(buf1100.data_ptr()), c_void_p(buf668.data_ptr()), c_void_p(buf132.data_ptr()), c_void_p(primals_778.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(primals_779.data_ptr()), c_void_p(primals_780.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(primals_781.data_ptr()), c_void_p(primals_782.data_ptr()), c_void_p(primals_783.data_ptr()), c_void_p(buf18.data_ptr()), c_void_p(primals_784.data_ptr()), c_void_p(primals_785.data_ptr()), c_void_p(primals_786.data_ptr()), c_void_p(buf25.data_ptr()), c_void_p(primals_787.data_ptr()), c_void_p(primals_788.data_ptr()), c_void_p(primals_789.data_ptr()), c_void_p(buf33.data_ptr()), c_void_p(primals_790.data_ptr()), c_void_p(primals_791.data_ptr()), c_void_p(primals_792.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(primals_793.data_ptr()), c_void_p(primals_794.data_ptr()), c_void_p(primals_795.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(primals_796.data_ptr()), c_void_p(primals_797.data_ptr()), c_void_p(primals_798.data_ptr()), c_void_p(buf59.data_ptr()), c_void_p(primals_799.data_ptr()), c_void_p(primals_800.data_ptr()), c_void_p(primals_801.data_ptr()), c_void_p(buf66.data_ptr()), c_void_p(primals_802.data_ptr()), c_void_p(primals_803.data_ptr()), c_void_p(primals_804.data_ptr()), c_void_p(buf73.data_ptr()), c_void_p(primals_805.data_ptr()), c_void_p(primals_806.data_ptr()), c_void_p(primals_807.data_ptr()), c_void_p(buf80.data_ptr()), c_void_p(primals_808.data_ptr()), c_void_p(primals_809.data_ptr()), c_void_p(primals_810.data_ptr()), c_void_p(buf88.data_ptr()), c_void_p(primals_811.data_ptr()), c_void_p(primals_812.data_ptr()), c_void_p(primals_813.data_ptr()), c_void_p(buf95.data_ptr()), c_void_p(primals_814.data_ptr()), c_void_p(primals_815.data_ptr()), c_void_p(primals_816.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(primals_817.data_ptr()), c_void_p(primals_818.data_ptr()), c_void_p(primals_819.data_ptr()), c_void_p(buf109.data_ptr()), c_void_p(primals_820.data_ptr()), c_void_p(primals_821.data_ptr()), c_void_p(primals_822.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(primals_823.data_ptr()), c_void_p(primals_824.data_ptr()), c_void_p(primals_825.data_ptr()), c_void_p(buf128.data_ptr()), c_void_p(primals_826.data_ptr()), c_void_p(primals_827.data_ptr()), c_void_p(primals_828.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_829.data_ptr()), c_void_p(primals_830.data_ptr()), c_void_p(primals_831.data_ptr()), c_void_p(buf143.data_ptr()), c_void_p(primals_832.data_ptr()), c_void_p(primals_833.data_ptr()), c_void_p(primals_834.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(primals_835.data_ptr()), c_void_p(primals_836.data_ptr()), c_void_p(primals_837.data_ptr()), c_void_p(buf161.data_ptr()), c_void_p(primals_838.data_ptr()), c_void_p(primals_839.data_ptr()), c_void_p(primals_840.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(primals_841.data_ptr()), c_void_p(primals_842.data_ptr()), c_void_p(primals_843.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(primals_844.data_ptr()), c_void_p(primals_845.data_ptr()), c_void_p(primals_846.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_847.data_ptr()), c_void_p(primals_848.data_ptr()), c_void_p(primals_849.data_ptr()), c_void_p(buf192.data_ptr()), c_void_p(primals_850.data_ptr()), c_void_p(primals_851.data_ptr()), c_void_p(primals_852.data_ptr()), c_void_p(buf199.data_ptr()), c_void_p(primals_853.data_ptr()), c_void_p(primals_854.data_ptr()), c_void_p(primals_855.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(primals_856.data_ptr()), c_void_p(primals_857.data_ptr()), c_void_p(primals_858.data_ptr()), c_void_p(buf214.data_ptr()), c_void_p(primals_859.data_ptr()), c_void_p(primals_860.data_ptr()), c_void_p(primals_861.data_ptr()), c_void_p(buf221.data_ptr()), c_void_p(primals_862.data_ptr()), c_void_p(primals_863.data_ptr()), c_void_p(primals_864.data_ptr()), c_void_p(buf228.data_ptr()), c_void_p(primals_865.data_ptr()), c_void_p(primals_866.data_ptr()), c_void_p(primals_867.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(primals_868.data_ptr()), c_void_p(primals_869.data_ptr()), c_void_p(primals_870.data_ptr()), c_void_p(buf248.data_ptr()), c_void_p(primals_871.data_ptr()), c_void_p(primals_872.data_ptr()), c_void_p(primals_873.data_ptr()), c_void_p(buf255.data_ptr()), c_void_p(primals_874.data_ptr()), c_void_p(primals_875.data_ptr()), c_void_p(primals_876.data_ptr()), c_void_p(buf263.data_ptr()), c_void_p(primals_877.data_ptr()), c_void_p(primals_878.data_ptr()), c_void_p(primals_879.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(primals_880.data_ptr()), c_void_p(primals_881.data_ptr()), c_void_p(primals_882.data_ptr()), c_void_p(buf279.data_ptr()), c_void_p(primals_883.data_ptr()), c_void_p(primals_884.data_ptr()), c_void_p(primals_885.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(primals_886.data_ptr()), c_void_p(primals_887.data_ptr()), c_void_p(primals_888.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(primals_889.data_ptr()), c_void_p(primals_890.data_ptr()), c_void_p(primals_891.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(primals_892.data_ptr()), c_void_p(primals_893.data_ptr()), c_void_p(primals_894.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(primals_895.data_ptr()), c_void_p(primals_896.data_ptr()), c_void_p(primals_897.data_ptr()), c_void_p(buf314.data_ptr()), c_void_p(primals_898.data_ptr()), c_void_p(primals_899.data_ptr()), c_void_p(primals_900.data_ptr()), c_void_p(buf322.data_ptr()), c_void_p(primals_901.data_ptr()), c_void_p(primals_902.data_ptr()), c_void_p(primals_903.data_ptr()), c_void_p(buf329.data_ptr()), c_void_p(primals_904.data_ptr()), c_void_p(primals_905.data_ptr()), c_void_p(primals_906.data_ptr()), c_void_p(buf335.data_ptr()), c_void_p(primals_907.data_ptr()), c_void_p(primals_908.data_ptr()), c_void_p(primals_909.data_ptr()), c_void_p(buf342.data_ptr()), c_void_p(primals_910.data_ptr()), c_void_p(primals_911.data_ptr()), c_void_p(primals_912.data_ptr()), c_void_p(buf352.data_ptr()), c_void_p(primals_913.data_ptr()), c_void_p(primals_914.data_ptr()), c_void_p(primals_915.data_ptr()), c_void_p(buf359.data_ptr()), c_void_p(primals_916.data_ptr()), c_void_p(primals_917.data_ptr()), c_void_p(primals_918.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_919.data_ptr()), c_void_p(primals_920.data_ptr()), c_void_p(primals_921.data_ptr()), c_void_p(buf374.data_ptr()), c_void_p(primals_922.data_ptr()), c_void_p(primals_923.data_ptr()), c_void_p(primals_924.data_ptr()), c_void_p(buf383.data_ptr()), c_void_p(primals_925.data_ptr()), c_void_p(primals_926.data_ptr()), c_void_p(primals_927.data_ptr()), c_void_p(buf390.data_ptr()), c_void_p(primals_928.data_ptr()), c_void_p(primals_929.data_ptr()), c_void_p(primals_930.data_ptr()), c_void_p(buf398.data_ptr()), c_void_p(primals_931.data_ptr()), c_void_p(primals_932.data_ptr()), c_void_p(primals_933.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(primals_934.data_ptr()), c_void_p(primals_935.data_ptr()), c_void_p(primals_936.data_ptr()), c_void_p(buf411.data_ptr()), c_void_p(primals_937.data_ptr()), c_void_p(primals_938.data_ptr()), c_void_p(primals_939.data_ptr()), c_void_p(buf418.data_ptr()), c_void_p(primals_940.data_ptr()), c_void_p(primals_941.data_ptr()), c_void_p(primals_942.data_ptr()), c_void_p(buf426.data_ptr()), c_void_p(primals_943.data_ptr()), c_void_p(primals_944.data_ptr()), c_void_p(primals_945.data_ptr()), c_void_p(buf433.data_ptr()), c_void_p(primals_946.data_ptr()), c_void_p(primals_947.data_ptr()), c_void_p(primals_948.data_ptr()), c_void_p(buf439.data_ptr()), c_void_p(primals_949.data_ptr()), c_void_p(primals_950.data_ptr()), c_void_p(primals_951.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(primals_952.data_ptr()), c_void_p(primals_953.data_ptr()), c_void_p(primals_954.data_ptr()), c_void_p(buf456.data_ptr()), c_void_p(primals_955.data_ptr()), c_void_p(primals_956.data_ptr()), c_void_p(primals_957.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(primals_958.data_ptr()), c_void_p(primals_959.data_ptr()), c_void_p(primals_960.data_ptr()), c_void_p(buf471.data_ptr()), c_void_p(primals_961.data_ptr()), c_void_p(primals_962.data_ptr()), c_void_p(buf1530.data_ptr()), c_void_p(buf1532.data_ptr()), c_void_p(buf1534.data_ptr()), c_void_p(buf1536.data_ptr()), c_void_p(primals_778.data_ptr()), c_void_p(primals_779.data_ptr()), c_void_p(primals_780.data_ptr()), c_void_p(primals_781.data_ptr()), c_void_p(primals_782.data_ptr()), c_void_p(primals_783.data_ptr()), c_void_p(primals_784.data_ptr()), c_void_p(primals_785.data_ptr()), c_void_p(primals_786.data_ptr()), c_void_p(primals_787.data_ptr()), c_void_p(primals_788.data_ptr()), c_void_p(primals_789.data_ptr()), c_void_p(primals_790.data_ptr()), c_void_p(primals_791.data_ptr()), c_void_p(primals_792.data_ptr()), c_void_p(primals_793.data_ptr()), c_void_p(primals_794.data_ptr()), c_void_p(primals_795.data_ptr()), c_void_p(primals_796.data_ptr()), c_void_p(primals_797.data_ptr()), c_void_p(primals_798.data_ptr()), c_void_p(primals_799.data_ptr()), c_void_p(primals_800.data_ptr()), c_void_p(primals_801.data_ptr()), c_void_p(primals_802.data_ptr()), c_void_p(primals_803.data_ptr()), c_void_p(primals_804.data_ptr()), c_void_p(primals_805.data_ptr()), c_void_p(primals_806.data_ptr()), c_void_p(primals_807.data_ptr()), c_void_p(primals_808.data_ptr()), c_void_p(primals_809.data_ptr()), c_void_p(primals_810.data_ptr()), c_void_p(primals_811.data_ptr()), c_void_p(primals_812.data_ptr()), c_void_p(primals_813.data_ptr()), c_void_p(primals_814.data_ptr()), c_void_p(primals_815.data_ptr()), c_void_p(primals_816.data_ptr()), c_void_p(primals_817.data_ptr()), c_void_p(primals_818.data_ptr()), c_void_p(primals_819.data_ptr()), c_void_p(primals_820.data_ptr()), c_void_p(primals_821.data_ptr()), c_void_p(primals_822.data_ptr()), c_void_p(primals_823.data_ptr()), c_void_p(primals_824.data_ptr()), c_void_p(primals_825.data_ptr()), c_void_p(primals_826.data_ptr()), c_void_p(primals_827.data_ptr()), c_void_p(primals_828.data_ptr()), c_void_p(primals_829.data_ptr()), c_void_p(primals_830.data_ptr()), c_void_p(primals_831.data_ptr()), c_void_p(primals_832.data_ptr()), c_void_p(primals_833.data_ptr()), c_void_p(primals_834.data_ptr()), c_void_p(primals_835.data_ptr()), c_void_p(primals_836.data_ptr()), c_void_p(primals_837.data_ptr()), c_void_p(primals_838.data_ptr()), c_void_p(primals_839.data_ptr()), c_void_p(primals_840.data_ptr()), c_void_p(primals_841.data_ptr()), c_void_p(primals_842.data_ptr()), c_void_p(primals_843.data_ptr()), c_void_p(primals_844.data_ptr()), c_void_p(primals_845.data_ptr()), c_void_p(primals_846.data_ptr()), c_void_p(primals_847.data_ptr()), c_void_p(primals_848.data_ptr()), c_void_p(primals_849.data_ptr()), c_void_p(primals_850.data_ptr()), c_void_p(primals_851.data_ptr()), c_void_p(primals_852.data_ptr()), c_void_p(primals_853.data_ptr()), c_void_p(primals_854.data_ptr()), c_void_p(primals_855.data_ptr()), c_void_p(primals_856.data_ptr()), c_void_p(primals_857.data_ptr()), c_void_p(primals_858.data_ptr()), c_void_p(primals_859.data_ptr()), c_void_p(primals_860.data_ptr()), c_void_p(primals_861.data_ptr()), c_void_p(primals_862.data_ptr()), c_void_p(primals_863.data_ptr()), c_void_p(primals_864.data_ptr()), c_void_p(primals_865.data_ptr()), c_void_p(primals_866.data_ptr()), c_void_p(primals_867.data_ptr()), c_void_p(primals_868.data_ptr()), c_void_p(primals_869.data_ptr()), c_void_p(primals_870.data_ptr()), c_void_p(primals_871.data_ptr()), c_void_p(primals_872.data_ptr()), c_void_p(primals_873.data_ptr()), c_void_p(primals_874.data_ptr()), c_void_p(primals_875.data_ptr()), c_void_p(primals_876.data_ptr()), c_void_p(primals_877.data_ptr()), c_void_p(primals_878.data_ptr()), c_void_p(primals_879.data_ptr()), c_void_p(primals_880.data_ptr()), c_void_p(primals_881.data_ptr()), c_void_p(primals_882.data_ptr()), c_void_p(primals_883.data_ptr()), c_void_p(primals_884.data_ptr()), c_void_p(primals_885.data_ptr()), c_void_p(primals_886.data_ptr()), c_void_p(primals_887.data_ptr()), c_void_p(primals_888.data_ptr()), c_void_p(primals_889.data_ptr()), c_void_p(primals_890.data_ptr()), c_void_p(primals_891.data_ptr()), c_void_p(primals_892.data_ptr()), c_void_p(primals_893.data_ptr()), c_void_p(primals_894.data_ptr()), c_void_p(primals_895.data_ptr()), c_void_p(primals_896.data_ptr()), c_void_p(primals_897.data_ptr()), c_void_p(primals_898.data_ptr()), c_void_p(primals_899.data_ptr()), c_void_p(primals_900.data_ptr()), c_void_p(primals_901.data_ptr()), c_void_p(primals_902.data_ptr()), c_void_p(primals_903.data_ptr()), c_void_p(primals_904.data_ptr()), c_void_p(primals_905.data_ptr()), c_void_p(primals_906.data_ptr()), c_void_p(primals_907.data_ptr()), c_void_p(primals_908.data_ptr()), c_void_p(primals_909.data_ptr()), c_void_p(primals_910.data_ptr()), c_void_p(primals_911.data_ptr()), c_void_p(primals_912.data_ptr()), c_void_p(primals_913.data_ptr()), c_void_p(primals_914.data_ptr()), c_void_p(primals_915.data_ptr()), c_void_p(primals_916.data_ptr()), c_void_p(primals_917.data_ptr()), c_void_p(primals_918.data_ptr()), c_void_p(primals_919.data_ptr()), c_void_p(primals_920.data_ptr()), c_void_p(primals_921.data_ptr()), c_void_p(primals_922.data_ptr()), c_void_p(primals_923.data_ptr()), c_void_p(primals_924.data_ptr()), c_void_p(primals_925.data_ptr()), c_void_p(primals_926.data_ptr()), c_void_p(primals_927.data_ptr()), c_void_p(primals_928.data_ptr()), c_void_p(primals_929.data_ptr()), c_void_p(primals_930.data_ptr()), c_void_p(primals_931.data_ptr()), c_void_p(primals_932.data_ptr()), c_void_p(primals_933.data_ptr()), c_void_p(primals_934.data_ptr()), c_void_p(primals_935.data_ptr()), c_void_p(primals_936.data_ptr()), c_void_p(primals_937.data_ptr()), c_void_p(primals_938.data_ptr()), c_void_p(primals_939.data_ptr()), c_void_p(primals_940.data_ptr()), c_void_p(primals_941.data_ptr()), c_void_p(primals_942.data_ptr()), c_void_p(primals_943.data_ptr()), c_void_p(primals_944.data_ptr()), c_void_p(primals_945.data_ptr()), c_void_p(primals_946.data_ptr()), c_void_p(primals_947.data_ptr()), c_void_p(primals_948.data_ptr()), c_void_p(primals_949.data_ptr()), c_void_p(primals_950.data_ptr()), c_void_p(primals_951.data_ptr()), c_void_p(primals_952.data_ptr()), c_void_p(primals_953.data_ptr()), c_void_p(primals_954.data_ptr()), c_void_p(primals_955.data_ptr()), c_void_p(primals_956.data_ptr()), c_void_p(primals_957.data_ptr()), c_void_p(primals_958.data_ptr()), c_void_p(primals_959.data_ptr()), c_void_p(primals_960.data_ptr()), c_void_p(primals_961.data_ptr()), c_void_p(primals_962.data_ptr()))
    del buf1100
    del buf132
    del buf1526
    del buf1544
    del buf1550
    del buf1558
    del buf1566
    del buf1574
    del buf1582
    del buf1590
    del buf1598
    del buf1606
    del buf1614
    del buf1622
    del buf1630
    del buf1638
    del buf1646
    del buf1654
    del buf1662
    del buf1670
    del buf1678
    del buf1686
    del buf1694
    del buf1702
    del buf1710
    del buf1718
    del buf1726
    del buf1734
    del buf1742
    del buf1750
    del buf1758
    del buf1766
    del buf1774
    del buf1782
    del buf1790
    del buf1798
    del buf1806
    del buf1814
    del buf1822
    del buf1830
    del buf1838
    del buf1846
    del buf1854
    del buf1862
    del buf1870
    del buf1878
    del buf1886
    del buf1894
    del buf1902
    del buf1910
    del buf1918
    del buf1926
    del buf1934
    del buf1942
    del buf1950
    del buf1958
    del buf1966
    del buf1974
    del buf1982
    del buf1990
    del buf1998
    del buf2006
    del buf2014
    del buf2022
    del buf2030
    del buf668
    del primals_778
    del primals_779
    del primals_780
    del primals_781
    del primals_782
    del primals_783
    del primals_784
    del primals_785
    del primals_786
    del primals_787
    del primals_788
    del primals_789
    del primals_790
    del primals_791
    del primals_792
    del primals_793
    del primals_794
    del primals_795
    del primals_796
    del primals_797
    del primals_798
    del primals_799
    del primals_800
    del primals_801
    del primals_802
    del primals_803
    del primals_804
    del primals_805
    del primals_806
    del primals_807
    del primals_808
    del primals_809
    del primals_810
    del primals_811
    del primals_812
    del primals_813
    del primals_814
    del primals_815
    del primals_816
    del primals_817
    del primals_818
    del primals_819
    del primals_820
    del primals_821
    del primals_822
    del primals_823
    del primals_824
    del primals_825
    del primals_826
    del primals_827
    del primals_828
    del primals_829
    del primals_830
    del primals_831
    del primals_832
    del primals_833
    del primals_834
    del primals_835
    del primals_836
    del primals_837
    del primals_838
    del primals_839
    del primals_840
    del primals_841
    del primals_842
    del primals_843
    del primals_844
    del primals_845
    del primals_846
    del primals_847
    del primals_848
    del primals_849
    del primals_850
    del primals_851
    del primals_852
    del primals_853
    del primals_854
    del primals_855
    del primals_856
    del primals_857
    del primals_858
    del primals_859
    del primals_860
    del primals_861
    del primals_862
    del primals_863
    del primals_864
    del primals_865
    del primals_866
    del primals_867
    del primals_868
    del primals_869
    del primals_870
    del primals_871
    del primals_872
    del primals_873
    del primals_874
    del primals_875
    del primals_876
    del primals_877
    del primals_878
    del primals_879
    del primals_880
    del primals_881
    del primals_882
    del primals_883
    del primals_884
    del primals_885
    del primals_886
    del primals_887
    del primals_888
    del primals_889
    del primals_890
    del primals_891
    del primals_892
    del primals_893
    del primals_894
    del primals_895
    del primals_896
    del primals_897
    del primals_898
    del primals_899
    del primals_900
    del primals_901
    del primals_902
    del primals_903
    del primals_904
    del primals_905
    del primals_906
    del primals_907
    del primals_908
    del primals_909
    del primals_910
    del primals_911
    del primals_912
    del primals_913
    del primals_914
    del primals_915
    del primals_916
    del primals_917
    del primals_918
    del primals_919
    del primals_920
    del primals_921
    del primals_922
    del primals_923
    del primals_924
    del primals_925
    del primals_926
    del primals_927
    del primals_928
    del primals_929
    del primals_930
    del primals_931
    del primals_932
    del primals_933
    del primals_934
    del primals_935
    del primals_936
    del primals_937
    del primals_938
    del primals_939
    del primals_940
    del primals_941
    del primals_942
    del primals_943
    del primals_944
    del primals_945
    del primals_946
    del primals_947
    del primals_948
    del primals_949
    del primals_950
    del primals_951
    del primals_952
    del primals_953
    del primals_954
    del primals_955
    del primals_956
    del primals_957
    del primals_958
    del primals_959
    del primals_960
    del primals_961
    del primals_962
    buf2038 = reinterpret_tensor(buf479, (216, ), (1, ), 0); del buf479  # reuse
    buf2046 = reinterpret_tensor(buf488, (216, ), (1, ), 0); del buf488  # reuse
    buf2054 = reinterpret_tensor(buf495, (216, ), (1, ), 0); del buf495  # reuse
    buf2062 = reinterpret_tensor(buf503, (216, ), (1, ), 0); del buf503  # reuse
    buf2070 = reinterpret_tensor(buf510, (216, ), (1, ), 0); del buf510  # reuse
    buf2078 = reinterpret_tensor(buf516, (216, ), (1, ), 0); del buf516  # reuse
    buf2086 = reinterpret_tensor(buf523, (216, ), (1, ), 0); del buf523  # reuse
    buf2094 = reinterpret_tensor(buf531, (216, ), (1, ), 0); del buf531  # reuse
    buf2102 = reinterpret_tensor(buf538, (216, ), (1, ), 0); del buf538  # reuse
    buf2110 = reinterpret_tensor(buf544, (216, ), (1, ), 0); del buf544  # reuse
    buf2118 = reinterpret_tensor(buf551, (216, ), (1, ), 0); del buf551  # reuse
    buf2126 = reinterpret_tensor(buf561, (216, ), (1, ), 0); del buf561  # reuse
    buf2134 = reinterpret_tensor(buf568, (216, ), (1, ), 0); del buf568  # reuse
    buf2142 = reinterpret_tensor(buf576, (216, ), (1, ), 0); del buf576  # reuse
    buf2150 = reinterpret_tensor(buf583, (216, ), (1, ), 0); del buf583  # reuse
    buf2158 = reinterpret_tensor(buf592, (216, ), (1, ), 0); del buf592  # reuse
    buf2166 = reinterpret_tensor(buf599, (216, ), (1, ), 0); del buf599  # reuse
    buf2174 = reinterpret_tensor(buf607, (216, ), (1, ), 0); del buf607  # reuse
    buf2182 = reinterpret_tensor(buf614, (216, ), (1, ), 0); del buf614  # reuse
    buf2190 = reinterpret_tensor(buf620, (216, ), (1, ), 0); del buf620  # reuse
    buf2198 = reinterpret_tensor(buf627, (216, ), (1, ), 0); del buf627  # reuse
    buf2206 = reinterpret_tensor(buf635, (216, ), (1, ), 0); del buf635  # reuse
    buf2214 = reinterpret_tensor(buf642, (216, ), (1, ), 0); del buf642  # reuse
    buf2222 = reinterpret_tensor(buf648, (216, ), (1, ), 0); del buf648  # reuse
    buf2230 = reinterpret_tensor(buf655, (216, ), (1, ), 0); del buf655  # reuse
    buf2238 = reinterpret_tensor(buf665, (432, ), (1, ), 0); del buf665  # reuse
    buf2246 = reinterpret_tensor(buf672, (432, ), (1, ), 0); del buf672  # reuse
    buf2254 = reinterpret_tensor(buf680, (432, ), (1, ), 0); del buf680  # reuse
    buf2262 = reinterpret_tensor(buf687, (432, ), (1, ), 0); del buf687  # reuse
    buf2270 = reinterpret_tensor(buf698, (432, ), (1, ), 0); del buf698  # reuse
    buf2278 = reinterpret_tensor(buf705, (432, ), (1, ), 0); del buf705  # reuse
    buf2286 = reinterpret_tensor(buf715, (432, ), (1, ), 0); del buf715  # reuse
    buf2294 = reinterpret_tensor(buf722, (432, ), (1, ), 0); del buf722  # reuse
    buf2302 = reinterpret_tensor(buf729, (432, ), (1, ), 0); del buf729  # reuse
    buf2310 = reinterpret_tensor(buf736, (432, ), (1, ), 0); del buf736  # reuse
    buf2318 = reinterpret_tensor(buf744, (432, ), (1, ), 0); del buf744  # reuse
    buf2326 = reinterpret_tensor(buf751, (432, ), (1, ), 0); del buf751  # reuse
    buf2334 = reinterpret_tensor(buf758, (432, ), (1, ), 0); del buf758  # reuse
    buf2342 = reinterpret_tensor(buf765, (432, ), (1, ), 0); del buf765  # reuse
    buf2350 = reinterpret_tensor(buf770, (432, ), (1, ), 0); del buf770  # reuse
    buf2358 = reinterpret_tensor(buf785, (432, ), (1, ), 0); del buf785  # reuse
    buf2366 = reinterpret_tensor(buf792, (432, ), (1, ), 0); del buf792  # reuse
    buf2374 = reinterpret_tensor(buf800, (432, ), (1, ), 0); del buf800  # reuse
    buf2382 = reinterpret_tensor(buf807, (432, ), (1, ), 0); del buf807  # reuse
    buf2390 = reinterpret_tensor(buf816, (432, ), (1, ), 0); del buf816  # reuse
    buf2398 = reinterpret_tensor(buf823, (432, ), (1, ), 0); del buf823  # reuse
    buf2406 = reinterpret_tensor(buf831, (432, ), (1, ), 0); del buf831  # reuse
    buf2414 = reinterpret_tensor(buf838, (432, ), (1, ), 0); del buf838  # reuse
    buf2422 = reinterpret_tensor(buf844, (432, ), (1, ), 0); del buf844  # reuse
    buf2430 = reinterpret_tensor(buf851, (432, ), (1, ), 0); del buf851  # reuse
    buf2438 = reinterpret_tensor(buf859, (432, ), (1, ), 0); del buf859  # reuse
    buf2446 = reinterpret_tensor(buf866, (432, ), (1, ), 0); del buf866  # reuse
    buf2454 = reinterpret_tensor(buf872, (432, ), (1, ), 0); del buf872  # reuse
    buf2462 = reinterpret_tensor(buf879, (432, ), (1, ), 0); del buf879  # reuse
    buf2470 = reinterpret_tensor(buf889, (432, ), (1, ), 0); del buf889  # reuse
    buf2478 = reinterpret_tensor(buf896, (432, ), (1, ), 0); del buf896  # reuse
    buf2486 = reinterpret_tensor(buf904, (432, ), (1, ), 0); del buf904  # reuse
    buf2494 = reinterpret_tensor(buf911, (432, ), (1, ), 0); del buf911  # reuse
    buf2502 = reinterpret_tensor(buf920, (432, ), (1, ), 0); del buf920  # reuse
    buf2510 = reinterpret_tensor(buf927, (432, ), (1, ), 0); del buf927  # reuse
    buf2518 = reinterpret_tensor(buf935, (432, ), (1, ), 0); del buf935  # reuse
    buf2526 = reinterpret_tensor(buf942, (432, ), (1, ), 0); del buf942  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_207(c_void_p(buf2038.data_ptr()), c_void_p(buf2046.data_ptr()), c_void_p(buf2054.data_ptr()), c_void_p(buf2062.data_ptr()), c_void_p(buf2070.data_ptr()), c_void_p(buf2078.data_ptr()), c_void_p(buf2086.data_ptr()), c_void_p(buf2094.data_ptr()), c_void_p(buf2102.data_ptr()), c_void_p(buf2110.data_ptr()), c_void_p(buf2118.data_ptr()), c_void_p(buf2126.data_ptr()), c_void_p(buf2134.data_ptr()), c_void_p(buf2142.data_ptr()), c_void_p(buf2150.data_ptr()), c_void_p(buf2158.data_ptr()), c_void_p(buf2166.data_ptr()), c_void_p(buf2174.data_ptr()), c_void_p(buf2182.data_ptr()), c_void_p(buf2190.data_ptr()), c_void_p(buf2198.data_ptr()), c_void_p(buf2206.data_ptr()), c_void_p(buf2214.data_ptr()), c_void_p(buf2222.data_ptr()), c_void_p(buf2230.data_ptr()), c_void_p(buf2238.data_ptr()), c_void_p(buf2246.data_ptr()), c_void_p(buf2254.data_ptr()), c_void_p(buf2262.data_ptr()), c_void_p(buf2270.data_ptr()), c_void_p(buf2278.data_ptr()), c_void_p(buf2286.data_ptr()), c_void_p(buf2294.data_ptr()), c_void_p(buf2302.data_ptr()), c_void_p(buf2310.data_ptr()), c_void_p(buf2318.data_ptr()), c_void_p(buf2326.data_ptr()), c_void_p(buf2334.data_ptr()), c_void_p(buf2342.data_ptr()), c_void_p(buf2350.data_ptr()), c_void_p(buf2358.data_ptr()), c_void_p(buf2366.data_ptr()), c_void_p(buf2374.data_ptr()), c_void_p(buf2382.data_ptr()), c_void_p(buf2390.data_ptr()), c_void_p(buf2398.data_ptr()), c_void_p(buf2406.data_ptr()), c_void_p(buf2414.data_ptr()), c_void_p(buf2422.data_ptr()), c_void_p(buf2430.data_ptr()), c_void_p(buf2438.data_ptr()), c_void_p(buf2446.data_ptr()), c_void_p(buf2454.data_ptr()), c_void_p(buf2462.data_ptr()), c_void_p(buf2470.data_ptr()), c_void_p(buf2478.data_ptr()), c_void_p(buf2486.data_ptr()), c_void_p(buf2494.data_ptr()), c_void_p(buf2502.data_ptr()), c_void_p(buf2510.data_ptr()), c_void_p(buf2518.data_ptr()), c_void_p(buf2526.data_ptr()), c_void_p(primals_963.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(primals_964.data_ptr()), c_void_p(primals_965.data_ptr()), c_void_p(primals_966.data_ptr()), c_void_p(buf487.data_ptr()), c_void_p(primals_967.data_ptr()), c_void_p(primals_968.data_ptr()), c_void_p(primals_969.data_ptr()), c_void_p(buf494.data_ptr()), c_void_p(primals_970.data_ptr()), c_void_p(primals_971.data_ptr()), c_void_p(primals_972.data_ptr()), c_void_p(buf502.data_ptr()), c_void_p(primals_973.data_ptr()), c_void_p(primals_974.data_ptr()), c_void_p(primals_975.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(primals_976.data_ptr()), c_void_p(primals_977.data_ptr()), c_void_p(primals_978.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(primals_979.data_ptr()), c_void_p(primals_980.data_ptr()), c_void_p(primals_981.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(primals_982.data_ptr()), c_void_p(primals_983.data_ptr()), c_void_p(primals_984.data_ptr()), c_void_p(buf530.data_ptr()), c_void_p(primals_985.data_ptr()), c_void_p(primals_986.data_ptr()), c_void_p(primals_987.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(primals_988.data_ptr()), c_void_p(primals_989.data_ptr()), c_void_p(primals_990.data_ptr()), c_void_p(buf543.data_ptr()), c_void_p(primals_991.data_ptr()), c_void_p(primals_992.data_ptr()), c_void_p(primals_993.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(primals_994.data_ptr()), c_void_p(primals_995.data_ptr()), c_void_p(primals_996.data_ptr()), c_void_p(buf560.data_ptr()), c_void_p(primals_997.data_ptr()), c_void_p(primals_998.data_ptr()), c_void_p(primals_999.data_ptr()), c_void_p(buf567.data_ptr()), c_void_p(primals_1000.data_ptr()), c_void_p(primals_1001.data_ptr()), c_void_p(primals_1002.data_ptr()), c_void_p(buf575.data_ptr()), c_void_p(primals_1003.data_ptr()), c_void_p(primals_1004.data_ptr()), c_void_p(primals_1005.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(primals_1006.data_ptr()), c_void_p(primals_1007.data_ptr()), c_void_p(primals_1008.data_ptr()), c_void_p(buf591.data_ptr()), c_void_p(primals_1009.data_ptr()), c_void_p(primals_1010.data_ptr()), c_void_p(primals_1011.data_ptr()), c_void_p(buf598.data_ptr()), c_void_p(primals_1012.data_ptr()), c_void_p(primals_1013.data_ptr()), c_void_p(primals_1014.data_ptr()), c_void_p(buf606.data_ptr()), c_void_p(primals_1015.data_ptr()), c_void_p(primals_1016.data_ptr()), c_void_p(primals_1017.data_ptr()), c_void_p(buf613.data_ptr()), c_void_p(primals_1018.data_ptr()), c_void_p(primals_1019.data_ptr()), c_void_p(primals_1020.data_ptr()), c_void_p(buf619.data_ptr()), c_void_p(primals_1021.data_ptr()), c_void_p(primals_1022.data_ptr()), c_void_p(primals_1023.data_ptr()), c_void_p(buf626.data_ptr()), c_void_p(primals_1024.data_ptr()), c_void_p(primals_1025.data_ptr()), c_void_p(primals_1026.data_ptr()), c_void_p(buf634.data_ptr()), c_void_p(primals_1027.data_ptr()), c_void_p(primals_1028.data_ptr()), c_void_p(primals_1029.data_ptr()), c_void_p(buf641.data_ptr()), c_void_p(primals_1030.data_ptr()), c_void_p(primals_1031.data_ptr()), c_void_p(primals_1032.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_1033.data_ptr()), c_void_p(primals_1034.data_ptr()), c_void_p(primals_1035.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(primals_1036.data_ptr()), c_void_p(primals_1037.data_ptr()), c_void_p(primals_1038.data_ptr()), c_void_p(buf664.data_ptr()), c_void_p(primals_1039.data_ptr()), c_void_p(primals_1040.data_ptr()), c_void_p(primals_1041.data_ptr()), c_void_p(buf671.data_ptr()), c_void_p(primals_1042.data_ptr()), c_void_p(primals_1043.data_ptr()), c_void_p(primals_1044.data_ptr()), c_void_p(buf679.data_ptr()), c_void_p(primals_1045.data_ptr()), c_void_p(primals_1046.data_ptr()), c_void_p(primals_1047.data_ptr()), c_void_p(buf686.data_ptr()), c_void_p(primals_1048.data_ptr()), c_void_p(primals_1049.data_ptr()), c_void_p(primals_1050.data_ptr()), c_void_p(buf697.data_ptr()), c_void_p(primals_1051.data_ptr()), c_void_p(primals_1052.data_ptr()), c_void_p(primals_1053.data_ptr()), c_void_p(buf704.data_ptr()), c_void_p(primals_1054.data_ptr()), c_void_p(primals_1055.data_ptr()), c_void_p(primals_1056.data_ptr()), c_void_p(buf714.data_ptr()), c_void_p(primals_1057.data_ptr()), c_void_p(primals_1058.data_ptr()), c_void_p(primals_1059.data_ptr()), c_void_p(buf721.data_ptr()), c_void_p(primals_1060.data_ptr()), c_void_p(primals_1061.data_ptr()), c_void_p(primals_1062.data_ptr()), c_void_p(buf728.data_ptr()), c_void_p(primals_1063.data_ptr()), c_void_p(primals_1064.data_ptr()), c_void_p(primals_1065.data_ptr()), c_void_p(buf735.data_ptr()), c_void_p(primals_1066.data_ptr()), c_void_p(primals_1067.data_ptr()), c_void_p(primals_1068.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(primals_1069.data_ptr()), c_void_p(primals_1070.data_ptr()), c_void_p(primals_1071.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(primals_1072.data_ptr()), c_void_p(primals_1073.data_ptr()), c_void_p(primals_1074.data_ptr()), c_void_p(buf757.data_ptr()), c_void_p(primals_1075.data_ptr()), c_void_p(primals_1076.data_ptr()), c_void_p(primals_1077.data_ptr()), c_void_p(buf764.data_ptr()), c_void_p(primals_1078.data_ptr()), c_void_p(primals_1079.data_ptr()), c_void_p(primals_1080.data_ptr()), c_void_p(buf769.data_ptr()), c_void_p(primals_1081.data_ptr()), c_void_p(primals_1082.data_ptr()), c_void_p(primals_1083.data_ptr()), c_void_p(buf784.data_ptr()), c_void_p(primals_1084.data_ptr()), c_void_p(primals_1085.data_ptr()), c_void_p(primals_1086.data_ptr()), c_void_p(buf791.data_ptr()), c_void_p(primals_1087.data_ptr()), c_void_p(primals_1088.data_ptr()), c_void_p(primals_1089.data_ptr()), c_void_p(buf799.data_ptr()), c_void_p(primals_1090.data_ptr()), c_void_p(primals_1091.data_ptr()), c_void_p(primals_1092.data_ptr()), c_void_p(buf806.data_ptr()), c_void_p(primals_1093.data_ptr()), c_void_p(primals_1094.data_ptr()), c_void_p(primals_1095.data_ptr()), c_void_p(buf815.data_ptr()), c_void_p(primals_1096.data_ptr()), c_void_p(primals_1097.data_ptr()), c_void_p(primals_1098.data_ptr()), c_void_p(buf822.data_ptr()), c_void_p(primals_1099.data_ptr()), c_void_p(primals_1100.data_ptr()), c_void_p(primals_1101.data_ptr()), c_void_p(buf830.data_ptr()), c_void_p(primals_1102.data_ptr()), c_void_p(primals_1103.data_ptr()), c_void_p(primals_1104.data_ptr()), c_void_p(buf837.data_ptr()), c_void_p(primals_1105.data_ptr()), c_void_p(primals_1106.data_ptr()), c_void_p(primals_1107.data_ptr()), c_void_p(buf843.data_ptr()), c_void_p(primals_1108.data_ptr()), c_void_p(primals_1109.data_ptr()), c_void_p(primals_1110.data_ptr()), c_void_p(buf850.data_ptr()), c_void_p(primals_1111.data_ptr()), c_void_p(primals_1112.data_ptr()), c_void_p(primals_1113.data_ptr()), c_void_p(buf858.data_ptr()), c_void_p(primals_1114.data_ptr()), c_void_p(primals_1115.data_ptr()), c_void_p(primals_1116.data_ptr()), c_void_p(buf865.data_ptr()), c_void_p(primals_1117.data_ptr()), c_void_p(primals_1118.data_ptr()), c_void_p(primals_1119.data_ptr()), c_void_p(buf871.data_ptr()), c_void_p(primals_1120.data_ptr()), c_void_p(primals_1121.data_ptr()), c_void_p(primals_1122.data_ptr()), c_void_p(buf878.data_ptr()), c_void_p(primals_1123.data_ptr()), c_void_p(primals_1124.data_ptr()), c_void_p(primals_1125.data_ptr()), c_void_p(buf888.data_ptr()), c_void_p(primals_1126.data_ptr()), c_void_p(primals_1127.data_ptr()), c_void_p(primals_1128.data_ptr()), c_void_p(buf895.data_ptr()), c_void_p(primals_1129.data_ptr()), c_void_p(primals_1130.data_ptr()), c_void_p(primals_1131.data_ptr()), c_void_p(buf903.data_ptr()), c_void_p(primals_1132.data_ptr()), c_void_p(primals_1133.data_ptr()), c_void_p(primals_1134.data_ptr()), c_void_p(buf910.data_ptr()), c_void_p(primals_1135.data_ptr()), c_void_p(primals_1136.data_ptr()), c_void_p(primals_1137.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(primals_1138.data_ptr()), c_void_p(primals_1139.data_ptr()), c_void_p(primals_1140.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(primals_1141.data_ptr()), c_void_p(primals_1142.data_ptr()), c_void_p(primals_1143.data_ptr()), c_void_p(buf934.data_ptr()), c_void_p(primals_1144.data_ptr()), c_void_p(primals_1145.data_ptr()), c_void_p(primals_1146.data_ptr()), c_void_p(buf941.data_ptr()), c_void_p(primals_1147.data_ptr()), c_void_p(primals_1148.data_ptr()), c_void_p(primals_1149.data_ptr()), c_void_p(buf947.data_ptr()), c_void_p(primals_1150.data_ptr()), c_void_p(primals_963.data_ptr()), c_void_p(primals_964.data_ptr()), c_void_p(primals_965.data_ptr()), c_void_p(primals_966.data_ptr()), c_void_p(primals_967.data_ptr()), c_void_p(primals_968.data_ptr()), c_void_p(primals_969.data_ptr()), c_void_p(primals_970.data_ptr()), c_void_p(primals_971.data_ptr()), c_void_p(primals_972.data_ptr()), c_void_p(primals_973.data_ptr()), c_void_p(primals_974.data_ptr()), c_void_p(primals_975.data_ptr()), c_void_p(primals_976.data_ptr()), c_void_p(primals_977.data_ptr()), c_void_p(primals_978.data_ptr()), c_void_p(primals_979.data_ptr()), c_void_p(primals_980.data_ptr()), c_void_p(primals_981.data_ptr()), c_void_p(primals_982.data_ptr()), c_void_p(primals_983.data_ptr()), c_void_p(primals_984.data_ptr()), c_void_p(primals_985.data_ptr()), c_void_p(primals_986.data_ptr()), c_void_p(primals_987.data_ptr()), c_void_p(primals_988.data_ptr()), c_void_p(primals_989.data_ptr()), c_void_p(primals_990.data_ptr()), c_void_p(primals_991.data_ptr()), c_void_p(primals_992.data_ptr()), c_void_p(primals_993.data_ptr()), c_void_p(primals_994.data_ptr()), c_void_p(primals_995.data_ptr()), c_void_p(primals_996.data_ptr()), c_void_p(primals_997.data_ptr()), c_void_p(primals_998.data_ptr()), c_void_p(primals_999.data_ptr()), c_void_p(primals_1000.data_ptr()), c_void_p(primals_1001.data_ptr()), c_void_p(primals_1002.data_ptr()), c_void_p(primals_1003.data_ptr()), c_void_p(primals_1004.data_ptr()), c_void_p(primals_1005.data_ptr()), c_void_p(primals_1006.data_ptr()), c_void_p(primals_1007.data_ptr()), c_void_p(primals_1008.data_ptr()), c_void_p(primals_1009.data_ptr()), c_void_p(primals_1010.data_ptr()), c_void_p(primals_1011.data_ptr()), c_void_p(primals_1012.data_ptr()), c_void_p(primals_1013.data_ptr()), c_void_p(primals_1014.data_ptr()), c_void_p(primals_1015.data_ptr()), c_void_p(primals_1016.data_ptr()), c_void_p(primals_1017.data_ptr()), c_void_p(primals_1018.data_ptr()), c_void_p(primals_1019.data_ptr()), c_void_p(primals_1020.data_ptr()), c_void_p(primals_1021.data_ptr()), c_void_p(primals_1022.data_ptr()), c_void_p(primals_1023.data_ptr()), c_void_p(primals_1024.data_ptr()), c_void_p(primals_1025.data_ptr()), c_void_p(primals_1026.data_ptr()), c_void_p(primals_1027.data_ptr()), c_void_p(primals_1028.data_ptr()), c_void_p(primals_1029.data_ptr()), c_void_p(primals_1030.data_ptr()), c_void_p(primals_1031.data_ptr()), c_void_p(primals_1032.data_ptr()), c_void_p(primals_1033.data_ptr()), c_void_p(primals_1034.data_ptr()), c_void_p(primals_1035.data_ptr()), c_void_p(primals_1036.data_ptr()), c_void_p(primals_1037.data_ptr()), c_void_p(primals_1038.data_ptr()), c_void_p(primals_1039.data_ptr()), c_void_p(primals_1040.data_ptr()), c_void_p(primals_1041.data_ptr()), c_void_p(primals_1042.data_ptr()), c_void_p(primals_1043.data_ptr()), c_void_p(primals_1044.data_ptr()), c_void_p(primals_1045.data_ptr()), c_void_p(primals_1046.data_ptr()), c_void_p(primals_1047.data_ptr()), c_void_p(primals_1048.data_ptr()), c_void_p(primals_1049.data_ptr()), c_void_p(primals_1050.data_ptr()), c_void_p(primals_1051.data_ptr()), c_void_p(primals_1052.data_ptr()), c_void_p(primals_1053.data_ptr()), c_void_p(primals_1054.data_ptr()), c_void_p(primals_1055.data_ptr()), c_void_p(primals_1056.data_ptr()), c_void_p(primals_1057.data_ptr()), c_void_p(primals_1058.data_ptr()), c_void_p(primals_1059.data_ptr()), c_void_p(primals_1060.data_ptr()), c_void_p(primals_1061.data_ptr()), c_void_p(primals_1062.data_ptr()), c_void_p(primals_1063.data_ptr()), c_void_p(primals_1064.data_ptr()), c_void_p(primals_1065.data_ptr()), c_void_p(primals_1066.data_ptr()), c_void_p(primals_1067.data_ptr()), c_void_p(primals_1068.data_ptr()), c_void_p(primals_1069.data_ptr()), c_void_p(primals_1070.data_ptr()), c_void_p(primals_1071.data_ptr()), c_void_p(primals_1072.data_ptr()), c_void_p(primals_1073.data_ptr()), c_void_p(primals_1074.data_ptr()), c_void_p(primals_1075.data_ptr()), c_void_p(primals_1076.data_ptr()), c_void_p(primals_1077.data_ptr()), c_void_p(primals_1078.data_ptr()), c_void_p(primals_1079.data_ptr()), c_void_p(primals_1080.data_ptr()), c_void_p(primals_1081.data_ptr()), c_void_p(primals_1082.data_ptr()), c_void_p(primals_1083.data_ptr()), c_void_p(primals_1084.data_ptr()), c_void_p(primals_1085.data_ptr()), c_void_p(primals_1086.data_ptr()), c_void_p(primals_1087.data_ptr()), c_void_p(primals_1088.data_ptr()), c_void_p(primals_1089.data_ptr()), c_void_p(primals_1090.data_ptr()), c_void_p(primals_1091.data_ptr()), c_void_p(primals_1092.data_ptr()), c_void_p(primals_1093.data_ptr()), c_void_p(primals_1094.data_ptr()), c_void_p(primals_1095.data_ptr()), c_void_p(primals_1096.data_ptr()), c_void_p(primals_1097.data_ptr()), c_void_p(primals_1098.data_ptr()), c_void_p(primals_1099.data_ptr()), c_void_p(primals_1100.data_ptr()), c_void_p(primals_1101.data_ptr()), c_void_p(primals_1102.data_ptr()), c_void_p(primals_1103.data_ptr()), c_void_p(primals_1104.data_ptr()), c_void_p(primals_1105.data_ptr()), c_void_p(primals_1106.data_ptr()), c_void_p(primals_1107.data_ptr()), c_void_p(primals_1108.data_ptr()), c_void_p(primals_1109.data_ptr()), c_void_p(primals_1110.data_ptr()), c_void_p(primals_1111.data_ptr()), c_void_p(primals_1112.data_ptr()), c_void_p(primals_1113.data_ptr()), c_void_p(primals_1114.data_ptr()), c_void_p(primals_1115.data_ptr()), c_void_p(primals_1116.data_ptr()), c_void_p(primals_1117.data_ptr()), c_void_p(primals_1118.data_ptr()), c_void_p(primals_1119.data_ptr()), c_void_p(primals_1120.data_ptr()), c_void_p(primals_1121.data_ptr()), c_void_p(primals_1122.data_ptr()), c_void_p(primals_1123.data_ptr()), c_void_p(primals_1124.data_ptr()), c_void_p(primals_1125.data_ptr()), c_void_p(primals_1126.data_ptr()), c_void_p(primals_1127.data_ptr()), c_void_p(primals_1128.data_ptr()), c_void_p(primals_1129.data_ptr()), c_void_p(primals_1130.data_ptr()), c_void_p(primals_1131.data_ptr()), c_void_p(primals_1132.data_ptr()), c_void_p(primals_1133.data_ptr()), c_void_p(primals_1134.data_ptr()), c_void_p(primals_1135.data_ptr()), c_void_p(primals_1136.data_ptr()), c_void_p(primals_1137.data_ptr()), c_void_p(primals_1138.data_ptr()), c_void_p(primals_1139.data_ptr()), c_void_p(primals_1140.data_ptr()), c_void_p(primals_1141.data_ptr()), c_void_p(primals_1142.data_ptr()), c_void_p(primals_1143.data_ptr()), c_void_p(primals_1144.data_ptr()), c_void_p(primals_1145.data_ptr()), c_void_p(primals_1146.data_ptr()), c_void_p(primals_1147.data_ptr()), c_void_p(primals_1148.data_ptr()), c_void_p(primals_1149.data_ptr()), c_void_p(primals_1150.data_ptr()))
    del buf2038
    del buf2046
    del buf2054
    del buf2062
    del buf2070
    del buf2078
    del buf2086
    del buf2094
    del buf2102
    del buf2110
    del buf2118
    del buf2126
    del buf2134
    del buf2142
    del buf2150
    del buf2158
    del buf2166
    del buf2174
    del buf2182
    del buf2190
    del buf2198
    del buf2206
    del buf2214
    del buf2222
    del buf2230
    del buf2238
    del buf2246
    del buf2254
    del buf2262
    del buf2270
    del buf2278
    del buf2286
    del buf2294
    del buf2302
    del buf2310
    del buf2318
    del buf2326
    del buf2334
    del buf2342
    del buf2350
    del buf2358
    del buf2366
    del buf2374
    del buf2382
    del buf2390
    del buf2398
    del buf2406
    del buf2414
    del buf2422
    del buf2430
    del buf2438
    del buf2446
    del buf2454
    del buf2462
    del buf2470
    del buf2478
    del buf2486
    del buf2494
    del buf2502
    del buf2510
    del buf2518
    del buf2526
    del primals_1000
    del primals_1001
    del primals_1002
    del primals_1003
    del primals_1004
    del primals_1005
    del primals_1006
    del primals_1007
    del primals_1008
    del primals_1009
    del primals_1010
    del primals_1011
    del primals_1012
    del primals_1013
    del primals_1014
    del primals_1015
    del primals_1016
    del primals_1017
    del primals_1018
    del primals_1019
    del primals_1020
    del primals_1021
    del primals_1022
    del primals_1023
    del primals_1024
    del primals_1025
    del primals_1026
    del primals_1027
    del primals_1028
    del primals_1029
    del primals_1030
    del primals_1031
    del primals_1032
    del primals_1033
    del primals_1034
    del primals_1035
    del primals_1036
    del primals_1037
    del primals_1038
    del primals_1039
    del primals_1040
    del primals_1041
    del primals_1042
    del primals_1043
    del primals_1044
    del primals_1045
    del primals_1046
    del primals_1047
    del primals_1048
    del primals_1049
    del primals_1050
    del primals_1051
    del primals_1052
    del primals_1053
    del primals_1054
    del primals_1055
    del primals_1056
    del primals_1057
    del primals_1058
    del primals_1059
    del primals_1060
    del primals_1061
    del primals_1062
    del primals_1063
    del primals_1064
    del primals_1065
    del primals_1066
    del primals_1067
    del primals_1068
    del primals_1069
    del primals_1070
    del primals_1071
    del primals_1072
    del primals_1073
    del primals_1074
    del primals_1075
    del primals_1076
    del primals_1077
    del primals_1078
    del primals_1079
    del primals_1080
    del primals_1081
    del primals_1082
    del primals_1083
    del primals_1084
    del primals_1085
    del primals_1086
    del primals_1087
    del primals_1088
    del primals_1089
    del primals_1090
    del primals_1091
    del primals_1092
    del primals_1093
    del primals_1094
    del primals_1095
    del primals_1096
    del primals_1097
    del primals_1098
    del primals_1099
    del primals_1100
    del primals_1101
    del primals_1102
    del primals_1103
    del primals_1104
    del primals_1105
    del primals_1106
    del primals_1107
    del primals_1108
    del primals_1109
    del primals_1110
    del primals_1111
    del primals_1112
    del primals_1113
    del primals_1114
    del primals_1115
    del primals_1116
    del primals_1117
    del primals_1118
    del primals_1119
    del primals_1120
    del primals_1121
    del primals_1122
    del primals_1123
    del primals_1124
    del primals_1125
    del primals_1126
    del primals_1127
    del primals_1128
    del primals_1129
    del primals_1130
    del primals_1131
    del primals_1132
    del primals_1133
    del primals_1134
    del primals_1135
    del primals_1136
    del primals_1137
    del primals_1138
    del primals_1139
    del primals_1140
    del primals_1141
    del primals_1142
    del primals_1143
    del primals_1144
    del primals_1145
    del primals_1146
    del primals_1147
    del primals_1148
    del primals_1149
    del primals_1150
    del primals_963
    del primals_964
    del primals_965
    del primals_966
    del primals_967
    del primals_968
    del primals_969
    del primals_970
    del primals_971
    del primals_972
    del primals_973
    del primals_974
    del primals_975
    del primals_976
    del primals_977
    del primals_978
    del primals_979
    del primals_980
    del primals_981
    del primals_982
    del primals_983
    del primals_984
    del primals_985
    del primals_986
    del primals_987
    del primals_988
    del primals_989
    del primals_990
    del primals_991
    del primals_992
    del primals_993
    del primals_994
    del primals_995
    del primals_996
    del primals_997
    del primals_998
    del primals_999
    buf2534 = reinterpret_tensor(buf948, (432, ), (1, ), 0); del buf948  # reuse
    buf2542 = reinterpret_tensor(buf955, (432, ), (1, ), 0); del buf955  # reuse
    buf2550 = reinterpret_tensor(buf963, (432, ), (1, ), 0); del buf963  # reuse
    buf2558 = reinterpret_tensor(buf970, (432, ), (1, ), 0); del buf970  # reuse
    buf2566 = reinterpret_tensor(buf976, (432, ), (1, ), 0); del buf976  # reuse
    buf2574 = reinterpret_tensor(buf983, (432, ), (1, ), 0); del buf983  # reuse
    buf2582 = reinterpret_tensor(buf993, (432, ), (1, ), 0); del buf993  # reuse
    buf2590 = reinterpret_tensor(buf1000, (432, ), (1, ), 0); del buf1000  # reuse
    buf2598 = reinterpret_tensor(buf1008, (432, ), (1, ), 0); del buf1008  # reuse
    buf2606 = reinterpret_tensor(buf1015, (432, ), (1, ), 0); del buf1015  # reuse
    buf2614 = reinterpret_tensor(buf1024, (432, ), (1, ), 0); del buf1024  # reuse
    buf2622 = reinterpret_tensor(buf1031, (432, ), (1, ), 0); del buf1031  # reuse
    buf2630 = reinterpret_tensor(buf1039, (432, ), (1, ), 0); del buf1039  # reuse
    buf2638 = reinterpret_tensor(buf1046, (432, ), (1, ), 0); del buf1046  # reuse
    buf2646 = reinterpret_tensor(buf1052, (432, ), (1, ), 0); del buf1052  # reuse
    buf2654 = reinterpret_tensor(buf1059, (432, ), (1, ), 0); del buf1059  # reuse
    buf2662 = reinterpret_tensor(buf1067, (432, ), (1, ), 0); del buf1067  # reuse
    buf2670 = reinterpret_tensor(buf1074, (432, ), (1, ), 0); del buf1074  # reuse
    buf2678 = reinterpret_tensor(buf1080, (432, ), (1, ), 0); del buf1080  # reuse
    buf2686 = reinterpret_tensor(buf1087, (432, ), (1, ), 0); del buf1087  # reuse
    buf2694 = reinterpret_tensor(buf1097, (864, ), (1, ), 0); del buf1097  # reuse
    buf2702 = reinterpret_tensor(buf1104, (864, ), (1, ), 0); del buf1104  # reuse
    buf2710 = reinterpret_tensor(buf1112, (864, ), (1, ), 0); del buf1112  # reuse
    buf2718 = reinterpret_tensor(buf1119, (864, ), (1, ), 0); del buf1119  # reuse
    buf2726 = reinterpret_tensor(buf1130, (864, ), (1, ), 0); del buf1130  # reuse
    buf2734 = reinterpret_tensor(buf1137, (864, ), (1, ), 0); del buf1137  # reuse
    buf2742 = reinterpret_tensor(buf1147, (864, ), (1, ), 0); del buf1147  # reuse
    buf2750 = reinterpret_tensor(buf1154, (864, ), (1, ), 0); del buf1154  # reuse
    buf2758 = reinterpret_tensor(buf1161, (864, ), (1, ), 0); del buf1161  # reuse
    buf2766 = reinterpret_tensor(buf1168, (864, ), (1, ), 0); del buf1168  # reuse
    buf2774 = reinterpret_tensor(buf1176, (864, ), (1, ), 0); del buf1176  # reuse
    buf2782 = reinterpret_tensor(buf1183, (864, ), (1, ), 0); del buf1183  # reuse
    buf2790 = reinterpret_tensor(buf1190, (864, ), (1, ), 0); del buf1190  # reuse
    buf2798 = reinterpret_tensor(buf1197, (864, ), (1, ), 0); del buf1197  # reuse
    buf2806 = reinterpret_tensor(buf1202, (864, ), (1, ), 0); del buf1202  # reuse
    buf2814 = reinterpret_tensor(buf1217, (864, ), (1, ), 0); del buf1217  # reuse
    buf2822 = reinterpret_tensor(buf1224, (864, ), (1, ), 0); del buf1224  # reuse
    buf2830 = reinterpret_tensor(buf1232, (864, ), (1, ), 0); del buf1232  # reuse
    buf2838 = reinterpret_tensor(buf1239, (864, ), (1, ), 0); del buf1239  # reuse
    buf2846 = reinterpret_tensor(buf1248, (864, ), (1, ), 0); del buf1248  # reuse
    buf2854 = reinterpret_tensor(buf1255, (864, ), (1, ), 0); del buf1255  # reuse
    buf2862 = reinterpret_tensor(buf1263, (864, ), (1, ), 0); del buf1263  # reuse
    buf2870 = reinterpret_tensor(buf1270, (864, ), (1, ), 0); del buf1270  # reuse
    buf2878 = reinterpret_tensor(buf1276, (864, ), (1, ), 0); del buf1276  # reuse
    buf2886 = reinterpret_tensor(buf1283, (864, ), (1, ), 0); del buf1283  # reuse
    buf2894 = reinterpret_tensor(buf1291, (864, ), (1, ), 0); del buf1291  # reuse
    buf2902 = reinterpret_tensor(buf1298, (864, ), (1, ), 0); del buf1298  # reuse
    buf2910 = reinterpret_tensor(buf1304, (864, ), (1, ), 0); del buf1304  # reuse
    buf2918 = reinterpret_tensor(buf1311, (864, ), (1, ), 0); del buf1311  # reuse
    buf2926 = reinterpret_tensor(buf1321, (864, ), (1, ), 0); del buf1321  # reuse
    buf2934 = reinterpret_tensor(buf1328, (864, ), (1, ), 0); del buf1328  # reuse
    buf2942 = reinterpret_tensor(buf1336, (864, ), (1, ), 0); del buf1336  # reuse
    buf2950 = reinterpret_tensor(buf1343, (864, ), (1, ), 0); del buf1343  # reuse
    buf2958 = reinterpret_tensor(buf1352, (864, ), (1, ), 0); del buf1352  # reuse
    buf2966 = reinterpret_tensor(buf1359, (864, ), (1, ), 0); del buf1359  # reuse
    buf2974 = reinterpret_tensor(buf1367, (864, ), (1, ), 0); del buf1367  # reuse
    buf2982 = reinterpret_tensor(buf1374, (864, ), (1, ), 0); del buf1374  # reuse
    buf2990 = reinterpret_tensor(buf1380, (864, ), (1, ), 0); del buf1380  # reuse
    buf2998 = reinterpret_tensor(buf1387, (864, ), (1, ), 0); del buf1387  # reuse
    buf3006 = reinterpret_tensor(buf1395, (864, ), (1, ), 0); del buf1395  # reuse
    buf3014 = reinterpret_tensor(buf1402, (864, ), (1, ), 0); del buf1402  # reuse
    buf3022 = reinterpret_tensor(buf1408, (864, ), (1, ), 0); del buf1408  # reuse
    buf3030 = reinterpret_tensor(buf1415, (864, ), (1, ), 0); del buf1415  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_208(c_void_p(buf2534.data_ptr()), c_void_p(buf2542.data_ptr()), c_void_p(buf2550.data_ptr()), c_void_p(buf2558.data_ptr()), c_void_p(buf2566.data_ptr()), c_void_p(buf2574.data_ptr()), c_void_p(buf2582.data_ptr()), c_void_p(buf2590.data_ptr()), c_void_p(buf2598.data_ptr()), c_void_p(buf2606.data_ptr()), c_void_p(buf2614.data_ptr()), c_void_p(buf2622.data_ptr()), c_void_p(buf2630.data_ptr()), c_void_p(buf2638.data_ptr()), c_void_p(buf2646.data_ptr()), c_void_p(buf2654.data_ptr()), c_void_p(buf2662.data_ptr()), c_void_p(buf2670.data_ptr()), c_void_p(buf2678.data_ptr()), c_void_p(buf2686.data_ptr()), c_void_p(buf2694.data_ptr()), c_void_p(buf2702.data_ptr()), c_void_p(buf2710.data_ptr()), c_void_p(buf2718.data_ptr()), c_void_p(buf2726.data_ptr()), c_void_p(buf2734.data_ptr()), c_void_p(buf2742.data_ptr()), c_void_p(buf2750.data_ptr()), c_void_p(buf2758.data_ptr()), c_void_p(buf2766.data_ptr()), c_void_p(buf2774.data_ptr()), c_void_p(buf2782.data_ptr()), c_void_p(buf2790.data_ptr()), c_void_p(buf2798.data_ptr()), c_void_p(buf2806.data_ptr()), c_void_p(buf2814.data_ptr()), c_void_p(buf2822.data_ptr()), c_void_p(buf2830.data_ptr()), c_void_p(buf2838.data_ptr()), c_void_p(buf2846.data_ptr()), c_void_p(buf2854.data_ptr()), c_void_p(buf2862.data_ptr()), c_void_p(buf2870.data_ptr()), c_void_p(buf2878.data_ptr()), c_void_p(buf2886.data_ptr()), c_void_p(buf2894.data_ptr()), c_void_p(buf2902.data_ptr()), c_void_p(buf2910.data_ptr()), c_void_p(buf2918.data_ptr()), c_void_p(buf2926.data_ptr()), c_void_p(buf2934.data_ptr()), c_void_p(buf2942.data_ptr()), c_void_p(buf2950.data_ptr()), c_void_p(buf2958.data_ptr()), c_void_p(buf2966.data_ptr()), c_void_p(buf2974.data_ptr()), c_void_p(buf2982.data_ptr()), c_void_p(buf2990.data_ptr()), c_void_p(buf2998.data_ptr()), c_void_p(buf3006.data_ptr()), c_void_p(buf3014.data_ptr()), c_void_p(buf3022.data_ptr()), c_void_p(buf3030.data_ptr()), c_void_p(primals_1151.data_ptr()), c_void_p(primals_1152.data_ptr()), c_void_p(buf954.data_ptr()), c_void_p(primals_1153.data_ptr()), c_void_p(primals_1154.data_ptr()), c_void_p(primals_1155.data_ptr()), c_void_p(buf962.data_ptr()), c_void_p(primals_1156.data_ptr()), c_void_p(primals_1157.data_ptr()), c_void_p(primals_1158.data_ptr()), c_void_p(buf969.data_ptr()), c_void_p(primals_1159.data_ptr()), c_void_p(primals_1160.data_ptr()), c_void_p(primals_1161.data_ptr()), c_void_p(buf975.data_ptr()), c_void_p(primals_1162.data_ptr()), c_void_p(primals_1163.data_ptr()), c_void_p(primals_1164.data_ptr()), c_void_p(buf982.data_ptr()), c_void_p(primals_1165.data_ptr()), c_void_p(primals_1166.data_ptr()), c_void_p(primals_1167.data_ptr()), c_void_p(buf992.data_ptr()), c_void_p(primals_1168.data_ptr()), c_void_p(primals_1169.data_ptr()), c_void_p(primals_1170.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(primals_1171.data_ptr()), c_void_p(primals_1172.data_ptr()), c_void_p(primals_1173.data_ptr()), c_void_p(buf1007.data_ptr()), c_void_p(primals_1174.data_ptr()), c_void_p(primals_1175.data_ptr()), c_void_p(primals_1176.data_ptr()), c_void_p(buf1014.data_ptr()), c_void_p(primals_1177.data_ptr()), c_void_p(primals_1178.data_ptr()), c_void_p(primals_1179.data_ptr()), c_void_p(buf1023.data_ptr()), c_void_p(primals_1180.data_ptr()), c_void_p(primals_1181.data_ptr()), c_void_p(primals_1182.data_ptr()), c_void_p(buf1030.data_ptr()), c_void_p(primals_1183.data_ptr()), c_void_p(primals_1184.data_ptr()), c_void_p(primals_1185.data_ptr()), c_void_p(buf1038.data_ptr()), c_void_p(primals_1186.data_ptr()), c_void_p(primals_1187.data_ptr()), c_void_p(primals_1188.data_ptr()), c_void_p(buf1045.data_ptr()), c_void_p(primals_1189.data_ptr()), c_void_p(primals_1190.data_ptr()), c_void_p(primals_1191.data_ptr()), c_void_p(buf1051.data_ptr()), c_void_p(primals_1192.data_ptr()), c_void_p(primals_1193.data_ptr()), c_void_p(primals_1194.data_ptr()), c_void_p(buf1058.data_ptr()), c_void_p(primals_1195.data_ptr()), c_void_p(primals_1196.data_ptr()), c_void_p(primals_1197.data_ptr()), c_void_p(buf1066.data_ptr()), c_void_p(primals_1198.data_ptr()), c_void_p(primals_1199.data_ptr()), c_void_p(primals_1200.data_ptr()), c_void_p(buf1073.data_ptr()), c_void_p(primals_1201.data_ptr()), c_void_p(primals_1202.data_ptr()), c_void_p(primals_1203.data_ptr()), c_void_p(buf1079.data_ptr()), c_void_p(primals_1204.data_ptr()), c_void_p(primals_1205.data_ptr()), c_void_p(primals_1206.data_ptr()), c_void_p(buf1086.data_ptr()), c_void_p(primals_1207.data_ptr()), c_void_p(primals_1208.data_ptr()), c_void_p(primals_1209.data_ptr()), c_void_p(buf1096.data_ptr()), c_void_p(primals_1210.data_ptr()), c_void_p(primals_1211.data_ptr()), c_void_p(primals_1212.data_ptr()), c_void_p(buf1103.data_ptr()), c_void_p(primals_1213.data_ptr()), c_void_p(primals_1214.data_ptr()), c_void_p(primals_1215.data_ptr()), c_void_p(buf1111.data_ptr()), c_void_p(primals_1216.data_ptr()), c_void_p(primals_1217.data_ptr()), c_void_p(primals_1218.data_ptr()), c_void_p(buf1118.data_ptr()), c_void_p(primals_1219.data_ptr()), c_void_p(primals_1220.data_ptr()), c_void_p(primals_1221.data_ptr()), c_void_p(buf1129.data_ptr()), c_void_p(primals_1222.data_ptr()), c_void_p(primals_1223.data_ptr()), c_void_p(primals_1224.data_ptr()), c_void_p(buf1136.data_ptr()), c_void_p(primals_1225.data_ptr()), c_void_p(primals_1226.data_ptr()), c_void_p(primals_1227.data_ptr()), c_void_p(buf1146.data_ptr()), c_void_p(primals_1228.data_ptr()), c_void_p(primals_1229.data_ptr()), c_void_p(primals_1230.data_ptr()), c_void_p(buf1153.data_ptr()), c_void_p(primals_1231.data_ptr()), c_void_p(primals_1232.data_ptr()), c_void_p(primals_1233.data_ptr()), c_void_p(buf1160.data_ptr()), c_void_p(primals_1234.data_ptr()), c_void_p(primals_1235.data_ptr()), c_void_p(primals_1236.data_ptr()), c_void_p(buf1167.data_ptr()), c_void_p(primals_1237.data_ptr()), c_void_p(primals_1238.data_ptr()), c_void_p(primals_1239.data_ptr()), c_void_p(buf1175.data_ptr()), c_void_p(primals_1240.data_ptr()), c_void_p(primals_1241.data_ptr()), c_void_p(primals_1242.data_ptr()), c_void_p(buf1182.data_ptr()), c_void_p(primals_1243.data_ptr()), c_void_p(primals_1244.data_ptr()), c_void_p(primals_1245.data_ptr()), c_void_p(buf1189.data_ptr()), c_void_p(primals_1246.data_ptr()), c_void_p(primals_1247.data_ptr()), c_void_p(primals_1248.data_ptr()), c_void_p(buf1196.data_ptr()), c_void_p(primals_1249.data_ptr()), c_void_p(primals_1250.data_ptr()), c_void_p(primals_1251.data_ptr()), c_void_p(buf1201.data_ptr()), c_void_p(primals_1252.data_ptr()), c_void_p(primals_1253.data_ptr()), c_void_p(primals_1254.data_ptr()), c_void_p(buf1216.data_ptr()), c_void_p(primals_1255.data_ptr()), c_void_p(primals_1256.data_ptr()), c_void_p(primals_1257.data_ptr()), c_void_p(buf1223.data_ptr()), c_void_p(primals_1258.data_ptr()), c_void_p(primals_1259.data_ptr()), c_void_p(primals_1260.data_ptr()), c_void_p(buf1231.data_ptr()), c_void_p(primals_1261.data_ptr()), c_void_p(primals_1262.data_ptr()), c_void_p(primals_1263.data_ptr()), c_void_p(buf1238.data_ptr()), c_void_p(primals_1264.data_ptr()), c_void_p(primals_1265.data_ptr()), c_void_p(primals_1266.data_ptr()), c_void_p(buf1247.data_ptr()), c_void_p(primals_1267.data_ptr()), c_void_p(primals_1268.data_ptr()), c_void_p(primals_1269.data_ptr()), c_void_p(buf1254.data_ptr()), c_void_p(primals_1270.data_ptr()), c_void_p(primals_1271.data_ptr()), c_void_p(primals_1272.data_ptr()), c_void_p(buf1262.data_ptr()), c_void_p(primals_1273.data_ptr()), c_void_p(primals_1274.data_ptr()), c_void_p(primals_1275.data_ptr()), c_void_p(buf1269.data_ptr()), c_void_p(primals_1276.data_ptr()), c_void_p(primals_1277.data_ptr()), c_void_p(primals_1278.data_ptr()), c_void_p(buf1275.data_ptr()), c_void_p(primals_1279.data_ptr()), c_void_p(primals_1280.data_ptr()), c_void_p(primals_1281.data_ptr()), c_void_p(buf1282.data_ptr()), c_void_p(primals_1282.data_ptr()), c_void_p(primals_1283.data_ptr()), c_void_p(primals_1284.data_ptr()), c_void_p(buf1290.data_ptr()), c_void_p(primals_1285.data_ptr()), c_void_p(primals_1286.data_ptr()), c_void_p(primals_1287.data_ptr()), c_void_p(buf1297.data_ptr()), c_void_p(primals_1288.data_ptr()), c_void_p(primals_1289.data_ptr()), c_void_p(primals_1290.data_ptr()), c_void_p(buf1303.data_ptr()), c_void_p(primals_1291.data_ptr()), c_void_p(primals_1292.data_ptr()), c_void_p(primals_1293.data_ptr()), c_void_p(buf1310.data_ptr()), c_void_p(primals_1294.data_ptr()), c_void_p(primals_1295.data_ptr()), c_void_p(primals_1296.data_ptr()), c_void_p(buf1320.data_ptr()), c_void_p(primals_1297.data_ptr()), c_void_p(primals_1298.data_ptr()), c_void_p(primals_1299.data_ptr()), c_void_p(buf1327.data_ptr()), c_void_p(primals_1300.data_ptr()), c_void_p(primals_1301.data_ptr()), c_void_p(primals_1302.data_ptr()), c_void_p(buf1335.data_ptr()), c_void_p(primals_1303.data_ptr()), c_void_p(primals_1304.data_ptr()), c_void_p(primals_1305.data_ptr()), c_void_p(buf1342.data_ptr()), c_void_p(primals_1306.data_ptr()), c_void_p(primals_1307.data_ptr()), c_void_p(primals_1308.data_ptr()), c_void_p(buf1351.data_ptr()), c_void_p(primals_1309.data_ptr()), c_void_p(primals_1310.data_ptr()), c_void_p(primals_1311.data_ptr()), c_void_p(buf1358.data_ptr()), c_void_p(primals_1312.data_ptr()), c_void_p(primals_1313.data_ptr()), c_void_p(primals_1314.data_ptr()), c_void_p(buf1366.data_ptr()), c_void_p(primals_1315.data_ptr()), c_void_p(primals_1316.data_ptr()), c_void_p(primals_1317.data_ptr()), c_void_p(buf1373.data_ptr()), c_void_p(primals_1318.data_ptr()), c_void_p(primals_1319.data_ptr()), c_void_p(primals_1320.data_ptr()), c_void_p(buf1379.data_ptr()), c_void_p(primals_1321.data_ptr()), c_void_p(primals_1322.data_ptr()), c_void_p(primals_1323.data_ptr()), c_void_p(buf1386.data_ptr()), c_void_p(primals_1324.data_ptr()), c_void_p(primals_1325.data_ptr()), c_void_p(primals_1326.data_ptr()), c_void_p(buf1394.data_ptr()), c_void_p(primals_1327.data_ptr()), c_void_p(primals_1328.data_ptr()), c_void_p(primals_1329.data_ptr()), c_void_p(buf1401.data_ptr()), c_void_p(primals_1330.data_ptr()), c_void_p(primals_1331.data_ptr()), c_void_p(primals_1332.data_ptr()), c_void_p(buf1407.data_ptr()), c_void_p(primals_1333.data_ptr()), c_void_p(primals_1334.data_ptr()), c_void_p(primals_1335.data_ptr()), c_void_p(buf1414.data_ptr()), c_void_p(primals_1336.data_ptr()), c_void_p(primals_1337.data_ptr()), c_void_p(primals_1338.data_ptr()), c_void_p(primals_1151.data_ptr()), c_void_p(primals_1152.data_ptr()), c_void_p(primals_1153.data_ptr()), c_void_p(primals_1154.data_ptr()), c_void_p(primals_1155.data_ptr()), c_void_p(primals_1156.data_ptr()), c_void_p(primals_1157.data_ptr()), c_void_p(primals_1158.data_ptr()), c_void_p(primals_1159.data_ptr()), c_void_p(primals_1160.data_ptr()), c_void_p(primals_1161.data_ptr()), c_void_p(primals_1162.data_ptr()), c_void_p(primals_1163.data_ptr()), c_void_p(primals_1164.data_ptr()), c_void_p(primals_1165.data_ptr()), c_void_p(primals_1166.data_ptr()), c_void_p(primals_1167.data_ptr()), c_void_p(primals_1168.data_ptr()), c_void_p(primals_1169.data_ptr()), c_void_p(primals_1170.data_ptr()), c_void_p(primals_1171.data_ptr()), c_void_p(primals_1172.data_ptr()), c_void_p(primals_1173.data_ptr()), c_void_p(primals_1174.data_ptr()), c_void_p(primals_1175.data_ptr()), c_void_p(primals_1176.data_ptr()), c_void_p(primals_1177.data_ptr()), c_void_p(primals_1178.data_ptr()), c_void_p(primals_1179.data_ptr()), c_void_p(primals_1180.data_ptr()), c_void_p(primals_1181.data_ptr()), c_void_p(primals_1182.data_ptr()), c_void_p(primals_1183.data_ptr()), c_void_p(primals_1184.data_ptr()), c_void_p(primals_1185.data_ptr()), c_void_p(primals_1186.data_ptr()), c_void_p(primals_1187.data_ptr()), c_void_p(primals_1188.data_ptr()), c_void_p(primals_1189.data_ptr()), c_void_p(primals_1190.data_ptr()), c_void_p(primals_1191.data_ptr()), c_void_p(primals_1192.data_ptr()), c_void_p(primals_1193.data_ptr()), c_void_p(primals_1194.data_ptr()), c_void_p(primals_1195.data_ptr()), c_void_p(primals_1196.data_ptr()), c_void_p(primals_1197.data_ptr()), c_void_p(primals_1198.data_ptr()), c_void_p(primals_1199.data_ptr()), c_void_p(primals_1200.data_ptr()), c_void_p(primals_1201.data_ptr()), c_void_p(primals_1202.data_ptr()), c_void_p(primals_1203.data_ptr()), c_void_p(primals_1204.data_ptr()), c_void_p(primals_1205.data_ptr()), c_void_p(primals_1206.data_ptr()), c_void_p(primals_1207.data_ptr()), c_void_p(primals_1208.data_ptr()), c_void_p(primals_1209.data_ptr()), c_void_p(primals_1210.data_ptr()), c_void_p(primals_1211.data_ptr()), c_void_p(primals_1212.data_ptr()), c_void_p(primals_1213.data_ptr()), c_void_p(primals_1214.data_ptr()), c_void_p(primals_1215.data_ptr()), c_void_p(primals_1216.data_ptr()), c_void_p(primals_1217.data_ptr()), c_void_p(primals_1218.data_ptr()), c_void_p(primals_1219.data_ptr()), c_void_p(primals_1220.data_ptr()), c_void_p(primals_1221.data_ptr()), c_void_p(primals_1222.data_ptr()), c_void_p(primals_1223.data_ptr()), c_void_p(primals_1224.data_ptr()), c_void_p(primals_1225.data_ptr()), c_void_p(primals_1226.data_ptr()), c_void_p(primals_1227.data_ptr()), c_void_p(primals_1228.data_ptr()), c_void_p(primals_1229.data_ptr()), c_void_p(primals_1230.data_ptr()), c_void_p(primals_1231.data_ptr()), c_void_p(primals_1232.data_ptr()), c_void_p(primals_1233.data_ptr()), c_void_p(primals_1234.data_ptr()), c_void_p(primals_1235.data_ptr()), c_void_p(primals_1236.data_ptr()), c_void_p(primals_1237.data_ptr()), c_void_p(primals_1238.data_ptr()), c_void_p(primals_1239.data_ptr()), c_void_p(primals_1240.data_ptr()), c_void_p(primals_1241.data_ptr()), c_void_p(primals_1242.data_ptr()), c_void_p(primals_1243.data_ptr()), c_void_p(primals_1244.data_ptr()), c_void_p(primals_1245.data_ptr()), c_void_p(primals_1246.data_ptr()), c_void_p(primals_1247.data_ptr()), c_void_p(primals_1248.data_ptr()), c_void_p(primals_1249.data_ptr()), c_void_p(primals_1250.data_ptr()), c_void_p(primals_1251.data_ptr()), c_void_p(primals_1252.data_ptr()), c_void_p(primals_1253.data_ptr()), c_void_p(primals_1254.data_ptr()), c_void_p(primals_1255.data_ptr()), c_void_p(primals_1256.data_ptr()), c_void_p(primals_1257.data_ptr()), c_void_p(primals_1258.data_ptr()), c_void_p(primals_1259.data_ptr()), c_void_p(primals_1260.data_ptr()), c_void_p(primals_1261.data_ptr()), c_void_p(primals_1262.data_ptr()), c_void_p(primals_1263.data_ptr()), c_void_p(primals_1264.data_ptr()), c_void_p(primals_1265.data_ptr()), c_void_p(primals_1266.data_ptr()), c_void_p(primals_1267.data_ptr()), c_void_p(primals_1268.data_ptr()), c_void_p(primals_1269.data_ptr()), c_void_p(primals_1270.data_ptr()), c_void_p(primals_1271.data_ptr()), c_void_p(primals_1272.data_ptr()), c_void_p(primals_1273.data_ptr()), c_void_p(primals_1274.data_ptr()), c_void_p(primals_1275.data_ptr()), c_void_p(primals_1276.data_ptr()), c_void_p(primals_1277.data_ptr()), c_void_p(primals_1278.data_ptr()), c_void_p(primals_1279.data_ptr()), c_void_p(primals_1280.data_ptr()), c_void_p(primals_1281.data_ptr()), c_void_p(primals_1282.data_ptr()), c_void_p(primals_1283.data_ptr()), c_void_p(primals_1284.data_ptr()), c_void_p(primals_1285.data_ptr()), c_void_p(primals_1286.data_ptr()), c_void_p(primals_1287.data_ptr()), c_void_p(primals_1288.data_ptr()), c_void_p(primals_1289.data_ptr()), c_void_p(primals_1290.data_ptr()), c_void_p(primals_1291.data_ptr()), c_void_p(primals_1292.data_ptr()), c_void_p(primals_1293.data_ptr()), c_void_p(primals_1294.data_ptr()), c_void_p(primals_1295.data_ptr()), c_void_p(primals_1296.data_ptr()), c_void_p(primals_1297.data_ptr()), c_void_p(primals_1298.data_ptr()), c_void_p(primals_1299.data_ptr()), c_void_p(primals_1300.data_ptr()), c_void_p(primals_1301.data_ptr()), c_void_p(primals_1302.data_ptr()), c_void_p(primals_1303.data_ptr()), c_void_p(primals_1304.data_ptr()), c_void_p(primals_1305.data_ptr()), c_void_p(primals_1306.data_ptr()), c_void_p(primals_1307.data_ptr()), c_void_p(primals_1308.data_ptr()), c_void_p(primals_1309.data_ptr()), c_void_p(primals_1310.data_ptr()), c_void_p(primals_1311.data_ptr()), c_void_p(primals_1312.data_ptr()), c_void_p(primals_1313.data_ptr()), c_void_p(primals_1314.data_ptr()), c_void_p(primals_1315.data_ptr()), c_void_p(primals_1316.data_ptr()), c_void_p(primals_1317.data_ptr()), c_void_p(primals_1318.data_ptr()), c_void_p(primals_1319.data_ptr()), c_void_p(primals_1320.data_ptr()), c_void_p(primals_1321.data_ptr()), c_void_p(primals_1322.data_ptr()), c_void_p(primals_1323.data_ptr()), c_void_p(primals_1324.data_ptr()), c_void_p(primals_1325.data_ptr()), c_void_p(primals_1326.data_ptr()), c_void_p(primals_1327.data_ptr()), c_void_p(primals_1328.data_ptr()), c_void_p(primals_1329.data_ptr()), c_void_p(primals_1330.data_ptr()), c_void_p(primals_1331.data_ptr()), c_void_p(primals_1332.data_ptr()), c_void_p(primals_1333.data_ptr()), c_void_p(primals_1334.data_ptr()), c_void_p(primals_1335.data_ptr()), c_void_p(primals_1336.data_ptr()), c_void_p(primals_1337.data_ptr()), c_void_p(primals_1338.data_ptr()))
    del buf2534
    del buf2542
    del buf2550
    del buf2558
    del buf2566
    del buf2574
    del buf2582
    del buf2590
    del buf2598
    del buf2606
    del buf2614
    del buf2622
    del buf2630
    del buf2638
    del buf2646
    del buf2654
    del buf2662
    del buf2670
    del buf2678
    del buf2686
    del buf2694
    del buf2702
    del buf2710
    del buf2718
    del buf2726
    del buf2734
    del buf2742
    del buf2750
    del buf2758
    del buf2766
    del buf2774
    del buf2782
    del buf2790
    del buf2798
    del buf2806
    del buf2814
    del buf2822
    del buf2830
    del buf2838
    del buf2846
    del buf2854
    del buf2862
    del buf2870
    del buf2878
    del buf2886
    del buf2894
    del buf2902
    del buf2910
    del buf2918
    del buf2926
    del buf2934
    del buf2942
    del buf2950
    del buf2958
    del buf2966
    del buf2974
    del buf2982
    del buf2990
    del buf2998
    del buf3006
    del buf3014
    del buf3022
    del buf3030
    del primals_1151
    del primals_1152
    del primals_1153
    del primals_1154
    del primals_1155
    del primals_1156
    del primals_1157
    del primals_1158
    del primals_1159
    del primals_1160
    del primals_1161
    del primals_1162
    del primals_1163
    del primals_1164
    del primals_1165
    del primals_1166
    del primals_1167
    del primals_1168
    del primals_1169
    del primals_1170
    del primals_1171
    del primals_1172
    del primals_1173
    del primals_1174
    del primals_1175
    del primals_1176
    del primals_1177
    del primals_1178
    del primals_1179
    del primals_1180
    del primals_1181
    del primals_1182
    del primals_1183
    del primals_1184
    del primals_1185
    del primals_1186
    del primals_1187
    del primals_1188
    del primals_1189
    del primals_1190
    del primals_1191
    del primals_1192
    del primals_1193
    del primals_1194
    del primals_1195
    del primals_1196
    del primals_1197
    del primals_1198
    del primals_1199
    del primals_1200
    del primals_1201
    del primals_1202
    del primals_1203
    del primals_1204
    del primals_1205
    del primals_1206
    del primals_1207
    del primals_1208
    del primals_1209
    del primals_1210
    del primals_1211
    del primals_1212
    del primals_1213
    del primals_1214
    del primals_1215
    del primals_1216
    del primals_1217
    del primals_1218
    del primals_1219
    del primals_1220
    del primals_1221
    del primals_1222
    del primals_1223
    del primals_1224
    del primals_1225
    del primals_1226
    del primals_1227
    del primals_1228
    del primals_1229
    del primals_1230
    del primals_1231
    del primals_1232
    del primals_1233
    del primals_1234
    del primals_1235
    del primals_1236
    del primals_1237
    del primals_1238
    del primals_1239
    del primals_1240
    del primals_1241
    del primals_1242
    del primals_1243
    del primals_1244
    del primals_1245
    del primals_1246
    del primals_1247
    del primals_1248
    del primals_1249
    del primals_1250
    del primals_1251
    del primals_1252
    del primals_1253
    del primals_1254
    del primals_1255
    del primals_1256
    del primals_1257
    del primals_1258
    del primals_1259
    del primals_1260
    del primals_1261
    del primals_1262
    del primals_1263
    del primals_1264
    del primals_1265
    del primals_1266
    del primals_1267
    del primals_1268
    del primals_1269
    del primals_1270
    del primals_1271
    del primals_1272
    del primals_1273
    del primals_1274
    del primals_1275
    del primals_1276
    del primals_1277
    del primals_1278
    del primals_1279
    del primals_1280
    del primals_1281
    del primals_1282
    del primals_1283
    del primals_1284
    del primals_1285
    del primals_1286
    del primals_1287
    del primals_1288
    del primals_1289
    del primals_1290
    del primals_1291
    del primals_1292
    del primals_1293
    del primals_1294
    del primals_1295
    del primals_1296
    del primals_1297
    del primals_1298
    del primals_1299
    del primals_1300
    del primals_1301
    del primals_1302
    del primals_1303
    del primals_1304
    del primals_1305
    del primals_1306
    del primals_1307
    del primals_1308
    del primals_1309
    del primals_1310
    del primals_1311
    del primals_1312
    del primals_1313
    del primals_1314
    del primals_1315
    del primals_1316
    del primals_1317
    del primals_1318
    del primals_1319
    del primals_1320
    del primals_1321
    del primals_1322
    del primals_1323
    del primals_1324
    del primals_1325
    del primals_1326
    del primals_1327
    del primals_1328
    del primals_1329
    del primals_1330
    del primals_1331
    del primals_1332
    del primals_1333
    del primals_1334
    del primals_1335
    del primals_1336
    del primals_1337
    del primals_1338
    buf3038 = reinterpret_tensor(buf1425, (864, ), (1, ), 0); del buf1425  # reuse
    buf3046 = reinterpret_tensor(buf1432, (864, ), (1, ), 0); del buf1432  # reuse
    buf3054 = reinterpret_tensor(buf1440, (864, ), (1, ), 0); del buf1440  # reuse
    buf3062 = reinterpret_tensor(buf1447, (864, ), (1, ), 0); del buf1447  # reuse
    buf3070 = reinterpret_tensor(buf1456, (864, ), (1, ), 0); del buf1456  # reuse
    buf3078 = reinterpret_tensor(buf1463, (864, ), (1, ), 0); del buf1463  # reuse
    buf3086 = reinterpret_tensor(buf1471, (864, ), (1, ), 0); del buf1471  # reuse
    buf3094 = reinterpret_tensor(buf1478, (864, ), (1, ), 0); del buf1478  # reuse
    buf3102 = reinterpret_tensor(buf1484, (864, ), (1, ), 0); del buf1484  # reuse
    buf3110 = reinterpret_tensor(buf1491, (864, ), (1, ), 0); del buf1491  # reuse
    buf3118 = reinterpret_tensor(buf1499, (864, ), (1, ), 0); del buf1499  # reuse
    buf3126 = reinterpret_tensor(buf1506, (864, ), (1, ), 0); del buf1506  # reuse
    buf3134 = reinterpret_tensor(buf1512, (864, ), (1, ), 0); del buf1512  # reuse
    buf3142 = reinterpret_tensor(buf1519, (864, ), (1, ), 0); del buf1519  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_209(c_void_p(buf3038.data_ptr()), c_void_p(buf3046.data_ptr()), c_void_p(buf3054.data_ptr()), c_void_p(buf3062.data_ptr()), c_void_p(buf3070.data_ptr()), c_void_p(buf3078.data_ptr()), c_void_p(buf3086.data_ptr()), c_void_p(buf3094.data_ptr()), c_void_p(buf3102.data_ptr()), c_void_p(buf3110.data_ptr()), c_void_p(buf3118.data_ptr()), c_void_p(buf3126.data_ptr()), c_void_p(buf3134.data_ptr()), c_void_p(buf3142.data_ptr()), c_void_p(buf1424.data_ptr()), c_void_p(primals_1339.data_ptr()), c_void_p(primals_1340.data_ptr()), c_void_p(primals_1341.data_ptr()), c_void_p(buf1431.data_ptr()), c_void_p(primals_1342.data_ptr()), c_void_p(primals_1343.data_ptr()), c_void_p(primals_1344.data_ptr()), c_void_p(buf1439.data_ptr()), c_void_p(primals_1345.data_ptr()), c_void_p(primals_1346.data_ptr()), c_void_p(primals_1347.data_ptr()), c_void_p(buf1446.data_ptr()), c_void_p(primals_1348.data_ptr()), c_void_p(primals_1349.data_ptr()), c_void_p(primals_1350.data_ptr()), c_void_p(buf1455.data_ptr()), c_void_p(primals_1351.data_ptr()), c_void_p(primals_1352.data_ptr()), c_void_p(primals_1353.data_ptr()), c_void_p(buf1462.data_ptr()), c_void_p(primals_1354.data_ptr()), c_void_p(primals_1355.data_ptr()), c_void_p(primals_1356.data_ptr()), c_void_p(buf1470.data_ptr()), c_void_p(primals_1357.data_ptr()), c_void_p(primals_1358.data_ptr()), c_void_p(primals_1359.data_ptr()), c_void_p(buf1477.data_ptr()), c_void_p(primals_1360.data_ptr()), c_void_p(primals_1361.data_ptr()), c_void_p(primals_1362.data_ptr()), c_void_p(buf1483.data_ptr()), c_void_p(primals_1363.data_ptr()), c_void_p(primals_1364.data_ptr()), c_void_p(primals_1365.data_ptr()), c_void_p(buf1490.data_ptr()), c_void_p(primals_1366.data_ptr()), c_void_p(primals_1367.data_ptr()), c_void_p(primals_1368.data_ptr()), c_void_p(buf1498.data_ptr()), c_void_p(primals_1369.data_ptr()), c_void_p(primals_1370.data_ptr()), c_void_p(primals_1371.data_ptr()), c_void_p(buf1505.data_ptr()), c_void_p(primals_1372.data_ptr()), c_void_p(primals_1373.data_ptr()), c_void_p(primals_1374.data_ptr()), c_void_p(buf1511.data_ptr()), c_void_p(primals_1375.data_ptr()), c_void_p(primals_1376.data_ptr()), c_void_p(primals_1377.data_ptr()), c_void_p(buf1518.data_ptr()), c_void_p(primals_1378.data_ptr()), c_void_p(primals_1379.data_ptr()), c_void_p(primals_1380.data_ptr()), c_void_p(primals_1339.data_ptr()), c_void_p(primals_1340.data_ptr()), c_void_p(primals_1341.data_ptr()), c_void_p(primals_1342.data_ptr()), c_void_p(primals_1343.data_ptr()), c_void_p(primals_1344.data_ptr()), c_void_p(primals_1345.data_ptr()), c_void_p(primals_1346.data_ptr()), c_void_p(primals_1347.data_ptr()), c_void_p(primals_1348.data_ptr()), c_void_p(primals_1349.data_ptr()), c_void_p(primals_1350.data_ptr()), c_void_p(primals_1351.data_ptr()), c_void_p(primals_1352.data_ptr()), c_void_p(primals_1353.data_ptr()), c_void_p(primals_1354.data_ptr()), c_void_p(primals_1355.data_ptr()), c_void_p(primals_1356.data_ptr()), c_void_p(primals_1357.data_ptr()), c_void_p(primals_1358.data_ptr()), c_void_p(primals_1359.data_ptr()), c_void_p(primals_1360.data_ptr()), c_void_p(primals_1361.data_ptr()), c_void_p(primals_1362.data_ptr()), c_void_p(primals_1363.data_ptr()), c_void_p(primals_1364.data_ptr()), c_void_p(primals_1365.data_ptr()), c_void_p(primals_1366.data_ptr()), c_void_p(primals_1367.data_ptr()), c_void_p(primals_1368.data_ptr()), c_void_p(primals_1369.data_ptr()), c_void_p(primals_1370.data_ptr()), c_void_p(primals_1371.data_ptr()), c_void_p(primals_1372.data_ptr()), c_void_p(primals_1373.data_ptr()), c_void_p(primals_1374.data_ptr()), c_void_p(primals_1375.data_ptr()), c_void_p(primals_1376.data_ptr()), c_void_p(primals_1377.data_ptr()), c_void_p(primals_1378.data_ptr()), c_void_p(primals_1379.data_ptr()), c_void_p(primals_1380.data_ptr()))
    del buf3038
    del buf3046
    del buf3054
    del buf3062
    del buf3070
    del buf3078
    del buf3086
    del buf3094
    del buf3102
    del buf3110
    del buf3118
    del buf3126
    del buf3134
    del buf3142
    del primals_1339
    del primals_1340
    del primals_1341
    del primals_1342
    del primals_1343
    del primals_1344
    del primals_1345
    del primals_1346
    del primals_1347
    del primals_1348
    del primals_1349
    del primals_1350
    del primals_1351
    del primals_1352
    del primals_1353
    del primals_1354
    del primals_1355
    del primals_1356
    del primals_1357
    del primals_1358
    del primals_1359
    del primals_1360
    del primals_1361
    del primals_1362
    del primals_1363
    del primals_1364
    del primals_1365
    del primals_1366
    del primals_1367
    del primals_1368
    del primals_1369
    del primals_1370
    del primals_1371
    del primals_1372
    del primals_1373
    del primals_1374
    del primals_1375
    del primals_1376
    del primals_1377
    del primals_1378
    del primals_1379
    del primals_1380
    return (buf1529, primals_1, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, buf0, primals_28, primals_29, primals_31, primals_32, primals_34, primals_35, primals_36, primals_38, primals_39, primals_41, primals_42, primals_44, primals_45, primals_46, primals_48, primals_49, primals_51, primals_52, primals_53, primals_55, primals_56, primals_58, primals_59, primals_60, primals_62, primals_63, primals_64, primals_66, primals_67, primals_68, primals_70, primals_71, primals_73, primals_74, primals_75, primals_77, primals_79, primals_80, primals_81, primals_83, primals_84, primals_86, primals_87, primals_89, primals_90, primals_91, primals_93, primals_94, primals_96, primals_97, primals_98, primals_100, primals_101, primals_103, primals_104, primals_105, primals_107, primals_108, primals_110, primals_111, primals_112, primals_114, primals_115, primals_116, primals_118, primals_119, primals_120, primals_122, primals_123, primals_125, primals_126, primals_127, primals_129, primals_131, primals_132, primals_133, primals_135, primals_136, primals_138, primals_139, primals_140, primals_142, primals_143, primals_144, primals_146, primals_147, primals_148, primals_150, primals_151, primals_152, primals_154, primals_155, primals_156, primals_158, primals_159, primals_160, primals_162, primals_163, primals_164, primals_166, primals_167, primals_168, primals_170, primals_171, primals_172, primals_174, primals_175, primals_176, primals_178, primals_179, primals_180, primals_182, primals_183, primals_184, primals_186, primals_187, primals_189, primals_190, primals_192, primals_193, primals_194, primals_196, primals_197, primals_198, primals_200, primals_201, primals_202, primals_204, primals_205, primals_206, primals_208, primals_209, primals_210, primals_212, primals_213, primals_214, primals_216, primals_217, primals_218, primals_220, primals_221, primals_222, primals_224, primals_225, primals_226, primals_228, primals_229, primals_230, primals_232, primals_233, primals_234, primals_236, primals_237, primals_238, primals_240, primals_241, primals_243, primals_244, primals_246, primals_247, primals_248, primals_250, primals_251, primals_252, primals_254, primals_255, primals_256, primals_258, primals_259, primals_260, primals_262, primals_263, primals_264, primals_266, primals_267, primals_268, primals_270, primals_271, primals_272, primals_274, primals_275, primals_276, primals_278, primals_279, primals_280, primals_282, primals_283, primals_284, primals_286, primals_287, primals_288, primals_290, primals_291, primals_292, primals_294, primals_295, primals_297, primals_298, primals_300, primals_301, primals_302, primals_304, primals_305, primals_306, primals_308, primals_309, primals_310, primals_312, primals_313, primals_314, primals_316, primals_317, primals_318, primals_320, primals_321, primals_322, primals_324, primals_325, primals_326, primals_328, primals_329, primals_330, primals_332, primals_333, primals_334, primals_336, primals_337, primals_338, primals_340, primals_341, primals_342, primals_344, primals_345, primals_346, primals_348, primals_349, primals_351, primals_352, primals_354, primals_355, primals_357, primals_358, primals_359, primals_361, primals_362, primals_364, primals_365, primals_366, primals_368, primals_369, primals_371, primals_372, primals_373, primals_375, primals_376, primals_378, primals_379, primals_380, primals_382, primals_383, primals_384, primals_386, primals_387, primals_388, primals_390, primals_391, primals_393, primals_394, primals_395, primals_397, primals_399, primals_400, primals_401, primals_403, primals_404, primals_406, primals_407, primals_408, primals_410, primals_411, primals_412, primals_414, primals_415, primals_416, primals_418, primals_419, primals_420, primals_422, primals_423, primals_424, primals_426, primals_427, primals_428, primals_430, primals_431, primals_432, primals_434, primals_435, primals_436, primals_438, primals_439, primals_440, primals_442, primals_443, primals_444, primals_446, primals_447, primals_448, primals_450, primals_451, primals_452, primals_454, primals_455, primals_457, primals_458, primals_460, primals_461, primals_462, primals_464, primals_465, primals_466, primals_468, primals_469, primals_470, primals_472, primals_473, primals_474, primals_476, primals_477, primals_478, primals_480, primals_481, primals_482, primals_484, primals_485, primals_486, primals_488, primals_489, primals_490, primals_492, primals_493, primals_494, primals_496, primals_497, primals_498, primals_500, primals_501, primals_502, primals_504, primals_505, primals_506, primals_508, primals_509, primals_511, primals_512, primals_514, primals_515, primals_516, primals_518, primals_519, primals_520, primals_522, primals_523, primals_524, primals_526, primals_527, primals_528, primals_530, primals_531, primals_532, primals_534, primals_535, primals_536, primals_538, primals_539, primals_540, primals_542, primals_543, primals_544, primals_546, primals_547, primals_548, primals_550, primals_551, primals_552, primals_554, primals_555, primals_556, primals_558, primals_559, primals_560, primals_562, primals_563, primals_565, primals_566, primals_568, primals_569, primals_571, primals_572, primals_573, primals_575, primals_576, primals_578, primals_579, primals_580, primals_582, primals_583, primals_585, primals_586, primals_587, primals_589, primals_590, primals_592, primals_593, primals_594, primals_596, primals_597, primals_598, primals_600, primals_601, primals_602, primals_604, primals_605, primals_607, primals_608, primals_609, primals_611, primals_613, primals_614, primals_615, primals_617, primals_618, primals_620, primals_621, primals_622, primals_624, primals_625, primals_626, primals_628, primals_629, primals_630, primals_632, primals_633, primals_634, primals_636, primals_637, primals_638, primals_640, primals_641, primals_642, primals_644, primals_645, primals_646, primals_648, primals_649, primals_650, primals_652, primals_653, primals_654, primals_656, primals_657, primals_658, primals_660, primals_661, primals_662, primals_664, primals_665, primals_666, primals_668, primals_669, primals_671, primals_672, primals_674, primals_675, primals_676, primals_678, primals_679, primals_680, primals_682, primals_683, primals_684, primals_686, primals_687, primals_688, primals_690, primals_691, primals_692, primals_694, primals_695, primals_696, primals_698, primals_699, primals_700, primals_702, primals_703, primals_704, primals_706, primals_707, primals_708, primals_710, primals_711, primals_712, primals_714, primals_715, primals_716, primals_718, primals_719, primals_720, primals_722, primals_723, primals_725, primals_726, primals_728, primals_729, primals_730, primals_732, primals_733, primals_734, primals_736, primals_737, primals_738, primals_740, primals_741, primals_742, primals_744, primals_745, primals_746, primals_748, primals_749, primals_750, primals_752, primals_753, primals_754, primals_756, primals_757, primals_758, primals_760, primals_761, primals_762, primals_764, primals_765, primals_766, primals_768, primals_769, primals_770, primals_772, primals_773, primals_774, buf1, buf2, buf6, buf8, buf9, buf13, buf15, buf16, buf17, buf21, buf22, buf23, buf24, buf28, buf29, buf30, buf31, buf32, buf36, buf39, buf40, buf41, buf45, buf46, buf47, buf48, buf52, buf53, buf55, buf56, buf57, buf58, buf62, buf63, buf64, buf65, buf69, buf70, buf71, buf72, buf76, buf77, buf78, buf79, buf83, buf85, buf86, buf87, buf91, buf92, buf93, buf94, buf98, buf99, buf100, buf101, buf105, buf106, buf107, buf108, buf112, buf38, buf113, buf117, buf122, buf124, buf125, buf127, buf131, buf133, buf134, buf138, buf140, buf141, buf142, buf146, buf147, buf148, buf149, buf153, buf154, buf156, buf158, buf159, buf160, buf164, buf165, buf166, buf167, buf171, buf172, buf174, buf175, buf176, buf177, buf181, buf182, buf183, buf184, buf188, buf189, buf190, buf191, buf195, buf196, buf197, buf198, buf202, buf204, buf205, buf206, buf210, buf211, buf212, buf213, buf217, buf218, buf219, buf220, buf224, buf225, buf226, buf227, buf231, buf157, buf232, buf236, buf242, buf244, buf245, buf247, buf251, buf252, buf253, buf254, buf258, buf259, buf260, buf261, buf262, buf266, buf267, buf268, buf269, buf273, buf275, buf276, buf277, buf278, buf282, buf283, buf284, buf285, buf289, buf291, buf292, buf293, buf297, buf298, buf299, buf300, buf304, buf305, buf306, buf310, buf311, buf312, buf313, buf317, buf319, buf320, buf321, buf325, buf326, buf327, buf328, buf332, buf333, buf334, buf338, buf339, buf340, buf341, buf345, buf351, buf355, buf356, buf357, buf358, buf362, buf363, buf364, buf365, buf366, buf370, buf371, buf372, buf373, buf377, buf379, buf380, buf381, buf382, buf386, buf387, buf388, buf389, buf393, buf395, buf396, buf397, buf401, buf402, buf403, buf404, buf408, buf409, buf410, buf414, buf415, buf416, buf417, buf421, buf423, buf424, buf425, buf429, buf430, buf431, buf432, buf436, buf437, buf438, buf442, buf443, buf444, buf445, buf449, buf455, buf459, buf460, buf461, buf462, buf466, buf467, buf468, buf469, buf470, buf474, buf475, buf476, buf477, buf481, buf483, buf484, buf485, buf486, buf490, buf491, buf492, buf493, buf497, buf499, buf500, buf501, buf505, buf506, buf507, buf508, buf512, buf513, buf514, buf518, buf519, buf520, buf521, buf525, buf527, buf528, buf529, buf533, buf534, buf535, buf536, buf540, buf541, buf542, buf546, buf547, buf548, buf549, buf553, buf559, buf563, buf564, buf565, buf566, buf570, buf571, buf572, buf573, buf574, buf578, buf579, buf580, buf581, buf585, buf587, buf588, buf589, buf590, buf594, buf595, buf596, buf597, buf601, buf603, buf604, buf605, buf609, buf610, buf611, buf612, buf616, buf617, buf618, buf622, buf623, buf624, buf625, buf629, buf631, buf632, buf633, buf637, buf638, buf639, buf640, buf644, buf645, buf646, buf650, buf651, buf652, buf653, buf657, buf663, buf667, buf669, buf670, buf674, buf676, buf677, buf678, buf682, buf683, buf684, buf685, buf689, buf690, buf692, buf694, buf695, buf696, buf700, buf701, buf702, buf703, buf707, buf708, buf710, buf711, buf712, buf713, buf717, buf718, buf719, buf720, buf724, buf725, buf726, buf727, buf731, buf732, buf733, buf734, buf738, buf740, buf741, buf742, buf746, buf747, buf748, buf749, buf753, buf754, buf755, buf756, buf760, buf761, buf762, buf763, buf767, buf693, buf768, buf772, buf778, buf780, buf781, buf783, buf787, buf788, buf789, buf790, buf794, buf795, buf796, buf797, buf798, buf802, buf803, buf804, buf805, buf809, buf811, buf812, buf813, buf814, buf818, buf819, buf820, buf821, buf825, buf827, buf828, buf829, buf833, buf834, buf835, buf836, buf840, buf841, buf842, buf846, buf847, buf848, buf849, buf853, buf855, buf856, buf857, buf861, buf862, buf863, buf864, buf868, buf869, buf870, buf874, buf875, buf876, buf877, buf881, buf887, buf891, buf892, buf893, buf894, buf898, buf899, buf900, buf901, buf902, buf906, buf907, buf908, buf909, buf913, buf915, buf916, buf917, buf918, buf922, buf923, buf924, buf925, buf929, buf931, buf932, buf933, buf937, buf938, buf939, buf940, buf944, buf945, buf946, buf950, buf951, buf952, buf953, buf957, buf959, buf960, buf961, buf965, buf966, buf967, buf968, buf972, buf973, buf974, buf978, buf979, buf980, buf981, buf985, buf991, buf995, buf996, buf997, buf998, buf1002, buf1003, buf1004, buf1005, buf1006, buf1010, buf1011, buf1012, buf1013, buf1017, buf1019, buf1020, buf1021, buf1022, buf1026, buf1027, buf1028, buf1029, buf1033, buf1035, buf1036, buf1037, buf1041, buf1042, buf1043, buf1044, buf1048, buf1049, buf1050, buf1054, buf1055, buf1056, buf1057, buf1061, buf1063, buf1064, buf1065, buf1069, buf1070, buf1071, buf1072, buf1076, buf1077, buf1078, buf1082, buf1083, buf1084, buf1085, buf1089, buf1095, buf1099, buf1101, buf1102, buf1106, buf1108, buf1109, buf1110, buf1114, buf1115, buf1116, buf1117, buf1121, buf1122, buf1124, buf1126, buf1127, buf1128, buf1132, buf1133, buf1134, buf1135, buf1139, buf1140, buf1142, buf1143, buf1144, buf1145, buf1149, buf1150, buf1151, buf1152, buf1156, buf1157, buf1158, buf1159, buf1163, buf1164, buf1165, buf1166, buf1170, buf1172, buf1173, buf1174, buf1178, buf1179, buf1180, buf1181, buf1185, buf1186, buf1187, buf1188, buf1192, buf1193, buf1194, buf1195, buf1199, buf1125, buf1200, buf1204, buf1210, buf1212, buf1213, buf1215, buf1219, buf1220, buf1221, buf1222, buf1226, buf1227, buf1228, buf1229, buf1230, buf1234, buf1235, buf1236, buf1237, buf1241, buf1243, buf1244, buf1245, buf1246, buf1250, buf1251, buf1252, buf1253, buf1257, buf1259, buf1260, buf1261, buf1265, buf1266, buf1267, buf1268, buf1272, buf1273, buf1274, buf1278, buf1279, buf1280, buf1281, buf1285, buf1287, buf1288, buf1289, buf1293, buf1294, buf1295, buf1296, buf1300, buf1301, buf1302, buf1306, buf1307, buf1308, buf1309, buf1313, buf1319, buf1323, buf1324, buf1325, buf1326, buf1330, buf1331, buf1332, buf1333, buf1334, buf1338, buf1339, buf1340, buf1341, buf1345, buf1347, buf1348, buf1349, buf1350, buf1354, buf1355, buf1356, buf1357, buf1361, buf1363, buf1364, buf1365, buf1369, buf1370, buf1371, buf1372, buf1376, buf1377, buf1378, buf1382, buf1383, buf1384, buf1385, buf1389, buf1391, buf1392, buf1393, buf1397, buf1398, buf1399, buf1400, buf1404, buf1405, buf1406, buf1410, buf1411, buf1412, buf1413, buf1417, buf1423, buf1427, buf1428, buf1429, buf1430, buf1434, buf1435, buf1436, buf1437, buf1438, buf1442, buf1443, buf1444, buf1445, buf1449, buf1451, buf1452, buf1453, buf1454, buf1458, buf1459, buf1460, buf1461, buf1465, buf1467, buf1468, buf1469, buf1473, buf1474, buf1475, buf1476, buf1480, buf1481, buf1482, buf1486, buf1487, buf1488, buf1489, buf1493, buf1495, buf1496, buf1497, buf1501, buf1502, buf1503, buf1504, buf1508, buf1509, buf1510, buf1514, buf1515, buf1516, buf1517, buf1521, buf1528, reinterpret_tensor(primals_776, (1000, 4320), (4320, 1), 0), buf1530, reinterpret_tensor(buf1518, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1511, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1505, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1498, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1490, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1483, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1477, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1470, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1462, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1455, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1446, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1439, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1431, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1424, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1414, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1407, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1401, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1394, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1386, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1379, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1373, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1366, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1358, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1351, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1342, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1335, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1327, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1320, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1310, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1303, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1297, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1290, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1282, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1275, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1269, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1262, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1254, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1247, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1238, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1231, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1223, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1216, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1201, (1, 864, 1, 1), (864, 1, 1, 1), 0), buf1531, reinterpret_tensor(buf1196, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1189, (1, 864, 1, 1), (864, 1, 1, 1), 0), buf1532, reinterpret_tensor(buf1182, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1175, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1167, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1160, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1153, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1146, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1136, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1129, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1118, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1111, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1103, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1096, (1, 864, 1, 1), (864, 1, 1, 1), 0), reinterpret_tensor(buf1086, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1079, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1073, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1066, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1058, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1051, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1045, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1038, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1030, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1023, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1014, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf1007, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf999, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf992, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf982, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf975, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf969, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf962, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf954, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf947, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf941, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf934, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf926, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf919, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf910, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf903, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf895, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf888, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf878, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf871, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf865, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf858, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf850, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf843, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf837, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf830, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf822, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf815, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf806, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf799, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf791, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf784, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf769, (1, 432, 1, 1), (432, 1, 1, 1), 0), buf1533, reinterpret_tensor(buf764, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf757, (1, 432, 1, 1), (432, 1, 1, 1), 0), buf1534, reinterpret_tensor(buf750, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf743, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf735, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf728, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf721, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf714, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf704, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf697, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf686, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf679, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf671, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf664, (1, 432, 1, 1), (432, 1, 1, 1), 0), reinterpret_tensor(buf654, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf647, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf641, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf634, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf626, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf619, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf613, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf606, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf598, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf591, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf582, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf575, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf567, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf560, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf550, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf543, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf537, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf530, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf522, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf515, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf509, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf502, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf494, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf487, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf478, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf471, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf463, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf456, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf446, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf439, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf433, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf426, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf418, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf411, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf405, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf398, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf390, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf383, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf374, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf367, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf359, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf352, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf342, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf335, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf329, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf322, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf314, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf307, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf301, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf294, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf286, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf279, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf270, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf263, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf255, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf248, (1, 216, 1, 1), (216, 1, 1, 1), 0), reinterpret_tensor(buf233, (1, 108, 1, 1), (108, 1, 1, 1), 0), buf1535, reinterpret_tensor(buf228, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf221, (1, 108, 1, 1), (108, 1, 1, 1), 0), buf1536, reinterpret_tensor(buf214, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf207, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf199, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf192, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf185, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf178, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf168, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf161, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf150, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf143, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf135, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf128, (1, 108, 1, 1), (108, 1, 1, 1), 0), reinterpret_tensor(buf114, (1, 54, 1, 1), (54, 1, 1, 1), 0), buf1537, reinterpret_tensor(buf109, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf102, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf95, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf88, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf80, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf73, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf66, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf59, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf49, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf42, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf33, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf25, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf18, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf10, (1, 54, 1, 1), (54, 1, 1, 1), 0), reinterpret_tensor(buf3, (1, 96, 1, 1), (96, 1, 1, 1), 0), )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    primals_1 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_2 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_3 = rand_strided((96, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_4 = rand_strided((54, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_5 = rand_strided((54, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_6 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_7 = rand_strided((96, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_8 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_9 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_10 = rand_strided((108, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_11 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_12 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_13 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_14 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_15 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_16 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_17 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_18 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_19 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_20 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_21 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_22 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_23 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_24 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_25 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_26 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_27 = rand_strided((96, 3, 3, 3), (27, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_28 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_29 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_30 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_31 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_32 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_33 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_34 = rand_strided((54, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_35 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_36 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_37 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_38 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_39 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_40 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_41 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_42 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_43 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_44 = rand_strided((54, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_45 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_46 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_47 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_48 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_49 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_50 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_51 = rand_strided((54, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_52 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_53 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_54 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_55 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_56 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_57 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_58 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_59 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_60 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_61 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_62 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_63 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_64 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_65 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_66 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_67 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_68 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_69 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_70 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_71 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_72 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_73 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_74 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_75 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_76 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_77 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_78 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_79 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_80 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_81 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_82 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_83 = rand_strided((108, 270, 1, 1), (270, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_84 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_85 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_86 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_87 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_88 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_89 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_90 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_91 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_92 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_93 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_94 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_95 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_96 = rand_strided((108, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_97 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_98 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_99 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_100 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_101 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_102 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_103 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_104 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_105 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_106 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_107 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_108 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_109 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_110 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_111 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_112 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_113 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_114 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_115 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_116 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_117 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_118 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_119 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_120 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_121 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_122 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_123 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_124 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_125 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_126 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_127 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_128 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_129 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_130 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_131 = rand_strided((108, 270, 1, 1), (270, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_132 = rand_strided((108, 270, 1, 1), (270, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_133 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_134 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_135 = rand_strided((216, 540, 1, 1), (540, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_136 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_137 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_138 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_139 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_140 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_141 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_142 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_143 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_144 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_145 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_146 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_147 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_148 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_149 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_150 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_151 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_152 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_153 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_154 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_155 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_156 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_157 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_158 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_159 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_160 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_161 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_162 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_163 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_164 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_165 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_166 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_167 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_168 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_169 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_170 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_171 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_172 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_173 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_174 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_175 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_176 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_177 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_178 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_179 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_180 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_181 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_182 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_183 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_184 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_185 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_186 = rand_strided((216, 540, 1, 1), (540, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_187 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_188 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_189 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_190 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_191 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_192 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_193 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_194 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_195 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_196 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_197 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_198 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_199 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_200 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_201 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_202 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_203 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_204 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_205 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_206 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_207 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_208 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_209 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_210 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_211 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_212 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_213 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_214 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_215 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_216 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_217 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_218 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_219 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_220 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_221 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_222 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_223 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_224 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_225 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_226 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_227 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_228 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_229 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_230 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_231 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_232 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_233 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_234 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_235 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_236 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_237 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_238 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_239 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_240 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_241 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_242 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_243 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_244 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_245 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_246 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_247 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_248 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_249 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_250 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_251 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_252 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_253 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_254 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_255 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_256 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_257 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_258 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_259 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_260 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_261 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_262 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_263 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_264 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_265 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_266 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_267 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_268 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_269 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_270 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_271 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_272 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_273 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_274 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_275 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_276 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_277 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_278 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_279 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_280 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_281 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_282 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_283 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_284 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_285 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_286 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_287 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_288 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_289 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_290 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_291 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_292 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_293 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_294 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_295 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_296 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_297 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_298 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_299 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_300 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_301 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_302 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_303 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_304 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_305 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_306 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_307 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_308 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_309 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_310 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_311 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_312 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_313 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_314 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_315 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_316 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_317 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_318 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_319 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_320 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_321 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_322 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_323 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_324 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_325 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_326 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_327 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_328 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_329 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_330 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_331 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_332 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_333 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_334 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_335 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_336 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_337 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_338 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_339 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_340 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_341 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_342 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_343 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_344 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_345 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_346 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_347 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_348 = rand_strided((432, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_349 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_350 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_351 = rand_strided((432, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_352 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_353 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_354 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_355 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_356 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_357 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_358 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_359 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_360 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_361 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_362 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_363 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_364 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_365 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_366 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_367 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_368 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_369 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_370 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_371 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_372 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_373 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_374 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_375 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_376 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_377 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_378 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_379 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_380 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_381 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_382 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_383 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_384 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_385 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_386 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_387 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_388 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_389 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_390 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_391 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_392 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_393 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_394 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_395 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_396 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_397 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_398 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_399 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_400 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_401 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_402 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_403 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_404 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_405 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_406 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_407 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_408 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_409 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_410 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_411 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_412 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_413 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_414 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_415 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_416 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_417 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_418 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_419 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_420 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_421 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_422 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_423 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_424 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_425 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_426 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_427 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_428 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_429 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_430 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_431 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_432 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_433 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_434 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_435 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_436 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_437 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_438 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_439 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_440 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_441 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_442 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_443 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_444 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_445 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_446 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_447 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_448 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_449 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_450 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_451 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_452 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_453 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_454 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_455 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_456 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_457 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_458 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_459 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_460 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_461 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_462 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_463 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_464 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_465 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_466 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_467 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_468 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_469 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_470 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_471 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_472 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_473 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_474 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_475 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_476 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_477 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_478 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_479 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_480 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_481 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_482 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_483 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_484 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_485 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_486 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_487 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_488 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_489 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_490 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_491 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_492 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_493 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_494 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_495 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_496 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_497 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_498 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_499 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_500 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_501 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_502 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_503 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_504 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_505 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_506 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_507 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_508 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_509 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_510 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_511 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_512 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_513 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_514 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_515 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_516 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_517 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_518 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_519 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_520 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_521 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_522 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_523 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_524 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_525 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_526 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_527 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_528 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_529 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_530 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_531 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_532 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_533 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_534 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_535 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_536 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_537 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_538 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_539 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_540 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_541 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_542 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_543 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_544 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_545 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_546 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_547 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_548 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_549 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_550 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_551 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_552 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_553 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_554 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_555 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_556 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_557 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_558 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_559 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_560 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_561 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_562 = rand_strided((864, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_563 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_564 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_565 = rand_strided((864, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_566 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_567 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_568 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_569 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_570 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_571 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_572 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_573 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_574 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_575 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_576 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_577 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_578 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_579 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_580 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_581 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_582 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_583 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_584 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_585 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_586 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_587 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_588 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_589 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_590 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_591 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_592 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_593 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_594 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_595 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_596 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_597 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_598 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_599 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_600 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_601 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_602 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_603 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_604 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_605 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_606 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_607 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_608 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_609 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_610 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_611 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_612 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_613 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_614 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_615 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_616 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_617 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_618 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_619 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_620 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_621 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_622 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_623 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_624 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_625 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_626 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_627 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_628 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_629 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_630 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_631 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_632 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_633 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_634 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_635 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_636 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_637 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_638 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_639 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_640 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_641 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_642 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_643 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_644 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_645 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_646 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_647 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_648 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_649 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_650 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_651 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_652 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_653 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_654 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_655 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_656 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_657 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_658 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_659 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_660 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_661 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_662 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_663 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_664 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_665 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_666 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_667 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_668 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_669 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_670 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_671 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_672 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_673 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_674 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_675 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_676 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_677 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_678 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_679 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_680 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_681 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_682 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_683 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_684 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_685 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_686 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_687 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_688 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_689 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_690 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_691 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_692 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_693 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_694 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_695 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_696 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_697 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_698 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_699 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_700 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_701 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_702 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_703 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_704 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_705 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_706 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_707 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_708 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_709 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_710 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_711 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_712 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_713 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_714 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_715 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_716 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_717 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_718 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_719 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_720 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_721 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_722 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_723 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_724 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_725 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_726 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_727 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_728 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_729 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_730 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_731 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_732 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_733 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_734 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_735 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_736 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_737 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_738 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_739 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_740 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_741 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_742 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_743 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_744 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_745 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_746 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_747 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_748 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    primals_749 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_750 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_751 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_752 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_753 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_754 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_755 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_756 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_757 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_758 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_759 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_760 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_761 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_762 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_763 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_764 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_765 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_766 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_767 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_768 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_769 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_770 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_771 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_772 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_773 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_774 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_775 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_776 = rand_strided((1000, 4320), (4320, 1), device='cpu', dtype=torch.float32)
    primals_777 = rand_strided((1000, ), (1, ), device='cpu', dtype=torch.float32)
    primals_778 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_779 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_780 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_781 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_782 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_783 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_784 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_785 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_786 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_787 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_788 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_789 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_790 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_791 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_792 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_793 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_794 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_795 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_796 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_797 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_798 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_799 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_800 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_801 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_802 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_803 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_804 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_805 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_806 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_807 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_808 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_809 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_810 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_811 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_812 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_813 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_814 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_815 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_816 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_817 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_818 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_819 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_820 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_821 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_822 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_823 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_824 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    primals_825 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_826 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_827 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_828 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_829 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_830 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_831 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_832 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_833 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_834 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_835 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_836 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_837 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_838 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_839 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_840 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_841 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_842 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_843 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_844 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_845 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_846 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_847 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_848 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_849 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_850 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_851 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_852 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_853 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_854 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_855 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_856 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_857 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_858 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_859 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_860 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_861 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_862 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_863 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_864 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_865 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_866 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_867 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_868 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_869 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    primals_870 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_871 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_872 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_873 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_874 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_875 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_876 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_877 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_878 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_879 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_880 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_881 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_882 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_883 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_884 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_885 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_886 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_887 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_888 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_889 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_890 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_891 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_892 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_893 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_894 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_895 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_896 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_897 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_898 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_899 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_900 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_901 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_902 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_903 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_904 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_905 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_906 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_907 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_908 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_909 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_910 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_911 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_912 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_913 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_914 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_915 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_916 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_917 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_918 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_919 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_920 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_921 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_922 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_923 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_924 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_925 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_926 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_927 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_928 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_929 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_930 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_931 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_932 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_933 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_934 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_935 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_936 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_937 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_938 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_939 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_940 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_941 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_942 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_943 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_944 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_945 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_946 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_947 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_948 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_949 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_950 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_951 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_952 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_953 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_954 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_955 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_956 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_957 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_958 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_959 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_960 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_961 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_962 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_963 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_964 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_965 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_966 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_967 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_968 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_969 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_970 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_971 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_972 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_973 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_974 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_975 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_976 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_977 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_978 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_979 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_980 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_981 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_982 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_983 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_984 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_985 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_986 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_987 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_988 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_989 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_990 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_991 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_992 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_993 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_994 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_995 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_996 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_997 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_998 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_999 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1000 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1001 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1002 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1003 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1004 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1005 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1006 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1007 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1008 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1009 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1010 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1011 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1012 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1013 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1014 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1015 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1016 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1017 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1018 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1019 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1020 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1021 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1022 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1023 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1024 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1025 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1026 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1027 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1028 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1029 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1030 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1031 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1032 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1033 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1034 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1035 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1036 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1037 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1038 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1039 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1040 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1041 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1042 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1043 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1044 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1045 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1046 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1047 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1048 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1049 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1050 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1051 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1052 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1053 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1054 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1055 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1056 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1057 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1058 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1059 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1060 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1061 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1062 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1063 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1064 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1065 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1066 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1067 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1068 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1069 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1070 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1071 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1072 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1073 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1074 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1075 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1076 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1077 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1078 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1079 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1080 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1081 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1082 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1083 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1084 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1085 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1086 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1087 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1088 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1089 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1090 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1091 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1092 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1093 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1094 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1095 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1096 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1097 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1098 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1099 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1100 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1101 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1102 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1103 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1104 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1105 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1106 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1107 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1108 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1109 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1110 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1111 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1112 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1113 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1114 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1115 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1116 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1117 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1118 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1119 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1120 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1121 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1122 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1123 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1124 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1125 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1126 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1127 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1128 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1129 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1130 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1131 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1132 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1133 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1134 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1135 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1136 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1137 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1138 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1139 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1140 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1141 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1142 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1143 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1144 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1145 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1146 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1147 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1148 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1149 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1150 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1151 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1152 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1153 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1154 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1155 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1156 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1157 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1158 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1159 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1160 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1161 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1162 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1163 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1164 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1165 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1166 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1167 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1168 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1169 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1170 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1171 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1172 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1173 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1174 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1175 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1176 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1177 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1178 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1179 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1180 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1181 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1182 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1183 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1184 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1185 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1186 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1187 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1188 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1189 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1190 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1191 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1192 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1193 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1194 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1195 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1196 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1197 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1198 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1199 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1200 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1201 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1202 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1203 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1204 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1205 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1206 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1207 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1208 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1209 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1210 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1211 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1212 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1213 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1214 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1215 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1216 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1217 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1218 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1219 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1220 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1221 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1222 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1223 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1224 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1225 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1226 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1227 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1228 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1229 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1230 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1231 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1232 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1233 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1234 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1235 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1236 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1237 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1238 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1239 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1240 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1241 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1242 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1243 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1244 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1245 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1246 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1247 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1248 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1249 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1250 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1251 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1252 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1253 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1254 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1255 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1256 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1257 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1258 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1259 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1260 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1261 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1262 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1263 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1264 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1265 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1266 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1267 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1268 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1269 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1270 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1271 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1272 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1273 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1274 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1275 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1276 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1277 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1278 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1279 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1280 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1281 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1282 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1283 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1284 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1285 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1286 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1287 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1288 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1289 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1290 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1291 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1292 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1293 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1294 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1295 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1296 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1297 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1298 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1299 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1300 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1301 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1302 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1303 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1304 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1305 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1306 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1307 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1308 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1309 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1310 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1311 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1312 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1313 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1314 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1315 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1316 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1317 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1318 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1319 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1320 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1321 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1322 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1323 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1324 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1325 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1326 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1327 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1328 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1329 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1330 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1331 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1332 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1333 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1334 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1335 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1336 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1337 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1338 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1339 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1340 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1341 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1342 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1343 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1344 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1345 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1346 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1347 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1348 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1349 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1350 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1351 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1352 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1353 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1354 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1355 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1356 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1357 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1358 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1359 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1360 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1361 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1362 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1363 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1364 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1365 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1366 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1367 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1368 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1369 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1370 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1371 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1372 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1373 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1374 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1375 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1376 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1377 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1378 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1379 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1380 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_1381 = rand_strided((8, 3, 331, 331), (328683, 109561, 331, 1), device='cpu', dtype=torch.float32)
    return print_performance(lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121, primals_1122, primals_1123, primals_1124, primals_1125, primals_1126, primals_1127, primals_1128, primals_1129, primals_1130, primals_1131, primals_1132, primals_1133, primals_1134, primals_1135, primals_1136, primals_1137, primals_1138, primals_1139, primals_1140, primals_1141, primals_1142, primals_1143, primals_1144, primals_1145, primals_1146, primals_1147, primals_1148, primals_1149, primals_1150, primals_1151, primals_1152, primals_1153, primals_1154, primals_1155, primals_1156, primals_1157, primals_1158, primals_1159, primals_1160, primals_1161, primals_1162, primals_1163, primals_1164, primals_1165, primals_1166, primals_1167, primals_1168, primals_1169, primals_1170, primals_1171, primals_1172, primals_1173, primals_1174, primals_1175, primals_1176, primals_1177, primals_1178, primals_1179, primals_1180, primals_1181, primals_1182, primals_1183, primals_1184, primals_1185, primals_1186, primals_1187, primals_1188, primals_1189, primals_1190, primals_1191, primals_1192, primals_1193, primals_1194, primals_1195, primals_1196, primals_1197, primals_1198, primals_1199, primals_1200, primals_1201, primals_1202, primals_1203, primals_1204, primals_1205, primals_1206, primals_1207, primals_1208, primals_1209, primals_1210, primals_1211, primals_1212, primals_1213, primals_1214, primals_1215, primals_1216, primals_1217, primals_1218, primals_1219, primals_1220, primals_1221, primals_1222, primals_1223, primals_1224, primals_1225, primals_1226, primals_1227, primals_1228, primals_1229, primals_1230, primals_1231, primals_1232, primals_1233, primals_1234, primals_1235, primals_1236, primals_1237, primals_1238, primals_1239, primals_1240, primals_1241, primals_1242, primals_1243, primals_1244, primals_1245, primals_1246, primals_1247, primals_1248, primals_1249, primals_1250, primals_1251, primals_1252, primals_1253, primals_1254, primals_1255, primals_1256, primals_1257, primals_1258, primals_1259, primals_1260, primals_1261, primals_1262, primals_1263, primals_1264, primals_1265, primals_1266, primals_1267, primals_1268, primals_1269, primals_1270, primals_1271, primals_1272, primals_1273, primals_1274, primals_1275, primals_1276, primals_1277, primals_1278, primals_1279, primals_1280, primals_1281, primals_1282, primals_1283, primals_1284, primals_1285, primals_1286, primals_1287, primals_1288, primals_1289, primals_1290, primals_1291, primals_1292, primals_1293, primals_1294, primals_1295, primals_1296, primals_1297, primals_1298, primals_1299, primals_1300, primals_1301, primals_1302, primals_1303, primals_1304, primals_1305, primals_1306, primals_1307, primals_1308, primals_1309, primals_1310, primals_1311, primals_1312, primals_1313, primals_1314, primals_1315, primals_1316, primals_1317, primals_1318, primals_1319, primals_1320, primals_1321, primals_1322, primals_1323, primals_1324, primals_1325, primals_1326, primals_1327, primals_1328, primals_1329, primals_1330, primals_1331, primals_1332, primals_1333, primals_1334, primals_1335, primals_1336, primals_1337, primals_1338, primals_1339, primals_1340, primals_1341, primals_1342, primals_1343, primals_1344, primals_1345, primals_1346, primals_1347, primals_1348, primals_1349, primals_1350, primals_1351, primals_1352, primals_1353, primals_1354, primals_1355, primals_1356, primals_1357, primals_1358, primals_1359, primals_1360, primals_1361, primals_1362, primals_1363, primals_1364, primals_1365, primals_1366, primals_1367, primals_1368, primals_1369, primals_1370, primals_1371, primals_1372, primals_1373, primals_1374, primals_1375, primals_1376, primals_1377, primals_1378, primals_1379, primals_1380, primals_1381]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('pnasnet5large', benchmark_compiled_module)
