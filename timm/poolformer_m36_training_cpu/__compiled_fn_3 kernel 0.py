
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (49L*x1) + (147L*x0))];
                    out_ptr0[static_cast<long>(x1 + (3L*x2) + (147L*x0))] = tmp0;
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(192L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (864L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr1 + static_cast<long>(x1 + (96L*x2) + (864L*x0)), static_cast<long>(96L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (864L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr1 + static_cast<long>(x1 + (96L*x2) + (864L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(384L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1728L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (192L*x2) + (1728L*x0)), static_cast<long>(192L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr2[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1728L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (192L*x2) + (1728L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (3456L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr3 + static_cast<long>(x1 + (384L*x2) + (3456L*x0)), static_cast<long>(384L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr3[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (3456L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (3456L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(50176L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr4[static_cast<long>(x2 + (50176L*x1) + (150528L*x0))];
                        out_ptr4[static_cast<long>(x1 + (3L*x2) + (150528L*x0))] = tmp0;
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_native_group_norm_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(301056L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (301056L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                        auto tmp1 = out_ptr0[static_cast<long>(x0)];
                        auto tmp4 = out_ptr1[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(301056.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr2 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr2 + static_cast<long>((-5472L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr2 + static_cast<long>((-5376L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr2 + static_cast<long>((-5280L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr2 + static_cast<long>((-96L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr2 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr2 + static_cast<long>(96L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr2 + static_cast<long>(5280L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr2 + static_cast<long>(5376L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr2 + static_cast<long>(5472L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr4[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                        auto tmp7 = out_ptr4[static_cast<long>(x0)];
                        auto tmp10 = out_ptr5[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(301056.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr6 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(9633792L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                    {
                        float tmp11[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            auto tmp9 = tmp7 * tmp8;
                            auto tmp10 = tmp6 + tmp9;
                            tmp10.store(tmp11 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp11, 8, out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (301056L*x0)), static_cast<long>(3136L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(301056L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (301056L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(301056.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5472L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5280L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-96L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(96L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5280L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5472L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (3136L*x2) + (3136L*x2_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(301056.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(9633792L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(301056L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (301056L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(301056.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5472L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5280L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-96L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(96L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5280L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5472L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (3136L*x2) + (3136L*x2_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(301056.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(9633792L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(301056L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (301056L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(301056.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5472L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5280L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-96L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(96L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5280L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5472L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (3136L*x2) + (3136L*x2_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(301056.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(9633792L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(301056L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (301056L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(301056.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5472L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5280L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-96L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(96L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5280L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5472L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (3136L*x2) + (3136L*x2_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(301056.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(9633792L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)), static_cast<long>(96L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(301056L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (301056L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(301056.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5472L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5280L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-96L) + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(96L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5280L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5472L + x3 + (96L*x2) + (5376L*x1) + (301056L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (96L*x2) + (5376L*x1) + (301056L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (3136L*x2) + (3136L*x2_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (96L*x1) + (301056L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (301056L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(301056.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (96L*x2) + (301056L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(9633792L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_mul_sub_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(96L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (3136L*x2) + (301056L*x0)), static_cast<long>(3136L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                            auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp4 = tmp2 - tmp3;
                            auto tmp6 = tmp4 * tmp5;
                            auto tmp7 = tmp1 + tmp6;
                            auto tmp10 = tmp8 * tmp9;
                            auto tmp11 = tmp7 + tmp10;
                            tmp11.store(out_ptr0 + static_cast<long>(x2 + (96L*x1) + (96L*x1_inner) + (301056L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_native_group_norm_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(150528L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (150528L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                        auto tmp1 = out_ptr0[static_cast<long>(x0)];
                        auto tmp4 = out_ptr1[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(150528.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr2 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(192L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr2 + static_cast<long>((-5568L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr2 + static_cast<long>((-5376L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr2 + static_cast<long>((-5184L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr2 + static_cast<long>((-192L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr2 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr2 + static_cast<long>(192L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr2 + static_cast<long>(5184L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr2 + static_cast<long>(5376L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr2 + static_cast<long>(5568L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr3 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr4[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                        auto tmp7 = out_ptr4[static_cast<long>(x0)];
                        auto tmp10 = out_ptr5[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(150528.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr6 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4816896L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp11[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            auto tmp9 = tmp7 * tmp8;
                            auto tmp10 = tmp6 + tmp9;
                            tmp10.store(tmp11 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp11, 8, out_ptr0 + static_cast<long>(x1 + (784L*x2) + (150528L*x0)), static_cast<long>(784L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(150528L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (150528L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(150528.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(192L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5568L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5184L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-192L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(192L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5184L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5568L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (784L*x2) + (784L*x2_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(150528.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4816896L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(150528L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (150528L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(150528.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(192L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5568L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5184L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-192L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(192L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5184L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5568L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (784L*x2) + (784L*x2_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(150528.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4816896L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(150528L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (150528L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(150528.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(192L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5568L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5184L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-192L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(192L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5184L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5568L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (784L*x2) + (784L*x2_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(150528.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4816896L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(150528L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (150528L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(150528.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(192L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5568L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5184L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-192L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(192L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5184L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5568L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (784L*x2) + (784L*x2_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(150528.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4816896L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)), static_cast<long>(192L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(150528L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (150528L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(150528.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(192L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5568L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-5184L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-192L) + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(192L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(5184L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5568L + x3 + (192L*x2) + (5376L*x1) + (150528L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (192L*x2) + (5376L*x1) + (150528L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (784L*x2) + (784L*x2_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (192L*x1) + (150528L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (150528L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(150528.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (192L*x2) + (150528L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4816896L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_mul_sub_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (784L*x2) + (150528L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                            auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp4 = tmp2 - tmp3;
                            auto tmp6 = tmp4 * tmp5;
                            auto tmp7 = tmp1 + tmp6;
                            auto tmp10 = tmp8 * tmp9;
                            auto tmp11 = tmp7 + tmp10;
                            tmp11.store(out_ptr0 + static_cast<long>(x2 + (192L*x1) + (192L*x1_inner) + (150528L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_native_group_norm_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                        auto tmp1 = out_ptr0[static_cast<long>(x0)];
                        auto tmp4 = out_ptr1[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr2 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr2 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr2 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr2 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr2 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr2 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr2 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr2 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr2 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr2 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr4[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                        auto tmp7 = out_ptr4[static_cast<long>(x0)];
                        auto tmp10 = out_ptr5[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr6 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                    {
                        float tmp11[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            auto tmp9 = tmp7 * tmp8;
                            auto tmp10 = tmp6 + tmp9;
                            tmp10.store(tmp11 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp11, 8, out_ptr0 + static_cast<long>(x1 + (196L*x2) + (75264L*x0)), static_cast<long>(196L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp2 = in_ptr2[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp8 = in_ptr5[static_cast<long>(x2)];
                        auto tmp3 = decltype(tmp1)(tmp1 - tmp2);
                        auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                        auto tmp6 = decltype(tmp0)(tmp0 + tmp5);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                        out_ptr0[static_cast<long>(x1 + (196L*x2) + (75264L*x0))] = tmp10;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)), static_cast<long>(384L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(75264L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (75264L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(75264.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(384L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(14);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-5760L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4992L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-384L) + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(384L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4992L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(5760L + x3 + (384L*x2) + (5376L*x1) + (75264L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (384L*x2) + (5376L*x1) + (75264L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (196L*x2) + (196L*x2_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (384L*x1) + (75264L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (75264L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(75264.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (384L*x2) + (75264L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2408448L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_mul_sub_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (196L*x2) + (75264L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                            auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp4 = tmp2 - tmp3;
                            auto tmp6 = tmp4 * tmp5;
                            auto tmp7 = tmp1 + tmp6;
                            auto tmp10 = tmp8 * tmp9;
                            auto tmp11 = tmp7 + tmp10;
                            tmp11.store(out_ptr0 + static_cast<long>(x2 + (384L*x1) + (384L*x1_inner) + (75264L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (75264L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp2 = in_ptr2[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (384L*x1) + (75264L*x0))];
                        auto tmp8 = in_ptr5[static_cast<long>(x2)];
                        auto tmp3 = decltype(tmp1)(tmp1 - tmp2);
                        auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                        auto tmp6 = decltype(tmp0)(tmp0 + tmp5);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                        out_ptr0[static_cast<long>(x2 + (384L*x1) + (75264L*x0))] = tmp10;
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_native_group_norm_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(37632L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (37632L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                        auto tmp1 = out_ptr0[static_cast<long>(x0)];
                        auto tmp4 = out_ptr1[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(37632.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr2 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(7L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(768L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(7);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr2 + static_cast<long>((-6144L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr2 + static_cast<long>((-5376L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr2 + static_cast<long>((-4608L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr2 + static_cast<long>((-768L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr2 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr2 + static_cast<long>(768L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr2 + static_cast<long>(4608L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr2 + static_cast<long>(5376L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr2 + static_cast<long>(6144L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr3 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr4[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                {
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                        auto tmp7 = out_ptr4[static_cast<long>(x0)];
                        auto tmp10 = out_ptr5[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(37632.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr6 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1204224L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                    {
                        float tmp11[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (768L*x1) + (768L*x1_inner) + (37632L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (768L*x1) + (768L*x1_inner) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (768L*x1) + (768L*x1_inner) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (768L*x1) + (768L*x1_inner) + (37632L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            auto tmp9 = tmp7 * tmp8;
                            auto tmp10 = tmp6 + tmp9;
                            tmp10.store(tmp11 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp11, 8, out_ptr0 + static_cast<long>(x1 + (49L*x2) + (37632L*x0)), static_cast<long>(49L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (768L*x1) + (37632L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (768L*x1) + (37632L*x0))];
                        auto tmp2 = in_ptr2[static_cast<long>(x2 + (768L*x1) + (37632L*x0))];
                        auto tmp4 = in_ptr3[static_cast<long>(x2)];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (768L*x1) + (37632L*x0))];
                        auto tmp8 = in_ptr5[static_cast<long>(x2)];
                        auto tmp3 = decltype(tmp1)(tmp1 - tmp2);
                        auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                        auto tmp6 = decltype(tmp0)(tmp0 + tmp5);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                        out_ptr0[static_cast<long>(x1 + (49L*x2) + (37632L*x0))] = tmp10;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(37632L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (37632L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(37632.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(7L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(768L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(7);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-6144L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4608L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-768L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(768L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4608L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(6144L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (49L*x2) + (49L*x2_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(37632.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1204224L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(37632L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (37632L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(37632.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(7L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(768L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(7);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-6144L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4608L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-768L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(768L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4608L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(6144L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (49L*x2) + (49L*x2_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(37632.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1204224L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(37632L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (37632L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(37632.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(7L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(768L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(7);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-6144L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4608L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-768L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(768L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4608L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(6144L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (49L*x2) + (49L*x2_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(37632.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1204224L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(37632L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (37632L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(37632.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(7L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(768L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(7);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-6144L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4608L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-768L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(768L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4608L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(6144L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (49L*x2) + (49L*x2_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(37632.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1204224L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp1, 8);
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp3, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)), static_cast<long>(768L), tmp10, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(tmp1 + static_cast<long>(8L*x1_inner));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(tmp3 + static_cast<long>(8L*x1_inner));
                            auto tmp6 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp11 = at::vec::Vectorized<float>::loadu(tmp10 + static_cast<long>(8L*x1_inner));
                            auto tmp12 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = tmp2 - tmp4;
                            auto tmp7 = at::vec::Vectorized<float>(tmp6);
                            auto tmp8 = tmp5 * tmp7;
                            auto tmp9 = tmp0 + tmp8;
                            auto tmp13 = at::vec::Vectorized<float>(tmp12);
                            auto tmp14 = tmp11 * tmp13;
                            auto tmp15 = tmp9 + tmp14;
                            tmp15.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp10 = tmp6 + tmp9;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp10.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(37632L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (37632L*x0)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = out_ptr1[static_cast<long>(x0)];
                        auto tmp4 = out_ptr2[static_cast<long>(x0)];
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(37632.0);
                        auto tmp6 = tmp4 / tmp5;
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = 1 / std::sqrt(tmp8);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp3 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        tmp15.store(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(7L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(768L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(7);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr3 + static_cast<long>((-6144L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr3 + static_cast<long>((-5376L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = tmp21 + tmp13;
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr3 + static_cast<long>((-4608L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = tmp30 + tmp22;
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr3 + static_cast<long>((-768L) + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = tmp39 + tmp31;
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr3 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = tmp44 + tmp40;
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr3 + static_cast<long>(768L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = tmp49 + tmp45;
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr3 + static_cast<long>(4608L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = tmp58 + tmp50;
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr3 + static_cast<long>(5376L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = tmp63 + tmp59;
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr3 + static_cast<long>(6144L + x3 + (768L*x2) + (5376L*x1) + (37632L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = tmp68 + tmp64;
                            auto tmp70 = [&]
                            {
                                auto tmp71 = static_cast<float>(1.0);
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : static_cast<float>(0.0);
                            auto tmp73 = [&]
                            {
                                auto tmp74 = static_cast<float>(1.0);
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : static_cast<float>(0.0);
                            auto tmp76 = decltype(tmp75)(tmp75 + tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = static_cast<float>(1.0);
                                return tmp78;
                            }
                            ;
                            auto tmp79 = tmp27 ? tmp77() : static_cast<float>(0.0);
                            auto tmp80 = decltype(tmp79)(tmp79 + tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = static_cast<float>(1.0);
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp36 ? tmp81() : static_cast<float>(0.0);
                            auto tmp84 = decltype(tmp83)(tmp83 + tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = static_cast<float>(1.0);
                                return tmp86;
                            }
                            ;
                            auto tmp87 = tmp41 ? tmp85() : static_cast<float>(0.0);
                            auto tmp88 = decltype(tmp87)(tmp87 + tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = static_cast<float>(1.0);
                                return tmp90;
                            }
                            ;
                            auto tmp91 = tmp46 ? tmp89() : static_cast<float>(0.0);
                            auto tmp92 = decltype(tmp91)(tmp91 + tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = static_cast<float>(1.0);
                                return tmp94;
                            }
                            ;
                            auto tmp95 = tmp55 ? tmp93() : static_cast<float>(0.0);
                            auto tmp96 = decltype(tmp95)(tmp95 + tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = static_cast<float>(1.0);
                                return tmp98;
                            }
                            ;
                            auto tmp99 = tmp60 ? tmp97() : static_cast<float>(0.0);
                            auto tmp100 = decltype(tmp99)(tmp99 + tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = static_cast<float>(1.0);
                                return tmp102;
                            }
                            ;
                            auto tmp103 = tmp65 ? tmp101() : static_cast<float>(0.0);
                            auto tmp104 = decltype(tmp103)(tmp103 + tmp100);
                            auto tmp105 = at::vec::Vectorized<float>(tmp104);
                            auto tmp106 = tmp69 / tmp105;
                            tmp106.store(out_ptr4 + static_cast<long>(x3 + (768L*x2) + (5376L*x1) + (37632L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(768L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x2_inner = 0; x2_inner < 8; x2_inner++) tmpbuf[x2_inner] = out_ptr0[static_cast<long>(x1 + (49L*x2) + (49L*x2_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x2 + (768L*x1) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp6);
                        }
                    }
                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                    out_ptr5[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                    out_ptr6[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp7 = out_ptr5[static_cast<long>(x0)];
                        auto tmp10 = out_ptr6[static_cast<long>(x0)];
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp3 = tmp1 - tmp2;
                        auto tmp5 = tmp3 * tmp4;
                        auto tmp6 = tmp0 + tmp5;
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 - tmp8;
                        auto tmp11 = static_cast<float>(37632.0);
                        auto tmp12 = tmp10 / tmp11;
                        auto tmp13 = static_cast<float>(1e-05);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = 1 / std::sqrt(tmp14);
                        auto tmp16 = at::vec::Vectorized<float>(tmp15);
                        auto tmp17 = tmp9 * tmp16;
                        auto tmp19 = tmp17 * tmp18;
                        auto tmp21 = tmp19 + tmp20;
                        tmp21.store(out_ptr7 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_gelu_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1204224L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = static_cast<float>(0.5);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 * tmp2;
                auto tmp4 = static_cast<float>(0.7071067811865476);
                auto tmp5 = at::vec::Vectorized<float>(tmp4);
                auto tmp6 = tmp0 * tmp5;
                auto tmp7 = tmp6.erf();
                auto tmp8 = static_cast<float>(1.0);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp3 * tmp10;
                tmp11.store(out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused_add_mean_mul_native_layer_norm_sub_view_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    {
                        #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                        float tmp_acc0 = 0;
                        at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                        {
                            float tmp0[8*8] __attribute__ ((aligned (8)));
                            at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x2 + (49L*x1) + (37632L*x0)), static_cast<long>(49L), tmp0, 8);
                            for (long x2_inner = 0; x2_inner < 8; x2_inner++)
                            {
                                auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x2_inner));
                                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (768L*x2_inner) + (37632L*x0)));
                                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (768L*x2_inner) + (37632L*x0)));
                                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                                auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (768L*x2_inner) + (37632L*x0)));
                                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                                auto tmp4 = tmp2 - tmp3;
                                auto tmp6 = tmp4 * tmp5;
                                auto tmp7 = tmp1 + tmp6;
                                auto tmp10 = tmp8 * tmp9;
                                auto tmp11 = tmp7 + tmp10;
                                tmp_acc0_vec = tmp_acc0_vec + tmp11;
                            }
                        }
                        for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (37632L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (768L*x2) + (37632L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                            auto tmp3 = tmp1 - tmp2;
                            auto tmp5 = tmp3 * tmp4;
                            auto tmp6 = tmp0 + tmp5;
                            auto tmp9 = tmp7 * tmp8;
                            auto tmp10 = tmp6 + tmp9;
                            tmp_acc0_vec = tmp_acc0_vec + tmp10;
                        }
                        tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x1 + (768L*x0)));
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
                {
                    {
                        #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                        #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                        Welford<float> tmp_acc0 = Welford<float>();
                        Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                        for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (768L*x0)));
                            auto tmp1 = static_cast<float>(49.0);
                            auto tmp2 = at::vec::Vectorized<float>(tmp1);
                            auto tmp3 = tmp0 / tmp2;
                            tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp3);
                        }
                        tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                        out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                        out_ptr2[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (768L*x0)));
                        auto tmp4 = out_ptr1[static_cast<long>(x0)];
                        auto tmp7 = out_ptr2[static_cast<long>(x0)];
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp1 = static_cast<float>(49.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 / tmp2;
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 - tmp5;
                        auto tmp8 = static_cast<float>(768.0);
                        auto tmp9 = tmp7 / tmp8;
                        auto tmp10 = static_cast<float>(1e-06);
                        auto tmp11 = decltype(tmp9)(tmp9 + tmp10);
                        auto tmp12 = 1 / std::sqrt(tmp11);
                        auto tmp13 = at::vec::Vectorized<float>(tmp12);
                        auto tmp14 = tmp6 * tmp13;
                        auto tmp16 = tmp14 * tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        tmp14.store(out_ptr3 + static_cast<long>(x1 + (768L*x0)));
                        tmp18.store(out_ptr4 + static_cast<long>(x1 + (768L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_detach_native_layer_norm_native_layer_norm_backward_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       float* in_out_ptr14,
                       float* in_out_ptr15,
                       float* in_out_ptr16,
                       float* in_out_ptr17,
                       float* in_out_ptr18,
                       float* in_out_ptr19,
                       float* in_out_ptr20,
                       float* in_out_ptr21,
                       float* in_out_ptr22,
                       float* in_out_ptr23,
                       float* in_out_ptr24,
                       float* in_out_ptr25,
                       float* in_out_ptr26,
                       float* in_out_ptr27,
                       float* in_out_ptr28,
                       float* in_out_ptr29,
                       float* in_out_ptr30,
                       float* in_out_ptr31,
                       float* in_out_ptr32,
                       float* in_out_ptr33,
                       float* in_out_ptr34,
                       float* in_out_ptr35,
                       float* in_out_ptr36,
                       float* in_out_ptr37,
                       float* in_out_ptr38,
                       float* in_out_ptr39,
                       float* in_out_ptr40,
                       float* in_out_ptr41,
                       float* in_out_ptr42,
                       float* in_out_ptr43,
                       float* in_out_ptr44,
                       float* in_out_ptr45,
                       float* in_out_ptr46,
                       float* in_out_ptr47,
                       float* in_out_ptr48,
                       float* in_out_ptr49,
                       float* in_out_ptr50,
                       float* in_out_ptr51,
                       float* in_out_ptr52,
                       float* in_out_ptr53,
                       float* in_out_ptr54,
                       float* in_out_ptr55,
                       float* in_out_ptr56,
                       float* in_out_ptr57,
                       float* in_out_ptr58,
                       float* in_out_ptr59,
                       float* in_out_ptr60,
                       float* in_out_ptr61,
                       float* in_out_ptr62,
                       float* in_out_ptr63,
                       float* in_out_ptr64,
                       float* in_out_ptr65,
                       float* in_out_ptr66,
                       float* in_out_ptr67,
                       float* in_out_ptr68,
                       float* in_out_ptr69,
                       float* in_out_ptr70,
                       float* in_out_ptr71,
                       float* in_out_ptr72)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(768.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-06);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            auto tmp8 = tmp7 / tmp2;
            tmp8.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr1 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr2 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr3 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr4 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr5 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr6 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr7 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr8 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr9 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr10 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr11 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(37632.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr12 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr13 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr14 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr14 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr15 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr15 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr16 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr16 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr17 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr17 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr18 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr18 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr19 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr19 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr20 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr20 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr21 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr21 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr22 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr22 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr23 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr23 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr24 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr24 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr25 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr25 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr26 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr26 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr27 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr27 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr28 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr28 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr29 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr29 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr30 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr30 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr31 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr31 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr32 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr32 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr33 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr33 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr34 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr34 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr35 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr35 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr36 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr36 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr37 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr37 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr38 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr38 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr39 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr39 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr40 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr40 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr41 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr41 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr42 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr42 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr43 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr43 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr44 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr44 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr45 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr45 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr46 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr46 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr47 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr47 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr48 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(75264.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr48 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr49 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr49 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr50 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr50 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr51 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr51 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr52 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr52 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr53 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr53 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr54 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr54 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr55 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr55 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr56 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr56 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr57 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr57 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr58 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr58 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr59 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr59 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr60 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(150528.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr60 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr61 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr61 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr62 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr62 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr63 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr63 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr64 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr64 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr65 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr65 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr66 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr66 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr67 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr67 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr68 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr68 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr69 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr69 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr70 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr70 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr71 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr71 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr72 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(301056.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-05);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr72 + static_cast<long>(x0));
        }
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373 = args
    args.clear()
    assert_size_stride(primals_1, (96, ), (1, ))
    assert_size_stride(primals_2, (96, ), (1, ))
    assert_size_stride(primals_3, (96, ), (1, ))
    assert_size_stride(primals_4, (96, ), (1, ))
    assert_size_stride(primals_5, (96, ), (1, ))
    assert_size_stride(primals_6, (96, ), (1, ))
    assert_size_stride(primals_7, (96, ), (1, ))
    assert_size_stride(primals_8, (96, ), (1, ))
    assert_size_stride(primals_9, (96, ), (1, ))
    assert_size_stride(primals_10, (96, ), (1, ))
    assert_size_stride(primals_11, (96, ), (1, ))
    assert_size_stride(primals_12, (96, ), (1, ))
    assert_size_stride(primals_13, (96, ), (1, ))
    assert_size_stride(primals_14, (96, ), (1, ))
    assert_size_stride(primals_15, (96, ), (1, ))
    assert_size_stride(primals_16, (96, ), (1, ))
    assert_size_stride(primals_17, (96, ), (1, ))
    assert_size_stride(primals_18, (96, ), (1, ))
    assert_size_stride(primals_19, (96, ), (1, ))
    assert_size_stride(primals_20, (96, ), (1, ))
    assert_size_stride(primals_21, (96, ), (1, ))
    assert_size_stride(primals_22, (96, ), (1, ))
    assert_size_stride(primals_23, (96, ), (1, ))
    assert_size_stride(primals_24, (96, ), (1, ))
    assert_size_stride(primals_25, (96, ), (1, ))
    assert_size_stride(primals_26, (96, ), (1, ))
    assert_size_stride(primals_27, (96, ), (1, ))
    assert_size_stride(primals_28, (96, ), (1, ))
    assert_size_stride(primals_29, (96, ), (1, ))
    assert_size_stride(primals_30, (96, ), (1, ))
    assert_size_stride(primals_31, (96, ), (1, ))
    assert_size_stride(primals_32, (96, ), (1, ))
    assert_size_stride(primals_33, (96, ), (1, ))
    assert_size_stride(primals_34, (96, ), (1, ))
    assert_size_stride(primals_35, (96, ), (1, ))
    assert_size_stride(primals_36, (96, ), (1, ))
    assert_size_stride(primals_37, (192, ), (1, ))
    assert_size_stride(primals_38, (192, ), (1, ))
    assert_size_stride(primals_39, (192, ), (1, ))
    assert_size_stride(primals_40, (192, ), (1, ))
    assert_size_stride(primals_41, (192, ), (1, ))
    assert_size_stride(primals_42, (192, ), (1, ))
    assert_size_stride(primals_43, (192, ), (1, ))
    assert_size_stride(primals_44, (192, ), (1, ))
    assert_size_stride(primals_45, (192, ), (1, ))
    assert_size_stride(primals_46, (192, ), (1, ))
    assert_size_stride(primals_47, (192, ), (1, ))
    assert_size_stride(primals_48, (192, ), (1, ))
    assert_size_stride(primals_49, (192, ), (1, ))
    assert_size_stride(primals_50, (192, ), (1, ))
    assert_size_stride(primals_51, (192, ), (1, ))
    assert_size_stride(primals_52, (192, ), (1, ))
    assert_size_stride(primals_53, (192, ), (1, ))
    assert_size_stride(primals_54, (192, ), (1, ))
    assert_size_stride(primals_55, (192, ), (1, ))
    assert_size_stride(primals_56, (192, ), (1, ))
    assert_size_stride(primals_57, (192, ), (1, ))
    assert_size_stride(primals_58, (192, ), (1, ))
    assert_size_stride(primals_59, (192, ), (1, ))
    assert_size_stride(primals_60, (192, ), (1, ))
    assert_size_stride(primals_61, (192, ), (1, ))
    assert_size_stride(primals_62, (192, ), (1, ))
    assert_size_stride(primals_63, (192, ), (1, ))
    assert_size_stride(primals_64, (192, ), (1, ))
    assert_size_stride(primals_65, (192, ), (1, ))
    assert_size_stride(primals_66, (192, ), (1, ))
    assert_size_stride(primals_67, (192, ), (1, ))
    assert_size_stride(primals_68, (192, ), (1, ))
    assert_size_stride(primals_69, (192, ), (1, ))
    assert_size_stride(primals_70, (192, ), (1, ))
    assert_size_stride(primals_71, (192, ), (1, ))
    assert_size_stride(primals_72, (192, ), (1, ))
    assert_size_stride(primals_73, (384, ), (1, ))
    assert_size_stride(primals_74, (384, ), (1, ))
    assert_size_stride(primals_75, (384, ), (1, ))
    assert_size_stride(primals_76, (384, ), (1, ))
    assert_size_stride(primals_77, (384, ), (1, ))
    assert_size_stride(primals_78, (384, ), (1, ))
    assert_size_stride(primals_79, (384, ), (1, ))
    assert_size_stride(primals_80, (384, ), (1, ))
    assert_size_stride(primals_81, (384, ), (1, ))
    assert_size_stride(primals_82, (384, ), (1, ))
    assert_size_stride(primals_83, (384, ), (1, ))
    assert_size_stride(primals_84, (384, ), (1, ))
    assert_size_stride(primals_85, (384, ), (1, ))
    assert_size_stride(primals_86, (384, ), (1, ))
    assert_size_stride(primals_87, (384, ), (1, ))
    assert_size_stride(primals_88, (384, ), (1, ))
    assert_size_stride(primals_89, (384, ), (1, ))
    assert_size_stride(primals_90, (384, ), (1, ))
    assert_size_stride(primals_91, (384, ), (1, ))
    assert_size_stride(primals_92, (384, ), (1, ))
    assert_size_stride(primals_93, (384, ), (1, ))
    assert_size_stride(primals_94, (384, ), (1, ))
    assert_size_stride(primals_95, (384, ), (1, ))
    assert_size_stride(primals_96, (384, ), (1, ))
    assert_size_stride(primals_97, (384, ), (1, ))
    assert_size_stride(primals_98, (384, ), (1, ))
    assert_size_stride(primals_99, (384, ), (1, ))
    assert_size_stride(primals_100, (384, ), (1, ))
    assert_size_stride(primals_101, (384, ), (1, ))
    assert_size_stride(primals_102, (384, ), (1, ))
    assert_size_stride(primals_103, (384, ), (1, ))
    assert_size_stride(primals_104, (384, ), (1, ))
    assert_size_stride(primals_105, (384, ), (1, ))
    assert_size_stride(primals_106, (384, ), (1, ))
    assert_size_stride(primals_107, (384, ), (1, ))
    assert_size_stride(primals_108, (384, ), (1, ))
    assert_size_stride(primals_109, (384, ), (1, ))
    assert_size_stride(primals_110, (384, ), (1, ))
    assert_size_stride(primals_111, (384, ), (1, ))
    assert_size_stride(primals_112, (384, ), (1, ))
    assert_size_stride(primals_113, (384, ), (1, ))
    assert_size_stride(primals_114, (384, ), (1, ))
    assert_size_stride(primals_115, (384, ), (1, ))
    assert_size_stride(primals_116, (384, ), (1, ))
    assert_size_stride(primals_117, (384, ), (1, ))
    assert_size_stride(primals_118, (384, ), (1, ))
    assert_size_stride(primals_119, (384, ), (1, ))
    assert_size_stride(primals_120, (384, ), (1, ))
    assert_size_stride(primals_121, (384, ), (1, ))
    assert_size_stride(primals_122, (384, ), (1, ))
    assert_size_stride(primals_123, (384, ), (1, ))
    assert_size_stride(primals_124, (384, ), (1, ))
    assert_size_stride(primals_125, (384, ), (1, ))
    assert_size_stride(primals_126, (384, ), (1, ))
    assert_size_stride(primals_127, (384, ), (1, ))
    assert_size_stride(primals_128, (384, ), (1, ))
    assert_size_stride(primals_129, (384, ), (1, ))
    assert_size_stride(primals_130, (384, ), (1, ))
    assert_size_stride(primals_131, (384, ), (1, ))
    assert_size_stride(primals_132, (384, ), (1, ))
    assert_size_stride(primals_133, (384, ), (1, ))
    assert_size_stride(primals_134, (384, ), (1, ))
    assert_size_stride(primals_135, (384, ), (1, ))
    assert_size_stride(primals_136, (384, ), (1, ))
    assert_size_stride(primals_137, (384, ), (1, ))
    assert_size_stride(primals_138, (384, ), (1, ))
    assert_size_stride(primals_139, (384, ), (1, ))
    assert_size_stride(primals_140, (384, ), (1, ))
    assert_size_stride(primals_141, (384, ), (1, ))
    assert_size_stride(primals_142, (384, ), (1, ))
    assert_size_stride(primals_143, (384, ), (1, ))
    assert_size_stride(primals_144, (384, ), (1, ))
    assert_size_stride(primals_145, (384, ), (1, ))
    assert_size_stride(primals_146, (384, ), (1, ))
    assert_size_stride(primals_147, (384, ), (1, ))
    assert_size_stride(primals_148, (384, ), (1, ))
    assert_size_stride(primals_149, (384, ), (1, ))
    assert_size_stride(primals_150, (384, ), (1, ))
    assert_size_stride(primals_151, (384, ), (1, ))
    assert_size_stride(primals_152, (384, ), (1, ))
    assert_size_stride(primals_153, (384, ), (1, ))
    assert_size_stride(primals_154, (384, ), (1, ))
    assert_size_stride(primals_155, (384, ), (1, ))
    assert_size_stride(primals_156, (384, ), (1, ))
    assert_size_stride(primals_157, (384, ), (1, ))
    assert_size_stride(primals_158, (384, ), (1, ))
    assert_size_stride(primals_159, (384, ), (1, ))
    assert_size_stride(primals_160, (384, ), (1, ))
    assert_size_stride(primals_161, (384, ), (1, ))
    assert_size_stride(primals_162, (384, ), (1, ))
    assert_size_stride(primals_163, (384, ), (1, ))
    assert_size_stride(primals_164, (384, ), (1, ))
    assert_size_stride(primals_165, (384, ), (1, ))
    assert_size_stride(primals_166, (384, ), (1, ))
    assert_size_stride(primals_167, (384, ), (1, ))
    assert_size_stride(primals_168, (384, ), (1, ))
    assert_size_stride(primals_169, (384, ), (1, ))
    assert_size_stride(primals_170, (384, ), (1, ))
    assert_size_stride(primals_171, (384, ), (1, ))
    assert_size_stride(primals_172, (384, ), (1, ))
    assert_size_stride(primals_173, (384, ), (1, ))
    assert_size_stride(primals_174, (384, ), (1, ))
    assert_size_stride(primals_175, (384, ), (1, ))
    assert_size_stride(primals_176, (384, ), (1, ))
    assert_size_stride(primals_177, (384, ), (1, ))
    assert_size_stride(primals_178, (384, ), (1, ))
    assert_size_stride(primals_179, (384, ), (1, ))
    assert_size_stride(primals_180, (384, ), (1, ))
    assert_size_stride(primals_181, (768, ), (1, ))
    assert_size_stride(primals_182, (768, ), (1, ))
    assert_size_stride(primals_183, (768, ), (1, ))
    assert_size_stride(primals_184, (768, ), (1, ))
    assert_size_stride(primals_185, (768, ), (1, ))
    assert_size_stride(primals_186, (768, ), (1, ))
    assert_size_stride(primals_187, (768, ), (1, ))
    assert_size_stride(primals_188, (768, ), (1, ))
    assert_size_stride(primals_189, (768, ), (1, ))
    assert_size_stride(primals_190, (768, ), (1, ))
    assert_size_stride(primals_191, (768, ), (1, ))
    assert_size_stride(primals_192, (768, ), (1, ))
    assert_size_stride(primals_193, (768, ), (1, ))
    assert_size_stride(primals_194, (768, ), (1, ))
    assert_size_stride(primals_195, (768, ), (1, ))
    assert_size_stride(primals_196, (768, ), (1, ))
    assert_size_stride(primals_197, (768, ), (1, ))
    assert_size_stride(primals_198, (768, ), (1, ))
    assert_size_stride(primals_199, (768, ), (1, ))
    assert_size_stride(primals_200, (768, ), (1, ))
    assert_size_stride(primals_201, (768, ), (1, ))
    assert_size_stride(primals_202, (768, ), (1, ))
    assert_size_stride(primals_203, (768, ), (1, ))
    assert_size_stride(primals_204, (768, ), (1, ))
    assert_size_stride(primals_205, (768, ), (1, ))
    assert_size_stride(primals_206, (768, ), (1, ))
    assert_size_stride(primals_207, (768, ), (1, ))
    assert_size_stride(primals_208, (768, ), (1, ))
    assert_size_stride(primals_209, (768, ), (1, ))
    assert_size_stride(primals_210, (768, ), (1, ))
    assert_size_stride(primals_211, (768, ), (1, ))
    assert_size_stride(primals_212, (768, ), (1, ))
    assert_size_stride(primals_213, (768, ), (1, ))
    assert_size_stride(primals_214, (768, ), (1, ))
    assert_size_stride(primals_215, (768, ), (1, ))
    assert_size_stride(primals_216, (768, ), (1, ))
    assert_size_stride(primals_217, (768, ), (1, ))
    assert_size_stride(primals_218, (768, ), (1, ))
    assert_size_stride(primals_219, (96, 3, 7, 7), (147, 49, 7, 1))
    assert_size_stride(primals_220, (96, ), (1, ))
    assert_size_stride(primals_221, (384, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_222, (384, ), (1, ))
    assert_size_stride(primals_223, (96, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_224, (96, ), (1, ))
    assert_size_stride(primals_225, (384, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_226, (384, ), (1, ))
    assert_size_stride(primals_227, (96, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_228, (96, ), (1, ))
    assert_size_stride(primals_229, (384, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_230, (384, ), (1, ))
    assert_size_stride(primals_231, (96, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_232, (96, ), (1, ))
    assert_size_stride(primals_233, (384, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_234, (384, ), (1, ))
    assert_size_stride(primals_235, (96, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_236, (96, ), (1, ))
    assert_size_stride(primals_237, (384, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_238, (384, ), (1, ))
    assert_size_stride(primals_239, (96, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_240, (96, ), (1, ))
    assert_size_stride(primals_241, (384, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_242, (384, ), (1, ))
    assert_size_stride(primals_243, (96, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_244, (96, ), (1, ))
    assert_size_stride(primals_245, (192, 96, 3, 3), (864, 9, 3, 1))
    assert_size_stride(primals_246, (192, ), (1, ))
    assert_size_stride(primals_247, (768, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_248, (768, ), (1, ))
    assert_size_stride(primals_249, (192, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_250, (192, ), (1, ))
    assert_size_stride(primals_251, (768, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_252, (768, ), (1, ))
    assert_size_stride(primals_253, (192, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_254, (192, ), (1, ))
    assert_size_stride(primals_255, (768, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_256, (768, ), (1, ))
    assert_size_stride(primals_257, (192, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_258, (192, ), (1, ))
    assert_size_stride(primals_259, (768, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_260, (768, ), (1, ))
    assert_size_stride(primals_261, (192, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_262, (192, ), (1, ))
    assert_size_stride(primals_263, (768, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_264, (768, ), (1, ))
    assert_size_stride(primals_265, (192, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_266, (192, ), (1, ))
    assert_size_stride(primals_267, (768, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_268, (768, ), (1, ))
    assert_size_stride(primals_269, (192, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_270, (192, ), (1, ))
    assert_size_stride(primals_271, (384, 192, 3, 3), (1728, 9, 3, 1))
    assert_size_stride(primals_272, (384, ), (1, ))
    assert_size_stride(primals_273, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_274, (1536, ), (1, ))
    assert_size_stride(primals_275, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_276, (384, ), (1, ))
    assert_size_stride(primals_277, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_278, (1536, ), (1, ))
    assert_size_stride(primals_279, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_280, (384, ), (1, ))
    assert_size_stride(primals_281, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_282, (1536, ), (1, ))
    assert_size_stride(primals_283, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_284, (384, ), (1, ))
    assert_size_stride(primals_285, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_286, (1536, ), (1, ))
    assert_size_stride(primals_287, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_288, (384, ), (1, ))
    assert_size_stride(primals_289, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_290, (1536, ), (1, ))
    assert_size_stride(primals_291, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_292, (384, ), (1, ))
    assert_size_stride(primals_293, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_294, (1536, ), (1, ))
    assert_size_stride(primals_295, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_296, (384, ), (1, ))
    assert_size_stride(primals_297, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_298, (1536, ), (1, ))
    assert_size_stride(primals_299, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_300, (384, ), (1, ))
    assert_size_stride(primals_301, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_302, (1536, ), (1, ))
    assert_size_stride(primals_303, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_304, (384, ), (1, ))
    assert_size_stride(primals_305, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_306, (1536, ), (1, ))
    assert_size_stride(primals_307, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_308, (384, ), (1, ))
    assert_size_stride(primals_309, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_310, (1536, ), (1, ))
    assert_size_stride(primals_311, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_312, (384, ), (1, ))
    assert_size_stride(primals_313, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_314, (1536, ), (1, ))
    assert_size_stride(primals_315, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_316, (384, ), (1, ))
    assert_size_stride(primals_317, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_318, (1536, ), (1, ))
    assert_size_stride(primals_319, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_320, (384, ), (1, ))
    assert_size_stride(primals_321, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_322, (1536, ), (1, ))
    assert_size_stride(primals_323, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_324, (384, ), (1, ))
    assert_size_stride(primals_325, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_326, (1536, ), (1, ))
    assert_size_stride(primals_327, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_328, (384, ), (1, ))
    assert_size_stride(primals_329, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_330, (1536, ), (1, ))
    assert_size_stride(primals_331, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_332, (384, ), (1, ))
    assert_size_stride(primals_333, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_334, (1536, ), (1, ))
    assert_size_stride(primals_335, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_336, (384, ), (1, ))
    assert_size_stride(primals_337, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_338, (1536, ), (1, ))
    assert_size_stride(primals_339, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_340, (384, ), (1, ))
    assert_size_stride(primals_341, (1536, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_342, (1536, ), (1, ))
    assert_size_stride(primals_343, (384, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_344, (384, ), (1, ))
    assert_size_stride(primals_345, (768, 384, 3, 3), (3456, 9, 3, 1))
    assert_size_stride(primals_346, (768, ), (1, ))
    assert_size_stride(primals_347, (3072, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_348, (3072, ), (1, ))
    assert_size_stride(primals_349, (768, 3072, 1, 1), (3072, 1, 1, 1))
    assert_size_stride(primals_350, (768, ), (1, ))
    assert_size_stride(primals_351, (3072, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_352, (3072, ), (1, ))
    assert_size_stride(primals_353, (768, 3072, 1, 1), (3072, 1, 1, 1))
    assert_size_stride(primals_354, (768, ), (1, ))
    assert_size_stride(primals_355, (3072, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_356, (3072, ), (1, ))
    assert_size_stride(primals_357, (768, 3072, 1, 1), (3072, 1, 1, 1))
    assert_size_stride(primals_358, (768, ), (1, ))
    assert_size_stride(primals_359, (3072, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_360, (3072, ), (1, ))
    assert_size_stride(primals_361, (768, 3072, 1, 1), (3072, 1, 1, 1))
    assert_size_stride(primals_362, (768, ), (1, ))
    assert_size_stride(primals_363, (3072, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_364, (3072, ), (1, ))
    assert_size_stride(primals_365, (768, 3072, 1, 1), (3072, 1, 1, 1))
    assert_size_stride(primals_366, (768, ), (1, ))
    assert_size_stride(primals_367, (3072, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_368, (3072, ), (1, ))
    assert_size_stride(primals_369, (768, 3072, 1, 1), (3072, 1, 1, 1))
    assert_size_stride(primals_370, (768, ), (1, ))
    assert_size_stride(primals_371, (1000, 768), (768, 1))
    assert_size_stride(primals_372, (1000, ), (1, ))
    assert_size_stride(primals_373, (8, 3, 224, 224), (150528, 50176, 224, 1))
    buf0 = empty_strided((96, 3, 7, 7), (147, 1, 21, 3), device='cpu', dtype=torch.float32)
    buf1 = empty_strided((192, 96, 3, 3), (864, 1, 288, 96), device='cpu', dtype=torch.float32)
    buf2 = empty_strided((384, 192, 3, 3), (1728, 1, 576, 192), device='cpu', dtype=torch.float32)
    buf3 = empty_strided((768, 384, 3, 3), (3456, 1, 1152, 384), device='cpu', dtype=torch.float32)
    buf4 = empty_strided((8, 3, 224, 224), (150528, 1, 672, 3), device='cpu', dtype=torch.float32)
    cpp_fused_0(c_void_p(primals_219.data_ptr()), c_void_p(primals_245.data_ptr()), c_void_p(primals_271.data_ptr()), c_void_p(primals_345.data_ptr()), c_void_p(primals_373.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(buf1.data_ptr()), c_void_p(buf2.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(buf4.data_ptr()))
    del primals_219
    del primals_245
    del primals_271
    del primals_345
    del primals_373
    # Source Nodes: [x], Original ATen: [aten.convolution]
    buf5 = extern_kernels.convolution(buf4, buf0, primals_220, stride=(4, 4), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf5, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_220
    buf6 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf7 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf9 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf10 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf11 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf12 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf14 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_native_group_norm_1(c_void_p(buf5.data_ptr()), c_void_p(primals_1.data_ptr()), c_void_p(primals_2.data_ptr()), c_void_p(primals_3.data_ptr()), c_void_p(primals_4.data_ptr()), c_void_p(primals_5.data_ptr()), c_void_p(buf6.data_ptr()), c_void_p(buf7.data_ptr()), c_void_p(buf9.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(buf11.data_ptr()), c_void_p(buf12.data_ptr()), c_void_p(buf14.data_ptr()))
    del primals_2
    del primals_5
    # Source Nodes: [x_5], Original ATen: [aten.convolution]
    buf15 = extern_kernels.convolution(buf14, primals_221, primals_222, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf15, (8, 384, 56, 56), (1204224, 1, 21504, 384))
    del primals_222
    buf16 = empty_strided((8, 384, 56, 56), (1204224, 1, 21504, 384), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_2(c_void_p(buf15.data_ptr()), c_void_p(buf16.data_ptr()))
    # Source Nodes: [x_9], Original ATen: [aten.convolution]
    buf17 = extern_kernels.convolution(buf16, primals_223, primals_224, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf17, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_224
    buf18 = empty((8, 96, 56, 56), device='cpu', dtype=torch.float32)
    buf19 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf20 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf22 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf23 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf24 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf25 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf27 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_3(c_void_p(buf5.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(buf9.data_ptr()), c_void_p(primals_3.data_ptr()), c_void_p(buf17.data_ptr()), c_void_p(primals_6.data_ptr()), c_void_p(primals_7.data_ptr()), c_void_p(primals_8.data_ptr()), c_void_p(primals_9.data_ptr()), c_void_p(primals_10.data_ptr()), c_void_p(primals_11.data_ptr()), c_void_p(buf18.data_ptr()), c_void_p(buf19.data_ptr()), c_void_p(buf20.data_ptr()), c_void_p(buf22.data_ptr()), c_void_p(buf23.data_ptr()), c_void_p(buf24.data_ptr()), c_void_p(buf25.data_ptr()), c_void_p(buf27.data_ptr()))
    del primals_11
    del primals_8
    # Source Nodes: [x_13], Original ATen: [aten.convolution]
    buf28 = extern_kernels.convolution(buf27, primals_225, primals_226, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf28, (8, 384, 56, 56), (1204224, 1, 21504, 384))
    del primals_226
    buf29 = empty_strided((8, 384, 56, 56), (1204224, 1, 21504, 384), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_4(c_void_p(buf28.data_ptr()), c_void_p(buf29.data_ptr()))
    # Source Nodes: [x_17], Original ATen: [aten.convolution]
    buf30 = extern_kernels.convolution(buf29, primals_227, primals_228, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf30, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_228
    buf31 = empty((8, 96, 56, 56), device='cpu', dtype=torch.float32)
    buf32 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf33 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf35 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf36 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf37 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf38 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf40 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_5(c_void_p(buf18.data_ptr()), c_void_p(buf23.data_ptr()), c_void_p(buf22.data_ptr()), c_void_p(primals_9.data_ptr()), c_void_p(buf30.data_ptr()), c_void_p(primals_12.data_ptr()), c_void_p(primals_13.data_ptr()), c_void_p(primals_14.data_ptr()), c_void_p(primals_15.data_ptr()), c_void_p(primals_16.data_ptr()), c_void_p(primals_17.data_ptr()), c_void_p(buf31.data_ptr()), c_void_p(buf32.data_ptr()), c_void_p(buf33.data_ptr()), c_void_p(buf35.data_ptr()), c_void_p(buf36.data_ptr()), c_void_p(buf37.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(buf40.data_ptr()))
    del primals_14
    del primals_17
    # Source Nodes: [x_21], Original ATen: [aten.convolution]
    buf41 = extern_kernels.convolution(buf40, primals_229, primals_230, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf41, (8, 384, 56, 56), (1204224, 1, 21504, 384))
    del primals_230
    buf42 = empty_strided((8, 384, 56, 56), (1204224, 1, 21504, 384), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_6(c_void_p(buf41.data_ptr()), c_void_p(buf42.data_ptr()))
    # Source Nodes: [x_25], Original ATen: [aten.convolution]
    buf43 = extern_kernels.convolution(buf42, primals_231, primals_232, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf43, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_232
    buf44 = buf18; del buf18  # reuse
    buf45 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf46 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf48 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf49 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf50 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf51 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf53 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_7(c_void_p(buf31.data_ptr()), c_void_p(buf36.data_ptr()), c_void_p(buf35.data_ptr()), c_void_p(primals_15.data_ptr()), c_void_p(buf43.data_ptr()), c_void_p(primals_18.data_ptr()), c_void_p(primals_19.data_ptr()), c_void_p(primals_20.data_ptr()), c_void_p(primals_21.data_ptr()), c_void_p(primals_22.data_ptr()), c_void_p(primals_23.data_ptr()), c_void_p(buf44.data_ptr()), c_void_p(buf45.data_ptr()), c_void_p(buf46.data_ptr()), c_void_p(buf48.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(buf50.data_ptr()), c_void_p(buf51.data_ptr()), c_void_p(buf53.data_ptr()))
    del primals_20
    del primals_23
    # Source Nodes: [x_29], Original ATen: [aten.convolution]
    buf54 = extern_kernels.convolution(buf53, primals_233, primals_234, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf54, (8, 384, 56, 56), (1204224, 1, 21504, 384))
    del primals_234
    buf55 = empty_strided((8, 384, 56, 56), (1204224, 1, 21504, 384), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_8(c_void_p(buf54.data_ptr()), c_void_p(buf55.data_ptr()))
    # Source Nodes: [x_33], Original ATen: [aten.convolution]
    buf56 = extern_kernels.convolution(buf55, primals_235, primals_236, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf56, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_236
    buf57 = buf31; del buf31  # reuse
    buf58 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf59 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf61 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf62 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf63 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf64 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf66 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_9(c_void_p(buf44.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(buf48.data_ptr()), c_void_p(primals_21.data_ptr()), c_void_p(buf56.data_ptr()), c_void_p(primals_24.data_ptr()), c_void_p(primals_25.data_ptr()), c_void_p(primals_26.data_ptr()), c_void_p(primals_27.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(primals_29.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(buf58.data_ptr()), c_void_p(buf59.data_ptr()), c_void_p(buf61.data_ptr()), c_void_p(buf62.data_ptr()), c_void_p(buf63.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf66.data_ptr()))
    del primals_26
    del primals_29
    # Source Nodes: [x_37], Original ATen: [aten.convolution]
    buf67 = extern_kernels.convolution(buf66, primals_237, primals_238, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf67, (8, 384, 56, 56), (1204224, 1, 21504, 384))
    del primals_238
    buf68 = empty_strided((8, 384, 56, 56), (1204224, 1, 21504, 384), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_10(c_void_p(buf67.data_ptr()), c_void_p(buf68.data_ptr()))
    # Source Nodes: [x_41], Original ATen: [aten.convolution]
    buf69 = extern_kernels.convolution(buf68, primals_239, primals_240, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf69, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_240
    buf70 = buf44; del buf44  # reuse
    buf71 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf72 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf74 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf75 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    buf76 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf77 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf79 = empty_strided((8, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_11(c_void_p(buf57.data_ptr()), c_void_p(buf62.data_ptr()), c_void_p(buf61.data_ptr()), c_void_p(primals_27.data_ptr()), c_void_p(buf69.data_ptr()), c_void_p(primals_30.data_ptr()), c_void_p(primals_31.data_ptr()), c_void_p(primals_32.data_ptr()), c_void_p(primals_33.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(primals_35.data_ptr()), c_void_p(buf70.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(buf72.data_ptr()), c_void_p(buf74.data_ptr()), c_void_p(buf75.data_ptr()), c_void_p(buf76.data_ptr()), c_void_p(buf77.data_ptr()), c_void_p(buf79.data_ptr()))
    del primals_32
    del primals_35
    # Source Nodes: [x_45], Original ATen: [aten.convolution]
    buf80 = extern_kernels.convolution(buf79, primals_241, primals_242, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf80, (8, 384, 56, 56), (1204224, 1, 21504, 384))
    del primals_242
    buf81 = empty_strided((8, 384, 56, 56), (1204224, 1, 21504, 384), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_12(c_void_p(buf80.data_ptr()), c_void_p(buf81.data_ptr()))
    # Source Nodes: [x_49], Original ATen: [aten.convolution]
    buf82 = extern_kernels.convolution(buf81, primals_243, primals_244, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf82, (8, 96, 56, 56), (301056, 1, 5376, 96))
    del primals_244
    buf83 = reinterpret_tensor(buf57, (8, 96, 56, 56), (301056, 1, 5376, 96), 0); del buf57  # reuse
    cpp_fused_add_mul_sub_13(c_void_p(buf70.data_ptr()), c_void_p(buf75.data_ptr()), c_void_p(buf74.data_ptr()), c_void_p(primals_33.data_ptr()), c_void_p(buf82.data_ptr()), c_void_p(primals_36.data_ptr()), c_void_p(buf83.data_ptr()))
    # Source Nodes: [x_55], Original ATen: [aten.convolution]
    buf84 = extern_kernels.convolution(buf83, buf1, primals_246, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf84, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_246
    buf85 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf86 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf88 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf89 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf90 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf91 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf93 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_native_group_norm_14(c_void_p(buf84.data_ptr()), c_void_p(primals_37.data_ptr()), c_void_p(primals_38.data_ptr()), c_void_p(primals_39.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(primals_41.data_ptr()), c_void_p(buf85.data_ptr()), c_void_p(buf86.data_ptr()), c_void_p(buf88.data_ptr()), c_void_p(buf89.data_ptr()), c_void_p(buf90.data_ptr()), c_void_p(buf91.data_ptr()), c_void_p(buf93.data_ptr()))
    del primals_38
    del primals_41
    # Source Nodes: [x_57], Original ATen: [aten.convolution]
    buf94 = extern_kernels.convolution(buf93, primals_247, primals_248, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf94, (8, 768, 28, 28), (602112, 1, 21504, 768))
    del primals_248
    buf95 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_15(c_void_p(buf94.data_ptr()), c_void_p(buf95.data_ptr()))
    # Source Nodes: [x_61], Original ATen: [aten.convolution]
    buf96 = extern_kernels.convolution(buf95, primals_249, primals_250, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf96, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_250
    buf97 = empty((8, 192, 28, 28), device='cpu', dtype=torch.float32)
    buf98 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf99 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf101 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf102 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf103 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf104 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf106 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_16(c_void_p(buf84.data_ptr()), c_void_p(buf89.data_ptr()), c_void_p(buf88.data_ptr()), c_void_p(primals_39.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(primals_42.data_ptr()), c_void_p(primals_43.data_ptr()), c_void_p(primals_44.data_ptr()), c_void_p(primals_45.data_ptr()), c_void_p(primals_46.data_ptr()), c_void_p(primals_47.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(buf98.data_ptr()), c_void_p(buf99.data_ptr()), c_void_p(buf101.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(buf103.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(buf106.data_ptr()))
    del primals_44
    del primals_47
    # Source Nodes: [x_65], Original ATen: [aten.convolution]
    buf107 = extern_kernels.convolution(buf106, primals_251, primals_252, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf107, (8, 768, 28, 28), (602112, 1, 21504, 768))
    del primals_252
    buf108 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_17(c_void_p(buf107.data_ptr()), c_void_p(buf108.data_ptr()))
    # Source Nodes: [x_69], Original ATen: [aten.convolution]
    buf109 = extern_kernels.convolution(buf108, primals_253, primals_254, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf109, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_254
    buf110 = empty((8, 192, 28, 28), device='cpu', dtype=torch.float32)
    buf111 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf112 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf114 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf115 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf116 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf117 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf119 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_18(c_void_p(buf97.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(buf101.data_ptr()), c_void_p(primals_45.data_ptr()), c_void_p(buf109.data_ptr()), c_void_p(primals_48.data_ptr()), c_void_p(primals_49.data_ptr()), c_void_p(primals_50.data_ptr()), c_void_p(primals_51.data_ptr()), c_void_p(primals_52.data_ptr()), c_void_p(primals_53.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(buf112.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(buf115.data_ptr()), c_void_p(buf116.data_ptr()), c_void_p(buf117.data_ptr()), c_void_p(buf119.data_ptr()))
    del primals_50
    del primals_53
    # Source Nodes: [x_73], Original ATen: [aten.convolution]
    buf120 = extern_kernels.convolution(buf119, primals_255, primals_256, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf120, (8, 768, 28, 28), (602112, 1, 21504, 768))
    del primals_256
    buf121 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_19(c_void_p(buf120.data_ptr()), c_void_p(buf121.data_ptr()))
    # Source Nodes: [x_77], Original ATen: [aten.convolution]
    buf122 = extern_kernels.convolution(buf121, primals_257, primals_258, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf122, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_258
    buf123 = buf97; del buf97  # reuse
    buf124 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf125 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf127 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf128 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf129 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf130 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf132 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_20(c_void_p(buf110.data_ptr()), c_void_p(buf115.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(primals_51.data_ptr()), c_void_p(buf122.data_ptr()), c_void_p(primals_54.data_ptr()), c_void_p(primals_55.data_ptr()), c_void_p(primals_56.data_ptr()), c_void_p(primals_57.data_ptr()), c_void_p(primals_58.data_ptr()), c_void_p(primals_59.data_ptr()), c_void_p(buf123.data_ptr()), c_void_p(buf124.data_ptr()), c_void_p(buf125.data_ptr()), c_void_p(buf127.data_ptr()), c_void_p(buf128.data_ptr()), c_void_p(buf129.data_ptr()), c_void_p(buf130.data_ptr()), c_void_p(buf132.data_ptr()))
    del primals_56
    del primals_59
    # Source Nodes: [x_81], Original ATen: [aten.convolution]
    buf133 = extern_kernels.convolution(buf132, primals_259, primals_260, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf133, (8, 768, 28, 28), (602112, 1, 21504, 768))
    del primals_260
    buf134 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_21(c_void_p(buf133.data_ptr()), c_void_p(buf134.data_ptr()))
    # Source Nodes: [x_85], Original ATen: [aten.convolution]
    buf135 = extern_kernels.convolution(buf134, primals_261, primals_262, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf135, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_262
    buf136 = buf110; del buf110  # reuse
    buf137 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf138 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf140 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf141 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf142 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf143 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf145 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_22(c_void_p(buf123.data_ptr()), c_void_p(buf128.data_ptr()), c_void_p(buf127.data_ptr()), c_void_p(primals_57.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_60.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(primals_62.data_ptr()), c_void_p(primals_63.data_ptr()), c_void_p(primals_64.data_ptr()), c_void_p(primals_65.data_ptr()), c_void_p(buf136.data_ptr()), c_void_p(buf137.data_ptr()), c_void_p(buf138.data_ptr()), c_void_p(buf140.data_ptr()), c_void_p(buf141.data_ptr()), c_void_p(buf142.data_ptr()), c_void_p(buf143.data_ptr()), c_void_p(buf145.data_ptr()))
    del primals_62
    del primals_65
    # Source Nodes: [x_89], Original ATen: [aten.convolution]
    buf146 = extern_kernels.convolution(buf145, primals_263, primals_264, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf146, (8, 768, 28, 28), (602112, 1, 21504, 768))
    del primals_264
    buf147 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_23(c_void_p(buf146.data_ptr()), c_void_p(buf147.data_ptr()))
    # Source Nodes: [x_93], Original ATen: [aten.convolution]
    buf148 = extern_kernels.convolution(buf147, primals_265, primals_266, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf148, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_266
    buf149 = buf123; del buf123  # reuse
    buf150 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf151 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf153 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf154 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    buf155 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf156 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf158 = empty_strided((8, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_24(c_void_p(buf136.data_ptr()), c_void_p(buf141.data_ptr()), c_void_p(buf140.data_ptr()), c_void_p(primals_63.data_ptr()), c_void_p(buf148.data_ptr()), c_void_p(primals_66.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(primals_68.data_ptr()), c_void_p(primals_69.data_ptr()), c_void_p(primals_70.data_ptr()), c_void_p(primals_71.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(buf151.data_ptr()), c_void_p(buf153.data_ptr()), c_void_p(buf154.data_ptr()), c_void_p(buf155.data_ptr()), c_void_p(buf156.data_ptr()), c_void_p(buf158.data_ptr()))
    del primals_68
    del primals_71
    # Source Nodes: [x_97], Original ATen: [aten.convolution]
    buf159 = extern_kernels.convolution(buf158, primals_267, primals_268, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf159, (8, 768, 28, 28), (602112, 1, 21504, 768))
    del primals_268
    buf160 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_25(c_void_p(buf159.data_ptr()), c_void_p(buf160.data_ptr()))
    # Source Nodes: [x_101], Original ATen: [aten.convolution]
    buf161 = extern_kernels.convolution(buf160, primals_269, primals_270, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf161, (8, 192, 28, 28), (150528, 1, 5376, 192))
    del primals_270
    buf162 = reinterpret_tensor(buf136, (8, 192, 28, 28), (150528, 1, 5376, 192), 0); del buf136  # reuse
    cpp_fused_add_mul_sub_26(c_void_p(buf149.data_ptr()), c_void_p(buf154.data_ptr()), c_void_p(buf153.data_ptr()), c_void_p(primals_69.data_ptr()), c_void_p(buf161.data_ptr()), c_void_p(primals_72.data_ptr()), c_void_p(buf162.data_ptr()))
    # Source Nodes: [x_107], Original ATen: [aten.convolution]
    buf163 = extern_kernels.convolution(buf162, buf2, primals_272, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf163, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_272
    buf164 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf165 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf167 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf168 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf169 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf170 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf172 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_native_group_norm_27(c_void_p(buf163.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(primals_74.data_ptr()), c_void_p(primals_75.data_ptr()), c_void_p(primals_76.data_ptr()), c_void_p(primals_77.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(buf165.data_ptr()), c_void_p(buf167.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(buf169.data_ptr()), c_void_p(buf170.data_ptr()), c_void_p(buf172.data_ptr()))
    del primals_74
    del primals_77
    # Source Nodes: [x_109], Original ATen: [aten.convolution]
    buf173 = extern_kernels.convolution(buf172, primals_273, primals_274, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf173, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_274
    buf174 = reinterpret_tensor(buf70, (8, 1536, 14, 14), (301056, 1, 21504, 1536), 0); del buf70  # reuse
    cpp_fused_gelu_28(c_void_p(buf173.data_ptr()), c_void_p(buf174.data_ptr()))
    # Source Nodes: [x_113], Original ATen: [aten.convolution]
    buf175 = extern_kernels.convolution(buf174, primals_275, primals_276, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf175, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_276
    buf176 = empty((8, 384, 14, 14), device='cpu', dtype=torch.float32)
    buf177 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf178 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf180 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf181 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf182 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf183 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf185 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_29(c_void_p(buf163.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(buf167.data_ptr()), c_void_p(primals_75.data_ptr()), c_void_p(buf175.data_ptr()), c_void_p(primals_78.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(primals_80.data_ptr()), c_void_p(primals_81.data_ptr()), c_void_p(primals_82.data_ptr()), c_void_p(primals_83.data_ptr()), c_void_p(buf176.data_ptr()), c_void_p(buf177.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(buf180.data_ptr()), c_void_p(buf181.data_ptr()), c_void_p(buf182.data_ptr()), c_void_p(buf183.data_ptr()), c_void_p(buf185.data_ptr()))
    del primals_80
    del primals_83
    # Source Nodes: [x_117], Original ATen: [aten.convolution]
    buf186 = extern_kernels.convolution(buf185, primals_277, primals_278, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf186, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_278
    buf187 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_30(c_void_p(buf186.data_ptr()), c_void_p(buf187.data_ptr()))
    # Source Nodes: [x_121], Original ATen: [aten.convolution]
    buf188 = extern_kernels.convolution(buf187, primals_279, primals_280, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf188, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_280
    buf189 = empty((8, 384, 14, 14), device='cpu', dtype=torch.float32)
    buf190 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf191 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf193 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf194 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf195 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf196 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf198 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_31(c_void_p(buf176.data_ptr()), c_void_p(buf181.data_ptr()), c_void_p(buf180.data_ptr()), c_void_p(primals_81.data_ptr()), c_void_p(buf188.data_ptr()), c_void_p(primals_84.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(primals_86.data_ptr()), c_void_p(primals_87.data_ptr()), c_void_p(primals_88.data_ptr()), c_void_p(primals_89.data_ptr()), c_void_p(buf189.data_ptr()), c_void_p(buf190.data_ptr()), c_void_p(buf191.data_ptr()), c_void_p(buf193.data_ptr()), c_void_p(buf194.data_ptr()), c_void_p(buf195.data_ptr()), c_void_p(buf196.data_ptr()), c_void_p(buf198.data_ptr()))
    del primals_86
    del primals_89
    # Source Nodes: [x_125], Original ATen: [aten.convolution]
    buf199 = extern_kernels.convolution(buf198, primals_281, primals_282, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf199, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_282
    buf200 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_32(c_void_p(buf199.data_ptr()), c_void_p(buf200.data_ptr()))
    # Source Nodes: [x_129], Original ATen: [aten.convolution]
    buf201 = extern_kernels.convolution(buf200, primals_283, primals_284, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf201, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_284
    buf202 = buf176; del buf176  # reuse
    buf203 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf204 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf206 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf207 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf208 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf209 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf211 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_33(c_void_p(buf189.data_ptr()), c_void_p(buf194.data_ptr()), c_void_p(buf193.data_ptr()), c_void_p(primals_87.data_ptr()), c_void_p(buf201.data_ptr()), c_void_p(primals_90.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(primals_92.data_ptr()), c_void_p(primals_93.data_ptr()), c_void_p(primals_94.data_ptr()), c_void_p(primals_95.data_ptr()), c_void_p(buf202.data_ptr()), c_void_p(buf203.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(buf206.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(buf208.data_ptr()), c_void_p(buf209.data_ptr()), c_void_p(buf211.data_ptr()))
    del primals_92
    del primals_95
    # Source Nodes: [x_133], Original ATen: [aten.convolution]
    buf212 = extern_kernels.convolution(buf211, primals_285, primals_286, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf212, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_286
    buf213 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_34(c_void_p(buf212.data_ptr()), c_void_p(buf213.data_ptr()))
    # Source Nodes: [x_137], Original ATen: [aten.convolution]
    buf214 = extern_kernels.convolution(buf213, primals_287, primals_288, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf214, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_288
    buf215 = buf189; del buf189  # reuse
    buf216 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf217 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf219 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf220 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf221 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf222 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf224 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_35(c_void_p(buf202.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(buf206.data_ptr()), c_void_p(primals_93.data_ptr()), c_void_p(buf214.data_ptr()), c_void_p(primals_96.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(primals_98.data_ptr()), c_void_p(primals_99.data_ptr()), c_void_p(primals_100.data_ptr()), c_void_p(primals_101.data_ptr()), c_void_p(buf215.data_ptr()), c_void_p(buf216.data_ptr()), c_void_p(buf217.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(buf220.data_ptr()), c_void_p(buf221.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(buf224.data_ptr()))
    del primals_101
    del primals_98
    # Source Nodes: [x_141], Original ATen: [aten.convolution]
    buf225 = extern_kernels.convolution(buf224, primals_289, primals_290, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf225, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_290
    buf226 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_36(c_void_p(buf225.data_ptr()), c_void_p(buf226.data_ptr()))
    # Source Nodes: [x_145], Original ATen: [aten.convolution]
    buf227 = extern_kernels.convolution(buf226, primals_291, primals_292, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf227, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_292
    buf228 = buf202; del buf202  # reuse
    buf229 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf230 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf232 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf233 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf234 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf235 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf237 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_37(c_void_p(buf215.data_ptr()), c_void_p(buf220.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_99.data_ptr()), c_void_p(buf227.data_ptr()), c_void_p(primals_102.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(primals_104.data_ptr()), c_void_p(primals_105.data_ptr()), c_void_p(primals_106.data_ptr()), c_void_p(primals_107.data_ptr()), c_void_p(buf228.data_ptr()), c_void_p(buf229.data_ptr()), c_void_p(buf230.data_ptr()), c_void_p(buf232.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(buf234.data_ptr()), c_void_p(buf235.data_ptr()), c_void_p(buf237.data_ptr()))
    del primals_104
    del primals_107
    # Source Nodes: [x_149], Original ATen: [aten.convolution]
    buf238 = extern_kernels.convolution(buf237, primals_293, primals_294, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf238, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_294
    buf239 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_38(c_void_p(buf238.data_ptr()), c_void_p(buf239.data_ptr()))
    # Source Nodes: [x_153], Original ATen: [aten.convolution]
    buf240 = extern_kernels.convolution(buf239, primals_295, primals_296, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf240, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_296
    buf241 = buf215; del buf215  # reuse
    buf242 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf243 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf245 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf246 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf247 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf248 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf250 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_39(c_void_p(buf228.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(buf232.data_ptr()), c_void_p(primals_105.data_ptr()), c_void_p(buf240.data_ptr()), c_void_p(primals_108.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(primals_110.data_ptr()), c_void_p(primals_111.data_ptr()), c_void_p(primals_112.data_ptr()), c_void_p(primals_113.data_ptr()), c_void_p(buf241.data_ptr()), c_void_p(buf242.data_ptr()), c_void_p(buf243.data_ptr()), c_void_p(buf245.data_ptr()), c_void_p(buf246.data_ptr()), c_void_p(buf247.data_ptr()), c_void_p(buf248.data_ptr()), c_void_p(buf250.data_ptr()))
    del primals_110
    del primals_113
    # Source Nodes: [x_157], Original ATen: [aten.convolution]
    buf251 = extern_kernels.convolution(buf250, primals_297, primals_298, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf251, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_298
    buf252 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_40(c_void_p(buf251.data_ptr()), c_void_p(buf252.data_ptr()))
    # Source Nodes: [x_161], Original ATen: [aten.convolution]
    buf253 = extern_kernels.convolution(buf252, primals_299, primals_300, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf253, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_300
    buf254 = buf228; del buf228  # reuse
    buf255 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf256 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf258 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf259 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf260 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf261 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf263 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_41(c_void_p(buf241.data_ptr()), c_void_p(buf246.data_ptr()), c_void_p(buf245.data_ptr()), c_void_p(primals_111.data_ptr()), c_void_p(buf253.data_ptr()), c_void_p(primals_114.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(primals_116.data_ptr()), c_void_p(primals_117.data_ptr()), c_void_p(primals_118.data_ptr()), c_void_p(primals_119.data_ptr()), c_void_p(buf254.data_ptr()), c_void_p(buf255.data_ptr()), c_void_p(buf256.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(buf259.data_ptr()), c_void_p(buf260.data_ptr()), c_void_p(buf261.data_ptr()), c_void_p(buf263.data_ptr()))
    del primals_116
    del primals_119
    # Source Nodes: [x_165], Original ATen: [aten.convolution]
    buf264 = extern_kernels.convolution(buf263, primals_301, primals_302, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf264, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_302
    buf265 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_42(c_void_p(buf264.data_ptr()), c_void_p(buf265.data_ptr()))
    # Source Nodes: [x_169], Original ATen: [aten.convolution]
    buf266 = extern_kernels.convolution(buf265, primals_303, primals_304, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf266, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_304
    buf267 = buf241; del buf241  # reuse
    buf268 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf269 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf271 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf272 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf273 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf274 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf276 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_43(c_void_p(buf254.data_ptr()), c_void_p(buf259.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(primals_117.data_ptr()), c_void_p(buf266.data_ptr()), c_void_p(primals_120.data_ptr()), c_void_p(primals_121.data_ptr()), c_void_p(primals_122.data_ptr()), c_void_p(primals_123.data_ptr()), c_void_p(primals_124.data_ptr()), c_void_p(primals_125.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(buf268.data_ptr()), c_void_p(buf269.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(buf272.data_ptr()), c_void_p(buf273.data_ptr()), c_void_p(buf274.data_ptr()), c_void_p(buf276.data_ptr()))
    del primals_122
    del primals_125
    # Source Nodes: [x_173], Original ATen: [aten.convolution]
    buf277 = extern_kernels.convolution(buf276, primals_305, primals_306, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf277, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_306
    buf278 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_44(c_void_p(buf277.data_ptr()), c_void_p(buf278.data_ptr()))
    # Source Nodes: [x_177], Original ATen: [aten.convolution]
    buf279 = extern_kernels.convolution(buf278, primals_307, primals_308, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf279, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_308
    buf280 = buf254; del buf254  # reuse
    buf281 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf282 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf284 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf285 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf286 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf287 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf289 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_45(c_void_p(buf267.data_ptr()), c_void_p(buf272.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(primals_123.data_ptr()), c_void_p(buf279.data_ptr()), c_void_p(primals_126.data_ptr()), c_void_p(primals_127.data_ptr()), c_void_p(primals_128.data_ptr()), c_void_p(primals_129.data_ptr()), c_void_p(primals_130.data_ptr()), c_void_p(primals_131.data_ptr()), c_void_p(buf280.data_ptr()), c_void_p(buf281.data_ptr()), c_void_p(buf282.data_ptr()), c_void_p(buf284.data_ptr()), c_void_p(buf285.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(buf287.data_ptr()), c_void_p(buf289.data_ptr()))
    del primals_128
    del primals_131
    # Source Nodes: [x_181], Original ATen: [aten.convolution]
    buf290 = extern_kernels.convolution(buf289, primals_309, primals_310, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf290, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_310
    buf291 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_46(c_void_p(buf290.data_ptr()), c_void_p(buf291.data_ptr()))
    # Source Nodes: [x_185], Original ATen: [aten.convolution]
    buf292 = extern_kernels.convolution(buf291, primals_311, primals_312, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf292, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_312
    buf293 = buf267; del buf267  # reuse
    buf294 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf295 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf297 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf298 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf299 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf300 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf302 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_47(c_void_p(buf280.data_ptr()), c_void_p(buf285.data_ptr()), c_void_p(buf284.data_ptr()), c_void_p(primals_129.data_ptr()), c_void_p(buf292.data_ptr()), c_void_p(primals_132.data_ptr()), c_void_p(primals_133.data_ptr()), c_void_p(primals_134.data_ptr()), c_void_p(primals_135.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(primals_137.data_ptr()), c_void_p(buf293.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(buf295.data_ptr()), c_void_p(buf297.data_ptr()), c_void_p(buf298.data_ptr()), c_void_p(buf299.data_ptr()), c_void_p(buf300.data_ptr()), c_void_p(buf302.data_ptr()))
    del primals_134
    del primals_137
    # Source Nodes: [x_189], Original ATen: [aten.convolution]
    buf303 = extern_kernels.convolution(buf302, primals_313, primals_314, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf303, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_314
    buf304 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_48(c_void_p(buf303.data_ptr()), c_void_p(buf304.data_ptr()))
    # Source Nodes: [x_193], Original ATen: [aten.convolution]
    buf305 = extern_kernels.convolution(buf304, primals_315, primals_316, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf305, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_316
    buf306 = buf280; del buf280  # reuse
    buf307 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf308 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf310 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf311 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf312 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf313 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf315 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_49(c_void_p(buf293.data_ptr()), c_void_p(buf298.data_ptr()), c_void_p(buf297.data_ptr()), c_void_p(primals_135.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(primals_138.data_ptr()), c_void_p(primals_139.data_ptr()), c_void_p(primals_140.data_ptr()), c_void_p(primals_141.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(primals_143.data_ptr()), c_void_p(buf306.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(buf308.data_ptr()), c_void_p(buf310.data_ptr()), c_void_p(buf311.data_ptr()), c_void_p(buf312.data_ptr()), c_void_p(buf313.data_ptr()), c_void_p(buf315.data_ptr()))
    del primals_140
    del primals_143
    # Source Nodes: [x_197], Original ATen: [aten.convolution]
    buf316 = extern_kernels.convolution(buf315, primals_317, primals_318, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf316, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_318
    buf317 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_50(c_void_p(buf316.data_ptr()), c_void_p(buf317.data_ptr()))
    # Source Nodes: [x_201], Original ATen: [aten.convolution]
    buf318 = extern_kernels.convolution(buf317, primals_319, primals_320, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf318, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_320
    buf319 = buf293; del buf293  # reuse
    buf320 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf321 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf323 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf324 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf325 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf326 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf328 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_51(c_void_p(buf306.data_ptr()), c_void_p(buf311.data_ptr()), c_void_p(buf310.data_ptr()), c_void_p(primals_141.data_ptr()), c_void_p(buf318.data_ptr()), c_void_p(primals_144.data_ptr()), c_void_p(primals_145.data_ptr()), c_void_p(primals_146.data_ptr()), c_void_p(primals_147.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(primals_149.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(buf320.data_ptr()), c_void_p(buf321.data_ptr()), c_void_p(buf323.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf325.data_ptr()), c_void_p(buf326.data_ptr()), c_void_p(buf328.data_ptr()))
    del primals_146
    del primals_149
    # Source Nodes: [x_205], Original ATen: [aten.convolution]
    buf329 = extern_kernels.convolution(buf328, primals_321, primals_322, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf329, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_322
    buf330 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_52(c_void_p(buf329.data_ptr()), c_void_p(buf330.data_ptr()))
    # Source Nodes: [x_209], Original ATen: [aten.convolution]
    buf331 = extern_kernels.convolution(buf330, primals_323, primals_324, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf331, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_324
    buf332 = buf306; del buf306  # reuse
    buf333 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf334 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf336 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf337 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf338 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf339 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf341 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_53(c_void_p(buf319.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf323.data_ptr()), c_void_p(primals_147.data_ptr()), c_void_p(buf331.data_ptr()), c_void_p(primals_150.data_ptr()), c_void_p(primals_151.data_ptr()), c_void_p(primals_152.data_ptr()), c_void_p(primals_153.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(primals_155.data_ptr()), c_void_p(buf332.data_ptr()), c_void_p(buf333.data_ptr()), c_void_p(buf334.data_ptr()), c_void_p(buf336.data_ptr()), c_void_p(buf337.data_ptr()), c_void_p(buf338.data_ptr()), c_void_p(buf339.data_ptr()), c_void_p(buf341.data_ptr()))
    del primals_152
    del primals_155
    # Source Nodes: [x_213], Original ATen: [aten.convolution]
    buf342 = extern_kernels.convolution(buf341, primals_325, primals_326, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf342, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_326
    buf343 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_54(c_void_p(buf342.data_ptr()), c_void_p(buf343.data_ptr()))
    # Source Nodes: [x_217], Original ATen: [aten.convolution]
    buf344 = extern_kernels.convolution(buf343, primals_327, primals_328, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf344, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_328
    buf345 = buf319; del buf319  # reuse
    buf346 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf347 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf349 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf350 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf351 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf352 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf354 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_55(c_void_p(buf332.data_ptr()), c_void_p(buf337.data_ptr()), c_void_p(buf336.data_ptr()), c_void_p(primals_153.data_ptr()), c_void_p(buf344.data_ptr()), c_void_p(primals_156.data_ptr()), c_void_p(primals_157.data_ptr()), c_void_p(primals_158.data_ptr()), c_void_p(primals_159.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(primals_161.data_ptr()), c_void_p(buf345.data_ptr()), c_void_p(buf346.data_ptr()), c_void_p(buf347.data_ptr()), c_void_p(buf349.data_ptr()), c_void_p(buf350.data_ptr()), c_void_p(buf351.data_ptr()), c_void_p(buf352.data_ptr()), c_void_p(buf354.data_ptr()))
    del primals_158
    del primals_161
    # Source Nodes: [x_221], Original ATen: [aten.convolution]
    buf355 = extern_kernels.convolution(buf354, primals_329, primals_330, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf355, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_330
    buf356 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_56(c_void_p(buf355.data_ptr()), c_void_p(buf356.data_ptr()))
    # Source Nodes: [x_225], Original ATen: [aten.convolution]
    buf357 = extern_kernels.convolution(buf356, primals_331, primals_332, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf357, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_332
    buf358 = buf332; del buf332  # reuse
    buf359 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf360 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf362 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf363 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf364 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf365 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf367 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_57(c_void_p(buf345.data_ptr()), c_void_p(buf350.data_ptr()), c_void_p(buf349.data_ptr()), c_void_p(primals_159.data_ptr()), c_void_p(buf357.data_ptr()), c_void_p(primals_162.data_ptr()), c_void_p(primals_163.data_ptr()), c_void_p(primals_164.data_ptr()), c_void_p(primals_165.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(primals_167.data_ptr()), c_void_p(buf358.data_ptr()), c_void_p(buf359.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(buf362.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(buf365.data_ptr()), c_void_p(buf367.data_ptr()))
    del primals_164
    del primals_167
    # Source Nodes: [x_229], Original ATen: [aten.convolution]
    buf368 = extern_kernels.convolution(buf367, primals_333, primals_334, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf368, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_334
    buf369 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_58(c_void_p(buf368.data_ptr()), c_void_p(buf369.data_ptr()))
    # Source Nodes: [x_233], Original ATen: [aten.convolution]
    buf370 = extern_kernels.convolution(buf369, primals_335, primals_336, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf370, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_336
    buf371 = buf345; del buf345  # reuse
    buf372 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf373 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf375 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf376 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf377 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf378 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf380 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_59(c_void_p(buf358.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf362.data_ptr()), c_void_p(primals_165.data_ptr()), c_void_p(buf370.data_ptr()), c_void_p(primals_168.data_ptr()), c_void_p(primals_169.data_ptr()), c_void_p(primals_170.data_ptr()), c_void_p(primals_171.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(primals_173.data_ptr()), c_void_p(buf371.data_ptr()), c_void_p(buf372.data_ptr()), c_void_p(buf373.data_ptr()), c_void_p(buf375.data_ptr()), c_void_p(buf376.data_ptr()), c_void_p(buf377.data_ptr()), c_void_p(buf378.data_ptr()), c_void_p(buf380.data_ptr()))
    del primals_170
    del primals_173
    # Source Nodes: [x_237], Original ATen: [aten.convolution]
    buf381 = extern_kernels.convolution(buf380, primals_337, primals_338, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf381, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_338
    buf382 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_60(c_void_p(buf381.data_ptr()), c_void_p(buf382.data_ptr()))
    # Source Nodes: [x_241], Original ATen: [aten.convolution]
    buf383 = extern_kernels.convolution(buf382, primals_339, primals_340, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf383, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_340
    buf384 = buf358; del buf358  # reuse
    buf385 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf386 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf388 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf389 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    buf390 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf391 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf393 = empty_strided((8, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_61(c_void_p(buf371.data_ptr()), c_void_p(buf376.data_ptr()), c_void_p(buf375.data_ptr()), c_void_p(primals_171.data_ptr()), c_void_p(buf383.data_ptr()), c_void_p(primals_174.data_ptr()), c_void_p(primals_175.data_ptr()), c_void_p(primals_176.data_ptr()), c_void_p(primals_177.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(primals_179.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf385.data_ptr()), c_void_p(buf386.data_ptr()), c_void_p(buf388.data_ptr()), c_void_p(buf389.data_ptr()), c_void_p(buf390.data_ptr()), c_void_p(buf391.data_ptr()), c_void_p(buf393.data_ptr()))
    del primals_176
    del primals_179
    # Source Nodes: [x_245], Original ATen: [aten.convolution]
    buf394 = extern_kernels.convolution(buf393, primals_341, primals_342, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf394, (8, 1536, 14, 14), (301056, 1, 21504, 1536))
    del primals_342
    buf395 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_62(c_void_p(buf394.data_ptr()), c_void_p(buf395.data_ptr()))
    # Source Nodes: [x_249], Original ATen: [aten.convolution]
    buf396 = extern_kernels.convolution(buf395, primals_343, primals_344, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf396, (8, 384, 14, 14), (75264, 1, 5376, 384))
    del primals_344
    buf397 = reinterpret_tensor(buf371, (8, 384, 14, 14), (75264, 1, 5376, 384), 0); del buf371  # reuse
    cpp_fused_add_mul_sub_63(c_void_p(buf384.data_ptr()), c_void_p(buf389.data_ptr()), c_void_p(buf388.data_ptr()), c_void_p(primals_177.data_ptr()), c_void_p(buf396.data_ptr()), c_void_p(primals_180.data_ptr()), c_void_p(buf397.data_ptr()))
    del buf384
    # Source Nodes: [x_255], Original ATen: [aten.convolution]
    buf398 = extern_kernels.convolution(buf397, buf3, primals_346, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf398, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_346
    buf399 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf400 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf402 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf403 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf404 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf405 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf407 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_native_group_norm_64(c_void_p(buf398.data_ptr()), c_void_p(primals_181.data_ptr()), c_void_p(primals_182.data_ptr()), c_void_p(primals_183.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(primals_185.data_ptr()), c_void_p(buf399.data_ptr()), c_void_p(buf400.data_ptr()), c_void_p(buf402.data_ptr()), c_void_p(buf403.data_ptr()), c_void_p(buf404.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(buf407.data_ptr()))
    del primals_182
    del primals_185
    # Source Nodes: [x_257], Original ATen: [aten.convolution]
    buf408 = extern_kernels.convolution(buf407, primals_347, primals_348, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf408, (8, 3072, 7, 7), (150528, 1, 21504, 3072))
    del primals_348
    buf409 = reinterpret_tensor(buf149, (8, 3072, 7, 7), (150528, 1, 21504, 3072), 0); del buf149  # reuse
    cpp_fused_gelu_65(c_void_p(buf408.data_ptr()), c_void_p(buf409.data_ptr()))
    # Source Nodes: [x_261], Original ATen: [aten.convolution]
    buf410 = extern_kernels.convolution(buf409, primals_349, primals_350, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf410, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_350
    buf411 = empty((8, 768, 7, 7), device='cpu', dtype=torch.float32)
    buf412 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf413 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf415 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf416 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf417 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf418 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf420 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_66(c_void_p(buf398.data_ptr()), c_void_p(buf403.data_ptr()), c_void_p(buf402.data_ptr()), c_void_p(primals_183.data_ptr()), c_void_p(buf410.data_ptr()), c_void_p(primals_186.data_ptr()), c_void_p(primals_187.data_ptr()), c_void_p(primals_188.data_ptr()), c_void_p(primals_189.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(primals_191.data_ptr()), c_void_p(buf411.data_ptr()), c_void_p(buf412.data_ptr()), c_void_p(buf413.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(buf416.data_ptr()), c_void_p(buf417.data_ptr()), c_void_p(buf418.data_ptr()), c_void_p(buf420.data_ptr()))
    del primals_188
    del primals_191
    # Source Nodes: [x_265], Original ATen: [aten.convolution]
    buf421 = extern_kernels.convolution(buf420, primals_351, primals_352, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf421, (8, 3072, 7, 7), (150528, 1, 21504, 3072))
    del primals_352
    buf422 = empty_strided((8, 3072, 7, 7), (150528, 1, 21504, 3072), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_67(c_void_p(buf421.data_ptr()), c_void_p(buf422.data_ptr()))
    # Source Nodes: [x_269], Original ATen: [aten.convolution]
    buf423 = extern_kernels.convolution(buf422, primals_353, primals_354, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf423, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_354
    buf424 = empty((8, 768, 7, 7), device='cpu', dtype=torch.float32)
    buf425 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf426 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf428 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf429 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf430 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf431 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf433 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_68(c_void_p(buf411.data_ptr()), c_void_p(buf416.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_189.data_ptr()), c_void_p(buf423.data_ptr()), c_void_p(primals_192.data_ptr()), c_void_p(primals_193.data_ptr()), c_void_p(primals_194.data_ptr()), c_void_p(primals_195.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(primals_197.data_ptr()), c_void_p(buf424.data_ptr()), c_void_p(buf425.data_ptr()), c_void_p(buf426.data_ptr()), c_void_p(buf428.data_ptr()), c_void_p(buf429.data_ptr()), c_void_p(buf430.data_ptr()), c_void_p(buf431.data_ptr()), c_void_p(buf433.data_ptr()))
    del primals_194
    del primals_197
    # Source Nodes: [x_273], Original ATen: [aten.convolution]
    buf434 = extern_kernels.convolution(buf433, primals_355, primals_356, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf434, (8, 3072, 7, 7), (150528, 1, 21504, 3072))
    del primals_356
    buf435 = empty_strided((8, 3072, 7, 7), (150528, 1, 21504, 3072), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_69(c_void_p(buf434.data_ptr()), c_void_p(buf435.data_ptr()))
    # Source Nodes: [x_277], Original ATen: [aten.convolution]
    buf436 = extern_kernels.convolution(buf435, primals_357, primals_358, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf436, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_358
    buf437 = buf411; del buf411  # reuse
    buf438 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf439 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf441 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf442 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf443 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf444 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf446 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_70(c_void_p(buf424.data_ptr()), c_void_p(buf429.data_ptr()), c_void_p(buf428.data_ptr()), c_void_p(primals_195.data_ptr()), c_void_p(buf436.data_ptr()), c_void_p(primals_198.data_ptr()), c_void_p(primals_199.data_ptr()), c_void_p(primals_200.data_ptr()), c_void_p(primals_201.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(primals_203.data_ptr()), c_void_p(buf437.data_ptr()), c_void_p(buf438.data_ptr()), c_void_p(buf439.data_ptr()), c_void_p(buf441.data_ptr()), c_void_p(buf442.data_ptr()), c_void_p(buf443.data_ptr()), c_void_p(buf444.data_ptr()), c_void_p(buf446.data_ptr()))
    del primals_200
    del primals_203
    # Source Nodes: [x_281], Original ATen: [aten.convolution]
    buf447 = extern_kernels.convolution(buf446, primals_359, primals_360, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf447, (8, 3072, 7, 7), (150528, 1, 21504, 3072))
    del primals_360
    buf448 = empty_strided((8, 3072, 7, 7), (150528, 1, 21504, 3072), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_71(c_void_p(buf447.data_ptr()), c_void_p(buf448.data_ptr()))
    # Source Nodes: [x_285], Original ATen: [aten.convolution]
    buf449 = extern_kernels.convolution(buf448, primals_361, primals_362, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf449, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_362
    buf450 = buf424; del buf424  # reuse
    buf451 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf452 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf454 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf455 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf456 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf457 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf459 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_72(c_void_p(buf437.data_ptr()), c_void_p(buf442.data_ptr()), c_void_p(buf441.data_ptr()), c_void_p(primals_201.data_ptr()), c_void_p(buf449.data_ptr()), c_void_p(primals_204.data_ptr()), c_void_p(primals_205.data_ptr()), c_void_p(primals_206.data_ptr()), c_void_p(primals_207.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(primals_209.data_ptr()), c_void_p(buf450.data_ptr()), c_void_p(buf451.data_ptr()), c_void_p(buf452.data_ptr()), c_void_p(buf454.data_ptr()), c_void_p(buf455.data_ptr()), c_void_p(buf456.data_ptr()), c_void_p(buf457.data_ptr()), c_void_p(buf459.data_ptr()))
    del primals_206
    del primals_209
    # Source Nodes: [x_289], Original ATen: [aten.convolution]
    buf460 = extern_kernels.convolution(buf459, primals_363, primals_364, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf460, (8, 3072, 7, 7), (150528, 1, 21504, 3072))
    del primals_364
    buf461 = empty_strided((8, 3072, 7, 7), (150528, 1, 21504, 3072), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_73(c_void_p(buf460.data_ptr()), c_void_p(buf461.data_ptr()))
    # Source Nodes: [x_293], Original ATen: [aten.convolution]
    buf462 = extern_kernels.convolution(buf461, primals_365, primals_366, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf462, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_366
    buf463 = buf437; del buf437  # reuse
    buf464 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf465 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf467 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf468 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    buf469 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf470 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf472 = empty_strided((8, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    cpp_fused_add_avg_pool2d_mul_native_group_norm_sub_74(c_void_p(buf450.data_ptr()), c_void_p(buf455.data_ptr()), c_void_p(buf454.data_ptr()), c_void_p(primals_207.data_ptr()), c_void_p(buf462.data_ptr()), c_void_p(primals_210.data_ptr()), c_void_p(primals_211.data_ptr()), c_void_p(primals_212.data_ptr()), c_void_p(primals_213.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(primals_215.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf464.data_ptr()), c_void_p(buf465.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(buf468.data_ptr()), c_void_p(buf469.data_ptr()), c_void_p(buf470.data_ptr()), c_void_p(buf472.data_ptr()))
    del buf450
    del primals_212
    del primals_215
    # Source Nodes: [x_297], Original ATen: [aten.convolution]
    buf473 = extern_kernels.convolution(buf472, primals_367, primals_368, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf473, (8, 3072, 7, 7), (150528, 1, 21504, 3072))
    del primals_368
    buf474 = empty_strided((8, 3072, 7, 7), (150528, 1, 21504, 3072), device='cpu', dtype=torch.float32)
    cpp_fused_gelu_75(c_void_p(buf473.data_ptr()), c_void_p(buf474.data_ptr()))
    # Source Nodes: [x_301], Original ATen: [aten.convolution]
    buf475 = extern_kernels.convolution(buf474, primals_369, primals_370, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf475, (8, 768, 7, 7), (37632, 1, 5376, 768))
    del primals_370
    buf476 = empty_strided((8, 768, 1, 1), (768, 1, 6144, 6144), device='cpu', dtype=torch.float32)
    buf477 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf478 = empty_strided((8, 1, 1, 1), (1, 8, 8, 8), device='cpu', dtype=torch.float32)
    buf480 = empty_strided((8, 1, 1, 768), (768, 1, 768, 1), device='cpu', dtype=torch.float32)
    buf481 = empty((8, 768), device='cpu', dtype=torch.float32)
    cpp_fused_add_mean_mul_native_layer_norm_sub_view_76(c_void_p(buf463.data_ptr()), c_void_p(buf468.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(primals_213.data_ptr()), c_void_p(buf475.data_ptr()), c_void_p(primals_216.data_ptr()), c_void_p(primals_217.data_ptr()), c_void_p(primals_218.data_ptr()), c_void_p(buf476.data_ptr()), c_void_p(buf477.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(buf480.data_ptr()), c_void_p(buf481.data_ptr()))
    del buf463
    del buf476
    del buf477
    del primals_218
    buf482 = empty((8, 1000), device='cpu', dtype=torch.float32)
    # Source Nodes: [pred], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_372, buf481, reinterpret_tensor(primals_371, (768, 1000), (1, 768), 0), alpha=1, beta=1, out=buf482)
    del primals_372
    buf483 = reinterpret_tensor(buf478, (8, 1, 1, 1), (1, 1, 1, 1), 0); del buf478  # reuse
    buf484 = reinterpret_tensor(buf470, (8, 1), (1, 1), 0); del buf470  # reuse
    buf485 = reinterpret_tensor(buf465, (8, 1), (1, 1), 0); del buf465  # reuse
    buf486 = reinterpret_tensor(buf457, (8, 1), (1, 1), 0); del buf457  # reuse
    buf487 = reinterpret_tensor(buf452, (8, 1), (1, 1), 0); del buf452  # reuse
    buf488 = reinterpret_tensor(buf444, (8, 1), (1, 1), 0); del buf444  # reuse
    buf489 = reinterpret_tensor(buf439, (8, 1), (1, 1), 0); del buf439  # reuse
    buf490 = reinterpret_tensor(buf431, (8, 1), (1, 1), 0); del buf431  # reuse
    buf491 = reinterpret_tensor(buf426, (8, 1), (1, 1), 0); del buf426  # reuse
    buf492 = reinterpret_tensor(buf418, (8, 1), (1, 1), 0); del buf418  # reuse
    buf493 = reinterpret_tensor(buf413, (8, 1), (1, 1), 0); del buf413  # reuse
    buf494 = reinterpret_tensor(buf405, (8, 1), (1, 1), 0); del buf405  # reuse
    buf495 = reinterpret_tensor(buf400, (8, 1), (1, 1), 0); del buf400  # reuse
    buf496 = reinterpret_tensor(buf391, (8, 1), (1, 1), 0); del buf391  # reuse
    buf497 = reinterpret_tensor(buf386, (8, 1), (1, 1), 0); del buf386  # reuse
    buf498 = reinterpret_tensor(buf378, (8, 1), (1, 1), 0); del buf378  # reuse
    buf499 = reinterpret_tensor(buf373, (8, 1), (1, 1), 0); del buf373  # reuse
    buf500 = reinterpret_tensor(buf365, (8, 1), (1, 1), 0); del buf365  # reuse
    buf501 = reinterpret_tensor(buf360, (8, 1), (1, 1), 0); del buf360  # reuse
    buf502 = reinterpret_tensor(buf352, (8, 1), (1, 1), 0); del buf352  # reuse
    buf503 = reinterpret_tensor(buf347, (8, 1), (1, 1), 0); del buf347  # reuse
    buf504 = reinterpret_tensor(buf339, (8, 1), (1, 1), 0); del buf339  # reuse
    buf505 = reinterpret_tensor(buf334, (8, 1), (1, 1), 0); del buf334  # reuse
    buf506 = reinterpret_tensor(buf326, (8, 1), (1, 1), 0); del buf326  # reuse
    buf507 = reinterpret_tensor(buf321, (8, 1), (1, 1), 0); del buf321  # reuse
    buf508 = reinterpret_tensor(buf313, (8, 1), (1, 1), 0); del buf313  # reuse
    buf509 = reinterpret_tensor(buf308, (8, 1), (1, 1), 0); del buf308  # reuse
    buf510 = reinterpret_tensor(buf300, (8, 1), (1, 1), 0); del buf300  # reuse
    buf511 = reinterpret_tensor(buf295, (8, 1), (1, 1), 0); del buf295  # reuse
    buf512 = reinterpret_tensor(buf287, (8, 1), (1, 1), 0); del buf287  # reuse
    buf513 = reinterpret_tensor(buf282, (8, 1), (1, 1), 0); del buf282  # reuse
    buf514 = reinterpret_tensor(buf274, (8, 1), (1, 1), 0); del buf274  # reuse
    buf515 = reinterpret_tensor(buf269, (8, 1), (1, 1), 0); del buf269  # reuse
    buf516 = reinterpret_tensor(buf261, (8, 1), (1, 1), 0); del buf261  # reuse
    buf517 = reinterpret_tensor(buf256, (8, 1), (1, 1), 0); del buf256  # reuse
    buf518 = reinterpret_tensor(buf248, (8, 1), (1, 1), 0); del buf248  # reuse
    buf519 = reinterpret_tensor(buf243, (8, 1), (1, 1), 0); del buf243  # reuse
    buf520 = reinterpret_tensor(buf235, (8, 1), (1, 1), 0); del buf235  # reuse
    buf521 = reinterpret_tensor(buf230, (8, 1), (1, 1), 0); del buf230  # reuse
    buf522 = reinterpret_tensor(buf222, (8, 1), (1, 1), 0); del buf222  # reuse
    buf523 = reinterpret_tensor(buf217, (8, 1), (1, 1), 0); del buf217  # reuse
    buf524 = reinterpret_tensor(buf209, (8, 1), (1, 1), 0); del buf209  # reuse
    buf525 = reinterpret_tensor(buf204, (8, 1), (1, 1), 0); del buf204  # reuse
    buf526 = reinterpret_tensor(buf196, (8, 1), (1, 1), 0); del buf196  # reuse
    buf527 = reinterpret_tensor(buf191, (8, 1), (1, 1), 0); del buf191  # reuse
    buf528 = reinterpret_tensor(buf183, (8, 1), (1, 1), 0); del buf183  # reuse
    buf529 = reinterpret_tensor(buf178, (8, 1), (1, 1), 0); del buf178  # reuse
    buf530 = reinterpret_tensor(buf170, (8, 1), (1, 1), 0); del buf170  # reuse
    buf531 = reinterpret_tensor(buf165, (8, 1), (1, 1), 0); del buf165  # reuse
    buf532 = reinterpret_tensor(buf156, (8, 1), (1, 1), 0); del buf156  # reuse
    buf533 = reinterpret_tensor(buf151, (8, 1), (1, 1), 0); del buf151  # reuse
    buf534 = reinterpret_tensor(buf143, (8, 1), (1, 1), 0); del buf143  # reuse
    buf535 = reinterpret_tensor(buf138, (8, 1), (1, 1), 0); del buf138  # reuse
    buf536 = reinterpret_tensor(buf130, (8, 1), (1, 1), 0); del buf130  # reuse
    buf537 = reinterpret_tensor(buf125, (8, 1), (1, 1), 0); del buf125  # reuse
    buf538 = reinterpret_tensor(buf117, (8, 1), (1, 1), 0); del buf117  # reuse
    buf539 = reinterpret_tensor(buf112, (8, 1), (1, 1), 0); del buf112  # reuse
    buf540 = reinterpret_tensor(buf104, (8, 1), (1, 1), 0); del buf104  # reuse
    buf541 = reinterpret_tensor(buf99, (8, 1), (1, 1), 0); del buf99  # reuse
    buf542 = reinterpret_tensor(buf91, (8, 1), (1, 1), 0); del buf91  # reuse
    buf543 = reinterpret_tensor(buf86, (8, 1), (1, 1), 0); del buf86  # reuse
    buf544 = reinterpret_tensor(buf77, (8, 1), (1, 1), 0); del buf77  # reuse
    buf545 = reinterpret_tensor(buf72, (8, 1), (1, 1), 0); del buf72  # reuse
    buf546 = reinterpret_tensor(buf64, (8, 1), (1, 1), 0); del buf64  # reuse
    buf547 = reinterpret_tensor(buf59, (8, 1), (1, 1), 0); del buf59  # reuse
    buf548 = reinterpret_tensor(buf51, (8, 1), (1, 1), 0); del buf51  # reuse
    buf549 = reinterpret_tensor(buf46, (8, 1), (1, 1), 0); del buf46  # reuse
    buf550 = reinterpret_tensor(buf38, (8, 1), (1, 1), 0); del buf38  # reuse
    buf551 = reinterpret_tensor(buf33, (8, 1), (1, 1), 0); del buf33  # reuse
    buf552 = reinterpret_tensor(buf25, (8, 1), (1, 1), 0); del buf25  # reuse
    buf553 = reinterpret_tensor(buf20, (8, 1), (1, 1), 0); del buf20  # reuse
    buf554 = reinterpret_tensor(buf12, (8, 1), (1, 1), 0); del buf12  # reuse
    buf555 = reinterpret_tensor(buf7, (8, 1), (1, 1), 0); del buf7  # reuse
    cpp_fused_detach_native_layer_norm_native_layer_norm_backward_77(c_void_p(buf483.data_ptr()), c_void_p(buf484.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(buf486.data_ptr()), c_void_p(buf487.data_ptr()), c_void_p(buf488.data_ptr()), c_void_p(buf489.data_ptr()), c_void_p(buf490.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(buf492.data_ptr()), c_void_p(buf493.data_ptr()), c_void_p(buf494.data_ptr()), c_void_p(buf495.data_ptr()), c_void_p(buf496.data_ptr()), c_void_p(buf497.data_ptr()), c_void_p(buf498.data_ptr()), c_void_p(buf499.data_ptr()), c_void_p(buf500.data_ptr()), c_void_p(buf501.data_ptr()), c_void_p(buf502.data_ptr()), c_void_p(buf503.data_ptr()), c_void_p(buf504.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(buf506.data_ptr()), c_void_p(buf507.data_ptr()), c_void_p(buf508.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(buf511.data_ptr()), c_void_p(buf512.data_ptr()), c_void_p(buf513.data_ptr()), c_void_p(buf514.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(buf516.data_ptr()), c_void_p(buf517.data_ptr()), c_void_p(buf518.data_ptr()), c_void_p(buf519.data_ptr()), c_void_p(buf520.data_ptr()), c_void_p(buf521.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(buf523.data_ptr()), c_void_p(buf524.data_ptr()), c_void_p(buf525.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(buf527.data_ptr()), c_void_p(buf528.data_ptr()), c_void_p(buf529.data_ptr()), c_void_p(buf530.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(buf532.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(buf534.data_ptr()), c_void_p(buf535.data_ptr()), c_void_p(buf536.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(buf538.data_ptr()), c_void_p(buf539.data_ptr()), c_void_p(buf540.data_ptr()), c_void_p(buf541.data_ptr()), c_void_p(buf542.data_ptr()), c_void_p(buf543.data_ptr()), c_void_p(buf544.data_ptr()), c_void_p(buf545.data_ptr()), c_void_p(buf546.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(buf548.data_ptr()), c_void_p(buf549.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(buf551.data_ptr()), c_void_p(buf552.data_ptr()), c_void_p(buf553.data_ptr()), c_void_p(buf554.data_ptr()), c_void_p(buf555.data_ptr()))
    return (buf482, primals_1, primals_3, primals_4, primals_6, primals_7, primals_9, primals_10, primals_12, primals_13, primals_15, primals_16, primals_18, primals_19, primals_21, primals_22, primals_24, primals_25, primals_27, primals_28, primals_30, primals_31, primals_33, primals_34, primals_36, primals_37, primals_39, primals_40, primals_42, primals_43, primals_45, primals_46, primals_48, primals_49, primals_51, primals_52, primals_54, primals_55, primals_57, primals_58, primals_60, primals_61, primals_63, primals_64, primals_66, primals_67, primals_69, primals_70, primals_72, primals_73, primals_75, primals_76, primals_78, primals_79, primals_81, primals_82, primals_84, primals_85, primals_87, primals_88, primals_90, primals_91, primals_93, primals_94, primals_96, primals_97, primals_99, primals_100, primals_102, primals_103, primals_105, primals_106, primals_108, primals_109, primals_111, primals_112, primals_114, primals_115, primals_117, primals_118, primals_120, primals_121, primals_123, primals_124, primals_126, primals_127, primals_129, primals_130, primals_132, primals_133, primals_135, primals_136, primals_138, primals_139, primals_141, primals_142, primals_144, primals_145, primals_147, primals_148, primals_150, primals_151, primals_153, primals_154, primals_156, primals_157, primals_159, primals_160, primals_162, primals_163, primals_165, primals_166, primals_168, primals_169, primals_171, primals_172, primals_174, primals_175, primals_177, primals_178, primals_180, primals_181, primals_183, primals_184, primals_186, primals_187, primals_189, primals_190, primals_192, primals_193, primals_195, primals_196, primals_198, primals_199, primals_201, primals_202, primals_204, primals_205, primals_207, primals_208, primals_210, primals_211, primals_213, primals_214, primals_216, primals_217, buf0, primals_221, primals_223, primals_225, primals_227, primals_229, primals_231, primals_233, primals_235, primals_237, primals_239, primals_241, primals_243, buf1, primals_247, primals_249, primals_251, primals_253, primals_255, primals_257, primals_259, primals_261, primals_263, primals_265, primals_267, primals_269, buf2, primals_273, primals_275, primals_277, primals_279, primals_281, primals_283, primals_285, primals_287, primals_289, primals_291, primals_293, primals_295, primals_297, primals_299, primals_301, primals_303, primals_305, primals_307, primals_309, primals_311, primals_313, primals_315, primals_317, primals_319, primals_321, primals_323, primals_325, primals_327, primals_329, primals_331, primals_333, primals_335, primals_337, primals_339, primals_341, primals_343, buf3, primals_347, primals_349, primals_351, primals_353, primals_355, primals_357, primals_359, primals_361, primals_363, primals_365, primals_367, primals_369, buf4, buf5, buf9, buf10, buf14, buf15, buf16, buf17, buf22, buf23, buf27, buf28, buf29, buf30, buf35, buf36, buf40, buf41, buf42, buf43, buf48, buf49, buf53, buf54, buf55, buf56, buf61, buf62, buf66, buf67, buf68, buf69, buf74, buf75, buf79, buf80, buf81, buf82, buf83, buf84, buf88, buf89, buf93, buf94, buf95, buf96, buf101, buf102, buf106, buf107, buf108, buf109, buf114, buf115, buf119, buf120, buf121, buf122, buf127, buf128, buf132, buf133, buf134, buf135, buf140, buf141, buf145, buf146, buf147, buf148, buf153, buf154, buf158, buf159, buf160, buf161, buf162, buf163, buf167, buf168, buf172, buf173, buf174, buf175, buf180, buf181, buf185, buf186, buf187, buf188, buf193, buf194, buf198, buf199, buf200, buf201, buf206, buf207, buf211, buf212, buf213, buf214, buf219, buf220, buf224, buf225, buf226, buf227, buf232, buf233, buf237, buf238, buf239, buf240, buf245, buf246, buf250, buf251, buf252, buf253, buf258, buf259, buf263, buf264, buf265, buf266, buf271, buf272, buf276, buf277, buf278, buf279, buf284, buf285, buf289, buf290, buf291, buf292, buf297, buf298, buf302, buf303, buf304, buf305, buf310, buf311, buf315, buf316, buf317, buf318, buf323, buf324, buf328, buf329, buf330, buf331, buf336, buf337, buf341, buf342, buf343, buf344, buf349, buf350, buf354, buf355, buf356, buf357, buf362, buf363, buf367, buf368, buf369, buf370, buf375, buf376, buf380, buf381, buf382, buf383, buf388, buf389, buf393, buf394, buf395, buf396, buf397, buf398, buf402, buf403, buf407, buf408, buf409, buf410, buf415, buf416, buf420, buf421, buf422, buf423, buf428, buf429, buf433, buf434, buf435, buf436, buf441, buf442, buf446, buf447, buf448, buf449, buf454, buf455, buf459, buf460, buf461, buf462, buf467, buf468, buf472, buf473, buf474, buf475, buf480, buf481, reinterpret_tensor(primals_371, (1000, 768), (768, 1), 0), buf483, reinterpret_tensor(buf469, (8, 1), (1, 1), 0), buf484, reinterpret_tensor(buf464, (8, 1), (1, 1), 0), buf485, reinterpret_tensor(buf456, (8, 1), (1, 1), 0), buf486, reinterpret_tensor(buf451, (8, 1), (1, 1), 0), buf487, reinterpret_tensor(buf443, (8, 1), (1, 1), 0), buf488, reinterpret_tensor(buf438, (8, 1), (1, 1), 0), buf489, reinterpret_tensor(buf430, (8, 1), (1, 1), 0), buf490, reinterpret_tensor(buf425, (8, 1), (1, 1), 0), buf491, reinterpret_tensor(buf417, (8, 1), (1, 1), 0), buf492, reinterpret_tensor(buf412, (8, 1), (1, 1), 0), buf493, reinterpret_tensor(buf404, (8, 1), (1, 1), 0), buf494, reinterpret_tensor(buf399, (8, 1), (1, 1), 0), buf495, reinterpret_tensor(buf390, (8, 1), (1, 1), 0), buf496, reinterpret_tensor(buf385, (8, 1), (1, 1), 0), buf497, reinterpret_tensor(buf377, (8, 1), (1, 1), 0), buf498, reinterpret_tensor(buf372, (8, 1), (1, 1), 0), buf499, reinterpret_tensor(buf364, (8, 1), (1, 1), 0), buf500, reinterpret_tensor(buf359, (8, 1), (1, 1), 0), buf501, reinterpret_tensor(buf351, (8, 1), (1, 1), 0), buf502, reinterpret_tensor(buf346, (8, 1), (1, 1), 0), buf503, reinterpret_tensor(buf338, (8, 1), (1, 1), 0), buf504, reinterpret_tensor(buf333, (8, 1), (1, 1), 0), buf505, reinterpret_tensor(buf325, (8, 1), (1, 1), 0), buf506, reinterpret_tensor(buf320, (8, 1), (1, 1), 0), buf507, reinterpret_tensor(buf312, (8, 1), (1, 1), 0), buf508, reinterpret_tensor(buf307, (8, 1), (1, 1), 0), buf509, reinterpret_tensor(buf299, (8, 1), (1, 1), 0), buf510, reinterpret_tensor(buf294, (8, 1), (1, 1), 0), buf511, reinterpret_tensor(buf286, (8, 1), (1, 1), 0), buf512, reinterpret_tensor(buf281, (8, 1), (1, 1), 0), buf513, reinterpret_tensor(buf273, (8, 1), (1, 1), 0), buf514, reinterpret_tensor(buf268, (8, 1), (1, 1), 0), buf515, reinterpret_tensor(buf260, (8, 1), (1, 1), 0), buf516, reinterpret_tensor(buf255, (8, 1), (1, 1), 0), buf517, reinterpret_tensor(buf247, (8, 1), (1, 1), 0), buf518, reinterpret_tensor(buf242, (8, 1), (1, 1), 0), buf519, reinterpret_tensor(buf234, (8, 1), (1, 1), 0), buf520, reinterpret_tensor(buf229, (8, 1), (1, 1), 0), buf521, reinterpret_tensor(buf221, (8, 1), (1, 1), 0), buf522, reinterpret_tensor(buf216, (8, 1), (1, 1), 0), buf523, reinterpret_tensor(buf208, (8, 1), (1, 1), 0), buf524, reinterpret_tensor(buf203, (8, 1), (1, 1), 0), buf525, reinterpret_tensor(buf195, (8, 1), (1, 1), 0), buf526, reinterpret_tensor(buf190, (8, 1), (1, 1), 0), buf527, reinterpret_tensor(buf182, (8, 1), (1, 1), 0), buf528, reinterpret_tensor(buf177, (8, 1), (1, 1), 0), buf529, reinterpret_tensor(buf169, (8, 1), (1, 1), 0), buf530, reinterpret_tensor(buf164, (8, 1), (1, 1), 0), buf531, reinterpret_tensor(buf155, (8, 1), (1, 1), 0), buf532, reinterpret_tensor(buf150, (8, 1), (1, 1), 0), buf533, reinterpret_tensor(buf142, (8, 1), (1, 1), 0), buf534, reinterpret_tensor(buf137, (8, 1), (1, 1), 0), buf535, reinterpret_tensor(buf129, (8, 1), (1, 1), 0), buf536, reinterpret_tensor(buf124, (8, 1), (1, 1), 0), buf537, reinterpret_tensor(buf116, (8, 1), (1, 1), 0), buf538, reinterpret_tensor(buf111, (8, 1), (1, 1), 0), buf539, reinterpret_tensor(buf103, (8, 1), (1, 1), 0), buf540, reinterpret_tensor(buf98, (8, 1), (1, 1), 0), buf541, reinterpret_tensor(buf90, (8, 1), (1, 1), 0), buf542, reinterpret_tensor(buf85, (8, 1), (1, 1), 0), buf543, reinterpret_tensor(buf76, (8, 1), (1, 1), 0), buf544, reinterpret_tensor(buf71, (8, 1), (1, 1), 0), buf545, reinterpret_tensor(buf63, (8, 1), (1, 1), 0), buf546, reinterpret_tensor(buf58, (8, 1), (1, 1), 0), buf547, reinterpret_tensor(buf50, (8, 1), (1, 1), 0), buf548, reinterpret_tensor(buf45, (8, 1), (1, 1), 0), buf549, reinterpret_tensor(buf37, (8, 1), (1, 1), 0), buf550, reinterpret_tensor(buf32, (8, 1), (1, 1), 0), buf551, reinterpret_tensor(buf24, (8, 1), (1, 1), 0), buf552, reinterpret_tensor(buf19, (8, 1), (1, 1), 0), buf553, reinterpret_tensor(buf11, (8, 1), (1, 1), 0), buf554, reinterpret_tensor(buf6, (8, 1), (1, 1), 0), buf555, )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    primals_1 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_2 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_3 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_4 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_5 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_6 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_7 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_8 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_9 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_10 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_11 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_12 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_13 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_14 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_15 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_16 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_17 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_18 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_19 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_20 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_21 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_22 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_23 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_24 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_25 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_26 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_27 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_28 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_29 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_30 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_31 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_32 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_33 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_34 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_35 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_36 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_37 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_38 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_39 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_40 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_41 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_42 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_43 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_44 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_45 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_46 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_47 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_48 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_49 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_50 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_51 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_52 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_53 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_54 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_55 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_56 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_57 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_58 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_59 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_60 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_61 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_62 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_63 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_64 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_65 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_66 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_67 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_68 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_69 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_70 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_71 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_72 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_73 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_74 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_75 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_76 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_77 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_78 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_79 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_80 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_81 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_82 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_83 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_84 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_85 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_86 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_87 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_88 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_89 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_90 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_91 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_92 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_93 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_94 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_95 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_96 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_97 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_98 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_99 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_100 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_101 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_102 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_103 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_104 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_105 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_106 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_107 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_108 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_109 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_110 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_111 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_112 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_113 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_114 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_115 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_116 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_117 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_118 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_119 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_120 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_121 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_122 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_123 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_124 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_125 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_126 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_127 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_128 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_129 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_130 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_131 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_132 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_133 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_134 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_135 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_136 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_137 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_138 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_139 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_140 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_141 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_142 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_143 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_144 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_145 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_146 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_147 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_148 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_149 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_150 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_151 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_152 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_153 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_154 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_155 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_156 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_157 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_158 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_159 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_160 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_161 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_162 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_163 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_164 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_165 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_166 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_167 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_168 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_169 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_170 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_171 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_172 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_173 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_174 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_175 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_176 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_177 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_178 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_179 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_180 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_181 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_182 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_183 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_184 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_185 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_186 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_187 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_188 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_189 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_190 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_191 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_192 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_193 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_194 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_195 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_196 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_197 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_198 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_199 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_200 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_201 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_202 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_203 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_204 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_205 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_206 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_207 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_208 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_209 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_210 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_211 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_212 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_213 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_214 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_215 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_216 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_217 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_218 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_219 = rand_strided((96, 3, 7, 7), (147, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_220 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_221 = rand_strided((384, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_222 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_223 = rand_strided((96, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_224 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_225 = rand_strided((384, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_226 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_227 = rand_strided((96, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_228 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_229 = rand_strided((384, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_230 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_231 = rand_strided((96, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_232 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_233 = rand_strided((384, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_234 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_235 = rand_strided((96, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_236 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_237 = rand_strided((384, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_238 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_239 = rand_strided((96, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_240 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_241 = rand_strided((384, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_242 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_243 = rand_strided((96, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_244 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_245 = rand_strided((192, 96, 3, 3), (864, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_246 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_247 = rand_strided((768, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_248 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_249 = rand_strided((192, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_250 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_251 = rand_strided((768, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_252 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_253 = rand_strided((192, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_254 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_255 = rand_strided((768, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_256 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_257 = rand_strided((192, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_258 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_259 = rand_strided((768, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_260 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_261 = rand_strided((192, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_262 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_263 = rand_strided((768, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_264 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_265 = rand_strided((192, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_266 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_267 = rand_strided((768, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_268 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_269 = rand_strided((192, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_270 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_271 = rand_strided((384, 192, 3, 3), (1728, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_272 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_273 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_274 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_275 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_276 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_277 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_278 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_279 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_280 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_281 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_282 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_283 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_284 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_285 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_286 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_287 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_288 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_289 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_290 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_291 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_292 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_293 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_294 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_295 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_296 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_297 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_298 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_299 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_300 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_301 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_302 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_303 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_304 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_305 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_306 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_307 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_308 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_309 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_310 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_311 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_312 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_313 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_314 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_315 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_316 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_317 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_318 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_319 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_320 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_321 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_322 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_323 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_324 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_325 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_326 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_327 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_328 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_329 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_330 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_331 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_332 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_333 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_334 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_335 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_336 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_337 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_338 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_339 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_340 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_341 = rand_strided((1536, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_342 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_343 = rand_strided((384, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_344 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_345 = rand_strided((768, 384, 3, 3), (3456, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_346 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_347 = rand_strided((3072, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_348 = rand_strided((3072, ), (1, ), device='cpu', dtype=torch.float32)
    primals_349 = rand_strided((768, 3072, 1, 1), (3072, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_350 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_351 = rand_strided((3072, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_352 = rand_strided((3072, ), (1, ), device='cpu', dtype=torch.float32)
    primals_353 = rand_strided((768, 3072, 1, 1), (3072, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_354 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_355 = rand_strided((3072, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_356 = rand_strided((3072, ), (1, ), device='cpu', dtype=torch.float32)
    primals_357 = rand_strided((768, 3072, 1, 1), (3072, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_358 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_359 = rand_strided((3072, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_360 = rand_strided((3072, ), (1, ), device='cpu', dtype=torch.float32)
    primals_361 = rand_strided((768, 3072, 1, 1), (3072, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_362 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_363 = rand_strided((3072, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_364 = rand_strided((3072, ), (1, ), device='cpu', dtype=torch.float32)
    primals_365 = rand_strided((768, 3072, 1, 1), (3072, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_366 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_367 = rand_strided((3072, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_368 = rand_strided((3072, ), (1, ), device='cpu', dtype=torch.float32)
    primals_369 = rand_strided((768, 3072, 1, 1), (3072, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_370 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_371 = rand_strided((1000, 768), (768, 1), device='cpu', dtype=torch.float32)
    primals_372 = rand_strided((1000, ), (1, ), device='cpu', dtype=torch.float32)
    primals_373 = rand_strided((8, 3, 224, 224), (150528, 50176, 224, 1), device='cpu', dtype=torch.float32)
    return print_performance(lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('poolformer_m36', benchmark_compiled_module)
