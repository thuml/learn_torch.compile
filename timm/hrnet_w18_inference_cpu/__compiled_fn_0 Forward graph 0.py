from __future__ import annotations



def forward(self, arg0_1: "f32[64, 3, 3, 3]", arg1_1: "f32[64]", arg2_1: "f32[64]", arg3_1: "f32[64, 64, 3, 3]", arg4_1: "f32[64]", arg5_1: "f32[64]", arg6_1: "f32[64, 64, 1, 1]", arg7_1: "f32[64]", arg8_1: "f32[64]", arg9_1: "f32[64, 64, 3, 3]", arg10_1: "f32[64]", arg11_1: "f32[64]", arg12_1: "f32[256, 64, 1, 1]", arg13_1: "f32[256]", arg14_1: "f32[256]", arg15_1: "f32[256, 64, 1, 1]", arg16_1: "f32[256]", arg17_1: "f32[256]", arg18_1: "f32[64, 256, 1, 1]", arg19_1: "f32[64]", arg20_1: "f32[64]", arg21_1: "f32[64, 64, 3, 3]", arg22_1: "f32[64]", arg23_1: "f32[64]", arg24_1: "f32[256, 64, 1, 1]", arg25_1: "f32[256]", arg26_1: "f32[256]", arg27_1: "f32[64, 256, 1, 1]", arg28_1: "f32[64]", arg29_1: "f32[64]", arg30_1: "f32[64, 64, 3, 3]", arg31_1: "f32[64]", arg32_1: "f32[64]", arg33_1: "f32[256, 64, 1, 1]", arg34_1: "f32[256]", arg35_1: "f32[256]", arg36_1: "f32[64, 256, 1, 1]", arg37_1: "f32[64]", arg38_1: "f32[64]", arg39_1: "f32[64, 64, 3, 3]", arg40_1: "f32[64]", arg41_1: "f32[64]", arg42_1: "f32[256, 64, 1, 1]", arg43_1: "f32[256]", arg44_1: "f32[256]", arg45_1: "f32[18, 256, 3, 3]", arg46_1: "f32[18]", arg47_1: "f32[18]", arg48_1: "f32[36, 256, 3, 3]", arg49_1: "f32[36]", arg50_1: "f32[36]", arg51_1: "f32[18, 18, 3, 3]", arg52_1: "f32[18]", arg53_1: "f32[18]", arg54_1: "f32[18, 18, 3, 3]", arg55_1: "f32[18]", arg56_1: "f32[18]", arg57_1: "f32[18, 18, 3, 3]", arg58_1: "f32[18]", arg59_1: "f32[18]", arg60_1: "f32[18, 18, 3, 3]", arg61_1: "f32[18]", arg62_1: "f32[18]", arg63_1: "f32[18, 18, 3, 3]", arg64_1: "f32[18]", arg65_1: "f32[18]", arg66_1: "f32[18, 18, 3, 3]", arg67_1: "f32[18]", arg68_1: "f32[18]", arg69_1: "f32[18, 18, 3, 3]", arg70_1: "f32[18]", arg71_1: "f32[18]", arg72_1: "f32[18, 18, 3, 3]", arg73_1: "f32[18]", arg74_1: "f32[18]", arg75_1: "f32[36, 36, 3, 3]", arg76_1: "f32[36]", arg77_1: "f32[36]", arg78_1: "f32[36, 36, 3, 3]", arg79_1: "f32[36]", arg80_1: "f32[36]", arg81_1: "f32[36, 36, 3, 3]", arg82_1: "f32[36]", arg83_1: "f32[36]", arg84_1: "f32[36, 36, 3, 3]", arg85_1: "f32[36]", arg86_1: "f32[36]", arg87_1: "f32[36, 36, 3, 3]", arg88_1: "f32[36]", arg89_1: "f32[36]", arg90_1: "f32[36, 36, 3, 3]", arg91_1: "f32[36]", arg92_1: "f32[36]", arg93_1: "f32[36, 36, 3, 3]", arg94_1: "f32[36]", arg95_1: "f32[36]", arg96_1: "f32[36, 36, 3, 3]", arg97_1: "f32[36]", arg98_1: "f32[36]", arg99_1: "f32[18, 36, 1, 1]", arg100_1: "f32[18]", arg101_1: "f32[18]", arg102_1: "f32[36, 18, 3, 3]", arg103_1: "f32[36]", arg104_1: "f32[36]", arg105_1: "f32[72, 36, 3, 3]", arg106_1: "f32[72]", arg107_1: "f32[72]", arg108_1: "f32[18, 18, 3, 3]", arg109_1: "f32[18]", arg110_1: "f32[18]", arg111_1: "f32[18, 18, 3, 3]", arg112_1: "f32[18]", arg113_1: "f32[18]", arg114_1: "f32[18, 18, 3, 3]", arg115_1: "f32[18]", arg116_1: "f32[18]", arg117_1: "f32[18, 18, 3, 3]", arg118_1: "f32[18]", arg119_1: "f32[18]", arg120_1: "f32[18, 18, 3, 3]", arg121_1: "f32[18]", arg122_1: "f32[18]", arg123_1: "f32[18, 18, 3, 3]", arg124_1: "f32[18]", arg125_1: "f32[18]", arg126_1: "f32[18, 18, 3, 3]", arg127_1: "f32[18]", arg128_1: "f32[18]", arg129_1: "f32[18, 18, 3, 3]", arg130_1: "f32[18]", arg131_1: "f32[18]", arg132_1: "f32[36, 36, 3, 3]", arg133_1: "f32[36]", arg134_1: "f32[36]", arg135_1: "f32[36, 36, 3, 3]", arg136_1: "f32[36]", arg137_1: "f32[36]", arg138_1: "f32[36, 36, 3, 3]", arg139_1: "f32[36]", arg140_1: "f32[36]", arg141_1: "f32[36, 36, 3, 3]", arg142_1: "f32[36]", arg143_1: "f32[36]", arg144_1: "f32[36, 36, 3, 3]", arg145_1: "f32[36]", arg146_1: "f32[36]", arg147_1: "f32[36, 36, 3, 3]", arg148_1: "f32[36]", arg149_1: "f32[36]", arg150_1: "f32[36, 36, 3, 3]", arg151_1: "f32[36]", arg152_1: "f32[36]", arg153_1: "f32[36, 36, 3, 3]", arg154_1: "f32[36]", arg155_1: "f32[36]", arg156_1: "f32[72, 72, 3, 3]", arg157_1: "f32[72]", arg158_1: "f32[72]", arg159_1: "f32[72, 72, 3, 3]", arg160_1: "f32[72]", arg161_1: "f32[72]", arg162_1: "f32[72, 72, 3, 3]", arg163_1: "f32[72]", arg164_1: "f32[72]", arg165_1: "f32[72, 72, 3, 3]", arg166_1: "f32[72]", arg167_1: "f32[72]", arg168_1: "f32[72, 72, 3, 3]", arg169_1: "f32[72]", arg170_1: "f32[72]", arg171_1: "f32[72, 72, 3, 3]", arg172_1: "f32[72]", arg173_1: "f32[72]", arg174_1: "f32[72, 72, 3, 3]", arg175_1: "f32[72]", arg176_1: "f32[72]", arg177_1: "f32[72, 72, 3, 3]", arg178_1: "f32[72]", arg179_1: "f32[72]", arg180_1: "f32[18, 36, 1, 1]", arg181_1: "f32[18]", arg182_1: "f32[18]", arg183_1: "f32[18, 72, 1, 1]", arg184_1: "f32[18]", arg185_1: "f32[18]", arg186_1: "f32[36, 18, 3, 3]", arg187_1: "f32[36]", arg188_1: "f32[36]", arg189_1: "f32[36, 72, 1, 1]", arg190_1: "f32[36]", arg191_1: "f32[36]", arg192_1: "f32[18, 18, 3, 3]", arg193_1: "f32[18]", arg194_1: "f32[18]", arg195_1: "f32[72, 18, 3, 3]", arg196_1: "f32[72]", arg197_1: "f32[72]", arg198_1: "f32[72, 36, 3, 3]", arg199_1: "f32[72]", arg200_1: "f32[72]", arg201_1: "f32[18, 18, 3, 3]", arg202_1: "f32[18]", arg203_1: "f32[18]", arg204_1: "f32[18, 18, 3, 3]", arg205_1: "f32[18]", arg206_1: "f32[18]", arg207_1: "f32[18, 18, 3, 3]", arg208_1: "f32[18]", arg209_1: "f32[18]", arg210_1: "f32[18, 18, 3, 3]", arg211_1: "f32[18]", arg212_1: "f32[18]", arg213_1: "f32[18, 18, 3, 3]", arg214_1: "f32[18]", arg215_1: "f32[18]", arg216_1: "f32[18, 18, 3, 3]", arg217_1: "f32[18]", arg218_1: "f32[18]", arg219_1: "f32[18, 18, 3, 3]", arg220_1: "f32[18]", arg221_1: "f32[18]", arg222_1: "f32[18, 18, 3, 3]", arg223_1: "f32[18]", arg224_1: "f32[18]", arg225_1: "f32[36, 36, 3, 3]", arg226_1: "f32[36]", arg227_1: "f32[36]", arg228_1: "f32[36, 36, 3, 3]", arg229_1: "f32[36]", arg230_1: "f32[36]", arg231_1: "f32[36, 36, 3, 3]", arg232_1: "f32[36]", arg233_1: "f32[36]", arg234_1: "f32[36, 36, 3, 3]", arg235_1: "f32[36]", arg236_1: "f32[36]", arg237_1: "f32[36, 36, 3, 3]", arg238_1: "f32[36]", arg239_1: "f32[36]", arg240_1: "f32[36, 36, 3, 3]", arg241_1: "f32[36]", arg242_1: "f32[36]", arg243_1: "f32[36, 36, 3, 3]", arg244_1: "f32[36]", arg245_1: "f32[36]", arg246_1: "f32[36, 36, 3, 3]", arg247_1: "f32[36]", arg248_1: "f32[36]", arg249_1: "f32[72, 72, 3, 3]", arg250_1: "f32[72]", arg251_1: "f32[72]", arg252_1: "f32[72, 72, 3, 3]", arg253_1: "f32[72]", arg254_1: "f32[72]", arg255_1: "f32[72, 72, 3, 3]", arg256_1: "f32[72]", arg257_1: "f32[72]", arg258_1: "f32[72, 72, 3, 3]", arg259_1: "f32[72]", arg260_1: "f32[72]", arg261_1: "f32[72, 72, 3, 3]", arg262_1: "f32[72]", arg263_1: "f32[72]", arg264_1: "f32[72, 72, 3, 3]", arg265_1: "f32[72]", arg266_1: "f32[72]", arg267_1: "f32[72, 72, 3, 3]", arg268_1: "f32[72]", arg269_1: "f32[72]", arg270_1: "f32[72, 72, 3, 3]", arg271_1: "f32[72]", arg272_1: "f32[72]", arg273_1: "f32[18, 36, 1, 1]", arg274_1: "f32[18]", arg275_1: "f32[18]", arg276_1: "f32[18, 72, 1, 1]", arg277_1: "f32[18]", arg278_1: "f32[18]", arg279_1: "f32[36, 18, 3, 3]", arg280_1: "f32[36]", arg281_1: "f32[36]", arg282_1: "f32[36, 72, 1, 1]", arg283_1: "f32[36]", arg284_1: "f32[36]", arg285_1: "f32[18, 18, 3, 3]", arg286_1: "f32[18]", arg287_1: "f32[18]", arg288_1: "f32[72, 18, 3, 3]", arg289_1: "f32[72]", arg290_1: "f32[72]", arg291_1: "f32[72, 36, 3, 3]", arg292_1: "f32[72]", arg293_1: "f32[72]", arg294_1: "f32[18, 18, 3, 3]", arg295_1: "f32[18]", arg296_1: "f32[18]", arg297_1: "f32[18, 18, 3, 3]", arg298_1: "f32[18]", arg299_1: "f32[18]", arg300_1: "f32[18, 18, 3, 3]", arg301_1: "f32[18]", arg302_1: "f32[18]", arg303_1: "f32[18, 18, 3, 3]", arg304_1: "f32[18]", arg305_1: "f32[18]", arg306_1: "f32[18, 18, 3, 3]", arg307_1: "f32[18]", arg308_1: "f32[18]", arg309_1: "f32[18, 18, 3, 3]", arg310_1: "f32[18]", arg311_1: "f32[18]", arg312_1: "f32[18, 18, 3, 3]", arg313_1: "f32[18]", arg314_1: "f32[18]", arg315_1: "f32[18, 18, 3, 3]", arg316_1: "f32[18]", arg317_1: "f32[18]", arg318_1: "f32[36, 36, 3, 3]", arg319_1: "f32[36]", arg320_1: "f32[36]", arg321_1: "f32[36, 36, 3, 3]", arg322_1: "f32[36]", arg323_1: "f32[36]", arg324_1: "f32[36, 36, 3, 3]", arg325_1: "f32[36]", arg326_1: "f32[36]", arg327_1: "f32[36, 36, 3, 3]", arg328_1: "f32[36]", arg329_1: "f32[36]", arg330_1: "f32[36, 36, 3, 3]", arg331_1: "f32[36]", arg332_1: "f32[36]", arg333_1: "f32[36, 36, 3, 3]", arg334_1: "f32[36]", arg335_1: "f32[36]", arg336_1: "f32[36, 36, 3, 3]", arg337_1: "f32[36]", arg338_1: "f32[36]", arg339_1: "f32[36, 36, 3, 3]", arg340_1: "f32[36]", arg341_1: "f32[36]", arg342_1: "f32[72, 72, 3, 3]", arg343_1: "f32[72]", arg344_1: "f32[72]", arg345_1: "f32[72, 72, 3, 3]", arg346_1: "f32[72]", arg347_1: "f32[72]", arg348_1: "f32[72, 72, 3, 3]", arg349_1: "f32[72]", arg350_1: "f32[72]", arg351_1: "f32[72, 72, 3, 3]", arg352_1: "f32[72]", arg353_1: "f32[72]", arg354_1: "f32[72, 72, 3, 3]", arg355_1: "f32[72]", arg356_1: "f32[72]", arg357_1: "f32[72, 72, 3, 3]", arg358_1: "f32[72]", arg359_1: "f32[72]", arg360_1: "f32[72, 72, 3, 3]", arg361_1: "f32[72]", arg362_1: "f32[72]", arg363_1: "f32[72, 72, 3, 3]", arg364_1: "f32[72]", arg365_1: "f32[72]", arg366_1: "f32[18, 36, 1, 1]", arg367_1: "f32[18]", arg368_1: "f32[18]", arg369_1: "f32[18, 72, 1, 1]", arg370_1: "f32[18]", arg371_1: "f32[18]", arg372_1: "f32[36, 18, 3, 3]", arg373_1: "f32[36]", arg374_1: "f32[36]", arg375_1: "f32[36, 72, 1, 1]", arg376_1: "f32[36]", arg377_1: "f32[36]", arg378_1: "f32[18, 18, 3, 3]", arg379_1: "f32[18]", arg380_1: "f32[18]", arg381_1: "f32[72, 18, 3, 3]", arg382_1: "f32[72]", arg383_1: "f32[72]", arg384_1: "f32[72, 36, 3, 3]", arg385_1: "f32[72]", arg386_1: "f32[72]", arg387_1: "f32[18, 18, 3, 3]", arg388_1: "f32[18]", arg389_1: "f32[18]", arg390_1: "f32[18, 18, 3, 3]", arg391_1: "f32[18]", arg392_1: "f32[18]", arg393_1: "f32[18, 18, 3, 3]", arg394_1: "f32[18]", arg395_1: "f32[18]", arg396_1: "f32[18, 18, 3, 3]", arg397_1: "f32[18]", arg398_1: "f32[18]", arg399_1: "f32[18, 18, 3, 3]", arg400_1: "f32[18]", arg401_1: "f32[18]", arg402_1: "f32[18, 18, 3, 3]", arg403_1: "f32[18]", arg404_1: "f32[18]", arg405_1: "f32[18, 18, 3, 3]", arg406_1: "f32[18]", arg407_1: "f32[18]", arg408_1: "f32[18, 18, 3, 3]", arg409_1: "f32[18]", arg410_1: "f32[18]", arg411_1: "f32[36, 36, 3, 3]", arg412_1: "f32[36]", arg413_1: "f32[36]", arg414_1: "f32[36, 36, 3, 3]", arg415_1: "f32[36]", arg416_1: "f32[36]", arg417_1: "f32[36, 36, 3, 3]", arg418_1: "f32[36]", arg419_1: "f32[36]", arg420_1: "f32[36, 36, 3, 3]", arg421_1: "f32[36]", arg422_1: "f32[36]", arg423_1: "f32[36, 36, 3, 3]", arg424_1: "f32[36]", arg425_1: "f32[36]", arg426_1: "f32[36, 36, 3, 3]", arg427_1: "f32[36]", arg428_1: "f32[36]", arg429_1: "f32[36, 36, 3, 3]", arg430_1: "f32[36]", arg431_1: "f32[36]", arg432_1: "f32[36, 36, 3, 3]", arg433_1: "f32[36]", arg434_1: "f32[36]", arg435_1: "f32[72, 72, 3, 3]", arg436_1: "f32[72]", arg437_1: "f32[72]", arg438_1: "f32[72, 72, 3, 3]", arg439_1: "f32[72]", arg440_1: "f32[72]", arg441_1: "f32[72, 72, 3, 3]", arg442_1: "f32[72]", arg443_1: "f32[72]", arg444_1: "f32[72, 72, 3, 3]", arg445_1: "f32[72]", arg446_1: "f32[72]", arg447_1: "f32[72, 72, 3, 3]", arg448_1: "f32[72]", arg449_1: "f32[72]", arg450_1: "f32[72, 72, 3, 3]", arg451_1: "f32[72]", arg452_1: "f32[72]", arg453_1: "f32[72, 72, 3, 3]", arg454_1: "f32[72]", arg455_1: "f32[72]", arg456_1: "f32[72, 72, 3, 3]", arg457_1: "f32[72]", arg458_1: "f32[72]", arg459_1: "f32[18, 36, 1, 1]", arg460_1: "f32[18]", arg461_1: "f32[18]", arg462_1: "f32[18, 72, 1, 1]", arg463_1: "f32[18]", arg464_1: "f32[18]", arg465_1: "f32[36, 18, 3, 3]", arg466_1: "f32[36]", arg467_1: "f32[36]", arg468_1: "f32[36, 72, 1, 1]", arg469_1: "f32[36]", arg470_1: "f32[36]", arg471_1: "f32[18, 18, 3, 3]", arg472_1: "f32[18]", arg473_1: "f32[18]", arg474_1: "f32[72, 18, 3, 3]", arg475_1: "f32[72]", arg476_1: "f32[72]", arg477_1: "f32[72, 36, 3, 3]", arg478_1: "f32[72]", arg479_1: "f32[72]", arg480_1: "f32[144, 72, 3, 3]", arg481_1: "f32[144]", arg482_1: "f32[144]", arg483_1: "f32[18, 18, 3, 3]", arg484_1: "f32[18]", arg485_1: "f32[18]", arg486_1: "f32[18, 18, 3, 3]", arg487_1: "f32[18]", arg488_1: "f32[18]", arg489_1: "f32[18, 18, 3, 3]", arg490_1: "f32[18]", arg491_1: "f32[18]", arg492_1: "f32[18, 18, 3, 3]", arg493_1: "f32[18]", arg494_1: "f32[18]", arg495_1: "f32[18, 18, 3, 3]", arg496_1: "f32[18]", arg497_1: "f32[18]", arg498_1: "f32[18, 18, 3, 3]", arg499_1: "f32[18]", arg500_1: "f32[18]", arg501_1: "f32[18, 18, 3, 3]", arg502_1: "f32[18]", arg503_1: "f32[18]", arg504_1: "f32[18, 18, 3, 3]", arg505_1: "f32[18]", arg506_1: "f32[18]", arg507_1: "f32[36, 36, 3, 3]", arg508_1: "f32[36]", arg509_1: "f32[36]", arg510_1: "f32[36, 36, 3, 3]", arg511_1: "f32[36]", arg512_1: "f32[36]", arg513_1: "f32[36, 36, 3, 3]", arg514_1: "f32[36]", arg515_1: "f32[36]", arg516_1: "f32[36, 36, 3, 3]", arg517_1: "f32[36]", arg518_1: "f32[36]", arg519_1: "f32[36, 36, 3, 3]", arg520_1: "f32[36]", arg521_1: "f32[36]", arg522_1: "f32[36, 36, 3, 3]", arg523_1: "f32[36]", arg524_1: "f32[36]", arg525_1: "f32[36, 36, 3, 3]", arg526_1: "f32[36]", arg527_1: "f32[36]", arg528_1: "f32[36, 36, 3, 3]", arg529_1: "f32[36]", arg530_1: "f32[36]", arg531_1: "f32[72, 72, 3, 3]", arg532_1: "f32[72]", arg533_1: "f32[72]", arg534_1: "f32[72, 72, 3, 3]", arg535_1: "f32[72]", arg536_1: "f32[72]", arg537_1: "f32[72, 72, 3, 3]", arg538_1: "f32[72]", arg539_1: "f32[72]", arg540_1: "f32[72, 72, 3, 3]", arg541_1: "f32[72]", arg542_1: "f32[72]", arg543_1: "f32[72, 72, 3, 3]", arg544_1: "f32[72]", arg545_1: "f32[72]", arg546_1: "f32[72, 72, 3, 3]", arg547_1: "f32[72]", arg548_1: "f32[72]", arg549_1: "f32[72, 72, 3, 3]", arg550_1: "f32[72]", arg551_1: "f32[72]", arg552_1: "f32[72, 72, 3, 3]", arg553_1: "f32[72]", arg554_1: "f32[72]", arg555_1: "f32[144, 144, 3, 3]", arg556_1: "f32[144]", arg557_1: "f32[144]", arg558_1: "f32[144, 144, 3, 3]", arg559_1: "f32[144]", arg560_1: "f32[144]", arg561_1: "f32[144, 144, 3, 3]", arg562_1: "f32[144]", arg563_1: "f32[144]", arg564_1: "f32[144, 144, 3, 3]", arg565_1: "f32[144]", arg566_1: "f32[144]", arg567_1: "f32[144, 144, 3, 3]", arg568_1: "f32[144]", arg569_1: "f32[144]", arg570_1: "f32[144, 144, 3, 3]", arg571_1: "f32[144]", arg572_1: "f32[144]", arg573_1: "f32[144, 144, 3, 3]", arg574_1: "f32[144]", arg575_1: "f32[144]", arg576_1: "f32[144, 144, 3, 3]", arg577_1: "f32[144]", arg578_1: "f32[144]", arg579_1: "f32[18, 36, 1, 1]", arg580_1: "f32[18]", arg581_1: "f32[18]", arg582_1: "f32[18, 72, 1, 1]", arg583_1: "f32[18]", arg584_1: "f32[18]", arg585_1: "f32[18, 144, 1, 1]", arg586_1: "f32[18]", arg587_1: "f32[18]", arg588_1: "f32[36, 18, 3, 3]", arg589_1: "f32[36]", arg590_1: "f32[36]", arg591_1: "f32[36, 72, 1, 1]", arg592_1: "f32[36]", arg593_1: "f32[36]", arg594_1: "f32[36, 144, 1, 1]", arg595_1: "f32[36]", arg596_1: "f32[36]", arg597_1: "f32[18, 18, 3, 3]", arg598_1: "f32[18]", arg599_1: "f32[18]", arg600_1: "f32[72, 18, 3, 3]", arg601_1: "f32[72]", arg602_1: "f32[72]", arg603_1: "f32[72, 36, 3, 3]", arg604_1: "f32[72]", arg605_1: "f32[72]", arg606_1: "f32[72, 144, 1, 1]", arg607_1: "f32[72]", arg608_1: "f32[72]", arg609_1: "f32[18, 18, 3, 3]", arg610_1: "f32[18]", arg611_1: "f32[18]", arg612_1: "f32[18, 18, 3, 3]", arg613_1: "f32[18]", arg614_1: "f32[18]", arg615_1: "f32[144, 18, 3, 3]", arg616_1: "f32[144]", arg617_1: "f32[144]", arg618_1: "f32[36, 36, 3, 3]", arg619_1: "f32[36]", arg620_1: "f32[36]", arg621_1: "f32[144, 36, 3, 3]", arg622_1: "f32[144]", arg623_1: "f32[144]", arg624_1: "f32[144, 72, 3, 3]", arg625_1: "f32[144]", arg626_1: "f32[144]", arg627_1: "f32[18, 18, 3, 3]", arg628_1: "f32[18]", arg629_1: "f32[18]", arg630_1: "f32[18, 18, 3, 3]", arg631_1: "f32[18]", arg632_1: "f32[18]", arg633_1: "f32[18, 18, 3, 3]", arg634_1: "f32[18]", arg635_1: "f32[18]", arg636_1: "f32[18, 18, 3, 3]", arg637_1: "f32[18]", arg638_1: "f32[18]", arg639_1: "f32[18, 18, 3, 3]", arg640_1: "f32[18]", arg641_1: "f32[18]", arg642_1: "f32[18, 18, 3, 3]", arg643_1: "f32[18]", arg644_1: "f32[18]", arg645_1: "f32[18, 18, 3, 3]", arg646_1: "f32[18]", arg647_1: "f32[18]", arg648_1: "f32[18, 18, 3, 3]", arg649_1: "f32[18]", arg650_1: "f32[18]", arg651_1: "f32[36, 36, 3, 3]", arg652_1: "f32[36]", arg653_1: "f32[36]", arg654_1: "f32[36, 36, 3, 3]", arg655_1: "f32[36]", arg656_1: "f32[36]", arg657_1: "f32[36, 36, 3, 3]", arg658_1: "f32[36]", arg659_1: "f32[36]", arg660_1: "f32[36, 36, 3, 3]", arg661_1: "f32[36]", arg662_1: "f32[36]", arg663_1: "f32[36, 36, 3, 3]", arg664_1: "f32[36]", arg665_1: "f32[36]", arg666_1: "f32[36, 36, 3, 3]", arg667_1: "f32[36]", arg668_1: "f32[36]", arg669_1: "f32[36, 36, 3, 3]", arg670_1: "f32[36]", arg671_1: "f32[36]", arg672_1: "f32[36, 36, 3, 3]", arg673_1: "f32[36]", arg674_1: "f32[36]", arg675_1: "f32[72, 72, 3, 3]", arg676_1: "f32[72]", arg677_1: "f32[72]", arg678_1: "f32[72, 72, 3, 3]", arg679_1: "f32[72]", arg680_1: "f32[72]", arg681_1: "f32[72, 72, 3, 3]", arg682_1: "f32[72]", arg683_1: "f32[72]", arg684_1: "f32[72, 72, 3, 3]", arg685_1: "f32[72]", arg686_1: "f32[72]", arg687_1: "f32[72, 72, 3, 3]", arg688_1: "f32[72]", arg689_1: "f32[72]", arg690_1: "f32[72, 72, 3, 3]", arg691_1: "f32[72]", arg692_1: "f32[72]", arg693_1: "f32[72, 72, 3, 3]", arg694_1: "f32[72]", arg695_1: "f32[72]", arg696_1: "f32[72, 72, 3, 3]", arg697_1: "f32[72]", arg698_1: "f32[72]", arg699_1: "f32[144, 144, 3, 3]", arg700_1: "f32[144]", arg701_1: "f32[144]", arg702_1: "f32[144, 144, 3, 3]", arg703_1: "f32[144]", arg704_1: "f32[144]", arg705_1: "f32[144, 144, 3, 3]", arg706_1: "f32[144]", arg707_1: "f32[144]", arg708_1: "f32[144, 144, 3, 3]", arg709_1: "f32[144]", arg710_1: "f32[144]", arg711_1: "f32[144, 144, 3, 3]", arg712_1: "f32[144]", arg713_1: "f32[144]", arg714_1: "f32[144, 144, 3, 3]", arg715_1: "f32[144]", arg716_1: "f32[144]", arg717_1: "f32[144, 144, 3, 3]", arg718_1: "f32[144]", arg719_1: "f32[144]", arg720_1: "f32[144, 144, 3, 3]", arg721_1: "f32[144]", arg722_1: "f32[144]", arg723_1: "f32[18, 36, 1, 1]", arg724_1: "f32[18]", arg725_1: "f32[18]", arg726_1: "f32[18, 72, 1, 1]", arg727_1: "f32[18]", arg728_1: "f32[18]", arg729_1: "f32[18, 144, 1, 1]", arg730_1: "f32[18]", arg731_1: "f32[18]", arg732_1: "f32[36, 18, 3, 3]", arg733_1: "f32[36]", arg734_1: "f32[36]", arg735_1: "f32[36, 72, 1, 1]", arg736_1: "f32[36]", arg737_1: "f32[36]", arg738_1: "f32[36, 144, 1, 1]", arg739_1: "f32[36]", arg740_1: "f32[36]", arg741_1: "f32[18, 18, 3, 3]", arg742_1: "f32[18]", arg743_1: "f32[18]", arg744_1: "f32[72, 18, 3, 3]", arg745_1: "f32[72]", arg746_1: "f32[72]", arg747_1: "f32[72, 36, 3, 3]", arg748_1: "f32[72]", arg749_1: "f32[72]", arg750_1: "f32[72, 144, 1, 1]", arg751_1: "f32[72]", arg752_1: "f32[72]", arg753_1: "f32[18, 18, 3, 3]", arg754_1: "f32[18]", arg755_1: "f32[18]", arg756_1: "f32[18, 18, 3, 3]", arg757_1: "f32[18]", arg758_1: "f32[18]", arg759_1: "f32[144, 18, 3, 3]", arg760_1: "f32[144]", arg761_1: "f32[144]", arg762_1: "f32[36, 36, 3, 3]", arg763_1: "f32[36]", arg764_1: "f32[36]", arg765_1: "f32[144, 36, 3, 3]", arg766_1: "f32[144]", arg767_1: "f32[144]", arg768_1: "f32[144, 72, 3, 3]", arg769_1: "f32[144]", arg770_1: "f32[144]", arg771_1: "f32[18, 18, 3, 3]", arg772_1: "f32[18]", arg773_1: "f32[18]", arg774_1: "f32[18, 18, 3, 3]", arg775_1: "f32[18]", arg776_1: "f32[18]", arg777_1: "f32[18, 18, 3, 3]", arg778_1: "f32[18]", arg779_1: "f32[18]", arg780_1: "f32[18, 18, 3, 3]", arg781_1: "f32[18]", arg782_1: "f32[18]", arg783_1: "f32[18, 18, 3, 3]", arg784_1: "f32[18]", arg785_1: "f32[18]", arg786_1: "f32[18, 18, 3, 3]", arg787_1: "f32[18]", arg788_1: "f32[18]", arg789_1: "f32[18, 18, 3, 3]", arg790_1: "f32[18]", arg791_1: "f32[18]", arg792_1: "f32[18, 18, 3, 3]", arg793_1: "f32[18]", arg794_1: "f32[18]", arg795_1: "f32[36, 36, 3, 3]", arg796_1: "f32[36]", arg797_1: "f32[36]", arg798_1: "f32[36, 36, 3, 3]", arg799_1: "f32[36]", arg800_1: "f32[36]", arg801_1: "f32[36, 36, 3, 3]", arg802_1: "f32[36]", arg803_1: "f32[36]", arg804_1: "f32[36, 36, 3, 3]", arg805_1: "f32[36]", arg806_1: "f32[36]", arg807_1: "f32[36, 36, 3, 3]", arg808_1: "f32[36]", arg809_1: "f32[36]", arg810_1: "f32[36, 36, 3, 3]", arg811_1: "f32[36]", arg812_1: "f32[36]", arg813_1: "f32[36, 36, 3, 3]", arg814_1: "f32[36]", arg815_1: "f32[36]", arg816_1: "f32[36, 36, 3, 3]", arg817_1: "f32[36]", arg818_1: "f32[36]", arg819_1: "f32[72, 72, 3, 3]", arg820_1: "f32[72]", arg821_1: "f32[72]", arg822_1: "f32[72, 72, 3, 3]", arg823_1: "f32[72]", arg824_1: "f32[72]", arg825_1: "f32[72, 72, 3, 3]", arg826_1: "f32[72]", arg827_1: "f32[72]", arg828_1: "f32[72, 72, 3, 3]", arg829_1: "f32[72]", arg830_1: "f32[72]", arg831_1: "f32[72, 72, 3, 3]", arg832_1: "f32[72]", arg833_1: "f32[72]", arg834_1: "f32[72, 72, 3, 3]", arg835_1: "f32[72]", arg836_1: "f32[72]", arg837_1: "f32[72, 72, 3, 3]", arg838_1: "f32[72]", arg839_1: "f32[72]", arg840_1: "f32[72, 72, 3, 3]", arg841_1: "f32[72]", arg842_1: "f32[72]", arg843_1: "f32[144, 144, 3, 3]", arg844_1: "f32[144]", arg845_1: "f32[144]", arg846_1: "f32[144, 144, 3, 3]", arg847_1: "f32[144]", arg848_1: "f32[144]", arg849_1: "f32[144, 144, 3, 3]", arg850_1: "f32[144]", arg851_1: "f32[144]", arg852_1: "f32[144, 144, 3, 3]", arg853_1: "f32[144]", arg854_1: "f32[144]", arg855_1: "f32[144, 144, 3, 3]", arg856_1: "f32[144]", arg857_1: "f32[144]", arg858_1: "f32[144, 144, 3, 3]", arg859_1: "f32[144]", arg860_1: "f32[144]", arg861_1: "f32[144, 144, 3, 3]", arg862_1: "f32[144]", arg863_1: "f32[144]", arg864_1: "f32[144, 144, 3, 3]", arg865_1: "f32[144]", arg866_1: "f32[144]", arg867_1: "f32[18, 36, 1, 1]", arg868_1: "f32[18]", arg869_1: "f32[18]", arg870_1: "f32[18, 72, 1, 1]", arg871_1: "f32[18]", arg872_1: "f32[18]", arg873_1: "f32[18, 144, 1, 1]", arg874_1: "f32[18]", arg875_1: "f32[18]", arg876_1: "f32[36, 18, 3, 3]", arg877_1: "f32[36]", arg878_1: "f32[36]", arg879_1: "f32[36, 72, 1, 1]", arg880_1: "f32[36]", arg881_1: "f32[36]", arg882_1: "f32[36, 144, 1, 1]", arg883_1: "f32[36]", arg884_1: "f32[36]", arg885_1: "f32[18, 18, 3, 3]", arg886_1: "f32[18]", arg887_1: "f32[18]", arg888_1: "f32[72, 18, 3, 3]", arg889_1: "f32[72]", arg890_1: "f32[72]", arg891_1: "f32[72, 36, 3, 3]", arg892_1: "f32[72]", arg893_1: "f32[72]", arg894_1: "f32[72, 144, 1, 1]", arg895_1: "f32[72]", arg896_1: "f32[72]", arg897_1: "f32[18, 18, 3, 3]", arg898_1: "f32[18]", arg899_1: "f32[18]", arg900_1: "f32[18, 18, 3, 3]", arg901_1: "f32[18]", arg902_1: "f32[18]", arg903_1: "f32[144, 18, 3, 3]", arg904_1: "f32[144]", arg905_1: "f32[144]", arg906_1: "f32[36, 36, 3, 3]", arg907_1: "f32[36]", arg908_1: "f32[36]", arg909_1: "f32[144, 36, 3, 3]", arg910_1: "f32[144]", arg911_1: "f32[144]", arg912_1: "f32[144, 72, 3, 3]", arg913_1: "f32[144]", arg914_1: "f32[144]", arg915_1: "f32[32, 18, 1, 1]", arg916_1: "f32[32]", arg917_1: "f32[32]", arg918_1: "f32[32, 32, 3, 3]", arg919_1: "f32[32]", arg920_1: "f32[32]", arg921_1: "f32[128, 32, 1, 1]", arg922_1: "f32[128]", arg923_1: "f32[128]", arg924_1: "f32[128, 18, 1, 1]", arg925_1: "f32[128]", arg926_1: "f32[128]", arg927_1: "f32[64, 36, 1, 1]", arg928_1: "f32[64]", arg929_1: "f32[64]", arg930_1: "f32[64, 64, 3, 3]", arg931_1: "f32[64]", arg932_1: "f32[64]", arg933_1: "f32[256, 64, 1, 1]", arg934_1: "f32[256]", arg935_1: "f32[256]", arg936_1: "f32[256, 36, 1, 1]", arg937_1: "f32[256]", arg938_1: "f32[256]", arg939_1: "f32[256, 128, 3, 3]", arg940_1: "f32[256]", arg941_1: "f32[256]", arg942_1: "f32[256]", arg943_1: "f32[128, 72, 1, 1]", arg944_1: "f32[128]", arg945_1: "f32[128]", arg946_1: "f32[128, 128, 3, 3]", arg947_1: "f32[128]", arg948_1: "f32[128]", arg949_1: "f32[512, 128, 1, 1]", arg950_1: "f32[512]", arg951_1: "f32[512]", arg952_1: "f32[512, 72, 1, 1]", arg953_1: "f32[512]", arg954_1: "f32[512]", arg955_1: "f32[512, 256, 3, 3]", arg956_1: "f32[512]", arg957_1: "f32[512]", arg958_1: "f32[512]", arg959_1: "f32[256, 144, 1, 1]", arg960_1: "f32[256]", arg961_1: "f32[256]", arg962_1: "f32[256, 256, 3, 3]", arg963_1: "f32[256]", arg964_1: "f32[256]", arg965_1: "f32[1024, 256, 1, 1]", arg966_1: "f32[1024]", arg967_1: "f32[1024]", arg968_1: "f32[1024, 144, 1, 1]", arg969_1: "f32[1024]", arg970_1: "f32[1024]", arg971_1: "f32[1024, 512, 3, 3]", arg972_1: "f32[1024]", arg973_1: "f32[1024]", arg974_1: "f32[1024]", arg975_1: "f32[2048, 1024, 1, 1]", arg976_1: "f32[2048]", arg977_1: "f32[2048]", arg978_1: "f32[2048]", arg979_1: "f32[1000, 2048]", arg980_1: "f32[1000]", arg981_1: "f32[64]", arg982_1: "f32[64]", arg983_1: "i64[]", arg984_1: "f32[64]", arg985_1: "f32[64]", arg986_1: "i64[]", arg987_1: "f32[64]", arg988_1: "f32[64]", arg989_1: "i64[]", arg990_1: "f32[64]", arg991_1: "f32[64]", arg992_1: "i64[]", arg993_1: "f32[256]", arg994_1: "f32[256]", arg995_1: "i64[]", arg996_1: "f32[256]", arg997_1: "f32[256]", arg998_1: "i64[]", arg999_1: "f32[64]", arg1000_1: "f32[64]", arg1001_1: "i64[]", arg1002_1: "f32[64]", arg1003_1: "f32[64]", arg1004_1: "i64[]", arg1005_1: "f32[256]", arg1006_1: "f32[256]", arg1007_1: "i64[]", arg1008_1: "f32[64]", arg1009_1: "f32[64]", arg1010_1: "i64[]", arg1011_1: "f32[64]", arg1012_1: "f32[64]", arg1013_1: "i64[]", arg1014_1: "f32[256]", arg1015_1: "f32[256]", arg1016_1: "i64[]", arg1017_1: "f32[64]", arg1018_1: "f32[64]", arg1019_1: "i64[]", arg1020_1: "f32[64]", arg1021_1: "f32[64]", arg1022_1: "i64[]", arg1023_1: "f32[256]", arg1024_1: "f32[256]", arg1025_1: "i64[]", arg1026_1: "f32[18]", arg1027_1: "f32[18]", arg1028_1: "i64[]", arg1029_1: "f32[36]", arg1030_1: "f32[36]", arg1031_1: "i64[]", arg1032_1: "f32[18]", arg1033_1: "f32[18]", arg1034_1: "i64[]", arg1035_1: "f32[18]", arg1036_1: "f32[18]", arg1037_1: "i64[]", arg1038_1: "f32[18]", arg1039_1: "f32[18]", arg1040_1: "i64[]", arg1041_1: "f32[18]", arg1042_1: "f32[18]", arg1043_1: "i64[]", arg1044_1: "f32[18]", arg1045_1: "f32[18]", arg1046_1: "i64[]", arg1047_1: "f32[18]", arg1048_1: "f32[18]", arg1049_1: "i64[]", arg1050_1: "f32[18]", arg1051_1: "f32[18]", arg1052_1: "i64[]", arg1053_1: "f32[18]", arg1054_1: "f32[18]", arg1055_1: "i64[]", arg1056_1: "f32[36]", arg1057_1: "f32[36]", arg1058_1: "i64[]", arg1059_1: "f32[36]", arg1060_1: "f32[36]", arg1061_1: "i64[]", arg1062_1: "f32[36]", arg1063_1: "f32[36]", arg1064_1: "i64[]", arg1065_1: "f32[36]", arg1066_1: "f32[36]", arg1067_1: "i64[]", arg1068_1: "f32[36]", arg1069_1: "f32[36]", arg1070_1: "i64[]", arg1071_1: "f32[36]", arg1072_1: "f32[36]", arg1073_1: "i64[]", arg1074_1: "f32[36]", arg1075_1: "f32[36]", arg1076_1: "i64[]", arg1077_1: "f32[36]", arg1078_1: "f32[36]", arg1079_1: "i64[]", arg1080_1: "f32[18]", arg1081_1: "f32[18]", arg1082_1: "i64[]", arg1083_1: "f32[36]", arg1084_1: "f32[36]", arg1085_1: "i64[]", arg1086_1: "f32[72]", arg1087_1: "f32[72]", arg1088_1: "i64[]", arg1089_1: "f32[18]", arg1090_1: "f32[18]", arg1091_1: "i64[]", arg1092_1: "f32[18]", arg1093_1: "f32[18]", arg1094_1: "i64[]", arg1095_1: "f32[18]", arg1096_1: "f32[18]", arg1097_1: "i64[]", arg1098_1: "f32[18]", arg1099_1: "f32[18]", arg1100_1: "i64[]", arg1101_1: "f32[18]", arg1102_1: "f32[18]", arg1103_1: "i64[]", arg1104_1: "f32[18]", arg1105_1: "f32[18]", arg1106_1: "i64[]", arg1107_1: "f32[18]", arg1108_1: "f32[18]", arg1109_1: "i64[]", arg1110_1: "f32[18]", arg1111_1: "f32[18]", arg1112_1: "i64[]", arg1113_1: "f32[36]", arg1114_1: "f32[36]", arg1115_1: "i64[]", arg1116_1: "f32[36]", arg1117_1: "f32[36]", arg1118_1: "i64[]", arg1119_1: "f32[36]", arg1120_1: "f32[36]", arg1121_1: "i64[]", arg1122_1: "f32[36]", arg1123_1: "f32[36]", arg1124_1: "i64[]", arg1125_1: "f32[36]", arg1126_1: "f32[36]", arg1127_1: "i64[]", arg1128_1: "f32[36]", arg1129_1: "f32[36]", arg1130_1: "i64[]", arg1131_1: "f32[36]", arg1132_1: "f32[36]", arg1133_1: "i64[]", arg1134_1: "f32[36]", arg1135_1: "f32[36]", arg1136_1: "i64[]", arg1137_1: "f32[72]", arg1138_1: "f32[72]", arg1139_1: "i64[]", arg1140_1: "f32[72]", arg1141_1: "f32[72]", arg1142_1: "i64[]", arg1143_1: "f32[72]", arg1144_1: "f32[72]", arg1145_1: "i64[]", arg1146_1: "f32[72]", arg1147_1: "f32[72]", arg1148_1: "i64[]", arg1149_1: "f32[72]", arg1150_1: "f32[72]", arg1151_1: "i64[]", arg1152_1: "f32[72]", arg1153_1: "f32[72]", arg1154_1: "i64[]", arg1155_1: "f32[72]", arg1156_1: "f32[72]", arg1157_1: "i64[]", arg1158_1: "f32[72]", arg1159_1: "f32[72]", arg1160_1: "i64[]", arg1161_1: "f32[18]", arg1162_1: "f32[18]", arg1163_1: "i64[]", arg1164_1: "f32[18]", arg1165_1: "f32[18]", arg1166_1: "i64[]", arg1167_1: "f32[36]", arg1168_1: "f32[36]", arg1169_1: "i64[]", arg1170_1: "f32[36]", arg1171_1: "f32[36]", arg1172_1: "i64[]", arg1173_1: "f32[18]", arg1174_1: "f32[18]", arg1175_1: "i64[]", arg1176_1: "f32[72]", arg1177_1: "f32[72]", arg1178_1: "i64[]", arg1179_1: "f32[72]", arg1180_1: "f32[72]", arg1181_1: "i64[]", arg1182_1: "f32[18]", arg1183_1: "f32[18]", arg1184_1: "i64[]", arg1185_1: "f32[18]", arg1186_1: "f32[18]", arg1187_1: "i64[]", arg1188_1: "f32[18]", arg1189_1: "f32[18]", arg1190_1: "i64[]", arg1191_1: "f32[18]", arg1192_1: "f32[18]", arg1193_1: "i64[]", arg1194_1: "f32[18]", arg1195_1: "f32[18]", arg1196_1: "i64[]", arg1197_1: "f32[18]", arg1198_1: "f32[18]", arg1199_1: "i64[]", arg1200_1: "f32[18]", arg1201_1: "f32[18]", arg1202_1: "i64[]", arg1203_1: "f32[18]", arg1204_1: "f32[18]", arg1205_1: "i64[]", arg1206_1: "f32[36]", arg1207_1: "f32[36]", arg1208_1: "i64[]", arg1209_1: "f32[36]", arg1210_1: "f32[36]", arg1211_1: "i64[]", arg1212_1: "f32[36]", arg1213_1: "f32[36]", arg1214_1: "i64[]", arg1215_1: "f32[36]", arg1216_1: "f32[36]", arg1217_1: "i64[]", arg1218_1: "f32[36]", arg1219_1: "f32[36]", arg1220_1: "i64[]", arg1221_1: "f32[36]", arg1222_1: "f32[36]", arg1223_1: "i64[]", arg1224_1: "f32[36]", arg1225_1: "f32[36]", arg1226_1: "i64[]", arg1227_1: "f32[36]", arg1228_1: "f32[36]", arg1229_1: "i64[]", arg1230_1: "f32[72]", arg1231_1: "f32[72]", arg1232_1: "i64[]", arg1233_1: "f32[72]", arg1234_1: "f32[72]", arg1235_1: "i64[]", arg1236_1: "f32[72]", arg1237_1: "f32[72]", arg1238_1: "i64[]", arg1239_1: "f32[72]", arg1240_1: "f32[72]", arg1241_1: "i64[]", arg1242_1: "f32[72]", arg1243_1: "f32[72]", arg1244_1: "i64[]", arg1245_1: "f32[72]", arg1246_1: "f32[72]", arg1247_1: "i64[]", arg1248_1: "f32[72]", arg1249_1: "f32[72]", arg1250_1: "i64[]", arg1251_1: "f32[72]", arg1252_1: "f32[72]", arg1253_1: "i64[]", arg1254_1: "f32[18]", arg1255_1: "f32[18]", arg1256_1: "i64[]", arg1257_1: "f32[18]", arg1258_1: "f32[18]", arg1259_1: "i64[]", arg1260_1: "f32[36]", arg1261_1: "f32[36]", arg1262_1: "i64[]", arg1263_1: "f32[36]", arg1264_1: "f32[36]", arg1265_1: "i64[]", arg1266_1: "f32[18]", arg1267_1: "f32[18]", arg1268_1: "i64[]", arg1269_1: "f32[72]", arg1270_1: "f32[72]", arg1271_1: "i64[]", arg1272_1: "f32[72]", arg1273_1: "f32[72]", arg1274_1: "i64[]", arg1275_1: "f32[18]", arg1276_1: "f32[18]", arg1277_1: "i64[]", arg1278_1: "f32[18]", arg1279_1: "f32[18]", arg1280_1: "i64[]", arg1281_1: "f32[18]", arg1282_1: "f32[18]", arg1283_1: "i64[]", arg1284_1: "f32[18]", arg1285_1: "f32[18]", arg1286_1: "i64[]", arg1287_1: "f32[18]", arg1288_1: "f32[18]", arg1289_1: "i64[]", arg1290_1: "f32[18]", arg1291_1: "f32[18]", arg1292_1: "i64[]", arg1293_1: "f32[18]", arg1294_1: "f32[18]", arg1295_1: "i64[]", arg1296_1: "f32[18]", arg1297_1: "f32[18]", arg1298_1: "i64[]", arg1299_1: "f32[36]", arg1300_1: "f32[36]", arg1301_1: "i64[]", arg1302_1: "f32[36]", arg1303_1: "f32[36]", arg1304_1: "i64[]", arg1305_1: "f32[36]", arg1306_1: "f32[36]", arg1307_1: "i64[]", arg1308_1: "f32[36]", arg1309_1: "f32[36]", arg1310_1: "i64[]", arg1311_1: "f32[36]", arg1312_1: "f32[36]", arg1313_1: "i64[]", arg1314_1: "f32[36]", arg1315_1: "f32[36]", arg1316_1: "i64[]", arg1317_1: "f32[36]", arg1318_1: "f32[36]", arg1319_1: "i64[]", arg1320_1: "f32[36]", arg1321_1: "f32[36]", arg1322_1: "i64[]", arg1323_1: "f32[72]", arg1324_1: "f32[72]", arg1325_1: "i64[]", arg1326_1: "f32[72]", arg1327_1: "f32[72]", arg1328_1: "i64[]", arg1329_1: "f32[72]", arg1330_1: "f32[72]", arg1331_1: "i64[]", arg1332_1: "f32[72]", arg1333_1: "f32[72]", arg1334_1: "i64[]", arg1335_1: "f32[72]", arg1336_1: "f32[72]", arg1337_1: "i64[]", arg1338_1: "f32[72]", arg1339_1: "f32[72]", arg1340_1: "i64[]", arg1341_1: "f32[72]", arg1342_1: "f32[72]", arg1343_1: "i64[]", arg1344_1: "f32[72]", arg1345_1: "f32[72]", arg1346_1: "i64[]", arg1347_1: "f32[18]", arg1348_1: "f32[18]", arg1349_1: "i64[]", arg1350_1: "f32[18]", arg1351_1: "f32[18]", arg1352_1: "i64[]", arg1353_1: "f32[36]", arg1354_1: "f32[36]", arg1355_1: "i64[]", arg1356_1: "f32[36]", arg1357_1: "f32[36]", arg1358_1: "i64[]", arg1359_1: "f32[18]", arg1360_1: "f32[18]", arg1361_1: "i64[]", arg1362_1: "f32[72]", arg1363_1: "f32[72]", arg1364_1: "i64[]", arg1365_1: "f32[72]", arg1366_1: "f32[72]", arg1367_1: "i64[]", arg1368_1: "f32[18]", arg1369_1: "f32[18]", arg1370_1: "i64[]", arg1371_1: "f32[18]", arg1372_1: "f32[18]", arg1373_1: "i64[]", arg1374_1: "f32[18]", arg1375_1: "f32[18]", arg1376_1: "i64[]", arg1377_1: "f32[18]", arg1378_1: "f32[18]", arg1379_1: "i64[]", arg1380_1: "f32[18]", arg1381_1: "f32[18]", arg1382_1: "i64[]", arg1383_1: "f32[18]", arg1384_1: "f32[18]", arg1385_1: "i64[]", arg1386_1: "f32[18]", arg1387_1: "f32[18]", arg1388_1: "i64[]", arg1389_1: "f32[18]", arg1390_1: "f32[18]", arg1391_1: "i64[]", arg1392_1: "f32[36]", arg1393_1: "f32[36]", arg1394_1: "i64[]", arg1395_1: "f32[36]", arg1396_1: "f32[36]", arg1397_1: "i64[]", arg1398_1: "f32[36]", arg1399_1: "f32[36]", arg1400_1: "i64[]", arg1401_1: "f32[36]", arg1402_1: "f32[36]", arg1403_1: "i64[]", arg1404_1: "f32[36]", arg1405_1: "f32[36]", arg1406_1: "i64[]", arg1407_1: "f32[36]", arg1408_1: "f32[36]", arg1409_1: "i64[]", arg1410_1: "f32[36]", arg1411_1: "f32[36]", arg1412_1: "i64[]", arg1413_1: "f32[36]", arg1414_1: "f32[36]", arg1415_1: "i64[]", arg1416_1: "f32[72]", arg1417_1: "f32[72]", arg1418_1: "i64[]", arg1419_1: "f32[72]", arg1420_1: "f32[72]", arg1421_1: "i64[]", arg1422_1: "f32[72]", arg1423_1: "f32[72]", arg1424_1: "i64[]", arg1425_1: "f32[72]", arg1426_1: "f32[72]", arg1427_1: "i64[]", arg1428_1: "f32[72]", arg1429_1: "f32[72]", arg1430_1: "i64[]", arg1431_1: "f32[72]", arg1432_1: "f32[72]", arg1433_1: "i64[]", arg1434_1: "f32[72]", arg1435_1: "f32[72]", arg1436_1: "i64[]", arg1437_1: "f32[72]", arg1438_1: "f32[72]", arg1439_1: "i64[]", arg1440_1: "f32[18]", arg1441_1: "f32[18]", arg1442_1: "i64[]", arg1443_1: "f32[18]", arg1444_1: "f32[18]", arg1445_1: "i64[]", arg1446_1: "f32[36]", arg1447_1: "f32[36]", arg1448_1: "i64[]", arg1449_1: "f32[36]", arg1450_1: "f32[36]", arg1451_1: "i64[]", arg1452_1: "f32[18]", arg1453_1: "f32[18]", arg1454_1: "i64[]", arg1455_1: "f32[72]", arg1456_1: "f32[72]", arg1457_1: "i64[]", arg1458_1: "f32[72]", arg1459_1: "f32[72]", arg1460_1: "i64[]", arg1461_1: "f32[144]", arg1462_1: "f32[144]", arg1463_1: "i64[]", arg1464_1: "f32[18]", arg1465_1: "f32[18]", arg1466_1: "i64[]", arg1467_1: "f32[18]", arg1468_1: "f32[18]", arg1469_1: "i64[]", arg1470_1: "f32[18]", arg1471_1: "f32[18]", arg1472_1: "i64[]", arg1473_1: "f32[18]", arg1474_1: "f32[18]", arg1475_1: "i64[]", arg1476_1: "f32[18]", arg1477_1: "f32[18]", arg1478_1: "i64[]", arg1479_1: "f32[18]", arg1480_1: "f32[18]", arg1481_1: "i64[]", arg1482_1: "f32[18]", arg1483_1: "f32[18]", arg1484_1: "i64[]", arg1485_1: "f32[18]", arg1486_1: "f32[18]", arg1487_1: "i64[]", arg1488_1: "f32[36]", arg1489_1: "f32[36]", arg1490_1: "i64[]", arg1491_1: "f32[36]", arg1492_1: "f32[36]", arg1493_1: "i64[]", arg1494_1: "f32[36]", arg1495_1: "f32[36]", arg1496_1: "i64[]", arg1497_1: "f32[36]", arg1498_1: "f32[36]", arg1499_1: "i64[]", arg1500_1: "f32[36]", arg1501_1: "f32[36]", arg1502_1: "i64[]", arg1503_1: "f32[36]", arg1504_1: "f32[36]", arg1505_1: "i64[]", arg1506_1: "f32[36]", arg1507_1: "f32[36]", arg1508_1: "i64[]", arg1509_1: "f32[36]", arg1510_1: "f32[36]", arg1511_1: "i64[]", arg1512_1: "f32[72]", arg1513_1: "f32[72]", arg1514_1: "i64[]", arg1515_1: "f32[72]", arg1516_1: "f32[72]", arg1517_1: "i64[]", arg1518_1: "f32[72]", arg1519_1: "f32[72]", arg1520_1: "i64[]", arg1521_1: "f32[72]", arg1522_1: "f32[72]", arg1523_1: "i64[]", arg1524_1: "f32[72]", arg1525_1: "f32[72]", arg1526_1: "i64[]", arg1527_1: "f32[72]", arg1528_1: "f32[72]", arg1529_1: "i64[]", arg1530_1: "f32[72]", arg1531_1: "f32[72]", arg1532_1: "i64[]", arg1533_1: "f32[72]", arg1534_1: "f32[72]", arg1535_1: "i64[]", arg1536_1: "f32[144]", arg1537_1: "f32[144]", arg1538_1: "i64[]", arg1539_1: "f32[144]", arg1540_1: "f32[144]", arg1541_1: "i64[]", arg1542_1: "f32[144]", arg1543_1: "f32[144]", arg1544_1: "i64[]", arg1545_1: "f32[144]", arg1546_1: "f32[144]", arg1547_1: "i64[]", arg1548_1: "f32[144]", arg1549_1: "f32[144]", arg1550_1: "i64[]", arg1551_1: "f32[144]", arg1552_1: "f32[144]", arg1553_1: "i64[]", arg1554_1: "f32[144]", arg1555_1: "f32[144]", arg1556_1: "i64[]", arg1557_1: "f32[144]", arg1558_1: "f32[144]", arg1559_1: "i64[]", arg1560_1: "f32[18]", arg1561_1: "f32[18]", arg1562_1: "i64[]", arg1563_1: "f32[18]", arg1564_1: "f32[18]", arg1565_1: "i64[]", arg1566_1: "f32[18]", arg1567_1: "f32[18]", arg1568_1: "i64[]", arg1569_1: "f32[36]", arg1570_1: "f32[36]", arg1571_1: "i64[]", arg1572_1: "f32[36]", arg1573_1: "f32[36]", arg1574_1: "i64[]", arg1575_1: "f32[36]", arg1576_1: "f32[36]", arg1577_1: "i64[]", arg1578_1: "f32[18]", arg1579_1: "f32[18]", arg1580_1: "i64[]", arg1581_1: "f32[72]", arg1582_1: "f32[72]", arg1583_1: "i64[]", arg1584_1: "f32[72]", arg1585_1: "f32[72]", arg1586_1: "i64[]", arg1587_1: "f32[72]", arg1588_1: "f32[72]", arg1589_1: "i64[]", arg1590_1: "f32[18]", arg1591_1: "f32[18]", arg1592_1: "i64[]", arg1593_1: "f32[18]", arg1594_1: "f32[18]", arg1595_1: "i64[]", arg1596_1: "f32[144]", arg1597_1: "f32[144]", arg1598_1: "i64[]", arg1599_1: "f32[36]", arg1600_1: "f32[36]", arg1601_1: "i64[]", arg1602_1: "f32[144]", arg1603_1: "f32[144]", arg1604_1: "i64[]", arg1605_1: "f32[144]", arg1606_1: "f32[144]", arg1607_1: "i64[]", arg1608_1: "f32[18]", arg1609_1: "f32[18]", arg1610_1: "i64[]", arg1611_1: "f32[18]", arg1612_1: "f32[18]", arg1613_1: "i64[]", arg1614_1: "f32[18]", arg1615_1: "f32[18]", arg1616_1: "i64[]", arg1617_1: "f32[18]", arg1618_1: "f32[18]", arg1619_1: "i64[]", arg1620_1: "f32[18]", arg1621_1: "f32[18]", arg1622_1: "i64[]", arg1623_1: "f32[18]", arg1624_1: "f32[18]", arg1625_1: "i64[]", arg1626_1: "f32[18]", arg1627_1: "f32[18]", arg1628_1: "i64[]", arg1629_1: "f32[18]", arg1630_1: "f32[18]", arg1631_1: "i64[]", arg1632_1: "f32[36]", arg1633_1: "f32[36]", arg1634_1: "i64[]", arg1635_1: "f32[36]", arg1636_1: "f32[36]", arg1637_1: "i64[]", arg1638_1: "f32[36]", arg1639_1: "f32[36]", arg1640_1: "i64[]", arg1641_1: "f32[36]", arg1642_1: "f32[36]", arg1643_1: "i64[]", arg1644_1: "f32[36]", arg1645_1: "f32[36]", arg1646_1: "i64[]", arg1647_1: "f32[36]", arg1648_1: "f32[36]", arg1649_1: "i64[]", arg1650_1: "f32[36]", arg1651_1: "f32[36]", arg1652_1: "i64[]", arg1653_1: "f32[36]", arg1654_1: "f32[36]", arg1655_1: "i64[]", arg1656_1: "f32[72]", arg1657_1: "f32[72]", arg1658_1: "i64[]", arg1659_1: "f32[72]", arg1660_1: "f32[72]", arg1661_1: "i64[]", arg1662_1: "f32[72]", arg1663_1: "f32[72]", arg1664_1: "i64[]", arg1665_1: "f32[72]", arg1666_1: "f32[72]", arg1667_1: "i64[]", arg1668_1: "f32[72]", arg1669_1: "f32[72]", arg1670_1: "i64[]", arg1671_1: "f32[72]", arg1672_1: "f32[72]", arg1673_1: "i64[]", arg1674_1: "f32[72]", arg1675_1: "f32[72]", arg1676_1: "i64[]", arg1677_1: "f32[72]", arg1678_1: "f32[72]", arg1679_1: "i64[]", arg1680_1: "f32[144]", arg1681_1: "f32[144]", arg1682_1: "i64[]", arg1683_1: "f32[144]", arg1684_1: "f32[144]", arg1685_1: "i64[]", arg1686_1: "f32[144]", arg1687_1: "f32[144]", arg1688_1: "i64[]", arg1689_1: "f32[144]", arg1690_1: "f32[144]", arg1691_1: "i64[]", arg1692_1: "f32[144]", arg1693_1: "f32[144]", arg1694_1: "i64[]", arg1695_1: "f32[144]", arg1696_1: "f32[144]", arg1697_1: "i64[]", arg1698_1: "f32[144]", arg1699_1: "f32[144]", arg1700_1: "i64[]", arg1701_1: "f32[144]", arg1702_1: "f32[144]", arg1703_1: "i64[]", arg1704_1: "f32[18]", arg1705_1: "f32[18]", arg1706_1: "i64[]", arg1707_1: "f32[18]", arg1708_1: "f32[18]", arg1709_1: "i64[]", arg1710_1: "f32[18]", arg1711_1: "f32[18]", arg1712_1: "i64[]", arg1713_1: "f32[36]", arg1714_1: "f32[36]", arg1715_1: "i64[]", arg1716_1: "f32[36]", arg1717_1: "f32[36]", arg1718_1: "i64[]", arg1719_1: "f32[36]", arg1720_1: "f32[36]", arg1721_1: "i64[]", arg1722_1: "f32[18]", arg1723_1: "f32[18]", arg1724_1: "i64[]", arg1725_1: "f32[72]", arg1726_1: "f32[72]", arg1727_1: "i64[]", arg1728_1: "f32[72]", arg1729_1: "f32[72]", arg1730_1: "i64[]", arg1731_1: "f32[72]", arg1732_1: "f32[72]", arg1733_1: "i64[]", arg1734_1: "f32[18]", arg1735_1: "f32[18]", arg1736_1: "i64[]", arg1737_1: "f32[18]", arg1738_1: "f32[18]", arg1739_1: "i64[]", arg1740_1: "f32[144]", arg1741_1: "f32[144]", arg1742_1: "i64[]", arg1743_1: "f32[36]", arg1744_1: "f32[36]", arg1745_1: "i64[]", arg1746_1: "f32[144]", arg1747_1: "f32[144]", arg1748_1: "i64[]", arg1749_1: "f32[144]", arg1750_1: "f32[144]", arg1751_1: "i64[]", arg1752_1: "f32[18]", arg1753_1: "f32[18]", arg1754_1: "i64[]", arg1755_1: "f32[18]", arg1756_1: "f32[18]", arg1757_1: "i64[]", arg1758_1: "f32[18]", arg1759_1: "f32[18]", arg1760_1: "i64[]", arg1761_1: "f32[18]", arg1762_1: "f32[18]", arg1763_1: "i64[]", arg1764_1: "f32[18]", arg1765_1: "f32[18]", arg1766_1: "i64[]", arg1767_1: "f32[18]", arg1768_1: "f32[18]", arg1769_1: "i64[]", arg1770_1: "f32[18]", arg1771_1: "f32[18]", arg1772_1: "i64[]", arg1773_1: "f32[18]", arg1774_1: "f32[18]", arg1775_1: "i64[]", arg1776_1: "f32[36]", arg1777_1: "f32[36]", arg1778_1: "i64[]", arg1779_1: "f32[36]", arg1780_1: "f32[36]", arg1781_1: "i64[]", arg1782_1: "f32[36]", arg1783_1: "f32[36]", arg1784_1: "i64[]", arg1785_1: "f32[36]", arg1786_1: "f32[36]", arg1787_1: "i64[]", arg1788_1: "f32[36]", arg1789_1: "f32[36]", arg1790_1: "i64[]", arg1791_1: "f32[36]", arg1792_1: "f32[36]", arg1793_1: "i64[]", arg1794_1: "f32[36]", arg1795_1: "f32[36]", arg1796_1: "i64[]", arg1797_1: "f32[36]", arg1798_1: "f32[36]", arg1799_1: "i64[]", arg1800_1: "f32[72]", arg1801_1: "f32[72]", arg1802_1: "i64[]", arg1803_1: "f32[72]", arg1804_1: "f32[72]", arg1805_1: "i64[]", arg1806_1: "f32[72]", arg1807_1: "f32[72]", arg1808_1: "i64[]", arg1809_1: "f32[72]", arg1810_1: "f32[72]", arg1811_1: "i64[]", arg1812_1: "f32[72]", arg1813_1: "f32[72]", arg1814_1: "i64[]", arg1815_1: "f32[72]", arg1816_1: "f32[72]", arg1817_1: "i64[]", arg1818_1: "f32[72]", arg1819_1: "f32[72]", arg1820_1: "i64[]", arg1821_1: "f32[72]", arg1822_1: "f32[72]", arg1823_1: "i64[]", arg1824_1: "f32[144]", arg1825_1: "f32[144]", arg1826_1: "i64[]", arg1827_1: "f32[144]", arg1828_1: "f32[144]", arg1829_1: "i64[]", arg1830_1: "f32[144]", arg1831_1: "f32[144]", arg1832_1: "i64[]", arg1833_1: "f32[144]", arg1834_1: "f32[144]", arg1835_1: "i64[]", arg1836_1: "f32[144]", arg1837_1: "f32[144]", arg1838_1: "i64[]", arg1839_1: "f32[144]", arg1840_1: "f32[144]", arg1841_1: "i64[]", arg1842_1: "f32[144]", arg1843_1: "f32[144]", arg1844_1: "i64[]", arg1845_1: "f32[144]", arg1846_1: "f32[144]", arg1847_1: "i64[]", arg1848_1: "f32[18]", arg1849_1: "f32[18]", arg1850_1: "i64[]", arg1851_1: "f32[18]", arg1852_1: "f32[18]", arg1853_1: "i64[]", arg1854_1: "f32[18]", arg1855_1: "f32[18]", arg1856_1: "i64[]", arg1857_1: "f32[36]", arg1858_1: "f32[36]", arg1859_1: "i64[]", arg1860_1: "f32[36]", arg1861_1: "f32[36]", arg1862_1: "i64[]", arg1863_1: "f32[36]", arg1864_1: "f32[36]", arg1865_1: "i64[]", arg1866_1: "f32[18]", arg1867_1: "f32[18]", arg1868_1: "i64[]", arg1869_1: "f32[72]", arg1870_1: "f32[72]", arg1871_1: "i64[]", arg1872_1: "f32[72]", arg1873_1: "f32[72]", arg1874_1: "i64[]", arg1875_1: "f32[72]", arg1876_1: "f32[72]", arg1877_1: "i64[]", arg1878_1: "f32[18]", arg1879_1: "f32[18]", arg1880_1: "i64[]", arg1881_1: "f32[18]", arg1882_1: "f32[18]", arg1883_1: "i64[]", arg1884_1: "f32[144]", arg1885_1: "f32[144]", arg1886_1: "i64[]", arg1887_1: "f32[36]", arg1888_1: "f32[36]", arg1889_1: "i64[]", arg1890_1: "f32[144]", arg1891_1: "f32[144]", arg1892_1: "i64[]", arg1893_1: "f32[144]", arg1894_1: "f32[144]", arg1895_1: "i64[]", arg1896_1: "f32[32]", arg1897_1: "f32[32]", arg1898_1: "i64[]", arg1899_1: "f32[32]", arg1900_1: "f32[32]", arg1901_1: "i64[]", arg1902_1: "f32[128]", arg1903_1: "f32[128]", arg1904_1: "i64[]", arg1905_1: "f32[128]", arg1906_1: "f32[128]", arg1907_1: "i64[]", arg1908_1: "f32[64]", arg1909_1: "f32[64]", arg1910_1: "i64[]", arg1911_1: "f32[64]", arg1912_1: "f32[64]", arg1913_1: "i64[]", arg1914_1: "f32[256]", arg1915_1: "f32[256]", arg1916_1: "i64[]", arg1917_1: "f32[256]", arg1918_1: "f32[256]", arg1919_1: "i64[]", arg1920_1: "f32[256]", arg1921_1: "f32[256]", arg1922_1: "i64[]", arg1923_1: "f32[128]", arg1924_1: "f32[128]", arg1925_1: "i64[]", arg1926_1: "f32[128]", arg1927_1: "f32[128]", arg1928_1: "i64[]", arg1929_1: "f32[512]", arg1930_1: "f32[512]", arg1931_1: "i64[]", arg1932_1: "f32[512]", arg1933_1: "f32[512]", arg1934_1: "i64[]", arg1935_1: "f32[512]", arg1936_1: "f32[512]", arg1937_1: "i64[]", arg1938_1: "f32[256]", arg1939_1: "f32[256]", arg1940_1: "i64[]", arg1941_1: "f32[256]", arg1942_1: "f32[256]", arg1943_1: "i64[]", arg1944_1: "f32[1024]", arg1945_1: "f32[1024]", arg1946_1: "i64[]", arg1947_1: "f32[1024]", arg1948_1: "f32[1024]", arg1949_1: "i64[]", arg1950_1: "f32[1024]", arg1951_1: "f32[1024]", arg1952_1: "i64[]", arg1953_1: "f32[2048]", arg1954_1: "f32[2048]", arg1955_1: "i64[]", arg1956_1: "f32[8, 3, 224, 224]"):
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:762, code: x = self.conv1(x)
    convolution: "f32[8, 64, 112, 112]" = torch.ops.aten.convolution.default(arg1956_1, arg0_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg1956_1 = arg0_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:763, code: x = self.bn1(x)
    convert_element_type: "f32[64]" = torch.ops.prims.convert_element_type.default(arg981_1, torch.float32);  arg981_1 = None
    convert_element_type_1: "f32[64]" = torch.ops.prims.convert_element_type.default(arg982_1, torch.float32);  arg982_1 = None
    add: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_1, 1e-05);  convert_element_type_1 = None
    sqrt: "f32[64]" = torch.ops.aten.sqrt.default(add);  add = None
    reciprocal: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt);  sqrt = None
    mul: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal, 1);  reciprocal = None
    unsqueeze: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type, -1);  convert_element_type = None
    unsqueeze_1: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze, -1);  unsqueeze = None
    unsqueeze_2: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul, -1);  mul = None
    unsqueeze_3: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2, -1);  unsqueeze_2 = None
    sub: "f32[8, 64, 112, 112]" = torch.ops.aten.sub.Tensor(convolution, unsqueeze_1);  convolution = unsqueeze_1 = None
    mul_1: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(sub, unsqueeze_3);  sub = unsqueeze_3 = None
    unsqueeze_4: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg1_1, -1);  arg1_1 = None
    unsqueeze_5: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4, -1);  unsqueeze_4 = None
    mul_2: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(mul_1, unsqueeze_5);  mul_1 = unsqueeze_5 = None
    unsqueeze_6: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg2_1, -1);  arg2_1 = None
    unsqueeze_7: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_6, -1);  unsqueeze_6 = None
    add_1: "f32[8, 64, 112, 112]" = torch.ops.aten.add.Tensor(mul_2, unsqueeze_7);  mul_2 = unsqueeze_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:764, code: x = self.act1(x)
    relu: "f32[8, 64, 112, 112]" = torch.ops.aten.relu.default(add_1);  add_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:765, code: x = self.conv2(x)
    convolution_1: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu, arg3_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu = arg3_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:766, code: x = self.bn2(x)
    convert_element_type_2: "f32[64]" = torch.ops.prims.convert_element_type.default(arg984_1, torch.float32);  arg984_1 = None
    convert_element_type_3: "f32[64]" = torch.ops.prims.convert_element_type.default(arg985_1, torch.float32);  arg985_1 = None
    add_2: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_3, 1e-05);  convert_element_type_3 = None
    sqrt_1: "f32[64]" = torch.ops.aten.sqrt.default(add_2);  add_2 = None
    reciprocal_1: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_1);  sqrt_1 = None
    mul_3: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_1, 1);  reciprocal_1 = None
    unsqueeze_8: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_2, -1);  convert_element_type_2 = None
    unsqueeze_9: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_8, -1);  unsqueeze_8 = None
    unsqueeze_10: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_3, -1);  mul_3 = None
    unsqueeze_11: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_10, -1);  unsqueeze_10 = None
    sub_1: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_1, unsqueeze_9);  convolution_1 = unsqueeze_9 = None
    mul_4: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1, unsqueeze_11);  sub_1 = unsqueeze_11 = None
    unsqueeze_12: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg4_1, -1);  arg4_1 = None
    unsqueeze_13: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_12, -1);  unsqueeze_12 = None
    mul_5: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_4, unsqueeze_13);  mul_4 = unsqueeze_13 = None
    unsqueeze_14: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg5_1, -1);  arg5_1 = None
    unsqueeze_15: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_14, -1);  unsqueeze_14 = None
    add_3: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_5, unsqueeze_15);  mul_5 = unsqueeze_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:767, code: x = self.act2(x)
    relu_1: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_3);  add_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_2: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_1, arg6_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg6_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_4: "f32[64]" = torch.ops.prims.convert_element_type.default(arg987_1, torch.float32);  arg987_1 = None
    convert_element_type_5: "f32[64]" = torch.ops.prims.convert_element_type.default(arg988_1, torch.float32);  arg988_1 = None
    add_4: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_5, 1e-05);  convert_element_type_5 = None
    sqrt_2: "f32[64]" = torch.ops.aten.sqrt.default(add_4);  add_4 = None
    reciprocal_2: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_2);  sqrt_2 = None
    mul_6: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_2, 1);  reciprocal_2 = None
    unsqueeze_16: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_4, -1);  convert_element_type_4 = None
    unsqueeze_17: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_16, -1);  unsqueeze_16 = None
    unsqueeze_18: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_6, -1);  mul_6 = None
    unsqueeze_19: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_18, -1);  unsqueeze_18 = None
    sub_2: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_2, unsqueeze_17);  convolution_2 = unsqueeze_17 = None
    mul_7: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_2, unsqueeze_19);  sub_2 = unsqueeze_19 = None
    unsqueeze_20: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg7_1, -1);  arg7_1 = None
    unsqueeze_21: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_20, -1);  unsqueeze_20 = None
    mul_8: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_7, unsqueeze_21);  mul_7 = unsqueeze_21 = None
    unsqueeze_22: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg8_1, -1);  arg8_1 = None
    unsqueeze_23: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_22, -1);  unsqueeze_22 = None
    add_5: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_8, unsqueeze_23);  mul_8 = unsqueeze_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_2: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_5);  add_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_3: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_2, arg9_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_2 = arg9_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_6: "f32[64]" = torch.ops.prims.convert_element_type.default(arg990_1, torch.float32);  arg990_1 = None
    convert_element_type_7: "f32[64]" = torch.ops.prims.convert_element_type.default(arg991_1, torch.float32);  arg991_1 = None
    add_6: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_7, 1e-05);  convert_element_type_7 = None
    sqrt_3: "f32[64]" = torch.ops.aten.sqrt.default(add_6);  add_6 = None
    reciprocal_3: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_3);  sqrt_3 = None
    mul_9: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_3, 1);  reciprocal_3 = None
    unsqueeze_24: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_6, -1);  convert_element_type_6 = None
    unsqueeze_25: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_24, -1);  unsqueeze_24 = None
    unsqueeze_26: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_9, -1);  mul_9 = None
    unsqueeze_27: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_26, -1);  unsqueeze_26 = None
    sub_3: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_3, unsqueeze_25);  convolution_3 = unsqueeze_25 = None
    mul_10: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_3, unsqueeze_27);  sub_3 = unsqueeze_27 = None
    unsqueeze_28: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg10_1, -1);  arg10_1 = None
    unsqueeze_29: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_28, -1);  unsqueeze_28 = None
    mul_11: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_10, unsqueeze_29);  mul_10 = unsqueeze_29 = None
    unsqueeze_30: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg11_1, -1);  arg11_1 = None
    unsqueeze_31: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_30, -1);  unsqueeze_30 = None
    add_7: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_11, unsqueeze_31);  mul_11 = unsqueeze_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_3: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_7);  add_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_4: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_3, arg12_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_3 = arg12_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_8: "f32[256]" = torch.ops.prims.convert_element_type.default(arg993_1, torch.float32);  arg993_1 = None
    convert_element_type_9: "f32[256]" = torch.ops.prims.convert_element_type.default(arg994_1, torch.float32);  arg994_1 = None
    add_8: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_9, 1e-05);  convert_element_type_9 = None
    sqrt_4: "f32[256]" = torch.ops.aten.sqrt.default(add_8);  add_8 = None
    reciprocal_4: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_4);  sqrt_4 = None
    mul_12: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_4, 1);  reciprocal_4 = None
    unsqueeze_32: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_8, -1);  convert_element_type_8 = None
    unsqueeze_33: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_32, -1);  unsqueeze_32 = None
    unsqueeze_34: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_12, -1);  mul_12 = None
    unsqueeze_35: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_34, -1);  unsqueeze_34 = None
    sub_4: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_4, unsqueeze_33);  convolution_4 = unsqueeze_33 = None
    mul_13: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_4, unsqueeze_35);  sub_4 = unsqueeze_35 = None
    unsqueeze_36: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg13_1, -1);  arg13_1 = None
    unsqueeze_37: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_36, -1);  unsqueeze_36 = None
    mul_14: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_13, unsqueeze_37);  mul_13 = unsqueeze_37 = None
    unsqueeze_38: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg14_1, -1);  arg14_1 = None
    unsqueeze_39: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_38, -1);  unsqueeze_38 = None
    add_9: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_14, unsqueeze_39);  mul_14 = unsqueeze_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_5: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_1, arg15_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_1 = arg15_1 = None
    convert_element_type_10: "f32[256]" = torch.ops.prims.convert_element_type.default(arg996_1, torch.float32);  arg996_1 = None
    convert_element_type_11: "f32[256]" = torch.ops.prims.convert_element_type.default(arg997_1, torch.float32);  arg997_1 = None
    add_10: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_11, 1e-05);  convert_element_type_11 = None
    sqrt_5: "f32[256]" = torch.ops.aten.sqrt.default(add_10);  add_10 = None
    reciprocal_5: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_5);  sqrt_5 = None
    mul_15: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_5, 1);  reciprocal_5 = None
    unsqueeze_40: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_10, -1);  convert_element_type_10 = None
    unsqueeze_41: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_40, -1);  unsqueeze_40 = None
    unsqueeze_42: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_15, -1);  mul_15 = None
    unsqueeze_43: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_42, -1);  unsqueeze_42 = None
    sub_5: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_5, unsqueeze_41);  convolution_5 = unsqueeze_41 = None
    mul_16: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_5, unsqueeze_43);  sub_5 = unsqueeze_43 = None
    unsqueeze_44: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg16_1, -1);  arg16_1 = None
    unsqueeze_45: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_44, -1);  unsqueeze_44 = None
    mul_17: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_16, unsqueeze_45);  mul_16 = unsqueeze_45 = None
    unsqueeze_46: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg17_1, -1);  arg17_1 = None
    unsqueeze_47: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_46, -1);  unsqueeze_46 = None
    add_11: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_17, unsqueeze_47);  mul_17 = unsqueeze_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_12: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_9, add_11);  add_9 = add_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_4: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_12);  add_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_6: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_4, arg18_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg18_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_12: "f32[64]" = torch.ops.prims.convert_element_type.default(arg999_1, torch.float32);  arg999_1 = None
    convert_element_type_13: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1000_1, torch.float32);  arg1000_1 = None
    add_13: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_13, 1e-05);  convert_element_type_13 = None
    sqrt_6: "f32[64]" = torch.ops.aten.sqrt.default(add_13);  add_13 = None
    reciprocal_6: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_6);  sqrt_6 = None
    mul_18: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_6, 1);  reciprocal_6 = None
    unsqueeze_48: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_12, -1);  convert_element_type_12 = None
    unsqueeze_49: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_48, -1);  unsqueeze_48 = None
    unsqueeze_50: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_18, -1);  mul_18 = None
    unsqueeze_51: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_50, -1);  unsqueeze_50 = None
    sub_6: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_6, unsqueeze_49);  convolution_6 = unsqueeze_49 = None
    mul_19: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_6, unsqueeze_51);  sub_6 = unsqueeze_51 = None
    unsqueeze_52: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg19_1, -1);  arg19_1 = None
    unsqueeze_53: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_52, -1);  unsqueeze_52 = None
    mul_20: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_19, unsqueeze_53);  mul_19 = unsqueeze_53 = None
    unsqueeze_54: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg20_1, -1);  arg20_1 = None
    unsqueeze_55: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_54, -1);  unsqueeze_54 = None
    add_14: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_20, unsqueeze_55);  mul_20 = unsqueeze_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_5: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_14);  add_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_7: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_5, arg21_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_5 = arg21_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_14: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1002_1, torch.float32);  arg1002_1 = None
    convert_element_type_15: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1003_1, torch.float32);  arg1003_1 = None
    add_15: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_15, 1e-05);  convert_element_type_15 = None
    sqrt_7: "f32[64]" = torch.ops.aten.sqrt.default(add_15);  add_15 = None
    reciprocal_7: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_7);  sqrt_7 = None
    mul_21: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_7, 1);  reciprocal_7 = None
    unsqueeze_56: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_14, -1);  convert_element_type_14 = None
    unsqueeze_57: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_56, -1);  unsqueeze_56 = None
    unsqueeze_58: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_21, -1);  mul_21 = None
    unsqueeze_59: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_58, -1);  unsqueeze_58 = None
    sub_7: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_7, unsqueeze_57);  convolution_7 = unsqueeze_57 = None
    mul_22: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_7, unsqueeze_59);  sub_7 = unsqueeze_59 = None
    unsqueeze_60: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg22_1, -1);  arg22_1 = None
    unsqueeze_61: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_60, -1);  unsqueeze_60 = None
    mul_23: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_22, unsqueeze_61);  mul_22 = unsqueeze_61 = None
    unsqueeze_62: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg23_1, -1);  arg23_1 = None
    unsqueeze_63: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_62, -1);  unsqueeze_62 = None
    add_16: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_23, unsqueeze_63);  mul_23 = unsqueeze_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_6: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_16);  add_16 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_8: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_6, arg24_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_6 = arg24_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_16: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1005_1, torch.float32);  arg1005_1 = None
    convert_element_type_17: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1006_1, torch.float32);  arg1006_1 = None
    add_17: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_17, 1e-05);  convert_element_type_17 = None
    sqrt_8: "f32[256]" = torch.ops.aten.sqrt.default(add_17);  add_17 = None
    reciprocal_8: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_8);  sqrt_8 = None
    mul_24: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_8, 1);  reciprocal_8 = None
    unsqueeze_64: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_16, -1);  convert_element_type_16 = None
    unsqueeze_65: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_64, -1);  unsqueeze_64 = None
    unsqueeze_66: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_24, -1);  mul_24 = None
    unsqueeze_67: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_66, -1);  unsqueeze_66 = None
    sub_8: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_8, unsqueeze_65);  convolution_8 = unsqueeze_65 = None
    mul_25: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_8, unsqueeze_67);  sub_8 = unsqueeze_67 = None
    unsqueeze_68: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg25_1, -1);  arg25_1 = None
    unsqueeze_69: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_68, -1);  unsqueeze_68 = None
    mul_26: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_25, unsqueeze_69);  mul_25 = unsqueeze_69 = None
    unsqueeze_70: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg26_1, -1);  arg26_1 = None
    unsqueeze_71: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_70, -1);  unsqueeze_70 = None
    add_18: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_26, unsqueeze_71);  mul_26 = unsqueeze_71 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_19: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_18, relu_4);  add_18 = relu_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_7: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_19);  add_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_9: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_7, arg27_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg27_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_18: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1008_1, torch.float32);  arg1008_1 = None
    convert_element_type_19: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1009_1, torch.float32);  arg1009_1 = None
    add_20: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_19, 1e-05);  convert_element_type_19 = None
    sqrt_9: "f32[64]" = torch.ops.aten.sqrt.default(add_20);  add_20 = None
    reciprocal_9: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_9);  sqrt_9 = None
    mul_27: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_9, 1);  reciprocal_9 = None
    unsqueeze_72: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_18, -1);  convert_element_type_18 = None
    unsqueeze_73: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_72, -1);  unsqueeze_72 = None
    unsqueeze_74: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_27, -1);  mul_27 = None
    unsqueeze_75: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_74, -1);  unsqueeze_74 = None
    sub_9: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_9, unsqueeze_73);  convolution_9 = unsqueeze_73 = None
    mul_28: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_9, unsqueeze_75);  sub_9 = unsqueeze_75 = None
    unsqueeze_76: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg28_1, -1);  arg28_1 = None
    unsqueeze_77: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_76, -1);  unsqueeze_76 = None
    mul_29: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_28, unsqueeze_77);  mul_28 = unsqueeze_77 = None
    unsqueeze_78: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg29_1, -1);  arg29_1 = None
    unsqueeze_79: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_78, -1);  unsqueeze_78 = None
    add_21: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_29, unsqueeze_79);  mul_29 = unsqueeze_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_8: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_21);  add_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_10: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_8, arg30_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_8 = arg30_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_20: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1011_1, torch.float32);  arg1011_1 = None
    convert_element_type_21: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1012_1, torch.float32);  arg1012_1 = None
    add_22: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_21, 1e-05);  convert_element_type_21 = None
    sqrt_10: "f32[64]" = torch.ops.aten.sqrt.default(add_22);  add_22 = None
    reciprocal_10: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_10);  sqrt_10 = None
    mul_30: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_10, 1);  reciprocal_10 = None
    unsqueeze_80: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_20, -1);  convert_element_type_20 = None
    unsqueeze_81: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_80, -1);  unsqueeze_80 = None
    unsqueeze_82: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_30, -1);  mul_30 = None
    unsqueeze_83: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_82, -1);  unsqueeze_82 = None
    sub_10: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_10, unsqueeze_81);  convolution_10 = unsqueeze_81 = None
    mul_31: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_10, unsqueeze_83);  sub_10 = unsqueeze_83 = None
    unsqueeze_84: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg31_1, -1);  arg31_1 = None
    unsqueeze_85: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_84, -1);  unsqueeze_84 = None
    mul_32: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_31, unsqueeze_85);  mul_31 = unsqueeze_85 = None
    unsqueeze_86: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg32_1, -1);  arg32_1 = None
    unsqueeze_87: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_86, -1);  unsqueeze_86 = None
    add_23: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_32, unsqueeze_87);  mul_32 = unsqueeze_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_9: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_23);  add_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_11: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_9, arg33_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_9 = arg33_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_22: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1014_1, torch.float32);  arg1014_1 = None
    convert_element_type_23: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1015_1, torch.float32);  arg1015_1 = None
    add_24: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_23, 1e-05);  convert_element_type_23 = None
    sqrt_11: "f32[256]" = torch.ops.aten.sqrt.default(add_24);  add_24 = None
    reciprocal_11: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_11);  sqrt_11 = None
    mul_33: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_11, 1);  reciprocal_11 = None
    unsqueeze_88: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_22, -1);  convert_element_type_22 = None
    unsqueeze_89: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_88, -1);  unsqueeze_88 = None
    unsqueeze_90: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_33, -1);  mul_33 = None
    unsqueeze_91: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_90, -1);  unsqueeze_90 = None
    sub_11: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_11, unsqueeze_89);  convolution_11 = unsqueeze_89 = None
    mul_34: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_11, unsqueeze_91);  sub_11 = unsqueeze_91 = None
    unsqueeze_92: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg34_1, -1);  arg34_1 = None
    unsqueeze_93: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_92, -1);  unsqueeze_92 = None
    mul_35: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_34, unsqueeze_93);  mul_34 = unsqueeze_93 = None
    unsqueeze_94: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg35_1, -1);  arg35_1 = None
    unsqueeze_95: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_94, -1);  unsqueeze_94 = None
    add_25: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_35, unsqueeze_95);  mul_35 = unsqueeze_95 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_26: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_25, relu_7);  add_25 = relu_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_10: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_26);  add_26 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_12: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_10, arg36_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg36_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_24: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1017_1, torch.float32);  arg1017_1 = None
    convert_element_type_25: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1018_1, torch.float32);  arg1018_1 = None
    add_27: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_25, 1e-05);  convert_element_type_25 = None
    sqrt_12: "f32[64]" = torch.ops.aten.sqrt.default(add_27);  add_27 = None
    reciprocal_12: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_12);  sqrt_12 = None
    mul_36: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_12, 1);  reciprocal_12 = None
    unsqueeze_96: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_24, -1);  convert_element_type_24 = None
    unsqueeze_97: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_96, -1);  unsqueeze_96 = None
    unsqueeze_98: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_36, -1);  mul_36 = None
    unsqueeze_99: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_98, -1);  unsqueeze_98 = None
    sub_12: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_12, unsqueeze_97);  convolution_12 = unsqueeze_97 = None
    mul_37: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_12, unsqueeze_99);  sub_12 = unsqueeze_99 = None
    unsqueeze_100: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg37_1, -1);  arg37_1 = None
    unsqueeze_101: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_100, -1);  unsqueeze_100 = None
    mul_38: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_37, unsqueeze_101);  mul_37 = unsqueeze_101 = None
    unsqueeze_102: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg38_1, -1);  arg38_1 = None
    unsqueeze_103: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_102, -1);  unsqueeze_102 = None
    add_28: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_38, unsqueeze_103);  mul_38 = unsqueeze_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_11: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_28);  add_28 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_13: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_11, arg39_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_11 = arg39_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_26: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1020_1, torch.float32);  arg1020_1 = None
    convert_element_type_27: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1021_1, torch.float32);  arg1021_1 = None
    add_29: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_27, 1e-05);  convert_element_type_27 = None
    sqrt_13: "f32[64]" = torch.ops.aten.sqrt.default(add_29);  add_29 = None
    reciprocal_13: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_13);  sqrt_13 = None
    mul_39: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_13, 1);  reciprocal_13 = None
    unsqueeze_104: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_26, -1);  convert_element_type_26 = None
    unsqueeze_105: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_104, -1);  unsqueeze_104 = None
    unsqueeze_106: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_39, -1);  mul_39 = None
    unsqueeze_107: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_106, -1);  unsqueeze_106 = None
    sub_13: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_13, unsqueeze_105);  convolution_13 = unsqueeze_105 = None
    mul_40: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_13, unsqueeze_107);  sub_13 = unsqueeze_107 = None
    unsqueeze_108: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg40_1, -1);  arg40_1 = None
    unsqueeze_109: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_108, -1);  unsqueeze_108 = None
    mul_41: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_40, unsqueeze_109);  mul_40 = unsqueeze_109 = None
    unsqueeze_110: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg41_1, -1);  arg41_1 = None
    unsqueeze_111: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_110, -1);  unsqueeze_110 = None
    add_30: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_41, unsqueeze_111);  mul_41 = unsqueeze_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_12: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_30);  add_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_14: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_12, arg42_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_12 = arg42_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_28: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1023_1, torch.float32);  arg1023_1 = None
    convert_element_type_29: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1024_1, torch.float32);  arg1024_1 = None
    add_31: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_29, 1e-05);  convert_element_type_29 = None
    sqrt_14: "f32[256]" = torch.ops.aten.sqrt.default(add_31);  add_31 = None
    reciprocal_14: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_14);  sqrt_14 = None
    mul_42: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_14, 1);  reciprocal_14 = None
    unsqueeze_112: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_28, -1);  convert_element_type_28 = None
    unsqueeze_113: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_112, -1);  unsqueeze_112 = None
    unsqueeze_114: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_42, -1);  mul_42 = None
    unsqueeze_115: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_114, -1);  unsqueeze_114 = None
    sub_14: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_14, unsqueeze_113);  convolution_14 = unsqueeze_113 = None
    mul_43: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_14, unsqueeze_115);  sub_14 = unsqueeze_115 = None
    unsqueeze_116: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg43_1, -1);  arg43_1 = None
    unsqueeze_117: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_116, -1);  unsqueeze_116 = None
    mul_44: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_43, unsqueeze_117);  mul_43 = unsqueeze_117 = None
    unsqueeze_118: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg44_1, -1);  arg44_1 = None
    unsqueeze_119: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_118, -1);  unsqueeze_118 = None
    add_32: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_44, unsqueeze_119);  mul_44 = unsqueeze_119 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_33: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_32, relu_10);  add_32 = relu_10 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_13: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_33);  add_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:750, code: xl = [t(x) for i, t in enumerate(self.transition1)]
    convolution_15: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_13, arg45_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg45_1 = None
    convert_element_type_30: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1026_1, torch.float32);  arg1026_1 = None
    convert_element_type_31: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1027_1, torch.float32);  arg1027_1 = None
    add_34: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_31, 1e-05);  convert_element_type_31 = None
    sqrt_15: "f32[18]" = torch.ops.aten.sqrt.default(add_34);  add_34 = None
    reciprocal_15: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_15);  sqrt_15 = None
    mul_45: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_15, 1);  reciprocal_15 = None
    unsqueeze_120: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_30, -1);  convert_element_type_30 = None
    unsqueeze_121: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_120, -1);  unsqueeze_120 = None
    unsqueeze_122: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_45, -1);  mul_45 = None
    unsqueeze_123: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_122, -1);  unsqueeze_122 = None
    sub_15: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_15, unsqueeze_121);  convolution_15 = unsqueeze_121 = None
    mul_46: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_15, unsqueeze_123);  sub_15 = unsqueeze_123 = None
    unsqueeze_124: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg46_1, -1);  arg46_1 = None
    unsqueeze_125: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_124, -1);  unsqueeze_124 = None
    mul_47: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_46, unsqueeze_125);  mul_46 = unsqueeze_125 = None
    unsqueeze_126: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg47_1, -1);  arg47_1 = None
    unsqueeze_127: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_126, -1);  unsqueeze_126 = None
    add_35: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_47, unsqueeze_127);  mul_47 = unsqueeze_127 = None
    relu_14: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_35);  add_35 = None
    convolution_16: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_13, arg48_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_13 = arg48_1 = None
    convert_element_type_32: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1029_1, torch.float32);  arg1029_1 = None
    convert_element_type_33: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1030_1, torch.float32);  arg1030_1 = None
    add_36: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_33, 1e-05);  convert_element_type_33 = None
    sqrt_16: "f32[36]" = torch.ops.aten.sqrt.default(add_36);  add_36 = None
    reciprocal_16: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_16);  sqrt_16 = None
    mul_48: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_16, 1);  reciprocal_16 = None
    unsqueeze_128: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_32, -1);  convert_element_type_32 = None
    unsqueeze_129: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_128, -1);  unsqueeze_128 = None
    unsqueeze_130: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_48, -1);  mul_48 = None
    unsqueeze_131: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_130, -1);  unsqueeze_130 = None
    sub_16: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_16, unsqueeze_129);  convolution_16 = unsqueeze_129 = None
    mul_49: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_16, unsqueeze_131);  sub_16 = unsqueeze_131 = None
    unsqueeze_132: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg49_1, -1);  arg49_1 = None
    unsqueeze_133: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_132, -1);  unsqueeze_132 = None
    mul_50: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_49, unsqueeze_133);  mul_49 = unsqueeze_133 = None
    unsqueeze_134: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg50_1, -1);  arg50_1 = None
    unsqueeze_135: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_134, -1);  unsqueeze_134 = None
    add_37: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_50, unsqueeze_135);  mul_50 = unsqueeze_135 = None
    relu_15: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_37);  add_37 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_17: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_14, arg51_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg51_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_34: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1032_1, torch.float32);  arg1032_1 = None
    convert_element_type_35: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1033_1, torch.float32);  arg1033_1 = None
    add_38: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_35, 1e-05);  convert_element_type_35 = None
    sqrt_17: "f32[18]" = torch.ops.aten.sqrt.default(add_38);  add_38 = None
    reciprocal_17: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_17);  sqrt_17 = None
    mul_51: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_17, 1);  reciprocal_17 = None
    unsqueeze_136: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_34, -1);  convert_element_type_34 = None
    unsqueeze_137: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_136, -1);  unsqueeze_136 = None
    unsqueeze_138: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_51, -1);  mul_51 = None
    unsqueeze_139: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_138, -1);  unsqueeze_138 = None
    sub_17: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_17, unsqueeze_137);  convolution_17 = unsqueeze_137 = None
    mul_52: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_17, unsqueeze_139);  sub_17 = unsqueeze_139 = None
    unsqueeze_140: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg52_1, -1);  arg52_1 = None
    unsqueeze_141: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_140, -1);  unsqueeze_140 = None
    mul_53: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_52, unsqueeze_141);  mul_52 = unsqueeze_141 = None
    unsqueeze_142: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg53_1, -1);  arg53_1 = None
    unsqueeze_143: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_142, -1);  unsqueeze_142 = None
    add_39: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_53, unsqueeze_143);  mul_53 = unsqueeze_143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_16: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_39);  add_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_18: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_16, arg54_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_16 = arg54_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_36: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1035_1, torch.float32);  arg1035_1 = None
    convert_element_type_37: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1036_1, torch.float32);  arg1036_1 = None
    add_40: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_37, 1e-05);  convert_element_type_37 = None
    sqrt_18: "f32[18]" = torch.ops.aten.sqrt.default(add_40);  add_40 = None
    reciprocal_18: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_18);  sqrt_18 = None
    mul_54: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_18, 1);  reciprocal_18 = None
    unsqueeze_144: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_36, -1);  convert_element_type_36 = None
    unsqueeze_145: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_144, -1);  unsqueeze_144 = None
    unsqueeze_146: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_54, -1);  mul_54 = None
    unsqueeze_147: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_146, -1);  unsqueeze_146 = None
    sub_18: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_18, unsqueeze_145);  convolution_18 = unsqueeze_145 = None
    mul_55: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_18, unsqueeze_147);  sub_18 = unsqueeze_147 = None
    unsqueeze_148: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg55_1, -1);  arg55_1 = None
    unsqueeze_149: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_148, -1);  unsqueeze_148 = None
    mul_56: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_55, unsqueeze_149);  mul_55 = unsqueeze_149 = None
    unsqueeze_150: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg56_1, -1);  arg56_1 = None
    unsqueeze_151: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_150, -1);  unsqueeze_150 = None
    add_41: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_56, unsqueeze_151);  mul_56 = unsqueeze_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_42: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_41, relu_14);  add_41 = relu_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_17: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_42);  add_42 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_19: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_17, arg57_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg57_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_38: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1038_1, torch.float32);  arg1038_1 = None
    convert_element_type_39: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1039_1, torch.float32);  arg1039_1 = None
    add_43: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_39, 1e-05);  convert_element_type_39 = None
    sqrt_19: "f32[18]" = torch.ops.aten.sqrt.default(add_43);  add_43 = None
    reciprocal_19: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_19);  sqrt_19 = None
    mul_57: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_19, 1);  reciprocal_19 = None
    unsqueeze_152: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_38, -1);  convert_element_type_38 = None
    unsqueeze_153: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_152, -1);  unsqueeze_152 = None
    unsqueeze_154: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_57, -1);  mul_57 = None
    unsqueeze_155: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_154, -1);  unsqueeze_154 = None
    sub_19: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_19, unsqueeze_153);  convolution_19 = unsqueeze_153 = None
    mul_58: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_19, unsqueeze_155);  sub_19 = unsqueeze_155 = None
    unsqueeze_156: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg58_1, -1);  arg58_1 = None
    unsqueeze_157: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_156, -1);  unsqueeze_156 = None
    mul_59: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_58, unsqueeze_157);  mul_58 = unsqueeze_157 = None
    unsqueeze_158: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg59_1, -1);  arg59_1 = None
    unsqueeze_159: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_158, -1);  unsqueeze_158 = None
    add_44: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_59, unsqueeze_159);  mul_59 = unsqueeze_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_18: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_44);  add_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_20: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_18, arg60_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_18 = arg60_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_40: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1041_1, torch.float32);  arg1041_1 = None
    convert_element_type_41: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1042_1, torch.float32);  arg1042_1 = None
    add_45: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_41, 1e-05);  convert_element_type_41 = None
    sqrt_20: "f32[18]" = torch.ops.aten.sqrt.default(add_45);  add_45 = None
    reciprocal_20: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_20);  sqrt_20 = None
    mul_60: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_20, 1);  reciprocal_20 = None
    unsqueeze_160: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_40, -1);  convert_element_type_40 = None
    unsqueeze_161: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_160, -1);  unsqueeze_160 = None
    unsqueeze_162: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_60, -1);  mul_60 = None
    unsqueeze_163: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_162, -1);  unsqueeze_162 = None
    sub_20: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_20, unsqueeze_161);  convolution_20 = unsqueeze_161 = None
    mul_61: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_20, unsqueeze_163);  sub_20 = unsqueeze_163 = None
    unsqueeze_164: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg61_1, -1);  arg61_1 = None
    unsqueeze_165: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_164, -1);  unsqueeze_164 = None
    mul_62: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_61, unsqueeze_165);  mul_61 = unsqueeze_165 = None
    unsqueeze_166: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg62_1, -1);  arg62_1 = None
    unsqueeze_167: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_166, -1);  unsqueeze_166 = None
    add_46: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_62, unsqueeze_167);  mul_62 = unsqueeze_167 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_47: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_46, relu_17);  add_46 = relu_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_19: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_47);  add_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_21: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_19, arg63_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg63_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_42: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1044_1, torch.float32);  arg1044_1 = None
    convert_element_type_43: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1045_1, torch.float32);  arg1045_1 = None
    add_48: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_43, 1e-05);  convert_element_type_43 = None
    sqrt_21: "f32[18]" = torch.ops.aten.sqrt.default(add_48);  add_48 = None
    reciprocal_21: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_21);  sqrt_21 = None
    mul_63: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_21, 1);  reciprocal_21 = None
    unsqueeze_168: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_42, -1);  convert_element_type_42 = None
    unsqueeze_169: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_168, -1);  unsqueeze_168 = None
    unsqueeze_170: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_63, -1);  mul_63 = None
    unsqueeze_171: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_170, -1);  unsqueeze_170 = None
    sub_21: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_21, unsqueeze_169);  convolution_21 = unsqueeze_169 = None
    mul_64: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_21, unsqueeze_171);  sub_21 = unsqueeze_171 = None
    unsqueeze_172: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg64_1, -1);  arg64_1 = None
    unsqueeze_173: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_172, -1);  unsqueeze_172 = None
    mul_65: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_64, unsqueeze_173);  mul_64 = unsqueeze_173 = None
    unsqueeze_174: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg65_1, -1);  arg65_1 = None
    unsqueeze_175: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_174, -1);  unsqueeze_174 = None
    add_49: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_65, unsqueeze_175);  mul_65 = unsqueeze_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_20: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_49);  add_49 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_22: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_20, arg66_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_20 = arg66_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_44: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1047_1, torch.float32);  arg1047_1 = None
    convert_element_type_45: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1048_1, torch.float32);  arg1048_1 = None
    add_50: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_45, 1e-05);  convert_element_type_45 = None
    sqrt_22: "f32[18]" = torch.ops.aten.sqrt.default(add_50);  add_50 = None
    reciprocal_22: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_22);  sqrt_22 = None
    mul_66: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_22, 1);  reciprocal_22 = None
    unsqueeze_176: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_44, -1);  convert_element_type_44 = None
    unsqueeze_177: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_176, -1);  unsqueeze_176 = None
    unsqueeze_178: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_66, -1);  mul_66 = None
    unsqueeze_179: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_178, -1);  unsqueeze_178 = None
    sub_22: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_22, unsqueeze_177);  convolution_22 = unsqueeze_177 = None
    mul_67: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_22, unsqueeze_179);  sub_22 = unsqueeze_179 = None
    unsqueeze_180: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg67_1, -1);  arg67_1 = None
    unsqueeze_181: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_180, -1);  unsqueeze_180 = None
    mul_68: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_67, unsqueeze_181);  mul_67 = unsqueeze_181 = None
    unsqueeze_182: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg68_1, -1);  arg68_1 = None
    unsqueeze_183: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_182, -1);  unsqueeze_182 = None
    add_51: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_68, unsqueeze_183);  mul_68 = unsqueeze_183 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_52: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_51, relu_19);  add_51 = relu_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_21: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_52);  add_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_23: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_21, arg69_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg69_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_46: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1050_1, torch.float32);  arg1050_1 = None
    convert_element_type_47: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1051_1, torch.float32);  arg1051_1 = None
    add_53: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_47, 1e-05);  convert_element_type_47 = None
    sqrt_23: "f32[18]" = torch.ops.aten.sqrt.default(add_53);  add_53 = None
    reciprocal_23: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_23);  sqrt_23 = None
    mul_69: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_23, 1);  reciprocal_23 = None
    unsqueeze_184: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_46, -1);  convert_element_type_46 = None
    unsqueeze_185: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_184, -1);  unsqueeze_184 = None
    unsqueeze_186: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_69, -1);  mul_69 = None
    unsqueeze_187: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_186, -1);  unsqueeze_186 = None
    sub_23: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_23, unsqueeze_185);  convolution_23 = unsqueeze_185 = None
    mul_70: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_23, unsqueeze_187);  sub_23 = unsqueeze_187 = None
    unsqueeze_188: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg70_1, -1);  arg70_1 = None
    unsqueeze_189: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_188, -1);  unsqueeze_188 = None
    mul_71: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_70, unsqueeze_189);  mul_70 = unsqueeze_189 = None
    unsqueeze_190: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg71_1, -1);  arg71_1 = None
    unsqueeze_191: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_190, -1);  unsqueeze_190 = None
    add_54: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_71, unsqueeze_191);  mul_71 = unsqueeze_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_22: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_54);  add_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_24: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_22, arg72_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_22 = arg72_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_48: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1053_1, torch.float32);  arg1053_1 = None
    convert_element_type_49: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1054_1, torch.float32);  arg1054_1 = None
    add_55: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_49, 1e-05);  convert_element_type_49 = None
    sqrt_24: "f32[18]" = torch.ops.aten.sqrt.default(add_55);  add_55 = None
    reciprocal_24: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_24);  sqrt_24 = None
    mul_72: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_24, 1);  reciprocal_24 = None
    unsqueeze_192: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_48, -1);  convert_element_type_48 = None
    unsqueeze_193: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_192, -1);  unsqueeze_192 = None
    unsqueeze_194: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_72, -1);  mul_72 = None
    unsqueeze_195: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_194, -1);  unsqueeze_194 = None
    sub_24: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_24, unsqueeze_193);  convolution_24 = unsqueeze_193 = None
    mul_73: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_24, unsqueeze_195);  sub_24 = unsqueeze_195 = None
    unsqueeze_196: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg73_1, -1);  arg73_1 = None
    unsqueeze_197: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_196, -1);  unsqueeze_196 = None
    mul_74: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_73, unsqueeze_197);  mul_73 = unsqueeze_197 = None
    unsqueeze_198: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg74_1, -1);  arg74_1 = None
    unsqueeze_199: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_198, -1);  unsqueeze_198 = None
    add_56: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_74, unsqueeze_199);  mul_74 = unsqueeze_199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_57: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_56, relu_21);  add_56 = relu_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_23: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_57);  add_57 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_25: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_15, arg75_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg75_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_50: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1056_1, torch.float32);  arg1056_1 = None
    convert_element_type_51: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1057_1, torch.float32);  arg1057_1 = None
    add_58: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_51, 1e-05);  convert_element_type_51 = None
    sqrt_25: "f32[36]" = torch.ops.aten.sqrt.default(add_58);  add_58 = None
    reciprocal_25: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_25);  sqrt_25 = None
    mul_75: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_25, 1);  reciprocal_25 = None
    unsqueeze_200: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_50, -1);  convert_element_type_50 = None
    unsqueeze_201: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_200, -1);  unsqueeze_200 = None
    unsqueeze_202: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_75, -1);  mul_75 = None
    unsqueeze_203: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_202, -1);  unsqueeze_202 = None
    sub_25: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_25, unsqueeze_201);  convolution_25 = unsqueeze_201 = None
    mul_76: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_25, unsqueeze_203);  sub_25 = unsqueeze_203 = None
    unsqueeze_204: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg76_1, -1);  arg76_1 = None
    unsqueeze_205: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_204, -1);  unsqueeze_204 = None
    mul_77: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_76, unsqueeze_205);  mul_76 = unsqueeze_205 = None
    unsqueeze_206: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg77_1, -1);  arg77_1 = None
    unsqueeze_207: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_206, -1);  unsqueeze_206 = None
    add_59: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_77, unsqueeze_207);  mul_77 = unsqueeze_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_24: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_59);  add_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_26: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_24, arg78_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_24 = arg78_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_52: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1059_1, torch.float32);  arg1059_1 = None
    convert_element_type_53: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1060_1, torch.float32);  arg1060_1 = None
    add_60: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_53, 1e-05);  convert_element_type_53 = None
    sqrt_26: "f32[36]" = torch.ops.aten.sqrt.default(add_60);  add_60 = None
    reciprocal_26: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_26);  sqrt_26 = None
    mul_78: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_26, 1);  reciprocal_26 = None
    unsqueeze_208: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_52, -1);  convert_element_type_52 = None
    unsqueeze_209: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_208, -1);  unsqueeze_208 = None
    unsqueeze_210: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_78, -1);  mul_78 = None
    unsqueeze_211: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_210, -1);  unsqueeze_210 = None
    sub_26: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_26, unsqueeze_209);  convolution_26 = unsqueeze_209 = None
    mul_79: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_26, unsqueeze_211);  sub_26 = unsqueeze_211 = None
    unsqueeze_212: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg79_1, -1);  arg79_1 = None
    unsqueeze_213: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_212, -1);  unsqueeze_212 = None
    mul_80: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_79, unsqueeze_213);  mul_79 = unsqueeze_213 = None
    unsqueeze_214: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg80_1, -1);  arg80_1 = None
    unsqueeze_215: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_214, -1);  unsqueeze_214 = None
    add_61: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_80, unsqueeze_215);  mul_80 = unsqueeze_215 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_62: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_61, relu_15);  add_61 = relu_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_25: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_62);  add_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_27: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_25, arg81_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg81_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_54: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1062_1, torch.float32);  arg1062_1 = None
    convert_element_type_55: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1063_1, torch.float32);  arg1063_1 = None
    add_63: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_55, 1e-05);  convert_element_type_55 = None
    sqrt_27: "f32[36]" = torch.ops.aten.sqrt.default(add_63);  add_63 = None
    reciprocal_27: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_27);  sqrt_27 = None
    mul_81: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_27, 1);  reciprocal_27 = None
    unsqueeze_216: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_54, -1);  convert_element_type_54 = None
    unsqueeze_217: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_216, -1);  unsqueeze_216 = None
    unsqueeze_218: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_81, -1);  mul_81 = None
    unsqueeze_219: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_218, -1);  unsqueeze_218 = None
    sub_27: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_27, unsqueeze_217);  convolution_27 = unsqueeze_217 = None
    mul_82: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_27, unsqueeze_219);  sub_27 = unsqueeze_219 = None
    unsqueeze_220: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg82_1, -1);  arg82_1 = None
    unsqueeze_221: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_220, -1);  unsqueeze_220 = None
    mul_83: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_82, unsqueeze_221);  mul_82 = unsqueeze_221 = None
    unsqueeze_222: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg83_1, -1);  arg83_1 = None
    unsqueeze_223: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_222, -1);  unsqueeze_222 = None
    add_64: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_83, unsqueeze_223);  mul_83 = unsqueeze_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_26: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_64);  add_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_28: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_26, arg84_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_26 = arg84_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_56: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1065_1, torch.float32);  arg1065_1 = None
    convert_element_type_57: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1066_1, torch.float32);  arg1066_1 = None
    add_65: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_57, 1e-05);  convert_element_type_57 = None
    sqrt_28: "f32[36]" = torch.ops.aten.sqrt.default(add_65);  add_65 = None
    reciprocal_28: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_28);  sqrt_28 = None
    mul_84: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_28, 1);  reciprocal_28 = None
    unsqueeze_224: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_56, -1);  convert_element_type_56 = None
    unsqueeze_225: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_224, -1);  unsqueeze_224 = None
    unsqueeze_226: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_84, -1);  mul_84 = None
    unsqueeze_227: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_226, -1);  unsqueeze_226 = None
    sub_28: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_28, unsqueeze_225);  convolution_28 = unsqueeze_225 = None
    mul_85: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_28, unsqueeze_227);  sub_28 = unsqueeze_227 = None
    unsqueeze_228: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg85_1, -1);  arg85_1 = None
    unsqueeze_229: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_228, -1);  unsqueeze_228 = None
    mul_86: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_85, unsqueeze_229);  mul_85 = unsqueeze_229 = None
    unsqueeze_230: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg86_1, -1);  arg86_1 = None
    unsqueeze_231: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_230, -1);  unsqueeze_230 = None
    add_66: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_86, unsqueeze_231);  mul_86 = unsqueeze_231 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_67: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_66, relu_25);  add_66 = relu_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_27: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_67);  add_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_29: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_27, arg87_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg87_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_58: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1068_1, torch.float32);  arg1068_1 = None
    convert_element_type_59: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1069_1, torch.float32);  arg1069_1 = None
    add_68: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_59, 1e-05);  convert_element_type_59 = None
    sqrt_29: "f32[36]" = torch.ops.aten.sqrt.default(add_68);  add_68 = None
    reciprocal_29: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_29);  sqrt_29 = None
    mul_87: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_29, 1);  reciprocal_29 = None
    unsqueeze_232: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_58, -1);  convert_element_type_58 = None
    unsqueeze_233: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_232, -1);  unsqueeze_232 = None
    unsqueeze_234: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_87, -1);  mul_87 = None
    unsqueeze_235: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_234, -1);  unsqueeze_234 = None
    sub_29: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_29, unsqueeze_233);  convolution_29 = unsqueeze_233 = None
    mul_88: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_29, unsqueeze_235);  sub_29 = unsqueeze_235 = None
    unsqueeze_236: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg88_1, -1);  arg88_1 = None
    unsqueeze_237: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_236, -1);  unsqueeze_236 = None
    mul_89: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_88, unsqueeze_237);  mul_88 = unsqueeze_237 = None
    unsqueeze_238: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg89_1, -1);  arg89_1 = None
    unsqueeze_239: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_238, -1);  unsqueeze_238 = None
    add_69: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_89, unsqueeze_239);  mul_89 = unsqueeze_239 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_28: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_69);  add_69 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_30: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_28, arg90_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_28 = arg90_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_60: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1071_1, torch.float32);  arg1071_1 = None
    convert_element_type_61: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1072_1, torch.float32);  arg1072_1 = None
    add_70: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_61, 1e-05);  convert_element_type_61 = None
    sqrt_30: "f32[36]" = torch.ops.aten.sqrt.default(add_70);  add_70 = None
    reciprocal_30: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_30);  sqrt_30 = None
    mul_90: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_30, 1);  reciprocal_30 = None
    unsqueeze_240: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_60, -1);  convert_element_type_60 = None
    unsqueeze_241: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_240, -1);  unsqueeze_240 = None
    unsqueeze_242: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_90, -1);  mul_90 = None
    unsqueeze_243: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_242, -1);  unsqueeze_242 = None
    sub_30: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_30, unsqueeze_241);  convolution_30 = unsqueeze_241 = None
    mul_91: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_30, unsqueeze_243);  sub_30 = unsqueeze_243 = None
    unsqueeze_244: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg91_1, -1);  arg91_1 = None
    unsqueeze_245: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_244, -1);  unsqueeze_244 = None
    mul_92: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_91, unsqueeze_245);  mul_91 = unsqueeze_245 = None
    unsqueeze_246: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg92_1, -1);  arg92_1 = None
    unsqueeze_247: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_246, -1);  unsqueeze_246 = None
    add_71: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_92, unsqueeze_247);  mul_92 = unsqueeze_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_72: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_71, relu_27);  add_71 = relu_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_29: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_72);  add_72 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_31: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_29, arg93_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg93_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_62: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1074_1, torch.float32);  arg1074_1 = None
    convert_element_type_63: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1075_1, torch.float32);  arg1075_1 = None
    add_73: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_63, 1e-05);  convert_element_type_63 = None
    sqrt_31: "f32[36]" = torch.ops.aten.sqrt.default(add_73);  add_73 = None
    reciprocal_31: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_31);  sqrt_31 = None
    mul_93: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_31, 1);  reciprocal_31 = None
    unsqueeze_248: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_62, -1);  convert_element_type_62 = None
    unsqueeze_249: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_248, -1);  unsqueeze_248 = None
    unsqueeze_250: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_93, -1);  mul_93 = None
    unsqueeze_251: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_250, -1);  unsqueeze_250 = None
    sub_31: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_31, unsqueeze_249);  convolution_31 = unsqueeze_249 = None
    mul_94: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_31, unsqueeze_251);  sub_31 = unsqueeze_251 = None
    unsqueeze_252: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg94_1, -1);  arg94_1 = None
    unsqueeze_253: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_252, -1);  unsqueeze_252 = None
    mul_95: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_94, unsqueeze_253);  mul_94 = unsqueeze_253 = None
    unsqueeze_254: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg95_1, -1);  arg95_1 = None
    unsqueeze_255: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_254, -1);  unsqueeze_254 = None
    add_74: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_95, unsqueeze_255);  mul_95 = unsqueeze_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_30: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_74);  add_74 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_32: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_30, arg96_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_30 = arg96_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_64: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1077_1, torch.float32);  arg1077_1 = None
    convert_element_type_65: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1078_1, torch.float32);  arg1078_1 = None
    add_75: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_65, 1e-05);  convert_element_type_65 = None
    sqrt_32: "f32[36]" = torch.ops.aten.sqrt.default(add_75);  add_75 = None
    reciprocal_32: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_32);  sqrt_32 = None
    mul_96: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_32, 1);  reciprocal_32 = None
    unsqueeze_256: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_64, -1);  convert_element_type_64 = None
    unsqueeze_257: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_256, -1);  unsqueeze_256 = None
    unsqueeze_258: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_96, -1);  mul_96 = None
    unsqueeze_259: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_258, -1);  unsqueeze_258 = None
    sub_32: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_32, unsqueeze_257);  convolution_32 = unsqueeze_257 = None
    mul_97: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_32, unsqueeze_259);  sub_32 = unsqueeze_259 = None
    unsqueeze_260: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg97_1, -1);  arg97_1 = None
    unsqueeze_261: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_260, -1);  unsqueeze_260 = None
    mul_98: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_97, unsqueeze_261);  mul_97 = unsqueeze_261 = None
    unsqueeze_262: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg98_1, -1);  arg98_1 = None
    unsqueeze_263: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_262, -1);  unsqueeze_262 = None
    add_76: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_98, unsqueeze_263);  mul_98 = unsqueeze_263 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_77: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_76, relu_29);  add_76 = relu_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_31: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_77);  add_77 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_33: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_31, arg99_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg99_1 = None
    convert_element_type_66: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1080_1, torch.float32);  arg1080_1 = None
    convert_element_type_67: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1081_1, torch.float32);  arg1081_1 = None
    add_78: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_67, 1e-05);  convert_element_type_67 = None
    sqrt_33: "f32[18]" = torch.ops.aten.sqrt.default(add_78);  add_78 = None
    reciprocal_33: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_33);  sqrt_33 = None
    mul_99: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_33, 1);  reciprocal_33 = None
    unsqueeze_264: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_66, -1);  convert_element_type_66 = None
    unsqueeze_265: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_264, -1);  unsqueeze_264 = None
    unsqueeze_266: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_99, -1);  mul_99 = None
    unsqueeze_267: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_266, -1);  unsqueeze_266 = None
    sub_33: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_33, unsqueeze_265);  convolution_33 = unsqueeze_265 = None
    mul_100: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_33, unsqueeze_267);  sub_33 = unsqueeze_267 = None
    unsqueeze_268: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg100_1, -1);  arg100_1 = None
    unsqueeze_269: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_268, -1);  unsqueeze_268 = None
    mul_101: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_100, unsqueeze_269);  mul_100 = unsqueeze_269 = None
    unsqueeze_270: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg101_1, -1);  arg101_1 = None
    unsqueeze_271: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_270, -1);  unsqueeze_270 = None
    add_79: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_101, unsqueeze_271);  mul_101 = unsqueeze_271 = None
    iota: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_68: "f64[56]" = torch.ops.prims.convert_element_type.default(iota, torch.float64);  iota = None
    mul_102: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_68, 1);  convert_element_type_68 = None
    add_80: "f64[56]" = torch.ops.aten.add.Tensor(mul_102, 0);  mul_102 = None
    convert_element_type_69: "f32[56]" = torch.ops.prims.convert_element_type.default(add_80, torch.float32);  add_80 = None
    add_81: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_69, 0.0);  convert_element_type_69 = None
    mul_103: "f32[56]" = torch.ops.aten.mul.Tensor(add_81, 0.5);  add_81 = None
    convert_element_type_70: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_103, torch.int64);  mul_103 = None
    unsqueeze_272: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_70, -1);  convert_element_type_70 = None
    iota_1: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_71: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_1, torch.float64);  iota_1 = None
    mul_104: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_71, 1);  convert_element_type_71 = None
    add_82: "f64[56]" = torch.ops.aten.add.Tensor(mul_104, 0);  mul_104 = None
    convert_element_type_72: "f32[56]" = torch.ops.prims.convert_element_type.default(add_82, torch.float32);  add_82 = None
    add_83: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_72, 0.0);  convert_element_type_72 = None
    mul_105: "f32[56]" = torch.ops.aten.mul.Tensor(add_83, 0.5);  add_83 = None
    convert_element_type_73: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_105, torch.int64);  mul_105 = None
    _unsafe_index: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_79, [None, None, unsqueeze_272, convert_element_type_73]);  add_79 = unsqueeze_272 = convert_element_type_73 = None
    add_84: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_23, _unsafe_index);  _unsafe_index = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_32: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_84);  add_84 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_34: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_23, arg102_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_23 = arg102_1 = None
    convert_element_type_74: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1083_1, torch.float32);  arg1083_1 = None
    convert_element_type_75: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1084_1, torch.float32);  arg1084_1 = None
    add_85: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_75, 1e-05);  convert_element_type_75 = None
    sqrt_34: "f32[36]" = torch.ops.aten.sqrt.default(add_85);  add_85 = None
    reciprocal_34: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_34);  sqrt_34 = None
    mul_106: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_34, 1);  reciprocal_34 = None
    unsqueeze_273: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_74, -1);  convert_element_type_74 = None
    unsqueeze_274: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_273, -1);  unsqueeze_273 = None
    unsqueeze_275: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_106, -1);  mul_106 = None
    unsqueeze_276: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_275, -1);  unsqueeze_275 = None
    sub_34: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_34, unsqueeze_274);  convolution_34 = unsqueeze_274 = None
    mul_107: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_34, unsqueeze_276);  sub_34 = unsqueeze_276 = None
    unsqueeze_277: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg103_1, -1);  arg103_1 = None
    unsqueeze_278: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_277, -1);  unsqueeze_277 = None
    mul_108: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_107, unsqueeze_278);  mul_107 = unsqueeze_278 = None
    unsqueeze_279: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg104_1, -1);  arg104_1 = None
    unsqueeze_280: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_279, -1);  unsqueeze_279 = None
    add_86: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_108, unsqueeze_280);  mul_108 = unsqueeze_280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_87: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_86, relu_31);  add_86 = relu_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_33: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_87);  add_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:753, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition2)]
    convolution_35: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_33, arg105_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg105_1 = None
    convert_element_type_76: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1086_1, torch.float32);  arg1086_1 = None
    convert_element_type_77: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1087_1, torch.float32);  arg1087_1 = None
    add_88: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_77, 1e-05);  convert_element_type_77 = None
    sqrt_35: "f32[72]" = torch.ops.aten.sqrt.default(add_88);  add_88 = None
    reciprocal_35: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_35);  sqrt_35 = None
    mul_109: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_35, 1);  reciprocal_35 = None
    unsqueeze_281: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_76, -1);  convert_element_type_76 = None
    unsqueeze_282: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_281, -1);  unsqueeze_281 = None
    unsqueeze_283: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_109, -1);  mul_109 = None
    unsqueeze_284: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_283, -1);  unsqueeze_283 = None
    sub_35: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_35, unsqueeze_282);  convolution_35 = unsqueeze_282 = None
    mul_110: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_35, unsqueeze_284);  sub_35 = unsqueeze_284 = None
    unsqueeze_285: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg106_1, -1);  arg106_1 = None
    unsqueeze_286: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_285, -1);  unsqueeze_285 = None
    mul_111: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_110, unsqueeze_286);  mul_110 = unsqueeze_286 = None
    unsqueeze_287: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg107_1, -1);  arg107_1 = None
    unsqueeze_288: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_287, -1);  unsqueeze_287 = None
    add_89: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_111, unsqueeze_288);  mul_111 = unsqueeze_288 = None
    relu_34: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_89);  add_89 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_36: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_32, arg108_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg108_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_78: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1089_1, torch.float32);  arg1089_1 = None
    convert_element_type_79: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1090_1, torch.float32);  arg1090_1 = None
    add_90: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_79, 1e-05);  convert_element_type_79 = None
    sqrt_36: "f32[18]" = torch.ops.aten.sqrt.default(add_90);  add_90 = None
    reciprocal_36: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_36);  sqrt_36 = None
    mul_112: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_36, 1);  reciprocal_36 = None
    unsqueeze_289: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_78, -1);  convert_element_type_78 = None
    unsqueeze_290: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_289, -1);  unsqueeze_289 = None
    unsqueeze_291: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_112, -1);  mul_112 = None
    unsqueeze_292: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_291, -1);  unsqueeze_291 = None
    sub_36: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_36, unsqueeze_290);  convolution_36 = unsqueeze_290 = None
    mul_113: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_36, unsqueeze_292);  sub_36 = unsqueeze_292 = None
    unsqueeze_293: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg109_1, -1);  arg109_1 = None
    unsqueeze_294: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_293, -1);  unsqueeze_293 = None
    mul_114: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_113, unsqueeze_294);  mul_113 = unsqueeze_294 = None
    unsqueeze_295: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg110_1, -1);  arg110_1 = None
    unsqueeze_296: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_295, -1);  unsqueeze_295 = None
    add_91: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_114, unsqueeze_296);  mul_114 = unsqueeze_296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_35: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_91);  add_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_37: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_35, arg111_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_35 = arg111_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_80: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1092_1, torch.float32);  arg1092_1 = None
    convert_element_type_81: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1093_1, torch.float32);  arg1093_1 = None
    add_92: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_81, 1e-05);  convert_element_type_81 = None
    sqrt_37: "f32[18]" = torch.ops.aten.sqrt.default(add_92);  add_92 = None
    reciprocal_37: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_37);  sqrt_37 = None
    mul_115: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_37, 1);  reciprocal_37 = None
    unsqueeze_297: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_80, -1);  convert_element_type_80 = None
    unsqueeze_298: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_297, -1);  unsqueeze_297 = None
    unsqueeze_299: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_115, -1);  mul_115 = None
    unsqueeze_300: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_299, -1);  unsqueeze_299 = None
    sub_37: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_37, unsqueeze_298);  convolution_37 = unsqueeze_298 = None
    mul_116: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_37, unsqueeze_300);  sub_37 = unsqueeze_300 = None
    unsqueeze_301: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg112_1, -1);  arg112_1 = None
    unsqueeze_302: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_301, -1);  unsqueeze_301 = None
    mul_117: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_116, unsqueeze_302);  mul_116 = unsqueeze_302 = None
    unsqueeze_303: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg113_1, -1);  arg113_1 = None
    unsqueeze_304: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_303, -1);  unsqueeze_303 = None
    add_93: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_117, unsqueeze_304);  mul_117 = unsqueeze_304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_94: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_93, relu_32);  add_93 = relu_32 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_36: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_94);  add_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_38: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_36, arg114_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg114_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_82: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1095_1, torch.float32);  arg1095_1 = None
    convert_element_type_83: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1096_1, torch.float32);  arg1096_1 = None
    add_95: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_83, 1e-05);  convert_element_type_83 = None
    sqrt_38: "f32[18]" = torch.ops.aten.sqrt.default(add_95);  add_95 = None
    reciprocal_38: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_38);  sqrt_38 = None
    mul_118: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_38, 1);  reciprocal_38 = None
    unsqueeze_305: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_82, -1);  convert_element_type_82 = None
    unsqueeze_306: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_305, -1);  unsqueeze_305 = None
    unsqueeze_307: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_118, -1);  mul_118 = None
    unsqueeze_308: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_307, -1);  unsqueeze_307 = None
    sub_38: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_38, unsqueeze_306);  convolution_38 = unsqueeze_306 = None
    mul_119: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_38, unsqueeze_308);  sub_38 = unsqueeze_308 = None
    unsqueeze_309: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg115_1, -1);  arg115_1 = None
    unsqueeze_310: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_309, -1);  unsqueeze_309 = None
    mul_120: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_119, unsqueeze_310);  mul_119 = unsqueeze_310 = None
    unsqueeze_311: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg116_1, -1);  arg116_1 = None
    unsqueeze_312: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_311, -1);  unsqueeze_311 = None
    add_96: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_120, unsqueeze_312);  mul_120 = unsqueeze_312 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_37: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_96);  add_96 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_39: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_37, arg117_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_37 = arg117_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_84: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1098_1, torch.float32);  arg1098_1 = None
    convert_element_type_85: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1099_1, torch.float32);  arg1099_1 = None
    add_97: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_85, 1e-05);  convert_element_type_85 = None
    sqrt_39: "f32[18]" = torch.ops.aten.sqrt.default(add_97);  add_97 = None
    reciprocal_39: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_39);  sqrt_39 = None
    mul_121: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_39, 1);  reciprocal_39 = None
    unsqueeze_313: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_84, -1);  convert_element_type_84 = None
    unsqueeze_314: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_313, -1);  unsqueeze_313 = None
    unsqueeze_315: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_121, -1);  mul_121 = None
    unsqueeze_316: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_315, -1);  unsqueeze_315 = None
    sub_39: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_39, unsqueeze_314);  convolution_39 = unsqueeze_314 = None
    mul_122: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_39, unsqueeze_316);  sub_39 = unsqueeze_316 = None
    unsqueeze_317: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg118_1, -1);  arg118_1 = None
    unsqueeze_318: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_317, -1);  unsqueeze_317 = None
    mul_123: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_122, unsqueeze_318);  mul_122 = unsqueeze_318 = None
    unsqueeze_319: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg119_1, -1);  arg119_1 = None
    unsqueeze_320: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_319, -1);  unsqueeze_319 = None
    add_98: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_123, unsqueeze_320);  mul_123 = unsqueeze_320 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_99: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_98, relu_36);  add_98 = relu_36 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_38: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_99);  add_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_40: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_38, arg120_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg120_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_86: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1101_1, torch.float32);  arg1101_1 = None
    convert_element_type_87: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1102_1, torch.float32);  arg1102_1 = None
    add_100: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_87, 1e-05);  convert_element_type_87 = None
    sqrt_40: "f32[18]" = torch.ops.aten.sqrt.default(add_100);  add_100 = None
    reciprocal_40: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_40);  sqrt_40 = None
    mul_124: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_40, 1);  reciprocal_40 = None
    unsqueeze_321: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_86, -1);  convert_element_type_86 = None
    unsqueeze_322: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_321, -1);  unsqueeze_321 = None
    unsqueeze_323: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_124, -1);  mul_124 = None
    unsqueeze_324: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_323, -1);  unsqueeze_323 = None
    sub_40: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_40, unsqueeze_322);  convolution_40 = unsqueeze_322 = None
    mul_125: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_40, unsqueeze_324);  sub_40 = unsqueeze_324 = None
    unsqueeze_325: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg121_1, -1);  arg121_1 = None
    unsqueeze_326: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_325, -1);  unsqueeze_325 = None
    mul_126: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_125, unsqueeze_326);  mul_125 = unsqueeze_326 = None
    unsqueeze_327: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg122_1, -1);  arg122_1 = None
    unsqueeze_328: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_327, -1);  unsqueeze_327 = None
    add_101: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_126, unsqueeze_328);  mul_126 = unsqueeze_328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_39: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_101);  add_101 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_41: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_39, arg123_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_39 = arg123_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_88: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1104_1, torch.float32);  arg1104_1 = None
    convert_element_type_89: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1105_1, torch.float32);  arg1105_1 = None
    add_102: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_89, 1e-05);  convert_element_type_89 = None
    sqrt_41: "f32[18]" = torch.ops.aten.sqrt.default(add_102);  add_102 = None
    reciprocal_41: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_41);  sqrt_41 = None
    mul_127: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_41, 1);  reciprocal_41 = None
    unsqueeze_329: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_88, -1);  convert_element_type_88 = None
    unsqueeze_330: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_329, -1);  unsqueeze_329 = None
    unsqueeze_331: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_127, -1);  mul_127 = None
    unsqueeze_332: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_331, -1);  unsqueeze_331 = None
    sub_41: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_41, unsqueeze_330);  convolution_41 = unsqueeze_330 = None
    mul_128: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_41, unsqueeze_332);  sub_41 = unsqueeze_332 = None
    unsqueeze_333: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg124_1, -1);  arg124_1 = None
    unsqueeze_334: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_333, -1);  unsqueeze_333 = None
    mul_129: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_128, unsqueeze_334);  mul_128 = unsqueeze_334 = None
    unsqueeze_335: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg125_1, -1);  arg125_1 = None
    unsqueeze_336: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_335, -1);  unsqueeze_335 = None
    add_103: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_129, unsqueeze_336);  mul_129 = unsqueeze_336 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_104: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_103, relu_38);  add_103 = relu_38 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_40: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_104);  add_104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_42: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_40, arg126_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg126_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_90: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1107_1, torch.float32);  arg1107_1 = None
    convert_element_type_91: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1108_1, torch.float32);  arg1108_1 = None
    add_105: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_91, 1e-05);  convert_element_type_91 = None
    sqrt_42: "f32[18]" = torch.ops.aten.sqrt.default(add_105);  add_105 = None
    reciprocal_42: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_42);  sqrt_42 = None
    mul_130: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_42, 1);  reciprocal_42 = None
    unsqueeze_337: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_90, -1);  convert_element_type_90 = None
    unsqueeze_338: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_337, -1);  unsqueeze_337 = None
    unsqueeze_339: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_130, -1);  mul_130 = None
    unsqueeze_340: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_339, -1);  unsqueeze_339 = None
    sub_42: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_42, unsqueeze_338);  convolution_42 = unsqueeze_338 = None
    mul_131: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_42, unsqueeze_340);  sub_42 = unsqueeze_340 = None
    unsqueeze_341: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg127_1, -1);  arg127_1 = None
    unsqueeze_342: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_341, -1);  unsqueeze_341 = None
    mul_132: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_131, unsqueeze_342);  mul_131 = unsqueeze_342 = None
    unsqueeze_343: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg128_1, -1);  arg128_1 = None
    unsqueeze_344: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_343, -1);  unsqueeze_343 = None
    add_106: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_132, unsqueeze_344);  mul_132 = unsqueeze_344 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_41: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_106);  add_106 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_43: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_41, arg129_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_41 = arg129_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_92: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1110_1, torch.float32);  arg1110_1 = None
    convert_element_type_93: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1111_1, torch.float32);  arg1111_1 = None
    add_107: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_93, 1e-05);  convert_element_type_93 = None
    sqrt_43: "f32[18]" = torch.ops.aten.sqrt.default(add_107);  add_107 = None
    reciprocal_43: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_43);  sqrt_43 = None
    mul_133: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_43, 1);  reciprocal_43 = None
    unsqueeze_345: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_92, -1);  convert_element_type_92 = None
    unsqueeze_346: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_345, -1);  unsqueeze_345 = None
    unsqueeze_347: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_133, -1);  mul_133 = None
    unsqueeze_348: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_347, -1);  unsqueeze_347 = None
    sub_43: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_43, unsqueeze_346);  convolution_43 = unsqueeze_346 = None
    mul_134: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_43, unsqueeze_348);  sub_43 = unsqueeze_348 = None
    unsqueeze_349: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg130_1, -1);  arg130_1 = None
    unsqueeze_350: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_349, -1);  unsqueeze_349 = None
    mul_135: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_134, unsqueeze_350);  mul_134 = unsqueeze_350 = None
    unsqueeze_351: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg131_1, -1);  arg131_1 = None
    unsqueeze_352: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_351, -1);  unsqueeze_351 = None
    add_108: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_135, unsqueeze_352);  mul_135 = unsqueeze_352 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_109: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_108, relu_40);  add_108 = relu_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_42: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_109);  add_109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_44: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_33, arg132_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg132_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_94: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1113_1, torch.float32);  arg1113_1 = None
    convert_element_type_95: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1114_1, torch.float32);  arg1114_1 = None
    add_110: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_95, 1e-05);  convert_element_type_95 = None
    sqrt_44: "f32[36]" = torch.ops.aten.sqrt.default(add_110);  add_110 = None
    reciprocal_44: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_44);  sqrt_44 = None
    mul_136: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_44, 1);  reciprocal_44 = None
    unsqueeze_353: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_94, -1);  convert_element_type_94 = None
    unsqueeze_354: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_353, -1);  unsqueeze_353 = None
    unsqueeze_355: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_136, -1);  mul_136 = None
    unsqueeze_356: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_355, -1);  unsqueeze_355 = None
    sub_44: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_44, unsqueeze_354);  convolution_44 = unsqueeze_354 = None
    mul_137: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_44, unsqueeze_356);  sub_44 = unsqueeze_356 = None
    unsqueeze_357: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg133_1, -1);  arg133_1 = None
    unsqueeze_358: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_357, -1);  unsqueeze_357 = None
    mul_138: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_137, unsqueeze_358);  mul_137 = unsqueeze_358 = None
    unsqueeze_359: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg134_1, -1);  arg134_1 = None
    unsqueeze_360: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_359, -1);  unsqueeze_359 = None
    add_111: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_138, unsqueeze_360);  mul_138 = unsqueeze_360 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_43: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_111);  add_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_45: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_43, arg135_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_43 = arg135_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_96: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1116_1, torch.float32);  arg1116_1 = None
    convert_element_type_97: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1117_1, torch.float32);  arg1117_1 = None
    add_112: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_97, 1e-05);  convert_element_type_97 = None
    sqrt_45: "f32[36]" = torch.ops.aten.sqrt.default(add_112);  add_112 = None
    reciprocal_45: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_45);  sqrt_45 = None
    mul_139: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_45, 1);  reciprocal_45 = None
    unsqueeze_361: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_96, -1);  convert_element_type_96 = None
    unsqueeze_362: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_361, -1);  unsqueeze_361 = None
    unsqueeze_363: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_139, -1);  mul_139 = None
    unsqueeze_364: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_363, -1);  unsqueeze_363 = None
    sub_45: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_45, unsqueeze_362);  convolution_45 = unsqueeze_362 = None
    mul_140: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_45, unsqueeze_364);  sub_45 = unsqueeze_364 = None
    unsqueeze_365: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg136_1, -1);  arg136_1 = None
    unsqueeze_366: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_365, -1);  unsqueeze_365 = None
    mul_141: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_140, unsqueeze_366);  mul_140 = unsqueeze_366 = None
    unsqueeze_367: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg137_1, -1);  arg137_1 = None
    unsqueeze_368: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_367, -1);  unsqueeze_367 = None
    add_113: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_141, unsqueeze_368);  mul_141 = unsqueeze_368 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_114: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_113, relu_33);  add_113 = relu_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_44: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_114);  add_114 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_46: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_44, arg138_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg138_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_98: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1119_1, torch.float32);  arg1119_1 = None
    convert_element_type_99: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1120_1, torch.float32);  arg1120_1 = None
    add_115: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_99, 1e-05);  convert_element_type_99 = None
    sqrt_46: "f32[36]" = torch.ops.aten.sqrt.default(add_115);  add_115 = None
    reciprocal_46: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_46);  sqrt_46 = None
    mul_142: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_46, 1);  reciprocal_46 = None
    unsqueeze_369: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_98, -1);  convert_element_type_98 = None
    unsqueeze_370: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_369, -1);  unsqueeze_369 = None
    unsqueeze_371: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_142, -1);  mul_142 = None
    unsqueeze_372: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_371, -1);  unsqueeze_371 = None
    sub_46: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_46, unsqueeze_370);  convolution_46 = unsqueeze_370 = None
    mul_143: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_46, unsqueeze_372);  sub_46 = unsqueeze_372 = None
    unsqueeze_373: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg139_1, -1);  arg139_1 = None
    unsqueeze_374: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_373, -1);  unsqueeze_373 = None
    mul_144: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_143, unsqueeze_374);  mul_143 = unsqueeze_374 = None
    unsqueeze_375: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg140_1, -1);  arg140_1 = None
    unsqueeze_376: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_375, -1);  unsqueeze_375 = None
    add_116: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_144, unsqueeze_376);  mul_144 = unsqueeze_376 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_45: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_116);  add_116 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_47: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_45, arg141_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_45 = arg141_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_100: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1122_1, torch.float32);  arg1122_1 = None
    convert_element_type_101: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1123_1, torch.float32);  arg1123_1 = None
    add_117: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_101, 1e-05);  convert_element_type_101 = None
    sqrt_47: "f32[36]" = torch.ops.aten.sqrt.default(add_117);  add_117 = None
    reciprocal_47: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_47);  sqrt_47 = None
    mul_145: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_47, 1);  reciprocal_47 = None
    unsqueeze_377: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_100, -1);  convert_element_type_100 = None
    unsqueeze_378: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_377, -1);  unsqueeze_377 = None
    unsqueeze_379: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_145, -1);  mul_145 = None
    unsqueeze_380: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_379, -1);  unsqueeze_379 = None
    sub_47: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_47, unsqueeze_378);  convolution_47 = unsqueeze_378 = None
    mul_146: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_47, unsqueeze_380);  sub_47 = unsqueeze_380 = None
    unsqueeze_381: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg142_1, -1);  arg142_1 = None
    unsqueeze_382: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_381, -1);  unsqueeze_381 = None
    mul_147: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_146, unsqueeze_382);  mul_146 = unsqueeze_382 = None
    unsqueeze_383: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg143_1, -1);  arg143_1 = None
    unsqueeze_384: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_383, -1);  unsqueeze_383 = None
    add_118: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_147, unsqueeze_384);  mul_147 = unsqueeze_384 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_119: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_118, relu_44);  add_118 = relu_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_46: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_119);  add_119 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_48: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_46, arg144_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg144_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_102: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1125_1, torch.float32);  arg1125_1 = None
    convert_element_type_103: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1126_1, torch.float32);  arg1126_1 = None
    add_120: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_103, 1e-05);  convert_element_type_103 = None
    sqrt_48: "f32[36]" = torch.ops.aten.sqrt.default(add_120);  add_120 = None
    reciprocal_48: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_48);  sqrt_48 = None
    mul_148: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_48, 1);  reciprocal_48 = None
    unsqueeze_385: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_102, -1);  convert_element_type_102 = None
    unsqueeze_386: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_385, -1);  unsqueeze_385 = None
    unsqueeze_387: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_148, -1);  mul_148 = None
    unsqueeze_388: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_387, -1);  unsqueeze_387 = None
    sub_48: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_48, unsqueeze_386);  convolution_48 = unsqueeze_386 = None
    mul_149: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_48, unsqueeze_388);  sub_48 = unsqueeze_388 = None
    unsqueeze_389: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg145_1, -1);  arg145_1 = None
    unsqueeze_390: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_389, -1);  unsqueeze_389 = None
    mul_150: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_149, unsqueeze_390);  mul_149 = unsqueeze_390 = None
    unsqueeze_391: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg146_1, -1);  arg146_1 = None
    unsqueeze_392: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_391, -1);  unsqueeze_391 = None
    add_121: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_150, unsqueeze_392);  mul_150 = unsqueeze_392 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_47: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_121);  add_121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_49: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_47, arg147_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_47 = arg147_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_104: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1128_1, torch.float32);  arg1128_1 = None
    convert_element_type_105: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1129_1, torch.float32);  arg1129_1 = None
    add_122: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_105, 1e-05);  convert_element_type_105 = None
    sqrt_49: "f32[36]" = torch.ops.aten.sqrt.default(add_122);  add_122 = None
    reciprocal_49: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_49);  sqrt_49 = None
    mul_151: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_49, 1);  reciprocal_49 = None
    unsqueeze_393: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_104, -1);  convert_element_type_104 = None
    unsqueeze_394: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_393, -1);  unsqueeze_393 = None
    unsqueeze_395: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_151, -1);  mul_151 = None
    unsqueeze_396: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_395, -1);  unsqueeze_395 = None
    sub_49: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_49, unsqueeze_394);  convolution_49 = unsqueeze_394 = None
    mul_152: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_49, unsqueeze_396);  sub_49 = unsqueeze_396 = None
    unsqueeze_397: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg148_1, -1);  arg148_1 = None
    unsqueeze_398: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_397, -1);  unsqueeze_397 = None
    mul_153: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_152, unsqueeze_398);  mul_152 = unsqueeze_398 = None
    unsqueeze_399: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg149_1, -1);  arg149_1 = None
    unsqueeze_400: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_399, -1);  unsqueeze_399 = None
    add_123: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_153, unsqueeze_400);  mul_153 = unsqueeze_400 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_124: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_123, relu_46);  add_123 = relu_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_48: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_124);  add_124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_50: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_48, arg150_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg150_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_106: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1131_1, torch.float32);  arg1131_1 = None
    convert_element_type_107: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1132_1, torch.float32);  arg1132_1 = None
    add_125: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_107, 1e-05);  convert_element_type_107 = None
    sqrt_50: "f32[36]" = torch.ops.aten.sqrt.default(add_125);  add_125 = None
    reciprocal_50: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_50);  sqrt_50 = None
    mul_154: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_50, 1);  reciprocal_50 = None
    unsqueeze_401: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_106, -1);  convert_element_type_106 = None
    unsqueeze_402: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_401, -1);  unsqueeze_401 = None
    unsqueeze_403: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_154, -1);  mul_154 = None
    unsqueeze_404: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_403, -1);  unsqueeze_403 = None
    sub_50: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_50, unsqueeze_402);  convolution_50 = unsqueeze_402 = None
    mul_155: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_50, unsqueeze_404);  sub_50 = unsqueeze_404 = None
    unsqueeze_405: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg151_1, -1);  arg151_1 = None
    unsqueeze_406: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_405, -1);  unsqueeze_405 = None
    mul_156: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_155, unsqueeze_406);  mul_155 = unsqueeze_406 = None
    unsqueeze_407: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg152_1, -1);  arg152_1 = None
    unsqueeze_408: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_407, -1);  unsqueeze_407 = None
    add_126: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_156, unsqueeze_408);  mul_156 = unsqueeze_408 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_49: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_126);  add_126 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_51: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_49, arg153_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_49 = arg153_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_108: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1134_1, torch.float32);  arg1134_1 = None
    convert_element_type_109: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1135_1, torch.float32);  arg1135_1 = None
    add_127: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_109, 1e-05);  convert_element_type_109 = None
    sqrt_51: "f32[36]" = torch.ops.aten.sqrt.default(add_127);  add_127 = None
    reciprocal_51: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_51);  sqrt_51 = None
    mul_157: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_51, 1);  reciprocal_51 = None
    unsqueeze_409: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_108, -1);  convert_element_type_108 = None
    unsqueeze_410: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_409, -1);  unsqueeze_409 = None
    unsqueeze_411: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_157, -1);  mul_157 = None
    unsqueeze_412: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_411, -1);  unsqueeze_411 = None
    sub_51: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_51, unsqueeze_410);  convolution_51 = unsqueeze_410 = None
    mul_158: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_51, unsqueeze_412);  sub_51 = unsqueeze_412 = None
    unsqueeze_413: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg154_1, -1);  arg154_1 = None
    unsqueeze_414: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_413, -1);  unsqueeze_413 = None
    mul_159: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_158, unsqueeze_414);  mul_158 = unsqueeze_414 = None
    unsqueeze_415: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg155_1, -1);  arg155_1 = None
    unsqueeze_416: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_415, -1);  unsqueeze_415 = None
    add_128: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_159, unsqueeze_416);  mul_159 = unsqueeze_416 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_129: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_128, relu_48);  add_128 = relu_48 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_50: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_129);  add_129 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_52: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_34, arg156_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg156_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_110: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1137_1, torch.float32);  arg1137_1 = None
    convert_element_type_111: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1138_1, torch.float32);  arg1138_1 = None
    add_130: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_111, 1e-05);  convert_element_type_111 = None
    sqrt_52: "f32[72]" = torch.ops.aten.sqrt.default(add_130);  add_130 = None
    reciprocal_52: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_52);  sqrt_52 = None
    mul_160: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_52, 1);  reciprocal_52 = None
    unsqueeze_417: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_110, -1);  convert_element_type_110 = None
    unsqueeze_418: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_417, -1);  unsqueeze_417 = None
    unsqueeze_419: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_160, -1);  mul_160 = None
    unsqueeze_420: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_419, -1);  unsqueeze_419 = None
    sub_52: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_52, unsqueeze_418);  convolution_52 = unsqueeze_418 = None
    mul_161: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_52, unsqueeze_420);  sub_52 = unsqueeze_420 = None
    unsqueeze_421: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg157_1, -1);  arg157_1 = None
    unsqueeze_422: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_421, -1);  unsqueeze_421 = None
    mul_162: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_161, unsqueeze_422);  mul_161 = unsqueeze_422 = None
    unsqueeze_423: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg158_1, -1);  arg158_1 = None
    unsqueeze_424: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_423, -1);  unsqueeze_423 = None
    add_131: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_162, unsqueeze_424);  mul_162 = unsqueeze_424 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_51: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_131);  add_131 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_53: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_51, arg159_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_51 = arg159_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_112: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1140_1, torch.float32);  arg1140_1 = None
    convert_element_type_113: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1141_1, torch.float32);  arg1141_1 = None
    add_132: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_113, 1e-05);  convert_element_type_113 = None
    sqrt_53: "f32[72]" = torch.ops.aten.sqrt.default(add_132);  add_132 = None
    reciprocal_53: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_53);  sqrt_53 = None
    mul_163: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_53, 1);  reciprocal_53 = None
    unsqueeze_425: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_112, -1);  convert_element_type_112 = None
    unsqueeze_426: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_425, -1);  unsqueeze_425 = None
    unsqueeze_427: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_163, -1);  mul_163 = None
    unsqueeze_428: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_427, -1);  unsqueeze_427 = None
    sub_53: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_53, unsqueeze_426);  convolution_53 = unsqueeze_426 = None
    mul_164: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_53, unsqueeze_428);  sub_53 = unsqueeze_428 = None
    unsqueeze_429: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg160_1, -1);  arg160_1 = None
    unsqueeze_430: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_429, -1);  unsqueeze_429 = None
    mul_165: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_164, unsqueeze_430);  mul_164 = unsqueeze_430 = None
    unsqueeze_431: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg161_1, -1);  arg161_1 = None
    unsqueeze_432: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_431, -1);  unsqueeze_431 = None
    add_133: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_165, unsqueeze_432);  mul_165 = unsqueeze_432 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_134: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_133, relu_34);  add_133 = relu_34 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_52: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_134);  add_134 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_54: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_52, arg162_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg162_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_114: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1143_1, torch.float32);  arg1143_1 = None
    convert_element_type_115: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1144_1, torch.float32);  arg1144_1 = None
    add_135: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_115, 1e-05);  convert_element_type_115 = None
    sqrt_54: "f32[72]" = torch.ops.aten.sqrt.default(add_135);  add_135 = None
    reciprocal_54: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_54);  sqrt_54 = None
    mul_166: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_54, 1);  reciprocal_54 = None
    unsqueeze_433: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_114, -1);  convert_element_type_114 = None
    unsqueeze_434: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_433, -1);  unsqueeze_433 = None
    unsqueeze_435: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_166, -1);  mul_166 = None
    unsqueeze_436: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_435, -1);  unsqueeze_435 = None
    sub_54: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_54, unsqueeze_434);  convolution_54 = unsqueeze_434 = None
    mul_167: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_54, unsqueeze_436);  sub_54 = unsqueeze_436 = None
    unsqueeze_437: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg163_1, -1);  arg163_1 = None
    unsqueeze_438: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_437, -1);  unsqueeze_437 = None
    mul_168: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_167, unsqueeze_438);  mul_167 = unsqueeze_438 = None
    unsqueeze_439: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg164_1, -1);  arg164_1 = None
    unsqueeze_440: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_439, -1);  unsqueeze_439 = None
    add_136: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_168, unsqueeze_440);  mul_168 = unsqueeze_440 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_53: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_136);  add_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_55: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_53, arg165_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_53 = arg165_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_116: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1146_1, torch.float32);  arg1146_1 = None
    convert_element_type_117: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1147_1, torch.float32);  arg1147_1 = None
    add_137: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_117, 1e-05);  convert_element_type_117 = None
    sqrt_55: "f32[72]" = torch.ops.aten.sqrt.default(add_137);  add_137 = None
    reciprocal_55: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_55);  sqrt_55 = None
    mul_169: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_55, 1);  reciprocal_55 = None
    unsqueeze_441: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_116, -1);  convert_element_type_116 = None
    unsqueeze_442: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_441, -1);  unsqueeze_441 = None
    unsqueeze_443: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_169, -1);  mul_169 = None
    unsqueeze_444: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_443, -1);  unsqueeze_443 = None
    sub_55: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_55, unsqueeze_442);  convolution_55 = unsqueeze_442 = None
    mul_170: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_55, unsqueeze_444);  sub_55 = unsqueeze_444 = None
    unsqueeze_445: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg166_1, -1);  arg166_1 = None
    unsqueeze_446: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_445, -1);  unsqueeze_445 = None
    mul_171: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_170, unsqueeze_446);  mul_170 = unsqueeze_446 = None
    unsqueeze_447: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg167_1, -1);  arg167_1 = None
    unsqueeze_448: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_447, -1);  unsqueeze_447 = None
    add_138: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_171, unsqueeze_448);  mul_171 = unsqueeze_448 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_139: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_138, relu_52);  add_138 = relu_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_54: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_139);  add_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_56: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_54, arg168_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg168_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_118: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1149_1, torch.float32);  arg1149_1 = None
    convert_element_type_119: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1150_1, torch.float32);  arg1150_1 = None
    add_140: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_119, 1e-05);  convert_element_type_119 = None
    sqrt_56: "f32[72]" = torch.ops.aten.sqrt.default(add_140);  add_140 = None
    reciprocal_56: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_56);  sqrt_56 = None
    mul_172: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_56, 1);  reciprocal_56 = None
    unsqueeze_449: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_118, -1);  convert_element_type_118 = None
    unsqueeze_450: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_449, -1);  unsqueeze_449 = None
    unsqueeze_451: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_172, -1);  mul_172 = None
    unsqueeze_452: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_451, -1);  unsqueeze_451 = None
    sub_56: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_56, unsqueeze_450);  convolution_56 = unsqueeze_450 = None
    mul_173: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_56, unsqueeze_452);  sub_56 = unsqueeze_452 = None
    unsqueeze_453: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg169_1, -1);  arg169_1 = None
    unsqueeze_454: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_453, -1);  unsqueeze_453 = None
    mul_174: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_173, unsqueeze_454);  mul_173 = unsqueeze_454 = None
    unsqueeze_455: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg170_1, -1);  arg170_1 = None
    unsqueeze_456: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_455, -1);  unsqueeze_455 = None
    add_141: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_174, unsqueeze_456);  mul_174 = unsqueeze_456 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_55: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_141);  add_141 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_57: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_55, arg171_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_55 = arg171_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_120: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1152_1, torch.float32);  arg1152_1 = None
    convert_element_type_121: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1153_1, torch.float32);  arg1153_1 = None
    add_142: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_121, 1e-05);  convert_element_type_121 = None
    sqrt_57: "f32[72]" = torch.ops.aten.sqrt.default(add_142);  add_142 = None
    reciprocal_57: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_57);  sqrt_57 = None
    mul_175: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_57, 1);  reciprocal_57 = None
    unsqueeze_457: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_120, -1);  convert_element_type_120 = None
    unsqueeze_458: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_457, -1);  unsqueeze_457 = None
    unsqueeze_459: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_175, -1);  mul_175 = None
    unsqueeze_460: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_459, -1);  unsqueeze_459 = None
    sub_57: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_57, unsqueeze_458);  convolution_57 = unsqueeze_458 = None
    mul_176: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_57, unsqueeze_460);  sub_57 = unsqueeze_460 = None
    unsqueeze_461: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg172_1, -1);  arg172_1 = None
    unsqueeze_462: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_461, -1);  unsqueeze_461 = None
    mul_177: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_176, unsqueeze_462);  mul_176 = unsqueeze_462 = None
    unsqueeze_463: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg173_1, -1);  arg173_1 = None
    unsqueeze_464: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_463, -1);  unsqueeze_463 = None
    add_143: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_177, unsqueeze_464);  mul_177 = unsqueeze_464 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_144: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_143, relu_54);  add_143 = relu_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_56: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_144);  add_144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_58: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_56, arg174_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg174_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_122: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1155_1, torch.float32);  arg1155_1 = None
    convert_element_type_123: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1156_1, torch.float32);  arg1156_1 = None
    add_145: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_123, 1e-05);  convert_element_type_123 = None
    sqrt_58: "f32[72]" = torch.ops.aten.sqrt.default(add_145);  add_145 = None
    reciprocal_58: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_58);  sqrt_58 = None
    mul_178: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_58, 1);  reciprocal_58 = None
    unsqueeze_465: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_122, -1);  convert_element_type_122 = None
    unsqueeze_466: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_465, -1);  unsqueeze_465 = None
    unsqueeze_467: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_178, -1);  mul_178 = None
    unsqueeze_468: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_467, -1);  unsqueeze_467 = None
    sub_58: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_58, unsqueeze_466);  convolution_58 = unsqueeze_466 = None
    mul_179: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_58, unsqueeze_468);  sub_58 = unsqueeze_468 = None
    unsqueeze_469: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg175_1, -1);  arg175_1 = None
    unsqueeze_470: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_469, -1);  unsqueeze_469 = None
    mul_180: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_179, unsqueeze_470);  mul_179 = unsqueeze_470 = None
    unsqueeze_471: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg176_1, -1);  arg176_1 = None
    unsqueeze_472: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_471, -1);  unsqueeze_471 = None
    add_146: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_180, unsqueeze_472);  mul_180 = unsqueeze_472 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_57: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_146);  add_146 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_59: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_57, arg177_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_57 = arg177_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_124: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1158_1, torch.float32);  arg1158_1 = None
    convert_element_type_125: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1159_1, torch.float32);  arg1159_1 = None
    add_147: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_125, 1e-05);  convert_element_type_125 = None
    sqrt_59: "f32[72]" = torch.ops.aten.sqrt.default(add_147);  add_147 = None
    reciprocal_59: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_59);  sqrt_59 = None
    mul_181: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_59, 1);  reciprocal_59 = None
    unsqueeze_473: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_124, -1);  convert_element_type_124 = None
    unsqueeze_474: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_473, -1);  unsqueeze_473 = None
    unsqueeze_475: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_181, -1);  mul_181 = None
    unsqueeze_476: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_475, -1);  unsqueeze_475 = None
    sub_59: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_59, unsqueeze_474);  convolution_59 = unsqueeze_474 = None
    mul_182: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_59, unsqueeze_476);  sub_59 = unsqueeze_476 = None
    unsqueeze_477: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg178_1, -1);  arg178_1 = None
    unsqueeze_478: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_477, -1);  unsqueeze_477 = None
    mul_183: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_182, unsqueeze_478);  mul_182 = unsqueeze_478 = None
    unsqueeze_479: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg179_1, -1);  arg179_1 = None
    unsqueeze_480: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_479, -1);  unsqueeze_479 = None
    add_148: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_183, unsqueeze_480);  mul_183 = unsqueeze_480 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_149: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_148, relu_56);  add_148 = relu_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_58: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_149);  add_149 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_60: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_50, arg180_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg180_1 = None
    convert_element_type_126: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1161_1, torch.float32);  arg1161_1 = None
    convert_element_type_127: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1162_1, torch.float32);  arg1162_1 = None
    add_150: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_127, 1e-05);  convert_element_type_127 = None
    sqrt_60: "f32[18]" = torch.ops.aten.sqrt.default(add_150);  add_150 = None
    reciprocal_60: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_60);  sqrt_60 = None
    mul_184: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_60, 1);  reciprocal_60 = None
    unsqueeze_481: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_126, -1);  convert_element_type_126 = None
    unsqueeze_482: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_481, -1);  unsqueeze_481 = None
    unsqueeze_483: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_184, -1);  mul_184 = None
    unsqueeze_484: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_483, -1);  unsqueeze_483 = None
    sub_60: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_60, unsqueeze_482);  convolution_60 = unsqueeze_482 = None
    mul_185: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_60, unsqueeze_484);  sub_60 = unsqueeze_484 = None
    unsqueeze_485: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg181_1, -1);  arg181_1 = None
    unsqueeze_486: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_485, -1);  unsqueeze_485 = None
    mul_186: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_185, unsqueeze_486);  mul_185 = unsqueeze_486 = None
    unsqueeze_487: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg182_1, -1);  arg182_1 = None
    unsqueeze_488: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_487, -1);  unsqueeze_487 = None
    add_151: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_186, unsqueeze_488);  mul_186 = unsqueeze_488 = None
    iota_2: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_128: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_2, torch.float64);  iota_2 = None
    mul_187: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_128, 1);  convert_element_type_128 = None
    add_152: "f64[56]" = torch.ops.aten.add.Tensor(mul_187, 0);  mul_187 = None
    convert_element_type_129: "f32[56]" = torch.ops.prims.convert_element_type.default(add_152, torch.float32);  add_152 = None
    add_153: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_129, 0.0);  convert_element_type_129 = None
    mul_188: "f32[56]" = torch.ops.aten.mul.Tensor(add_153, 0.5);  add_153 = None
    convert_element_type_130: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_188, torch.int64);  mul_188 = None
    unsqueeze_489: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_130, -1);  convert_element_type_130 = None
    iota_3: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_131: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_3, torch.float64);  iota_3 = None
    mul_189: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_131, 1);  convert_element_type_131 = None
    add_154: "f64[56]" = torch.ops.aten.add.Tensor(mul_189, 0);  mul_189 = None
    convert_element_type_132: "f32[56]" = torch.ops.prims.convert_element_type.default(add_154, torch.float32);  add_154 = None
    add_155: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_132, 0.0);  convert_element_type_132 = None
    mul_190: "f32[56]" = torch.ops.aten.mul.Tensor(add_155, 0.5);  add_155 = None
    convert_element_type_133: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_190, torch.int64);  mul_190 = None
    _unsafe_index_1: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_151, [None, None, unsqueeze_489, convert_element_type_133]);  add_151 = unsqueeze_489 = convert_element_type_133 = None
    add_156: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_42, _unsafe_index_1);  _unsafe_index_1 = None
    convolution_61: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_58, arg183_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg183_1 = None
    convert_element_type_134: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1164_1, torch.float32);  arg1164_1 = None
    convert_element_type_135: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1165_1, torch.float32);  arg1165_1 = None
    add_157: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_135, 1e-05);  convert_element_type_135 = None
    sqrt_61: "f32[18]" = torch.ops.aten.sqrt.default(add_157);  add_157 = None
    reciprocal_61: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_61);  sqrt_61 = None
    mul_191: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_61, 1);  reciprocal_61 = None
    unsqueeze_490: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_134, -1);  convert_element_type_134 = None
    unsqueeze_491: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_490, -1);  unsqueeze_490 = None
    unsqueeze_492: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_191, -1);  mul_191 = None
    unsqueeze_493: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_492, -1);  unsqueeze_492 = None
    sub_61: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_61, unsqueeze_491);  convolution_61 = unsqueeze_491 = None
    mul_192: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_61, unsqueeze_493);  sub_61 = unsqueeze_493 = None
    unsqueeze_494: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg184_1, -1);  arg184_1 = None
    unsqueeze_495: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_494, -1);  unsqueeze_494 = None
    mul_193: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_192, unsqueeze_495);  mul_192 = unsqueeze_495 = None
    unsqueeze_496: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg185_1, -1);  arg185_1 = None
    unsqueeze_497: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_496, -1);  unsqueeze_496 = None
    add_158: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_193, unsqueeze_497);  mul_193 = unsqueeze_497 = None
    iota_4: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_136: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_4, torch.float64);  iota_4 = None
    mul_194: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_136, 1);  convert_element_type_136 = None
    add_159: "f64[56]" = torch.ops.aten.add.Tensor(mul_194, 0);  mul_194 = None
    convert_element_type_137: "f32[56]" = torch.ops.prims.convert_element_type.default(add_159, torch.float32);  add_159 = None
    add_160: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_137, 0.0);  convert_element_type_137 = None
    mul_195: "f32[56]" = torch.ops.aten.mul.Tensor(add_160, 0.25);  add_160 = None
    convert_element_type_138: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_195, torch.int64);  mul_195 = None
    unsqueeze_498: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_138, -1);  convert_element_type_138 = None
    iota_5: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_139: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_5, torch.float64);  iota_5 = None
    mul_196: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_139, 1);  convert_element_type_139 = None
    add_161: "f64[56]" = torch.ops.aten.add.Tensor(mul_196, 0);  mul_196 = None
    convert_element_type_140: "f32[56]" = torch.ops.prims.convert_element_type.default(add_161, torch.float32);  add_161 = None
    add_162: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_140, 0.0);  convert_element_type_140 = None
    mul_197: "f32[56]" = torch.ops.aten.mul.Tensor(add_162, 0.25);  add_162 = None
    convert_element_type_141: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_197, torch.int64);  mul_197 = None
    _unsafe_index_2: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_158, [None, None, unsqueeze_498, convert_element_type_141]);  add_158 = unsqueeze_498 = convert_element_type_141 = None
    add_163: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_156, _unsafe_index_2);  add_156 = _unsafe_index_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_59: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_163);  add_163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_62: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_42, arg186_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg186_1 = None
    convert_element_type_142: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1167_1, torch.float32);  arg1167_1 = None
    convert_element_type_143: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1168_1, torch.float32);  arg1168_1 = None
    add_164: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_143, 1e-05);  convert_element_type_143 = None
    sqrt_62: "f32[36]" = torch.ops.aten.sqrt.default(add_164);  add_164 = None
    reciprocal_62: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_62);  sqrt_62 = None
    mul_198: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_62, 1);  reciprocal_62 = None
    unsqueeze_499: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_142, -1);  convert_element_type_142 = None
    unsqueeze_500: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_499, -1);  unsqueeze_499 = None
    unsqueeze_501: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_198, -1);  mul_198 = None
    unsqueeze_502: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_501, -1);  unsqueeze_501 = None
    sub_62: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_62, unsqueeze_500);  convolution_62 = unsqueeze_500 = None
    mul_199: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_62, unsqueeze_502);  sub_62 = unsqueeze_502 = None
    unsqueeze_503: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg187_1, -1);  arg187_1 = None
    unsqueeze_504: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_503, -1);  unsqueeze_503 = None
    mul_200: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_199, unsqueeze_504);  mul_199 = unsqueeze_504 = None
    unsqueeze_505: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg188_1, -1);  arg188_1 = None
    unsqueeze_506: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_505, -1);  unsqueeze_505 = None
    add_165: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_200, unsqueeze_506);  mul_200 = unsqueeze_506 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_166: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_165, relu_50);  add_165 = None
    convolution_63: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_58, arg189_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg189_1 = None
    convert_element_type_144: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1170_1, torch.float32);  arg1170_1 = None
    convert_element_type_145: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1171_1, torch.float32);  arg1171_1 = None
    add_167: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_145, 1e-05);  convert_element_type_145 = None
    sqrt_63: "f32[36]" = torch.ops.aten.sqrt.default(add_167);  add_167 = None
    reciprocal_63: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_63);  sqrt_63 = None
    mul_201: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_63, 1);  reciprocal_63 = None
    unsqueeze_507: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_144, -1);  convert_element_type_144 = None
    unsqueeze_508: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_507, -1);  unsqueeze_507 = None
    unsqueeze_509: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_201, -1);  mul_201 = None
    unsqueeze_510: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_509, -1);  unsqueeze_509 = None
    sub_63: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_63, unsqueeze_508);  convolution_63 = unsqueeze_508 = None
    mul_202: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_63, unsqueeze_510);  sub_63 = unsqueeze_510 = None
    unsqueeze_511: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg190_1, -1);  arg190_1 = None
    unsqueeze_512: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_511, -1);  unsqueeze_511 = None
    mul_203: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_202, unsqueeze_512);  mul_202 = unsqueeze_512 = None
    unsqueeze_513: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg191_1, -1);  arg191_1 = None
    unsqueeze_514: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_513, -1);  unsqueeze_513 = None
    add_168: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_203, unsqueeze_514);  mul_203 = unsqueeze_514 = None
    iota_6: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_146: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_6, torch.float64);  iota_6 = None
    mul_204: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_146, 1);  convert_element_type_146 = None
    add_169: "f64[28]" = torch.ops.aten.add.Tensor(mul_204, 0);  mul_204 = None
    convert_element_type_147: "f32[28]" = torch.ops.prims.convert_element_type.default(add_169, torch.float32);  add_169 = None
    add_170: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_147, 0.0);  convert_element_type_147 = None
    mul_205: "f32[28]" = torch.ops.aten.mul.Tensor(add_170, 0.5);  add_170 = None
    convert_element_type_148: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_205, torch.int64);  mul_205 = None
    unsqueeze_515: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_148, -1);  convert_element_type_148 = None
    iota_7: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_149: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_7, torch.float64);  iota_7 = None
    mul_206: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_149, 1);  convert_element_type_149 = None
    add_171: "f64[28]" = torch.ops.aten.add.Tensor(mul_206, 0);  mul_206 = None
    convert_element_type_150: "f32[28]" = torch.ops.prims.convert_element_type.default(add_171, torch.float32);  add_171 = None
    add_172: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_150, 0.0);  convert_element_type_150 = None
    mul_207: "f32[28]" = torch.ops.aten.mul.Tensor(add_172, 0.5);  add_172 = None
    convert_element_type_151: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_207, torch.int64);  mul_207 = None
    _unsafe_index_3: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_168, [None, None, unsqueeze_515, convert_element_type_151]);  add_168 = unsqueeze_515 = convert_element_type_151 = None
    add_173: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_166, _unsafe_index_3);  add_166 = _unsafe_index_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_60: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_173);  add_173 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_64: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_42, arg192_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_42 = arg192_1 = None
    convert_element_type_152: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1173_1, torch.float32);  arg1173_1 = None
    convert_element_type_153: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1174_1, torch.float32);  arg1174_1 = None
    add_174: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_153, 1e-05);  convert_element_type_153 = None
    sqrt_64: "f32[18]" = torch.ops.aten.sqrt.default(add_174);  add_174 = None
    reciprocal_64: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_64);  sqrt_64 = None
    mul_208: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_64, 1);  reciprocal_64 = None
    unsqueeze_516: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_152, -1);  convert_element_type_152 = None
    unsqueeze_517: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_516, -1);  unsqueeze_516 = None
    unsqueeze_518: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_208, -1);  mul_208 = None
    unsqueeze_519: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_518, -1);  unsqueeze_518 = None
    sub_64: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_64, unsqueeze_517);  convolution_64 = unsqueeze_517 = None
    mul_209: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_64, unsqueeze_519);  sub_64 = unsqueeze_519 = None
    unsqueeze_520: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg193_1, -1);  arg193_1 = None
    unsqueeze_521: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_520, -1);  unsqueeze_520 = None
    mul_210: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_209, unsqueeze_521);  mul_209 = unsqueeze_521 = None
    unsqueeze_522: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg194_1, -1);  arg194_1 = None
    unsqueeze_523: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_522, -1);  unsqueeze_522 = None
    add_175: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_210, unsqueeze_523);  mul_210 = unsqueeze_523 = None
    relu_61: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_175);  add_175 = None
    convolution_65: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_61, arg195_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_61 = arg195_1 = None
    convert_element_type_154: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1176_1, torch.float32);  arg1176_1 = None
    convert_element_type_155: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1177_1, torch.float32);  arg1177_1 = None
    add_176: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_155, 1e-05);  convert_element_type_155 = None
    sqrt_65: "f32[72]" = torch.ops.aten.sqrt.default(add_176);  add_176 = None
    reciprocal_65: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_65);  sqrt_65 = None
    mul_211: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_65, 1);  reciprocal_65 = None
    unsqueeze_524: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_154, -1);  convert_element_type_154 = None
    unsqueeze_525: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_524, -1);  unsqueeze_524 = None
    unsqueeze_526: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_211, -1);  mul_211 = None
    unsqueeze_527: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_526, -1);  unsqueeze_526 = None
    sub_65: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_65, unsqueeze_525);  convolution_65 = unsqueeze_525 = None
    mul_212: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_65, unsqueeze_527);  sub_65 = unsqueeze_527 = None
    unsqueeze_528: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg196_1, -1);  arg196_1 = None
    unsqueeze_529: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_528, -1);  unsqueeze_528 = None
    mul_213: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_212, unsqueeze_529);  mul_212 = unsqueeze_529 = None
    unsqueeze_530: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg197_1, -1);  arg197_1 = None
    unsqueeze_531: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_530, -1);  unsqueeze_530 = None
    add_177: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_213, unsqueeze_531);  mul_213 = unsqueeze_531 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_66: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_50, arg198_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_50 = arg198_1 = None
    convert_element_type_156: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1179_1, torch.float32);  arg1179_1 = None
    convert_element_type_157: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1180_1, torch.float32);  arg1180_1 = None
    add_178: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_157, 1e-05);  convert_element_type_157 = None
    sqrt_66: "f32[72]" = torch.ops.aten.sqrt.default(add_178);  add_178 = None
    reciprocal_66: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_66);  sqrt_66 = None
    mul_214: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_66, 1);  reciprocal_66 = None
    unsqueeze_532: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_156, -1);  convert_element_type_156 = None
    unsqueeze_533: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_532, -1);  unsqueeze_532 = None
    unsqueeze_534: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_214, -1);  mul_214 = None
    unsqueeze_535: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_534, -1);  unsqueeze_534 = None
    sub_66: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_66, unsqueeze_533);  convolution_66 = unsqueeze_533 = None
    mul_215: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_66, unsqueeze_535);  sub_66 = unsqueeze_535 = None
    unsqueeze_536: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg199_1, -1);  arg199_1 = None
    unsqueeze_537: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_536, -1);  unsqueeze_536 = None
    mul_216: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_215, unsqueeze_537);  mul_215 = unsqueeze_537 = None
    unsqueeze_538: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg200_1, -1);  arg200_1 = None
    unsqueeze_539: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_538, -1);  unsqueeze_538 = None
    add_179: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_216, unsqueeze_539);  mul_216 = unsqueeze_539 = None
    add_180: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_177, add_179);  add_177 = add_179 = None
    add_181: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_180, relu_58);  add_180 = relu_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_62: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_181);  add_181 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_67: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_59, arg201_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg201_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_158: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1182_1, torch.float32);  arg1182_1 = None
    convert_element_type_159: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1183_1, torch.float32);  arg1183_1 = None
    add_182: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_159, 1e-05);  convert_element_type_159 = None
    sqrt_67: "f32[18]" = torch.ops.aten.sqrt.default(add_182);  add_182 = None
    reciprocal_67: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_67);  sqrt_67 = None
    mul_217: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_67, 1);  reciprocal_67 = None
    unsqueeze_540: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_158, -1);  convert_element_type_158 = None
    unsqueeze_541: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_540, -1);  unsqueeze_540 = None
    unsqueeze_542: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_217, -1);  mul_217 = None
    unsqueeze_543: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_542, -1);  unsqueeze_542 = None
    sub_67: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_67, unsqueeze_541);  convolution_67 = unsqueeze_541 = None
    mul_218: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_67, unsqueeze_543);  sub_67 = unsqueeze_543 = None
    unsqueeze_544: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg202_1, -1);  arg202_1 = None
    unsqueeze_545: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_544, -1);  unsqueeze_544 = None
    mul_219: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_218, unsqueeze_545);  mul_218 = unsqueeze_545 = None
    unsqueeze_546: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg203_1, -1);  arg203_1 = None
    unsqueeze_547: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_546, -1);  unsqueeze_546 = None
    add_183: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_219, unsqueeze_547);  mul_219 = unsqueeze_547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_63: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_183);  add_183 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_68: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_63, arg204_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_63 = arg204_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_160: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1185_1, torch.float32);  arg1185_1 = None
    convert_element_type_161: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1186_1, torch.float32);  arg1186_1 = None
    add_184: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_161, 1e-05);  convert_element_type_161 = None
    sqrt_68: "f32[18]" = torch.ops.aten.sqrt.default(add_184);  add_184 = None
    reciprocal_68: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_68);  sqrt_68 = None
    mul_220: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_68, 1);  reciprocal_68 = None
    unsqueeze_548: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_160, -1);  convert_element_type_160 = None
    unsqueeze_549: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_548, -1);  unsqueeze_548 = None
    unsqueeze_550: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_220, -1);  mul_220 = None
    unsqueeze_551: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_550, -1);  unsqueeze_550 = None
    sub_68: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_68, unsqueeze_549);  convolution_68 = unsqueeze_549 = None
    mul_221: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_68, unsqueeze_551);  sub_68 = unsqueeze_551 = None
    unsqueeze_552: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg205_1, -1);  arg205_1 = None
    unsqueeze_553: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_552, -1);  unsqueeze_552 = None
    mul_222: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_221, unsqueeze_553);  mul_221 = unsqueeze_553 = None
    unsqueeze_554: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg206_1, -1);  arg206_1 = None
    unsqueeze_555: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_554, -1);  unsqueeze_554 = None
    add_185: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_222, unsqueeze_555);  mul_222 = unsqueeze_555 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_186: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_185, relu_59);  add_185 = relu_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_64: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_186);  add_186 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_69: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_64, arg207_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg207_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_162: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1188_1, torch.float32);  arg1188_1 = None
    convert_element_type_163: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1189_1, torch.float32);  arg1189_1 = None
    add_187: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_163, 1e-05);  convert_element_type_163 = None
    sqrt_69: "f32[18]" = torch.ops.aten.sqrt.default(add_187);  add_187 = None
    reciprocal_69: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_69);  sqrt_69 = None
    mul_223: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_69, 1);  reciprocal_69 = None
    unsqueeze_556: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_162, -1);  convert_element_type_162 = None
    unsqueeze_557: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_556, -1);  unsqueeze_556 = None
    unsqueeze_558: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_223, -1);  mul_223 = None
    unsqueeze_559: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_558, -1);  unsqueeze_558 = None
    sub_69: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_69, unsqueeze_557);  convolution_69 = unsqueeze_557 = None
    mul_224: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_69, unsqueeze_559);  sub_69 = unsqueeze_559 = None
    unsqueeze_560: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg208_1, -1);  arg208_1 = None
    unsqueeze_561: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_560, -1);  unsqueeze_560 = None
    mul_225: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_224, unsqueeze_561);  mul_224 = unsqueeze_561 = None
    unsqueeze_562: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg209_1, -1);  arg209_1 = None
    unsqueeze_563: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_562, -1);  unsqueeze_562 = None
    add_188: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_225, unsqueeze_563);  mul_225 = unsqueeze_563 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_65: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_188);  add_188 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_70: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_65, arg210_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_65 = arg210_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_164: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1191_1, torch.float32);  arg1191_1 = None
    convert_element_type_165: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1192_1, torch.float32);  arg1192_1 = None
    add_189: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_165, 1e-05);  convert_element_type_165 = None
    sqrt_70: "f32[18]" = torch.ops.aten.sqrt.default(add_189);  add_189 = None
    reciprocal_70: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_70);  sqrt_70 = None
    mul_226: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_70, 1);  reciprocal_70 = None
    unsqueeze_564: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_164, -1);  convert_element_type_164 = None
    unsqueeze_565: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_564, -1);  unsqueeze_564 = None
    unsqueeze_566: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_226, -1);  mul_226 = None
    unsqueeze_567: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_566, -1);  unsqueeze_566 = None
    sub_70: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_70, unsqueeze_565);  convolution_70 = unsqueeze_565 = None
    mul_227: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_70, unsqueeze_567);  sub_70 = unsqueeze_567 = None
    unsqueeze_568: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg211_1, -1);  arg211_1 = None
    unsqueeze_569: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_568, -1);  unsqueeze_568 = None
    mul_228: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_227, unsqueeze_569);  mul_227 = unsqueeze_569 = None
    unsqueeze_570: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg212_1, -1);  arg212_1 = None
    unsqueeze_571: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_570, -1);  unsqueeze_570 = None
    add_190: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_228, unsqueeze_571);  mul_228 = unsqueeze_571 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_191: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_190, relu_64);  add_190 = relu_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_66: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_191);  add_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_71: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_66, arg213_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg213_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_166: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1194_1, torch.float32);  arg1194_1 = None
    convert_element_type_167: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1195_1, torch.float32);  arg1195_1 = None
    add_192: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_167, 1e-05);  convert_element_type_167 = None
    sqrt_71: "f32[18]" = torch.ops.aten.sqrt.default(add_192);  add_192 = None
    reciprocal_71: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_71);  sqrt_71 = None
    mul_229: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_71, 1);  reciprocal_71 = None
    unsqueeze_572: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_166, -1);  convert_element_type_166 = None
    unsqueeze_573: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_572, -1);  unsqueeze_572 = None
    unsqueeze_574: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_229, -1);  mul_229 = None
    unsqueeze_575: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_574, -1);  unsqueeze_574 = None
    sub_71: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_71, unsqueeze_573);  convolution_71 = unsqueeze_573 = None
    mul_230: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_71, unsqueeze_575);  sub_71 = unsqueeze_575 = None
    unsqueeze_576: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg214_1, -1);  arg214_1 = None
    unsqueeze_577: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_576, -1);  unsqueeze_576 = None
    mul_231: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_230, unsqueeze_577);  mul_230 = unsqueeze_577 = None
    unsqueeze_578: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg215_1, -1);  arg215_1 = None
    unsqueeze_579: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_578, -1);  unsqueeze_578 = None
    add_193: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_231, unsqueeze_579);  mul_231 = unsqueeze_579 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_67: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_193);  add_193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_72: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_67, arg216_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_67 = arg216_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_168: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1197_1, torch.float32);  arg1197_1 = None
    convert_element_type_169: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1198_1, torch.float32);  arg1198_1 = None
    add_194: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_169, 1e-05);  convert_element_type_169 = None
    sqrt_72: "f32[18]" = torch.ops.aten.sqrt.default(add_194);  add_194 = None
    reciprocal_72: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_72);  sqrt_72 = None
    mul_232: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_72, 1);  reciprocal_72 = None
    unsqueeze_580: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_168, -1);  convert_element_type_168 = None
    unsqueeze_581: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_580, -1);  unsqueeze_580 = None
    unsqueeze_582: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_232, -1);  mul_232 = None
    unsqueeze_583: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_582, -1);  unsqueeze_582 = None
    sub_72: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_72, unsqueeze_581);  convolution_72 = unsqueeze_581 = None
    mul_233: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_72, unsqueeze_583);  sub_72 = unsqueeze_583 = None
    unsqueeze_584: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg217_1, -1);  arg217_1 = None
    unsqueeze_585: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_584, -1);  unsqueeze_584 = None
    mul_234: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_233, unsqueeze_585);  mul_233 = unsqueeze_585 = None
    unsqueeze_586: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg218_1, -1);  arg218_1 = None
    unsqueeze_587: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_586, -1);  unsqueeze_586 = None
    add_195: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_234, unsqueeze_587);  mul_234 = unsqueeze_587 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_196: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_195, relu_66);  add_195 = relu_66 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_68: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_196);  add_196 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_73: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_68, arg219_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg219_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_170: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1200_1, torch.float32);  arg1200_1 = None
    convert_element_type_171: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1201_1, torch.float32);  arg1201_1 = None
    add_197: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_171, 1e-05);  convert_element_type_171 = None
    sqrt_73: "f32[18]" = torch.ops.aten.sqrt.default(add_197);  add_197 = None
    reciprocal_73: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_73);  sqrt_73 = None
    mul_235: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_73, 1);  reciprocal_73 = None
    unsqueeze_588: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_170, -1);  convert_element_type_170 = None
    unsqueeze_589: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_588, -1);  unsqueeze_588 = None
    unsqueeze_590: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_235, -1);  mul_235 = None
    unsqueeze_591: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_590, -1);  unsqueeze_590 = None
    sub_73: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_73, unsqueeze_589);  convolution_73 = unsqueeze_589 = None
    mul_236: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_73, unsqueeze_591);  sub_73 = unsqueeze_591 = None
    unsqueeze_592: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg220_1, -1);  arg220_1 = None
    unsqueeze_593: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_592, -1);  unsqueeze_592 = None
    mul_237: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_236, unsqueeze_593);  mul_236 = unsqueeze_593 = None
    unsqueeze_594: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg221_1, -1);  arg221_1 = None
    unsqueeze_595: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_594, -1);  unsqueeze_594 = None
    add_198: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_237, unsqueeze_595);  mul_237 = unsqueeze_595 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_69: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_198);  add_198 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_74: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_69, arg222_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_69 = arg222_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_172: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1203_1, torch.float32);  arg1203_1 = None
    convert_element_type_173: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1204_1, torch.float32);  arg1204_1 = None
    add_199: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_173, 1e-05);  convert_element_type_173 = None
    sqrt_74: "f32[18]" = torch.ops.aten.sqrt.default(add_199);  add_199 = None
    reciprocal_74: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_74);  sqrt_74 = None
    mul_238: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_74, 1);  reciprocal_74 = None
    unsqueeze_596: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_172, -1);  convert_element_type_172 = None
    unsqueeze_597: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_596, -1);  unsqueeze_596 = None
    unsqueeze_598: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_238, -1);  mul_238 = None
    unsqueeze_599: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_598, -1);  unsqueeze_598 = None
    sub_74: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_74, unsqueeze_597);  convolution_74 = unsqueeze_597 = None
    mul_239: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_74, unsqueeze_599);  sub_74 = unsqueeze_599 = None
    unsqueeze_600: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg223_1, -1);  arg223_1 = None
    unsqueeze_601: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_600, -1);  unsqueeze_600 = None
    mul_240: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_239, unsqueeze_601);  mul_239 = unsqueeze_601 = None
    unsqueeze_602: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg224_1, -1);  arg224_1 = None
    unsqueeze_603: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_602, -1);  unsqueeze_602 = None
    add_200: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_240, unsqueeze_603);  mul_240 = unsqueeze_603 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_201: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_200, relu_68);  add_200 = relu_68 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_70: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_201);  add_201 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_75: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_60, arg225_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg225_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_174: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1206_1, torch.float32);  arg1206_1 = None
    convert_element_type_175: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1207_1, torch.float32);  arg1207_1 = None
    add_202: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_175, 1e-05);  convert_element_type_175 = None
    sqrt_75: "f32[36]" = torch.ops.aten.sqrt.default(add_202);  add_202 = None
    reciprocal_75: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_75);  sqrt_75 = None
    mul_241: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_75, 1);  reciprocal_75 = None
    unsqueeze_604: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_174, -1);  convert_element_type_174 = None
    unsqueeze_605: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_604, -1);  unsqueeze_604 = None
    unsqueeze_606: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_241, -1);  mul_241 = None
    unsqueeze_607: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_606, -1);  unsqueeze_606 = None
    sub_75: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_75, unsqueeze_605);  convolution_75 = unsqueeze_605 = None
    mul_242: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_75, unsqueeze_607);  sub_75 = unsqueeze_607 = None
    unsqueeze_608: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg226_1, -1);  arg226_1 = None
    unsqueeze_609: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_608, -1);  unsqueeze_608 = None
    mul_243: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_242, unsqueeze_609);  mul_242 = unsqueeze_609 = None
    unsqueeze_610: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg227_1, -1);  arg227_1 = None
    unsqueeze_611: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_610, -1);  unsqueeze_610 = None
    add_203: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_243, unsqueeze_611);  mul_243 = unsqueeze_611 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_71: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_203);  add_203 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_76: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_71, arg228_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_71 = arg228_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_176: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1209_1, torch.float32);  arg1209_1 = None
    convert_element_type_177: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1210_1, torch.float32);  arg1210_1 = None
    add_204: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_177, 1e-05);  convert_element_type_177 = None
    sqrt_76: "f32[36]" = torch.ops.aten.sqrt.default(add_204);  add_204 = None
    reciprocal_76: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_76);  sqrt_76 = None
    mul_244: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_76, 1);  reciprocal_76 = None
    unsqueeze_612: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_176, -1);  convert_element_type_176 = None
    unsqueeze_613: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_612, -1);  unsqueeze_612 = None
    unsqueeze_614: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_244, -1);  mul_244 = None
    unsqueeze_615: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_614, -1);  unsqueeze_614 = None
    sub_76: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_76, unsqueeze_613);  convolution_76 = unsqueeze_613 = None
    mul_245: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_76, unsqueeze_615);  sub_76 = unsqueeze_615 = None
    unsqueeze_616: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg229_1, -1);  arg229_1 = None
    unsqueeze_617: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_616, -1);  unsqueeze_616 = None
    mul_246: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_245, unsqueeze_617);  mul_245 = unsqueeze_617 = None
    unsqueeze_618: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg230_1, -1);  arg230_1 = None
    unsqueeze_619: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_618, -1);  unsqueeze_618 = None
    add_205: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_246, unsqueeze_619);  mul_246 = unsqueeze_619 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_206: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_205, relu_60);  add_205 = relu_60 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_72: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_206);  add_206 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_77: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_72, arg231_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg231_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_178: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1212_1, torch.float32);  arg1212_1 = None
    convert_element_type_179: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1213_1, torch.float32);  arg1213_1 = None
    add_207: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_179, 1e-05);  convert_element_type_179 = None
    sqrt_77: "f32[36]" = torch.ops.aten.sqrt.default(add_207);  add_207 = None
    reciprocal_77: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_77);  sqrt_77 = None
    mul_247: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_77, 1);  reciprocal_77 = None
    unsqueeze_620: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_178, -1);  convert_element_type_178 = None
    unsqueeze_621: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_620, -1);  unsqueeze_620 = None
    unsqueeze_622: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_247, -1);  mul_247 = None
    unsqueeze_623: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_622, -1);  unsqueeze_622 = None
    sub_77: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_77, unsqueeze_621);  convolution_77 = unsqueeze_621 = None
    mul_248: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_77, unsqueeze_623);  sub_77 = unsqueeze_623 = None
    unsqueeze_624: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg232_1, -1);  arg232_1 = None
    unsqueeze_625: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_624, -1);  unsqueeze_624 = None
    mul_249: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_248, unsqueeze_625);  mul_248 = unsqueeze_625 = None
    unsqueeze_626: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg233_1, -1);  arg233_1 = None
    unsqueeze_627: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_626, -1);  unsqueeze_626 = None
    add_208: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_249, unsqueeze_627);  mul_249 = unsqueeze_627 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_73: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_208);  add_208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_78: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_73, arg234_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_73 = arg234_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_180: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1215_1, torch.float32);  arg1215_1 = None
    convert_element_type_181: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1216_1, torch.float32);  arg1216_1 = None
    add_209: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_181, 1e-05);  convert_element_type_181 = None
    sqrt_78: "f32[36]" = torch.ops.aten.sqrt.default(add_209);  add_209 = None
    reciprocal_78: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_78);  sqrt_78 = None
    mul_250: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_78, 1);  reciprocal_78 = None
    unsqueeze_628: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_180, -1);  convert_element_type_180 = None
    unsqueeze_629: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_628, -1);  unsqueeze_628 = None
    unsqueeze_630: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_250, -1);  mul_250 = None
    unsqueeze_631: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_630, -1);  unsqueeze_630 = None
    sub_78: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_78, unsqueeze_629);  convolution_78 = unsqueeze_629 = None
    mul_251: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_78, unsqueeze_631);  sub_78 = unsqueeze_631 = None
    unsqueeze_632: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg235_1, -1);  arg235_1 = None
    unsqueeze_633: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_632, -1);  unsqueeze_632 = None
    mul_252: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_251, unsqueeze_633);  mul_251 = unsqueeze_633 = None
    unsqueeze_634: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg236_1, -1);  arg236_1 = None
    unsqueeze_635: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_634, -1);  unsqueeze_634 = None
    add_210: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_252, unsqueeze_635);  mul_252 = unsqueeze_635 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_211: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_210, relu_72);  add_210 = relu_72 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_74: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_211);  add_211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_79: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_74, arg237_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg237_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_182: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1218_1, torch.float32);  arg1218_1 = None
    convert_element_type_183: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1219_1, torch.float32);  arg1219_1 = None
    add_212: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_183, 1e-05);  convert_element_type_183 = None
    sqrt_79: "f32[36]" = torch.ops.aten.sqrt.default(add_212);  add_212 = None
    reciprocal_79: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_79);  sqrt_79 = None
    mul_253: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_79, 1);  reciprocal_79 = None
    unsqueeze_636: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_182, -1);  convert_element_type_182 = None
    unsqueeze_637: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_636, -1);  unsqueeze_636 = None
    unsqueeze_638: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_253, -1);  mul_253 = None
    unsqueeze_639: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_638, -1);  unsqueeze_638 = None
    sub_79: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_79, unsqueeze_637);  convolution_79 = unsqueeze_637 = None
    mul_254: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_79, unsqueeze_639);  sub_79 = unsqueeze_639 = None
    unsqueeze_640: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg238_1, -1);  arg238_1 = None
    unsqueeze_641: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_640, -1);  unsqueeze_640 = None
    mul_255: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_254, unsqueeze_641);  mul_254 = unsqueeze_641 = None
    unsqueeze_642: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg239_1, -1);  arg239_1 = None
    unsqueeze_643: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_642, -1);  unsqueeze_642 = None
    add_213: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_255, unsqueeze_643);  mul_255 = unsqueeze_643 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_75: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_213);  add_213 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_80: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_75, arg240_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_75 = arg240_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_184: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1221_1, torch.float32);  arg1221_1 = None
    convert_element_type_185: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1222_1, torch.float32);  arg1222_1 = None
    add_214: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_185, 1e-05);  convert_element_type_185 = None
    sqrt_80: "f32[36]" = torch.ops.aten.sqrt.default(add_214);  add_214 = None
    reciprocal_80: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_80);  sqrt_80 = None
    mul_256: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_80, 1);  reciprocal_80 = None
    unsqueeze_644: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_184, -1);  convert_element_type_184 = None
    unsqueeze_645: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_644, -1);  unsqueeze_644 = None
    unsqueeze_646: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_256, -1);  mul_256 = None
    unsqueeze_647: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_646, -1);  unsqueeze_646 = None
    sub_80: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_80, unsqueeze_645);  convolution_80 = unsqueeze_645 = None
    mul_257: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_80, unsqueeze_647);  sub_80 = unsqueeze_647 = None
    unsqueeze_648: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg241_1, -1);  arg241_1 = None
    unsqueeze_649: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_648, -1);  unsqueeze_648 = None
    mul_258: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_257, unsqueeze_649);  mul_257 = unsqueeze_649 = None
    unsqueeze_650: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg242_1, -1);  arg242_1 = None
    unsqueeze_651: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_650, -1);  unsqueeze_650 = None
    add_215: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_258, unsqueeze_651);  mul_258 = unsqueeze_651 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_216: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_215, relu_74);  add_215 = relu_74 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_76: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_216);  add_216 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_81: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_76, arg243_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg243_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_186: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1224_1, torch.float32);  arg1224_1 = None
    convert_element_type_187: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1225_1, torch.float32);  arg1225_1 = None
    add_217: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_187, 1e-05);  convert_element_type_187 = None
    sqrt_81: "f32[36]" = torch.ops.aten.sqrt.default(add_217);  add_217 = None
    reciprocal_81: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_81);  sqrt_81 = None
    mul_259: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_81, 1);  reciprocal_81 = None
    unsqueeze_652: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_186, -1);  convert_element_type_186 = None
    unsqueeze_653: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_652, -1);  unsqueeze_652 = None
    unsqueeze_654: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_259, -1);  mul_259 = None
    unsqueeze_655: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_654, -1);  unsqueeze_654 = None
    sub_81: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_81, unsqueeze_653);  convolution_81 = unsqueeze_653 = None
    mul_260: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_81, unsqueeze_655);  sub_81 = unsqueeze_655 = None
    unsqueeze_656: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg244_1, -1);  arg244_1 = None
    unsqueeze_657: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_656, -1);  unsqueeze_656 = None
    mul_261: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_260, unsqueeze_657);  mul_260 = unsqueeze_657 = None
    unsqueeze_658: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg245_1, -1);  arg245_1 = None
    unsqueeze_659: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_658, -1);  unsqueeze_658 = None
    add_218: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_261, unsqueeze_659);  mul_261 = unsqueeze_659 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_77: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_218);  add_218 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_82: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_77, arg246_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_77 = arg246_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_188: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1227_1, torch.float32);  arg1227_1 = None
    convert_element_type_189: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1228_1, torch.float32);  arg1228_1 = None
    add_219: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_189, 1e-05);  convert_element_type_189 = None
    sqrt_82: "f32[36]" = torch.ops.aten.sqrt.default(add_219);  add_219 = None
    reciprocal_82: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_82);  sqrt_82 = None
    mul_262: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_82, 1);  reciprocal_82 = None
    unsqueeze_660: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_188, -1);  convert_element_type_188 = None
    unsqueeze_661: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_660, -1);  unsqueeze_660 = None
    unsqueeze_662: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_262, -1);  mul_262 = None
    unsqueeze_663: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_662, -1);  unsqueeze_662 = None
    sub_82: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_82, unsqueeze_661);  convolution_82 = unsqueeze_661 = None
    mul_263: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_82, unsqueeze_663);  sub_82 = unsqueeze_663 = None
    unsqueeze_664: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg247_1, -1);  arg247_1 = None
    unsqueeze_665: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_664, -1);  unsqueeze_664 = None
    mul_264: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_263, unsqueeze_665);  mul_263 = unsqueeze_665 = None
    unsqueeze_666: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg248_1, -1);  arg248_1 = None
    unsqueeze_667: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_666, -1);  unsqueeze_666 = None
    add_220: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_264, unsqueeze_667);  mul_264 = unsqueeze_667 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_221: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_220, relu_76);  add_220 = relu_76 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_78: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_221);  add_221 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_83: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_62, arg249_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg249_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_190: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1230_1, torch.float32);  arg1230_1 = None
    convert_element_type_191: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1231_1, torch.float32);  arg1231_1 = None
    add_222: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_191, 1e-05);  convert_element_type_191 = None
    sqrt_83: "f32[72]" = torch.ops.aten.sqrt.default(add_222);  add_222 = None
    reciprocal_83: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_83);  sqrt_83 = None
    mul_265: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_83, 1);  reciprocal_83 = None
    unsqueeze_668: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_190, -1);  convert_element_type_190 = None
    unsqueeze_669: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_668, -1);  unsqueeze_668 = None
    unsqueeze_670: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_265, -1);  mul_265 = None
    unsqueeze_671: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_670, -1);  unsqueeze_670 = None
    sub_83: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_83, unsqueeze_669);  convolution_83 = unsqueeze_669 = None
    mul_266: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_83, unsqueeze_671);  sub_83 = unsqueeze_671 = None
    unsqueeze_672: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg250_1, -1);  arg250_1 = None
    unsqueeze_673: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_672, -1);  unsqueeze_672 = None
    mul_267: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_266, unsqueeze_673);  mul_266 = unsqueeze_673 = None
    unsqueeze_674: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg251_1, -1);  arg251_1 = None
    unsqueeze_675: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_674, -1);  unsqueeze_674 = None
    add_223: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_267, unsqueeze_675);  mul_267 = unsqueeze_675 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_79: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_223);  add_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_84: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_79, arg252_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_79 = arg252_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_192: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1233_1, torch.float32);  arg1233_1 = None
    convert_element_type_193: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1234_1, torch.float32);  arg1234_1 = None
    add_224: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_193, 1e-05);  convert_element_type_193 = None
    sqrt_84: "f32[72]" = torch.ops.aten.sqrt.default(add_224);  add_224 = None
    reciprocal_84: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_84);  sqrt_84 = None
    mul_268: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_84, 1);  reciprocal_84 = None
    unsqueeze_676: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_192, -1);  convert_element_type_192 = None
    unsqueeze_677: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_676, -1);  unsqueeze_676 = None
    unsqueeze_678: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_268, -1);  mul_268 = None
    unsqueeze_679: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_678, -1);  unsqueeze_678 = None
    sub_84: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_84, unsqueeze_677);  convolution_84 = unsqueeze_677 = None
    mul_269: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_84, unsqueeze_679);  sub_84 = unsqueeze_679 = None
    unsqueeze_680: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg253_1, -1);  arg253_1 = None
    unsqueeze_681: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_680, -1);  unsqueeze_680 = None
    mul_270: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_269, unsqueeze_681);  mul_269 = unsqueeze_681 = None
    unsqueeze_682: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg254_1, -1);  arg254_1 = None
    unsqueeze_683: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_682, -1);  unsqueeze_682 = None
    add_225: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_270, unsqueeze_683);  mul_270 = unsqueeze_683 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_226: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_225, relu_62);  add_225 = relu_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_80: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_226);  add_226 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_85: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_80, arg255_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg255_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_194: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1236_1, torch.float32);  arg1236_1 = None
    convert_element_type_195: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1237_1, torch.float32);  arg1237_1 = None
    add_227: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_195, 1e-05);  convert_element_type_195 = None
    sqrt_85: "f32[72]" = torch.ops.aten.sqrt.default(add_227);  add_227 = None
    reciprocal_85: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_85);  sqrt_85 = None
    mul_271: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_85, 1);  reciprocal_85 = None
    unsqueeze_684: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_194, -1);  convert_element_type_194 = None
    unsqueeze_685: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_684, -1);  unsqueeze_684 = None
    unsqueeze_686: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_271, -1);  mul_271 = None
    unsqueeze_687: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_686, -1);  unsqueeze_686 = None
    sub_85: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_85, unsqueeze_685);  convolution_85 = unsqueeze_685 = None
    mul_272: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_85, unsqueeze_687);  sub_85 = unsqueeze_687 = None
    unsqueeze_688: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg256_1, -1);  arg256_1 = None
    unsqueeze_689: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_688, -1);  unsqueeze_688 = None
    mul_273: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_272, unsqueeze_689);  mul_272 = unsqueeze_689 = None
    unsqueeze_690: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg257_1, -1);  arg257_1 = None
    unsqueeze_691: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_690, -1);  unsqueeze_690 = None
    add_228: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_273, unsqueeze_691);  mul_273 = unsqueeze_691 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_81: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_228);  add_228 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_86: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_81, arg258_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_81 = arg258_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_196: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1239_1, torch.float32);  arg1239_1 = None
    convert_element_type_197: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1240_1, torch.float32);  arg1240_1 = None
    add_229: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_197, 1e-05);  convert_element_type_197 = None
    sqrt_86: "f32[72]" = torch.ops.aten.sqrt.default(add_229);  add_229 = None
    reciprocal_86: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_86);  sqrt_86 = None
    mul_274: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_86, 1);  reciprocal_86 = None
    unsqueeze_692: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_196, -1);  convert_element_type_196 = None
    unsqueeze_693: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_692, -1);  unsqueeze_692 = None
    unsqueeze_694: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_274, -1);  mul_274 = None
    unsqueeze_695: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_694, -1);  unsqueeze_694 = None
    sub_86: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_86, unsqueeze_693);  convolution_86 = unsqueeze_693 = None
    mul_275: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_86, unsqueeze_695);  sub_86 = unsqueeze_695 = None
    unsqueeze_696: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg259_1, -1);  arg259_1 = None
    unsqueeze_697: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_696, -1);  unsqueeze_696 = None
    mul_276: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_275, unsqueeze_697);  mul_275 = unsqueeze_697 = None
    unsqueeze_698: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg260_1, -1);  arg260_1 = None
    unsqueeze_699: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_698, -1);  unsqueeze_698 = None
    add_230: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_276, unsqueeze_699);  mul_276 = unsqueeze_699 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_231: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_230, relu_80);  add_230 = relu_80 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_82: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_231);  add_231 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_87: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_82, arg261_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg261_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_198: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1242_1, torch.float32);  arg1242_1 = None
    convert_element_type_199: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1243_1, torch.float32);  arg1243_1 = None
    add_232: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_199, 1e-05);  convert_element_type_199 = None
    sqrt_87: "f32[72]" = torch.ops.aten.sqrt.default(add_232);  add_232 = None
    reciprocal_87: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_87);  sqrt_87 = None
    mul_277: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_87, 1);  reciprocal_87 = None
    unsqueeze_700: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_198, -1);  convert_element_type_198 = None
    unsqueeze_701: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_700, -1);  unsqueeze_700 = None
    unsqueeze_702: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_277, -1);  mul_277 = None
    unsqueeze_703: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_702, -1);  unsqueeze_702 = None
    sub_87: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_87, unsqueeze_701);  convolution_87 = unsqueeze_701 = None
    mul_278: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_87, unsqueeze_703);  sub_87 = unsqueeze_703 = None
    unsqueeze_704: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg262_1, -1);  arg262_1 = None
    unsqueeze_705: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_704, -1);  unsqueeze_704 = None
    mul_279: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_278, unsqueeze_705);  mul_278 = unsqueeze_705 = None
    unsqueeze_706: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg263_1, -1);  arg263_1 = None
    unsqueeze_707: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_706, -1);  unsqueeze_706 = None
    add_233: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_279, unsqueeze_707);  mul_279 = unsqueeze_707 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_83: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_233);  add_233 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_88: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_83, arg264_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_83 = arg264_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_200: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1245_1, torch.float32);  arg1245_1 = None
    convert_element_type_201: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1246_1, torch.float32);  arg1246_1 = None
    add_234: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_201, 1e-05);  convert_element_type_201 = None
    sqrt_88: "f32[72]" = torch.ops.aten.sqrt.default(add_234);  add_234 = None
    reciprocal_88: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_88);  sqrt_88 = None
    mul_280: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_88, 1);  reciprocal_88 = None
    unsqueeze_708: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_200, -1);  convert_element_type_200 = None
    unsqueeze_709: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_708, -1);  unsqueeze_708 = None
    unsqueeze_710: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_280, -1);  mul_280 = None
    unsqueeze_711: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_710, -1);  unsqueeze_710 = None
    sub_88: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_88, unsqueeze_709);  convolution_88 = unsqueeze_709 = None
    mul_281: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_88, unsqueeze_711);  sub_88 = unsqueeze_711 = None
    unsqueeze_712: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg265_1, -1);  arg265_1 = None
    unsqueeze_713: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_712, -1);  unsqueeze_712 = None
    mul_282: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_281, unsqueeze_713);  mul_281 = unsqueeze_713 = None
    unsqueeze_714: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg266_1, -1);  arg266_1 = None
    unsqueeze_715: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_714, -1);  unsqueeze_714 = None
    add_235: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_282, unsqueeze_715);  mul_282 = unsqueeze_715 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_236: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_235, relu_82);  add_235 = relu_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_84: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_236);  add_236 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_89: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_84, arg267_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg267_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_202: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1248_1, torch.float32);  arg1248_1 = None
    convert_element_type_203: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1249_1, torch.float32);  arg1249_1 = None
    add_237: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_203, 1e-05);  convert_element_type_203 = None
    sqrt_89: "f32[72]" = torch.ops.aten.sqrt.default(add_237);  add_237 = None
    reciprocal_89: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_89);  sqrt_89 = None
    mul_283: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_89, 1);  reciprocal_89 = None
    unsqueeze_716: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_202, -1);  convert_element_type_202 = None
    unsqueeze_717: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_716, -1);  unsqueeze_716 = None
    unsqueeze_718: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_283, -1);  mul_283 = None
    unsqueeze_719: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_718, -1);  unsqueeze_718 = None
    sub_89: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_89, unsqueeze_717);  convolution_89 = unsqueeze_717 = None
    mul_284: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_89, unsqueeze_719);  sub_89 = unsqueeze_719 = None
    unsqueeze_720: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg268_1, -1);  arg268_1 = None
    unsqueeze_721: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_720, -1);  unsqueeze_720 = None
    mul_285: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_284, unsqueeze_721);  mul_284 = unsqueeze_721 = None
    unsqueeze_722: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg269_1, -1);  arg269_1 = None
    unsqueeze_723: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_722, -1);  unsqueeze_722 = None
    add_238: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_285, unsqueeze_723);  mul_285 = unsqueeze_723 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_85: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_238);  add_238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_90: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_85, arg270_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_85 = arg270_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_204: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1251_1, torch.float32);  arg1251_1 = None
    convert_element_type_205: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1252_1, torch.float32);  arg1252_1 = None
    add_239: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_205, 1e-05);  convert_element_type_205 = None
    sqrt_90: "f32[72]" = torch.ops.aten.sqrt.default(add_239);  add_239 = None
    reciprocal_90: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_90);  sqrt_90 = None
    mul_286: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_90, 1);  reciprocal_90 = None
    unsqueeze_724: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_204, -1);  convert_element_type_204 = None
    unsqueeze_725: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_724, -1);  unsqueeze_724 = None
    unsqueeze_726: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_286, -1);  mul_286 = None
    unsqueeze_727: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_726, -1);  unsqueeze_726 = None
    sub_90: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_90, unsqueeze_725);  convolution_90 = unsqueeze_725 = None
    mul_287: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_90, unsqueeze_727);  sub_90 = unsqueeze_727 = None
    unsqueeze_728: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg271_1, -1);  arg271_1 = None
    unsqueeze_729: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_728, -1);  unsqueeze_728 = None
    mul_288: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_287, unsqueeze_729);  mul_287 = unsqueeze_729 = None
    unsqueeze_730: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg272_1, -1);  arg272_1 = None
    unsqueeze_731: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_730, -1);  unsqueeze_730 = None
    add_240: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_288, unsqueeze_731);  mul_288 = unsqueeze_731 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_241: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_240, relu_84);  add_240 = relu_84 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_86: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_241);  add_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_91: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_78, arg273_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg273_1 = None
    convert_element_type_206: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1254_1, torch.float32);  arg1254_1 = None
    convert_element_type_207: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1255_1, torch.float32);  arg1255_1 = None
    add_242: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_207, 1e-05);  convert_element_type_207 = None
    sqrt_91: "f32[18]" = torch.ops.aten.sqrt.default(add_242);  add_242 = None
    reciprocal_91: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_91);  sqrt_91 = None
    mul_289: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_91, 1);  reciprocal_91 = None
    unsqueeze_732: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_206, -1);  convert_element_type_206 = None
    unsqueeze_733: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_732, -1);  unsqueeze_732 = None
    unsqueeze_734: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_289, -1);  mul_289 = None
    unsqueeze_735: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_734, -1);  unsqueeze_734 = None
    sub_91: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_91, unsqueeze_733);  convolution_91 = unsqueeze_733 = None
    mul_290: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_91, unsqueeze_735);  sub_91 = unsqueeze_735 = None
    unsqueeze_736: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg274_1, -1);  arg274_1 = None
    unsqueeze_737: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_736, -1);  unsqueeze_736 = None
    mul_291: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_290, unsqueeze_737);  mul_290 = unsqueeze_737 = None
    unsqueeze_738: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg275_1, -1);  arg275_1 = None
    unsqueeze_739: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_738, -1);  unsqueeze_738 = None
    add_243: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_291, unsqueeze_739);  mul_291 = unsqueeze_739 = None
    iota_8: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_208: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_8, torch.float64);  iota_8 = None
    mul_292: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_208, 1);  convert_element_type_208 = None
    add_244: "f64[56]" = torch.ops.aten.add.Tensor(mul_292, 0);  mul_292 = None
    convert_element_type_209: "f32[56]" = torch.ops.prims.convert_element_type.default(add_244, torch.float32);  add_244 = None
    add_245: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_209, 0.0);  convert_element_type_209 = None
    mul_293: "f32[56]" = torch.ops.aten.mul.Tensor(add_245, 0.5);  add_245 = None
    convert_element_type_210: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_293, torch.int64);  mul_293 = None
    unsqueeze_740: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_210, -1);  convert_element_type_210 = None
    iota_9: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_211: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_9, torch.float64);  iota_9 = None
    mul_294: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_211, 1);  convert_element_type_211 = None
    add_246: "f64[56]" = torch.ops.aten.add.Tensor(mul_294, 0);  mul_294 = None
    convert_element_type_212: "f32[56]" = torch.ops.prims.convert_element_type.default(add_246, torch.float32);  add_246 = None
    add_247: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_212, 0.0);  convert_element_type_212 = None
    mul_295: "f32[56]" = torch.ops.aten.mul.Tensor(add_247, 0.5);  add_247 = None
    convert_element_type_213: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_295, torch.int64);  mul_295 = None
    _unsafe_index_4: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_243, [None, None, unsqueeze_740, convert_element_type_213]);  add_243 = unsqueeze_740 = convert_element_type_213 = None
    add_248: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_70, _unsafe_index_4);  _unsafe_index_4 = None
    convolution_92: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_86, arg276_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg276_1 = None
    convert_element_type_214: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1257_1, torch.float32);  arg1257_1 = None
    convert_element_type_215: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1258_1, torch.float32);  arg1258_1 = None
    add_249: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_215, 1e-05);  convert_element_type_215 = None
    sqrt_92: "f32[18]" = torch.ops.aten.sqrt.default(add_249);  add_249 = None
    reciprocal_92: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_92);  sqrt_92 = None
    mul_296: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_92, 1);  reciprocal_92 = None
    unsqueeze_741: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_214, -1);  convert_element_type_214 = None
    unsqueeze_742: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_741, -1);  unsqueeze_741 = None
    unsqueeze_743: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_296, -1);  mul_296 = None
    unsqueeze_744: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_743, -1);  unsqueeze_743 = None
    sub_92: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_92, unsqueeze_742);  convolution_92 = unsqueeze_742 = None
    mul_297: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_92, unsqueeze_744);  sub_92 = unsqueeze_744 = None
    unsqueeze_745: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg277_1, -1);  arg277_1 = None
    unsqueeze_746: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_745, -1);  unsqueeze_745 = None
    mul_298: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_297, unsqueeze_746);  mul_297 = unsqueeze_746 = None
    unsqueeze_747: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg278_1, -1);  arg278_1 = None
    unsqueeze_748: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_747, -1);  unsqueeze_747 = None
    add_250: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_298, unsqueeze_748);  mul_298 = unsqueeze_748 = None
    iota_10: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_216: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_10, torch.float64);  iota_10 = None
    mul_299: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_216, 1);  convert_element_type_216 = None
    add_251: "f64[56]" = torch.ops.aten.add.Tensor(mul_299, 0);  mul_299 = None
    convert_element_type_217: "f32[56]" = torch.ops.prims.convert_element_type.default(add_251, torch.float32);  add_251 = None
    add_252: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_217, 0.0);  convert_element_type_217 = None
    mul_300: "f32[56]" = torch.ops.aten.mul.Tensor(add_252, 0.25);  add_252 = None
    convert_element_type_218: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_300, torch.int64);  mul_300 = None
    unsqueeze_749: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_218, -1);  convert_element_type_218 = None
    iota_11: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_219: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_11, torch.float64);  iota_11 = None
    mul_301: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_219, 1);  convert_element_type_219 = None
    add_253: "f64[56]" = torch.ops.aten.add.Tensor(mul_301, 0);  mul_301 = None
    convert_element_type_220: "f32[56]" = torch.ops.prims.convert_element_type.default(add_253, torch.float32);  add_253 = None
    add_254: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_220, 0.0);  convert_element_type_220 = None
    mul_302: "f32[56]" = torch.ops.aten.mul.Tensor(add_254, 0.25);  add_254 = None
    convert_element_type_221: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_302, torch.int64);  mul_302 = None
    _unsafe_index_5: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_250, [None, None, unsqueeze_749, convert_element_type_221]);  add_250 = unsqueeze_749 = convert_element_type_221 = None
    add_255: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_248, _unsafe_index_5);  add_248 = _unsafe_index_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_87: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_255);  add_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_93: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_70, arg279_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg279_1 = None
    convert_element_type_222: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1260_1, torch.float32);  arg1260_1 = None
    convert_element_type_223: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1261_1, torch.float32);  arg1261_1 = None
    add_256: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_223, 1e-05);  convert_element_type_223 = None
    sqrt_93: "f32[36]" = torch.ops.aten.sqrt.default(add_256);  add_256 = None
    reciprocal_93: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_93);  sqrt_93 = None
    mul_303: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_93, 1);  reciprocal_93 = None
    unsqueeze_750: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_222, -1);  convert_element_type_222 = None
    unsqueeze_751: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_750, -1);  unsqueeze_750 = None
    unsqueeze_752: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_303, -1);  mul_303 = None
    unsqueeze_753: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_752, -1);  unsqueeze_752 = None
    sub_93: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_93, unsqueeze_751);  convolution_93 = unsqueeze_751 = None
    mul_304: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_93, unsqueeze_753);  sub_93 = unsqueeze_753 = None
    unsqueeze_754: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg280_1, -1);  arg280_1 = None
    unsqueeze_755: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_754, -1);  unsqueeze_754 = None
    mul_305: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_304, unsqueeze_755);  mul_304 = unsqueeze_755 = None
    unsqueeze_756: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg281_1, -1);  arg281_1 = None
    unsqueeze_757: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_756, -1);  unsqueeze_756 = None
    add_257: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_305, unsqueeze_757);  mul_305 = unsqueeze_757 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_258: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_257, relu_78);  add_257 = None
    convolution_94: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_86, arg282_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg282_1 = None
    convert_element_type_224: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1263_1, torch.float32);  arg1263_1 = None
    convert_element_type_225: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1264_1, torch.float32);  arg1264_1 = None
    add_259: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_225, 1e-05);  convert_element_type_225 = None
    sqrt_94: "f32[36]" = torch.ops.aten.sqrt.default(add_259);  add_259 = None
    reciprocal_94: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_94);  sqrt_94 = None
    mul_306: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_94, 1);  reciprocal_94 = None
    unsqueeze_758: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_224, -1);  convert_element_type_224 = None
    unsqueeze_759: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_758, -1);  unsqueeze_758 = None
    unsqueeze_760: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_306, -1);  mul_306 = None
    unsqueeze_761: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_760, -1);  unsqueeze_760 = None
    sub_94: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_94, unsqueeze_759);  convolution_94 = unsqueeze_759 = None
    mul_307: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_94, unsqueeze_761);  sub_94 = unsqueeze_761 = None
    unsqueeze_762: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg283_1, -1);  arg283_1 = None
    unsqueeze_763: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_762, -1);  unsqueeze_762 = None
    mul_308: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_307, unsqueeze_763);  mul_307 = unsqueeze_763 = None
    unsqueeze_764: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg284_1, -1);  arg284_1 = None
    unsqueeze_765: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_764, -1);  unsqueeze_764 = None
    add_260: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_308, unsqueeze_765);  mul_308 = unsqueeze_765 = None
    iota_12: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_226: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_12, torch.float64);  iota_12 = None
    mul_309: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_226, 1);  convert_element_type_226 = None
    add_261: "f64[28]" = torch.ops.aten.add.Tensor(mul_309, 0);  mul_309 = None
    convert_element_type_227: "f32[28]" = torch.ops.prims.convert_element_type.default(add_261, torch.float32);  add_261 = None
    add_262: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_227, 0.0);  convert_element_type_227 = None
    mul_310: "f32[28]" = torch.ops.aten.mul.Tensor(add_262, 0.5);  add_262 = None
    convert_element_type_228: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_310, torch.int64);  mul_310 = None
    unsqueeze_766: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_228, -1);  convert_element_type_228 = None
    iota_13: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_229: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_13, torch.float64);  iota_13 = None
    mul_311: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_229, 1);  convert_element_type_229 = None
    add_263: "f64[28]" = torch.ops.aten.add.Tensor(mul_311, 0);  mul_311 = None
    convert_element_type_230: "f32[28]" = torch.ops.prims.convert_element_type.default(add_263, torch.float32);  add_263 = None
    add_264: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_230, 0.0);  convert_element_type_230 = None
    mul_312: "f32[28]" = torch.ops.aten.mul.Tensor(add_264, 0.5);  add_264 = None
    convert_element_type_231: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_312, torch.int64);  mul_312 = None
    _unsafe_index_6: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_260, [None, None, unsqueeze_766, convert_element_type_231]);  add_260 = unsqueeze_766 = convert_element_type_231 = None
    add_265: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_258, _unsafe_index_6);  add_258 = _unsafe_index_6 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_88: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_265);  add_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_95: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_70, arg285_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_70 = arg285_1 = None
    convert_element_type_232: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1266_1, torch.float32);  arg1266_1 = None
    convert_element_type_233: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1267_1, torch.float32);  arg1267_1 = None
    add_266: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_233, 1e-05);  convert_element_type_233 = None
    sqrt_95: "f32[18]" = torch.ops.aten.sqrt.default(add_266);  add_266 = None
    reciprocal_95: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_95);  sqrt_95 = None
    mul_313: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_95, 1);  reciprocal_95 = None
    unsqueeze_767: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_232, -1);  convert_element_type_232 = None
    unsqueeze_768: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_767, -1);  unsqueeze_767 = None
    unsqueeze_769: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_313, -1);  mul_313 = None
    unsqueeze_770: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_769, -1);  unsqueeze_769 = None
    sub_95: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_95, unsqueeze_768);  convolution_95 = unsqueeze_768 = None
    mul_314: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_95, unsqueeze_770);  sub_95 = unsqueeze_770 = None
    unsqueeze_771: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg286_1, -1);  arg286_1 = None
    unsqueeze_772: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_771, -1);  unsqueeze_771 = None
    mul_315: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_314, unsqueeze_772);  mul_314 = unsqueeze_772 = None
    unsqueeze_773: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg287_1, -1);  arg287_1 = None
    unsqueeze_774: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_773, -1);  unsqueeze_773 = None
    add_267: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_315, unsqueeze_774);  mul_315 = unsqueeze_774 = None
    relu_89: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_267);  add_267 = None
    convolution_96: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_89, arg288_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_89 = arg288_1 = None
    convert_element_type_234: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1269_1, torch.float32);  arg1269_1 = None
    convert_element_type_235: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1270_1, torch.float32);  arg1270_1 = None
    add_268: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_235, 1e-05);  convert_element_type_235 = None
    sqrt_96: "f32[72]" = torch.ops.aten.sqrt.default(add_268);  add_268 = None
    reciprocal_96: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_96);  sqrt_96 = None
    mul_316: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_96, 1);  reciprocal_96 = None
    unsqueeze_775: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_234, -1);  convert_element_type_234 = None
    unsqueeze_776: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_775, -1);  unsqueeze_775 = None
    unsqueeze_777: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_316, -1);  mul_316 = None
    unsqueeze_778: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_777, -1);  unsqueeze_777 = None
    sub_96: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_96, unsqueeze_776);  convolution_96 = unsqueeze_776 = None
    mul_317: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_96, unsqueeze_778);  sub_96 = unsqueeze_778 = None
    unsqueeze_779: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg289_1, -1);  arg289_1 = None
    unsqueeze_780: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_779, -1);  unsqueeze_779 = None
    mul_318: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_317, unsqueeze_780);  mul_317 = unsqueeze_780 = None
    unsqueeze_781: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg290_1, -1);  arg290_1 = None
    unsqueeze_782: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_781, -1);  unsqueeze_781 = None
    add_269: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_318, unsqueeze_782);  mul_318 = unsqueeze_782 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_97: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_78, arg291_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_78 = arg291_1 = None
    convert_element_type_236: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1272_1, torch.float32);  arg1272_1 = None
    convert_element_type_237: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1273_1, torch.float32);  arg1273_1 = None
    add_270: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_237, 1e-05);  convert_element_type_237 = None
    sqrt_97: "f32[72]" = torch.ops.aten.sqrt.default(add_270);  add_270 = None
    reciprocal_97: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_97);  sqrt_97 = None
    mul_319: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_97, 1);  reciprocal_97 = None
    unsqueeze_783: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_236, -1);  convert_element_type_236 = None
    unsqueeze_784: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_783, -1);  unsqueeze_783 = None
    unsqueeze_785: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_319, -1);  mul_319 = None
    unsqueeze_786: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_785, -1);  unsqueeze_785 = None
    sub_97: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_97, unsqueeze_784);  convolution_97 = unsqueeze_784 = None
    mul_320: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_97, unsqueeze_786);  sub_97 = unsqueeze_786 = None
    unsqueeze_787: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg292_1, -1);  arg292_1 = None
    unsqueeze_788: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_787, -1);  unsqueeze_787 = None
    mul_321: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_320, unsqueeze_788);  mul_320 = unsqueeze_788 = None
    unsqueeze_789: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg293_1, -1);  arg293_1 = None
    unsqueeze_790: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_789, -1);  unsqueeze_789 = None
    add_271: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_321, unsqueeze_790);  mul_321 = unsqueeze_790 = None
    add_272: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_269, add_271);  add_269 = add_271 = None
    add_273: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_272, relu_86);  add_272 = relu_86 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_90: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_273);  add_273 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_98: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_87, arg294_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg294_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_238: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1275_1, torch.float32);  arg1275_1 = None
    convert_element_type_239: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1276_1, torch.float32);  arg1276_1 = None
    add_274: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_239, 1e-05);  convert_element_type_239 = None
    sqrt_98: "f32[18]" = torch.ops.aten.sqrt.default(add_274);  add_274 = None
    reciprocal_98: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_98);  sqrt_98 = None
    mul_322: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_98, 1);  reciprocal_98 = None
    unsqueeze_791: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_238, -1);  convert_element_type_238 = None
    unsqueeze_792: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_791, -1);  unsqueeze_791 = None
    unsqueeze_793: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_322, -1);  mul_322 = None
    unsqueeze_794: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_793, -1);  unsqueeze_793 = None
    sub_98: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_98, unsqueeze_792);  convolution_98 = unsqueeze_792 = None
    mul_323: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_98, unsqueeze_794);  sub_98 = unsqueeze_794 = None
    unsqueeze_795: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg295_1, -1);  arg295_1 = None
    unsqueeze_796: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_795, -1);  unsqueeze_795 = None
    mul_324: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_323, unsqueeze_796);  mul_323 = unsqueeze_796 = None
    unsqueeze_797: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg296_1, -1);  arg296_1 = None
    unsqueeze_798: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_797, -1);  unsqueeze_797 = None
    add_275: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_324, unsqueeze_798);  mul_324 = unsqueeze_798 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_91: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_275);  add_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_99: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_91, arg297_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_91 = arg297_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_240: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1278_1, torch.float32);  arg1278_1 = None
    convert_element_type_241: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1279_1, torch.float32);  arg1279_1 = None
    add_276: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_241, 1e-05);  convert_element_type_241 = None
    sqrt_99: "f32[18]" = torch.ops.aten.sqrt.default(add_276);  add_276 = None
    reciprocal_99: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_99);  sqrt_99 = None
    mul_325: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_99, 1);  reciprocal_99 = None
    unsqueeze_799: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_240, -1);  convert_element_type_240 = None
    unsqueeze_800: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_799, -1);  unsqueeze_799 = None
    unsqueeze_801: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_325, -1);  mul_325 = None
    unsqueeze_802: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_801, -1);  unsqueeze_801 = None
    sub_99: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_99, unsqueeze_800);  convolution_99 = unsqueeze_800 = None
    mul_326: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_99, unsqueeze_802);  sub_99 = unsqueeze_802 = None
    unsqueeze_803: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg298_1, -1);  arg298_1 = None
    unsqueeze_804: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_803, -1);  unsqueeze_803 = None
    mul_327: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_326, unsqueeze_804);  mul_326 = unsqueeze_804 = None
    unsqueeze_805: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg299_1, -1);  arg299_1 = None
    unsqueeze_806: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_805, -1);  unsqueeze_805 = None
    add_277: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_327, unsqueeze_806);  mul_327 = unsqueeze_806 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_278: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_277, relu_87);  add_277 = relu_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_92: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_278);  add_278 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_100: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_92, arg300_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg300_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_242: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1281_1, torch.float32);  arg1281_1 = None
    convert_element_type_243: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1282_1, torch.float32);  arg1282_1 = None
    add_279: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_243, 1e-05);  convert_element_type_243 = None
    sqrt_100: "f32[18]" = torch.ops.aten.sqrt.default(add_279);  add_279 = None
    reciprocal_100: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_100);  sqrt_100 = None
    mul_328: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_100, 1);  reciprocal_100 = None
    unsqueeze_807: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_242, -1);  convert_element_type_242 = None
    unsqueeze_808: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_807, -1);  unsqueeze_807 = None
    unsqueeze_809: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_328, -1);  mul_328 = None
    unsqueeze_810: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_809, -1);  unsqueeze_809 = None
    sub_100: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_100, unsqueeze_808);  convolution_100 = unsqueeze_808 = None
    mul_329: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_100, unsqueeze_810);  sub_100 = unsqueeze_810 = None
    unsqueeze_811: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg301_1, -1);  arg301_1 = None
    unsqueeze_812: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_811, -1);  unsqueeze_811 = None
    mul_330: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_329, unsqueeze_812);  mul_329 = unsqueeze_812 = None
    unsqueeze_813: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg302_1, -1);  arg302_1 = None
    unsqueeze_814: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_813, -1);  unsqueeze_813 = None
    add_280: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_330, unsqueeze_814);  mul_330 = unsqueeze_814 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_93: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_280);  add_280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_101: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_93, arg303_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_93 = arg303_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_244: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1284_1, torch.float32);  arg1284_1 = None
    convert_element_type_245: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1285_1, torch.float32);  arg1285_1 = None
    add_281: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_245, 1e-05);  convert_element_type_245 = None
    sqrt_101: "f32[18]" = torch.ops.aten.sqrt.default(add_281);  add_281 = None
    reciprocal_101: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_101);  sqrt_101 = None
    mul_331: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_101, 1);  reciprocal_101 = None
    unsqueeze_815: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_244, -1);  convert_element_type_244 = None
    unsqueeze_816: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_815, -1);  unsqueeze_815 = None
    unsqueeze_817: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_331, -1);  mul_331 = None
    unsqueeze_818: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_817, -1);  unsqueeze_817 = None
    sub_101: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_101, unsqueeze_816);  convolution_101 = unsqueeze_816 = None
    mul_332: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_101, unsqueeze_818);  sub_101 = unsqueeze_818 = None
    unsqueeze_819: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg304_1, -1);  arg304_1 = None
    unsqueeze_820: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_819, -1);  unsqueeze_819 = None
    mul_333: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_332, unsqueeze_820);  mul_332 = unsqueeze_820 = None
    unsqueeze_821: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg305_1, -1);  arg305_1 = None
    unsqueeze_822: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_821, -1);  unsqueeze_821 = None
    add_282: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_333, unsqueeze_822);  mul_333 = unsqueeze_822 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_283: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_282, relu_92);  add_282 = relu_92 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_94: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_283);  add_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_102: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_94, arg306_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg306_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_246: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1287_1, torch.float32);  arg1287_1 = None
    convert_element_type_247: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1288_1, torch.float32);  arg1288_1 = None
    add_284: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_247, 1e-05);  convert_element_type_247 = None
    sqrt_102: "f32[18]" = torch.ops.aten.sqrt.default(add_284);  add_284 = None
    reciprocal_102: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_102);  sqrt_102 = None
    mul_334: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_102, 1);  reciprocal_102 = None
    unsqueeze_823: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_246, -1);  convert_element_type_246 = None
    unsqueeze_824: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_823, -1);  unsqueeze_823 = None
    unsqueeze_825: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_334, -1);  mul_334 = None
    unsqueeze_826: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_825, -1);  unsqueeze_825 = None
    sub_102: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_102, unsqueeze_824);  convolution_102 = unsqueeze_824 = None
    mul_335: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_102, unsqueeze_826);  sub_102 = unsqueeze_826 = None
    unsqueeze_827: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg307_1, -1);  arg307_1 = None
    unsqueeze_828: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_827, -1);  unsqueeze_827 = None
    mul_336: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_335, unsqueeze_828);  mul_335 = unsqueeze_828 = None
    unsqueeze_829: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg308_1, -1);  arg308_1 = None
    unsqueeze_830: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_829, -1);  unsqueeze_829 = None
    add_285: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_336, unsqueeze_830);  mul_336 = unsqueeze_830 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_95: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_285);  add_285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_103: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_95, arg309_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_95 = arg309_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_248: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1290_1, torch.float32);  arg1290_1 = None
    convert_element_type_249: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1291_1, torch.float32);  arg1291_1 = None
    add_286: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_249, 1e-05);  convert_element_type_249 = None
    sqrt_103: "f32[18]" = torch.ops.aten.sqrt.default(add_286);  add_286 = None
    reciprocal_103: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_103);  sqrt_103 = None
    mul_337: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_103, 1);  reciprocal_103 = None
    unsqueeze_831: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_248, -1);  convert_element_type_248 = None
    unsqueeze_832: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_831, -1);  unsqueeze_831 = None
    unsqueeze_833: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_337, -1);  mul_337 = None
    unsqueeze_834: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_833, -1);  unsqueeze_833 = None
    sub_103: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_103, unsqueeze_832);  convolution_103 = unsqueeze_832 = None
    mul_338: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_103, unsqueeze_834);  sub_103 = unsqueeze_834 = None
    unsqueeze_835: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg310_1, -1);  arg310_1 = None
    unsqueeze_836: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_835, -1);  unsqueeze_835 = None
    mul_339: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_338, unsqueeze_836);  mul_338 = unsqueeze_836 = None
    unsqueeze_837: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg311_1, -1);  arg311_1 = None
    unsqueeze_838: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_837, -1);  unsqueeze_837 = None
    add_287: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_339, unsqueeze_838);  mul_339 = unsqueeze_838 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_288: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_287, relu_94);  add_287 = relu_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_96: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_288);  add_288 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_104: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_96, arg312_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg312_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_250: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1293_1, torch.float32);  arg1293_1 = None
    convert_element_type_251: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1294_1, torch.float32);  arg1294_1 = None
    add_289: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_251, 1e-05);  convert_element_type_251 = None
    sqrt_104: "f32[18]" = torch.ops.aten.sqrt.default(add_289);  add_289 = None
    reciprocal_104: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_104);  sqrt_104 = None
    mul_340: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_104, 1);  reciprocal_104 = None
    unsqueeze_839: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_250, -1);  convert_element_type_250 = None
    unsqueeze_840: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_839, -1);  unsqueeze_839 = None
    unsqueeze_841: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_340, -1);  mul_340 = None
    unsqueeze_842: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_841, -1);  unsqueeze_841 = None
    sub_104: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_104, unsqueeze_840);  convolution_104 = unsqueeze_840 = None
    mul_341: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_104, unsqueeze_842);  sub_104 = unsqueeze_842 = None
    unsqueeze_843: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg313_1, -1);  arg313_1 = None
    unsqueeze_844: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_843, -1);  unsqueeze_843 = None
    mul_342: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_341, unsqueeze_844);  mul_341 = unsqueeze_844 = None
    unsqueeze_845: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg314_1, -1);  arg314_1 = None
    unsqueeze_846: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_845, -1);  unsqueeze_845 = None
    add_290: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_342, unsqueeze_846);  mul_342 = unsqueeze_846 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_97: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_290);  add_290 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_105: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_97, arg315_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_97 = arg315_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_252: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1296_1, torch.float32);  arg1296_1 = None
    convert_element_type_253: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1297_1, torch.float32);  arg1297_1 = None
    add_291: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_253, 1e-05);  convert_element_type_253 = None
    sqrt_105: "f32[18]" = torch.ops.aten.sqrt.default(add_291);  add_291 = None
    reciprocal_105: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_105);  sqrt_105 = None
    mul_343: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_105, 1);  reciprocal_105 = None
    unsqueeze_847: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_252, -1);  convert_element_type_252 = None
    unsqueeze_848: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_847, -1);  unsqueeze_847 = None
    unsqueeze_849: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_343, -1);  mul_343 = None
    unsqueeze_850: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_849, -1);  unsqueeze_849 = None
    sub_105: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_105, unsqueeze_848);  convolution_105 = unsqueeze_848 = None
    mul_344: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_105, unsqueeze_850);  sub_105 = unsqueeze_850 = None
    unsqueeze_851: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg316_1, -1);  arg316_1 = None
    unsqueeze_852: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_851, -1);  unsqueeze_851 = None
    mul_345: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_344, unsqueeze_852);  mul_344 = unsqueeze_852 = None
    unsqueeze_853: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg317_1, -1);  arg317_1 = None
    unsqueeze_854: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_853, -1);  unsqueeze_853 = None
    add_292: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_345, unsqueeze_854);  mul_345 = unsqueeze_854 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_293: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_292, relu_96);  add_292 = relu_96 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_98: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_293);  add_293 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_106: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_88, arg318_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg318_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_254: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1299_1, torch.float32);  arg1299_1 = None
    convert_element_type_255: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1300_1, torch.float32);  arg1300_1 = None
    add_294: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_255, 1e-05);  convert_element_type_255 = None
    sqrt_106: "f32[36]" = torch.ops.aten.sqrt.default(add_294);  add_294 = None
    reciprocal_106: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_106);  sqrt_106 = None
    mul_346: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_106, 1);  reciprocal_106 = None
    unsqueeze_855: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_254, -1);  convert_element_type_254 = None
    unsqueeze_856: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_855, -1);  unsqueeze_855 = None
    unsqueeze_857: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_346, -1);  mul_346 = None
    unsqueeze_858: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_857, -1);  unsqueeze_857 = None
    sub_106: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_106, unsqueeze_856);  convolution_106 = unsqueeze_856 = None
    mul_347: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_106, unsqueeze_858);  sub_106 = unsqueeze_858 = None
    unsqueeze_859: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg319_1, -1);  arg319_1 = None
    unsqueeze_860: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_859, -1);  unsqueeze_859 = None
    mul_348: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_347, unsqueeze_860);  mul_347 = unsqueeze_860 = None
    unsqueeze_861: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg320_1, -1);  arg320_1 = None
    unsqueeze_862: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_861, -1);  unsqueeze_861 = None
    add_295: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_348, unsqueeze_862);  mul_348 = unsqueeze_862 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_99: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_295);  add_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_107: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_99, arg321_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_99 = arg321_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_256: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1302_1, torch.float32);  arg1302_1 = None
    convert_element_type_257: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1303_1, torch.float32);  arg1303_1 = None
    add_296: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_257, 1e-05);  convert_element_type_257 = None
    sqrt_107: "f32[36]" = torch.ops.aten.sqrt.default(add_296);  add_296 = None
    reciprocal_107: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_107);  sqrt_107 = None
    mul_349: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_107, 1);  reciprocal_107 = None
    unsqueeze_863: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_256, -1);  convert_element_type_256 = None
    unsqueeze_864: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_863, -1);  unsqueeze_863 = None
    unsqueeze_865: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_349, -1);  mul_349 = None
    unsqueeze_866: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_865, -1);  unsqueeze_865 = None
    sub_107: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_107, unsqueeze_864);  convolution_107 = unsqueeze_864 = None
    mul_350: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_107, unsqueeze_866);  sub_107 = unsqueeze_866 = None
    unsqueeze_867: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg322_1, -1);  arg322_1 = None
    unsqueeze_868: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_867, -1);  unsqueeze_867 = None
    mul_351: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_350, unsqueeze_868);  mul_350 = unsqueeze_868 = None
    unsqueeze_869: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg323_1, -1);  arg323_1 = None
    unsqueeze_870: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_869, -1);  unsqueeze_869 = None
    add_297: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_351, unsqueeze_870);  mul_351 = unsqueeze_870 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_298: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_297, relu_88);  add_297 = relu_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_100: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_298);  add_298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_108: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_100, arg324_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg324_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_258: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1305_1, torch.float32);  arg1305_1 = None
    convert_element_type_259: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1306_1, torch.float32);  arg1306_1 = None
    add_299: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_259, 1e-05);  convert_element_type_259 = None
    sqrt_108: "f32[36]" = torch.ops.aten.sqrt.default(add_299);  add_299 = None
    reciprocal_108: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_108);  sqrt_108 = None
    mul_352: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_108, 1);  reciprocal_108 = None
    unsqueeze_871: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_258, -1);  convert_element_type_258 = None
    unsqueeze_872: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_871, -1);  unsqueeze_871 = None
    unsqueeze_873: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_352, -1);  mul_352 = None
    unsqueeze_874: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_873, -1);  unsqueeze_873 = None
    sub_108: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_108, unsqueeze_872);  convolution_108 = unsqueeze_872 = None
    mul_353: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_108, unsqueeze_874);  sub_108 = unsqueeze_874 = None
    unsqueeze_875: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg325_1, -1);  arg325_1 = None
    unsqueeze_876: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_875, -1);  unsqueeze_875 = None
    mul_354: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_353, unsqueeze_876);  mul_353 = unsqueeze_876 = None
    unsqueeze_877: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg326_1, -1);  arg326_1 = None
    unsqueeze_878: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_877, -1);  unsqueeze_877 = None
    add_300: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_354, unsqueeze_878);  mul_354 = unsqueeze_878 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_101: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_300);  add_300 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_109: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_101, arg327_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_101 = arg327_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_260: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1308_1, torch.float32);  arg1308_1 = None
    convert_element_type_261: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1309_1, torch.float32);  arg1309_1 = None
    add_301: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_261, 1e-05);  convert_element_type_261 = None
    sqrt_109: "f32[36]" = torch.ops.aten.sqrt.default(add_301);  add_301 = None
    reciprocal_109: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_109);  sqrt_109 = None
    mul_355: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_109, 1);  reciprocal_109 = None
    unsqueeze_879: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_260, -1);  convert_element_type_260 = None
    unsqueeze_880: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_879, -1);  unsqueeze_879 = None
    unsqueeze_881: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_355, -1);  mul_355 = None
    unsqueeze_882: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_881, -1);  unsqueeze_881 = None
    sub_109: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_109, unsqueeze_880);  convolution_109 = unsqueeze_880 = None
    mul_356: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_109, unsqueeze_882);  sub_109 = unsqueeze_882 = None
    unsqueeze_883: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg328_1, -1);  arg328_1 = None
    unsqueeze_884: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_883, -1);  unsqueeze_883 = None
    mul_357: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_356, unsqueeze_884);  mul_356 = unsqueeze_884 = None
    unsqueeze_885: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg329_1, -1);  arg329_1 = None
    unsqueeze_886: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_885, -1);  unsqueeze_885 = None
    add_302: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_357, unsqueeze_886);  mul_357 = unsqueeze_886 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_303: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_302, relu_100);  add_302 = relu_100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_102: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_303);  add_303 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_110: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_102, arg330_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg330_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_262: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1311_1, torch.float32);  arg1311_1 = None
    convert_element_type_263: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1312_1, torch.float32);  arg1312_1 = None
    add_304: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_263, 1e-05);  convert_element_type_263 = None
    sqrt_110: "f32[36]" = torch.ops.aten.sqrt.default(add_304);  add_304 = None
    reciprocal_110: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_110);  sqrt_110 = None
    mul_358: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_110, 1);  reciprocal_110 = None
    unsqueeze_887: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_262, -1);  convert_element_type_262 = None
    unsqueeze_888: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_887, -1);  unsqueeze_887 = None
    unsqueeze_889: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_358, -1);  mul_358 = None
    unsqueeze_890: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_889, -1);  unsqueeze_889 = None
    sub_110: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_110, unsqueeze_888);  convolution_110 = unsqueeze_888 = None
    mul_359: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_110, unsqueeze_890);  sub_110 = unsqueeze_890 = None
    unsqueeze_891: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg331_1, -1);  arg331_1 = None
    unsqueeze_892: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_891, -1);  unsqueeze_891 = None
    mul_360: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_359, unsqueeze_892);  mul_359 = unsqueeze_892 = None
    unsqueeze_893: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg332_1, -1);  arg332_1 = None
    unsqueeze_894: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_893, -1);  unsqueeze_893 = None
    add_305: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_360, unsqueeze_894);  mul_360 = unsqueeze_894 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_103: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_305);  add_305 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_111: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_103, arg333_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_103 = arg333_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_264: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1314_1, torch.float32);  arg1314_1 = None
    convert_element_type_265: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1315_1, torch.float32);  arg1315_1 = None
    add_306: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_265, 1e-05);  convert_element_type_265 = None
    sqrt_111: "f32[36]" = torch.ops.aten.sqrt.default(add_306);  add_306 = None
    reciprocal_111: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_111);  sqrt_111 = None
    mul_361: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_111, 1);  reciprocal_111 = None
    unsqueeze_895: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_264, -1);  convert_element_type_264 = None
    unsqueeze_896: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_895, -1);  unsqueeze_895 = None
    unsqueeze_897: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_361, -1);  mul_361 = None
    unsqueeze_898: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_897, -1);  unsqueeze_897 = None
    sub_111: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_111, unsqueeze_896);  convolution_111 = unsqueeze_896 = None
    mul_362: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_111, unsqueeze_898);  sub_111 = unsqueeze_898 = None
    unsqueeze_899: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg334_1, -1);  arg334_1 = None
    unsqueeze_900: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_899, -1);  unsqueeze_899 = None
    mul_363: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_362, unsqueeze_900);  mul_362 = unsqueeze_900 = None
    unsqueeze_901: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg335_1, -1);  arg335_1 = None
    unsqueeze_902: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_901, -1);  unsqueeze_901 = None
    add_307: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_363, unsqueeze_902);  mul_363 = unsqueeze_902 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_308: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_307, relu_102);  add_307 = relu_102 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_104: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_308);  add_308 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_112: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_104, arg336_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg336_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_266: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1317_1, torch.float32);  arg1317_1 = None
    convert_element_type_267: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1318_1, torch.float32);  arg1318_1 = None
    add_309: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_267, 1e-05);  convert_element_type_267 = None
    sqrt_112: "f32[36]" = torch.ops.aten.sqrt.default(add_309);  add_309 = None
    reciprocal_112: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_112);  sqrt_112 = None
    mul_364: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_112, 1);  reciprocal_112 = None
    unsqueeze_903: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_266, -1);  convert_element_type_266 = None
    unsqueeze_904: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_903, -1);  unsqueeze_903 = None
    unsqueeze_905: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_364, -1);  mul_364 = None
    unsqueeze_906: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_905, -1);  unsqueeze_905 = None
    sub_112: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_112, unsqueeze_904);  convolution_112 = unsqueeze_904 = None
    mul_365: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_112, unsqueeze_906);  sub_112 = unsqueeze_906 = None
    unsqueeze_907: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg337_1, -1);  arg337_1 = None
    unsqueeze_908: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_907, -1);  unsqueeze_907 = None
    mul_366: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_365, unsqueeze_908);  mul_365 = unsqueeze_908 = None
    unsqueeze_909: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg338_1, -1);  arg338_1 = None
    unsqueeze_910: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_909, -1);  unsqueeze_909 = None
    add_310: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_366, unsqueeze_910);  mul_366 = unsqueeze_910 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_105: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_310);  add_310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_113: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_105, arg339_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_105 = arg339_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_268: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1320_1, torch.float32);  arg1320_1 = None
    convert_element_type_269: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1321_1, torch.float32);  arg1321_1 = None
    add_311: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_269, 1e-05);  convert_element_type_269 = None
    sqrt_113: "f32[36]" = torch.ops.aten.sqrt.default(add_311);  add_311 = None
    reciprocal_113: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_113);  sqrt_113 = None
    mul_367: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_113, 1);  reciprocal_113 = None
    unsqueeze_911: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_268, -1);  convert_element_type_268 = None
    unsqueeze_912: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_911, -1);  unsqueeze_911 = None
    unsqueeze_913: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_367, -1);  mul_367 = None
    unsqueeze_914: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_913, -1);  unsqueeze_913 = None
    sub_113: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_113, unsqueeze_912);  convolution_113 = unsqueeze_912 = None
    mul_368: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_113, unsqueeze_914);  sub_113 = unsqueeze_914 = None
    unsqueeze_915: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg340_1, -1);  arg340_1 = None
    unsqueeze_916: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_915, -1);  unsqueeze_915 = None
    mul_369: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_368, unsqueeze_916);  mul_368 = unsqueeze_916 = None
    unsqueeze_917: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg341_1, -1);  arg341_1 = None
    unsqueeze_918: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_917, -1);  unsqueeze_917 = None
    add_312: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_369, unsqueeze_918);  mul_369 = unsqueeze_918 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_313: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_312, relu_104);  add_312 = relu_104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_106: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_313);  add_313 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_114: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_90, arg342_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg342_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_270: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1323_1, torch.float32);  arg1323_1 = None
    convert_element_type_271: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1324_1, torch.float32);  arg1324_1 = None
    add_314: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_271, 1e-05);  convert_element_type_271 = None
    sqrt_114: "f32[72]" = torch.ops.aten.sqrt.default(add_314);  add_314 = None
    reciprocal_114: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_114);  sqrt_114 = None
    mul_370: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_114, 1);  reciprocal_114 = None
    unsqueeze_919: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_270, -1);  convert_element_type_270 = None
    unsqueeze_920: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_919, -1);  unsqueeze_919 = None
    unsqueeze_921: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_370, -1);  mul_370 = None
    unsqueeze_922: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_921, -1);  unsqueeze_921 = None
    sub_114: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_114, unsqueeze_920);  convolution_114 = unsqueeze_920 = None
    mul_371: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_114, unsqueeze_922);  sub_114 = unsqueeze_922 = None
    unsqueeze_923: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg343_1, -1);  arg343_1 = None
    unsqueeze_924: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_923, -1);  unsqueeze_923 = None
    mul_372: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_371, unsqueeze_924);  mul_371 = unsqueeze_924 = None
    unsqueeze_925: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg344_1, -1);  arg344_1 = None
    unsqueeze_926: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_925, -1);  unsqueeze_925 = None
    add_315: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_372, unsqueeze_926);  mul_372 = unsqueeze_926 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_107: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_315);  add_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_115: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_107, arg345_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_107 = arg345_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_272: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1326_1, torch.float32);  arg1326_1 = None
    convert_element_type_273: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1327_1, torch.float32);  arg1327_1 = None
    add_316: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_273, 1e-05);  convert_element_type_273 = None
    sqrt_115: "f32[72]" = torch.ops.aten.sqrt.default(add_316);  add_316 = None
    reciprocal_115: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_115);  sqrt_115 = None
    mul_373: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_115, 1);  reciprocal_115 = None
    unsqueeze_927: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_272, -1);  convert_element_type_272 = None
    unsqueeze_928: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_927, -1);  unsqueeze_927 = None
    unsqueeze_929: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_373, -1);  mul_373 = None
    unsqueeze_930: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_929, -1);  unsqueeze_929 = None
    sub_115: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_115, unsqueeze_928);  convolution_115 = unsqueeze_928 = None
    mul_374: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_115, unsqueeze_930);  sub_115 = unsqueeze_930 = None
    unsqueeze_931: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg346_1, -1);  arg346_1 = None
    unsqueeze_932: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_931, -1);  unsqueeze_931 = None
    mul_375: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_374, unsqueeze_932);  mul_374 = unsqueeze_932 = None
    unsqueeze_933: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg347_1, -1);  arg347_1 = None
    unsqueeze_934: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_933, -1);  unsqueeze_933 = None
    add_317: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_375, unsqueeze_934);  mul_375 = unsqueeze_934 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_318: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_317, relu_90);  add_317 = relu_90 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_108: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_318);  add_318 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_116: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_108, arg348_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg348_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_274: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1329_1, torch.float32);  arg1329_1 = None
    convert_element_type_275: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1330_1, torch.float32);  arg1330_1 = None
    add_319: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_275, 1e-05);  convert_element_type_275 = None
    sqrt_116: "f32[72]" = torch.ops.aten.sqrt.default(add_319);  add_319 = None
    reciprocal_116: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_116);  sqrt_116 = None
    mul_376: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_116, 1);  reciprocal_116 = None
    unsqueeze_935: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_274, -1);  convert_element_type_274 = None
    unsqueeze_936: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_935, -1);  unsqueeze_935 = None
    unsqueeze_937: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_376, -1);  mul_376 = None
    unsqueeze_938: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_937, -1);  unsqueeze_937 = None
    sub_116: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_116, unsqueeze_936);  convolution_116 = unsqueeze_936 = None
    mul_377: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_116, unsqueeze_938);  sub_116 = unsqueeze_938 = None
    unsqueeze_939: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg349_1, -1);  arg349_1 = None
    unsqueeze_940: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_939, -1);  unsqueeze_939 = None
    mul_378: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_377, unsqueeze_940);  mul_377 = unsqueeze_940 = None
    unsqueeze_941: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg350_1, -1);  arg350_1 = None
    unsqueeze_942: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_941, -1);  unsqueeze_941 = None
    add_320: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_378, unsqueeze_942);  mul_378 = unsqueeze_942 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_109: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_320);  add_320 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_117: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_109, arg351_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_109 = arg351_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_276: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1332_1, torch.float32);  arg1332_1 = None
    convert_element_type_277: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1333_1, torch.float32);  arg1333_1 = None
    add_321: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_277, 1e-05);  convert_element_type_277 = None
    sqrt_117: "f32[72]" = torch.ops.aten.sqrt.default(add_321);  add_321 = None
    reciprocal_117: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_117);  sqrt_117 = None
    mul_379: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_117, 1);  reciprocal_117 = None
    unsqueeze_943: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_276, -1);  convert_element_type_276 = None
    unsqueeze_944: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_943, -1);  unsqueeze_943 = None
    unsqueeze_945: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_379, -1);  mul_379 = None
    unsqueeze_946: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_945, -1);  unsqueeze_945 = None
    sub_117: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_117, unsqueeze_944);  convolution_117 = unsqueeze_944 = None
    mul_380: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_117, unsqueeze_946);  sub_117 = unsqueeze_946 = None
    unsqueeze_947: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg352_1, -1);  arg352_1 = None
    unsqueeze_948: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_947, -1);  unsqueeze_947 = None
    mul_381: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_380, unsqueeze_948);  mul_380 = unsqueeze_948 = None
    unsqueeze_949: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg353_1, -1);  arg353_1 = None
    unsqueeze_950: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_949, -1);  unsqueeze_949 = None
    add_322: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_381, unsqueeze_950);  mul_381 = unsqueeze_950 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_323: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_322, relu_108);  add_322 = relu_108 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_110: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_323);  add_323 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_118: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_110, arg354_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg354_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_278: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1335_1, torch.float32);  arg1335_1 = None
    convert_element_type_279: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1336_1, torch.float32);  arg1336_1 = None
    add_324: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_279, 1e-05);  convert_element_type_279 = None
    sqrt_118: "f32[72]" = torch.ops.aten.sqrt.default(add_324);  add_324 = None
    reciprocal_118: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_118);  sqrt_118 = None
    mul_382: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_118, 1);  reciprocal_118 = None
    unsqueeze_951: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_278, -1);  convert_element_type_278 = None
    unsqueeze_952: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_951, -1);  unsqueeze_951 = None
    unsqueeze_953: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_382, -1);  mul_382 = None
    unsqueeze_954: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_953, -1);  unsqueeze_953 = None
    sub_118: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_118, unsqueeze_952);  convolution_118 = unsqueeze_952 = None
    mul_383: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_118, unsqueeze_954);  sub_118 = unsqueeze_954 = None
    unsqueeze_955: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg355_1, -1);  arg355_1 = None
    unsqueeze_956: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_955, -1);  unsqueeze_955 = None
    mul_384: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_383, unsqueeze_956);  mul_383 = unsqueeze_956 = None
    unsqueeze_957: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg356_1, -1);  arg356_1 = None
    unsqueeze_958: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_957, -1);  unsqueeze_957 = None
    add_325: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_384, unsqueeze_958);  mul_384 = unsqueeze_958 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_111: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_325);  add_325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_119: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_111, arg357_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_111 = arg357_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_280: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1338_1, torch.float32);  arg1338_1 = None
    convert_element_type_281: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1339_1, torch.float32);  arg1339_1 = None
    add_326: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_281, 1e-05);  convert_element_type_281 = None
    sqrt_119: "f32[72]" = torch.ops.aten.sqrt.default(add_326);  add_326 = None
    reciprocal_119: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_119);  sqrt_119 = None
    mul_385: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_119, 1);  reciprocal_119 = None
    unsqueeze_959: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_280, -1);  convert_element_type_280 = None
    unsqueeze_960: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_959, -1);  unsqueeze_959 = None
    unsqueeze_961: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_385, -1);  mul_385 = None
    unsqueeze_962: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_961, -1);  unsqueeze_961 = None
    sub_119: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_119, unsqueeze_960);  convolution_119 = unsqueeze_960 = None
    mul_386: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_119, unsqueeze_962);  sub_119 = unsqueeze_962 = None
    unsqueeze_963: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg358_1, -1);  arg358_1 = None
    unsqueeze_964: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_963, -1);  unsqueeze_963 = None
    mul_387: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_386, unsqueeze_964);  mul_386 = unsqueeze_964 = None
    unsqueeze_965: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg359_1, -1);  arg359_1 = None
    unsqueeze_966: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_965, -1);  unsqueeze_965 = None
    add_327: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_387, unsqueeze_966);  mul_387 = unsqueeze_966 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_328: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_327, relu_110);  add_327 = relu_110 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_112: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_328);  add_328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_120: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_112, arg360_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg360_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_282: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1341_1, torch.float32);  arg1341_1 = None
    convert_element_type_283: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1342_1, torch.float32);  arg1342_1 = None
    add_329: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_283, 1e-05);  convert_element_type_283 = None
    sqrt_120: "f32[72]" = torch.ops.aten.sqrt.default(add_329);  add_329 = None
    reciprocal_120: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_120);  sqrt_120 = None
    mul_388: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_120, 1);  reciprocal_120 = None
    unsqueeze_967: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_282, -1);  convert_element_type_282 = None
    unsqueeze_968: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_967, -1);  unsqueeze_967 = None
    unsqueeze_969: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_388, -1);  mul_388 = None
    unsqueeze_970: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_969, -1);  unsqueeze_969 = None
    sub_120: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_120, unsqueeze_968);  convolution_120 = unsqueeze_968 = None
    mul_389: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_120, unsqueeze_970);  sub_120 = unsqueeze_970 = None
    unsqueeze_971: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg361_1, -1);  arg361_1 = None
    unsqueeze_972: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_971, -1);  unsqueeze_971 = None
    mul_390: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_389, unsqueeze_972);  mul_389 = unsqueeze_972 = None
    unsqueeze_973: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg362_1, -1);  arg362_1 = None
    unsqueeze_974: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_973, -1);  unsqueeze_973 = None
    add_330: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_390, unsqueeze_974);  mul_390 = unsqueeze_974 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_113: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_330);  add_330 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_121: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_113, arg363_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_113 = arg363_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_284: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1344_1, torch.float32);  arg1344_1 = None
    convert_element_type_285: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1345_1, torch.float32);  arg1345_1 = None
    add_331: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_285, 1e-05);  convert_element_type_285 = None
    sqrt_121: "f32[72]" = torch.ops.aten.sqrt.default(add_331);  add_331 = None
    reciprocal_121: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_121);  sqrt_121 = None
    mul_391: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_121, 1);  reciprocal_121 = None
    unsqueeze_975: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_284, -1);  convert_element_type_284 = None
    unsqueeze_976: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_975, -1);  unsqueeze_975 = None
    unsqueeze_977: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_391, -1);  mul_391 = None
    unsqueeze_978: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_977, -1);  unsqueeze_977 = None
    sub_121: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_121, unsqueeze_976);  convolution_121 = unsqueeze_976 = None
    mul_392: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_121, unsqueeze_978);  sub_121 = unsqueeze_978 = None
    unsqueeze_979: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg364_1, -1);  arg364_1 = None
    unsqueeze_980: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_979, -1);  unsqueeze_979 = None
    mul_393: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_392, unsqueeze_980);  mul_392 = unsqueeze_980 = None
    unsqueeze_981: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg365_1, -1);  arg365_1 = None
    unsqueeze_982: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_981, -1);  unsqueeze_981 = None
    add_332: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_393, unsqueeze_982);  mul_393 = unsqueeze_982 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_333: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_332, relu_112);  add_332 = relu_112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_114: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_333);  add_333 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_122: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_106, arg366_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg366_1 = None
    convert_element_type_286: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1347_1, torch.float32);  arg1347_1 = None
    convert_element_type_287: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1348_1, torch.float32);  arg1348_1 = None
    add_334: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_287, 1e-05);  convert_element_type_287 = None
    sqrt_122: "f32[18]" = torch.ops.aten.sqrt.default(add_334);  add_334 = None
    reciprocal_122: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_122);  sqrt_122 = None
    mul_394: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_122, 1);  reciprocal_122 = None
    unsqueeze_983: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_286, -1);  convert_element_type_286 = None
    unsqueeze_984: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_983, -1);  unsqueeze_983 = None
    unsqueeze_985: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_394, -1);  mul_394 = None
    unsqueeze_986: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_985, -1);  unsqueeze_985 = None
    sub_122: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_122, unsqueeze_984);  convolution_122 = unsqueeze_984 = None
    mul_395: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_122, unsqueeze_986);  sub_122 = unsqueeze_986 = None
    unsqueeze_987: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg367_1, -1);  arg367_1 = None
    unsqueeze_988: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_987, -1);  unsqueeze_987 = None
    mul_396: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_395, unsqueeze_988);  mul_395 = unsqueeze_988 = None
    unsqueeze_989: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg368_1, -1);  arg368_1 = None
    unsqueeze_990: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_989, -1);  unsqueeze_989 = None
    add_335: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_396, unsqueeze_990);  mul_396 = unsqueeze_990 = None
    iota_14: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_288: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_14, torch.float64);  iota_14 = None
    mul_397: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_288, 1);  convert_element_type_288 = None
    add_336: "f64[56]" = torch.ops.aten.add.Tensor(mul_397, 0);  mul_397 = None
    convert_element_type_289: "f32[56]" = torch.ops.prims.convert_element_type.default(add_336, torch.float32);  add_336 = None
    add_337: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_289, 0.0);  convert_element_type_289 = None
    mul_398: "f32[56]" = torch.ops.aten.mul.Tensor(add_337, 0.5);  add_337 = None
    convert_element_type_290: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_398, torch.int64);  mul_398 = None
    unsqueeze_991: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_290, -1);  convert_element_type_290 = None
    iota_15: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_291: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_15, torch.float64);  iota_15 = None
    mul_399: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_291, 1);  convert_element_type_291 = None
    add_338: "f64[56]" = torch.ops.aten.add.Tensor(mul_399, 0);  mul_399 = None
    convert_element_type_292: "f32[56]" = torch.ops.prims.convert_element_type.default(add_338, torch.float32);  add_338 = None
    add_339: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_292, 0.0);  convert_element_type_292 = None
    mul_400: "f32[56]" = torch.ops.aten.mul.Tensor(add_339, 0.5);  add_339 = None
    convert_element_type_293: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_400, torch.int64);  mul_400 = None
    _unsafe_index_7: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_335, [None, None, unsqueeze_991, convert_element_type_293]);  add_335 = unsqueeze_991 = convert_element_type_293 = None
    add_340: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_98, _unsafe_index_7);  _unsafe_index_7 = None
    convolution_123: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_114, arg369_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg369_1 = None
    convert_element_type_294: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1350_1, torch.float32);  arg1350_1 = None
    convert_element_type_295: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1351_1, torch.float32);  arg1351_1 = None
    add_341: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_295, 1e-05);  convert_element_type_295 = None
    sqrt_123: "f32[18]" = torch.ops.aten.sqrt.default(add_341);  add_341 = None
    reciprocal_123: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_123);  sqrt_123 = None
    mul_401: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_123, 1);  reciprocal_123 = None
    unsqueeze_992: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_294, -1);  convert_element_type_294 = None
    unsqueeze_993: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_992, -1);  unsqueeze_992 = None
    unsqueeze_994: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_401, -1);  mul_401 = None
    unsqueeze_995: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_994, -1);  unsqueeze_994 = None
    sub_123: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_123, unsqueeze_993);  convolution_123 = unsqueeze_993 = None
    mul_402: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_123, unsqueeze_995);  sub_123 = unsqueeze_995 = None
    unsqueeze_996: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg370_1, -1);  arg370_1 = None
    unsqueeze_997: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_996, -1);  unsqueeze_996 = None
    mul_403: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_402, unsqueeze_997);  mul_402 = unsqueeze_997 = None
    unsqueeze_998: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg371_1, -1);  arg371_1 = None
    unsqueeze_999: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_998, -1);  unsqueeze_998 = None
    add_342: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_403, unsqueeze_999);  mul_403 = unsqueeze_999 = None
    iota_16: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_296: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_16, torch.float64);  iota_16 = None
    mul_404: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_296, 1);  convert_element_type_296 = None
    add_343: "f64[56]" = torch.ops.aten.add.Tensor(mul_404, 0);  mul_404 = None
    convert_element_type_297: "f32[56]" = torch.ops.prims.convert_element_type.default(add_343, torch.float32);  add_343 = None
    add_344: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_297, 0.0);  convert_element_type_297 = None
    mul_405: "f32[56]" = torch.ops.aten.mul.Tensor(add_344, 0.25);  add_344 = None
    convert_element_type_298: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_405, torch.int64);  mul_405 = None
    unsqueeze_1000: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_298, -1);  convert_element_type_298 = None
    iota_17: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_299: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_17, torch.float64);  iota_17 = None
    mul_406: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_299, 1);  convert_element_type_299 = None
    add_345: "f64[56]" = torch.ops.aten.add.Tensor(mul_406, 0);  mul_406 = None
    convert_element_type_300: "f32[56]" = torch.ops.prims.convert_element_type.default(add_345, torch.float32);  add_345 = None
    add_346: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_300, 0.0);  convert_element_type_300 = None
    mul_407: "f32[56]" = torch.ops.aten.mul.Tensor(add_346, 0.25);  add_346 = None
    convert_element_type_301: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_407, torch.int64);  mul_407 = None
    _unsafe_index_8: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_342, [None, None, unsqueeze_1000, convert_element_type_301]);  add_342 = unsqueeze_1000 = convert_element_type_301 = None
    add_347: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_340, _unsafe_index_8);  add_340 = _unsafe_index_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_115: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_347);  add_347 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_124: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_98, arg372_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg372_1 = None
    convert_element_type_302: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1353_1, torch.float32);  arg1353_1 = None
    convert_element_type_303: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1354_1, torch.float32);  arg1354_1 = None
    add_348: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_303, 1e-05);  convert_element_type_303 = None
    sqrt_124: "f32[36]" = torch.ops.aten.sqrt.default(add_348);  add_348 = None
    reciprocal_124: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_124);  sqrt_124 = None
    mul_408: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_124, 1);  reciprocal_124 = None
    unsqueeze_1001: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_302, -1);  convert_element_type_302 = None
    unsqueeze_1002: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1001, -1);  unsqueeze_1001 = None
    unsqueeze_1003: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_408, -1);  mul_408 = None
    unsqueeze_1004: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1003, -1);  unsqueeze_1003 = None
    sub_124: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_124, unsqueeze_1002);  convolution_124 = unsqueeze_1002 = None
    mul_409: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_124, unsqueeze_1004);  sub_124 = unsqueeze_1004 = None
    unsqueeze_1005: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg373_1, -1);  arg373_1 = None
    unsqueeze_1006: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1005, -1);  unsqueeze_1005 = None
    mul_410: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_409, unsqueeze_1006);  mul_409 = unsqueeze_1006 = None
    unsqueeze_1007: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg374_1, -1);  arg374_1 = None
    unsqueeze_1008: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1007, -1);  unsqueeze_1007 = None
    add_349: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_410, unsqueeze_1008);  mul_410 = unsqueeze_1008 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_350: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_349, relu_106);  add_349 = None
    convolution_125: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_114, arg375_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg375_1 = None
    convert_element_type_304: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1356_1, torch.float32);  arg1356_1 = None
    convert_element_type_305: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1357_1, torch.float32);  arg1357_1 = None
    add_351: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_305, 1e-05);  convert_element_type_305 = None
    sqrt_125: "f32[36]" = torch.ops.aten.sqrt.default(add_351);  add_351 = None
    reciprocal_125: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_125);  sqrt_125 = None
    mul_411: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_125, 1);  reciprocal_125 = None
    unsqueeze_1009: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_304, -1);  convert_element_type_304 = None
    unsqueeze_1010: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1009, -1);  unsqueeze_1009 = None
    unsqueeze_1011: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_411, -1);  mul_411 = None
    unsqueeze_1012: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1011, -1);  unsqueeze_1011 = None
    sub_125: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_125, unsqueeze_1010);  convolution_125 = unsqueeze_1010 = None
    mul_412: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_125, unsqueeze_1012);  sub_125 = unsqueeze_1012 = None
    unsqueeze_1013: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg376_1, -1);  arg376_1 = None
    unsqueeze_1014: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1013, -1);  unsqueeze_1013 = None
    mul_413: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_412, unsqueeze_1014);  mul_412 = unsqueeze_1014 = None
    unsqueeze_1015: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg377_1, -1);  arg377_1 = None
    unsqueeze_1016: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1015, -1);  unsqueeze_1015 = None
    add_352: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_413, unsqueeze_1016);  mul_413 = unsqueeze_1016 = None
    iota_18: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_306: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_18, torch.float64);  iota_18 = None
    mul_414: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_306, 1);  convert_element_type_306 = None
    add_353: "f64[28]" = torch.ops.aten.add.Tensor(mul_414, 0);  mul_414 = None
    convert_element_type_307: "f32[28]" = torch.ops.prims.convert_element_type.default(add_353, torch.float32);  add_353 = None
    add_354: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_307, 0.0);  convert_element_type_307 = None
    mul_415: "f32[28]" = torch.ops.aten.mul.Tensor(add_354, 0.5);  add_354 = None
    convert_element_type_308: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_415, torch.int64);  mul_415 = None
    unsqueeze_1017: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_308, -1);  convert_element_type_308 = None
    iota_19: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_309: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_19, torch.float64);  iota_19 = None
    mul_416: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_309, 1);  convert_element_type_309 = None
    add_355: "f64[28]" = torch.ops.aten.add.Tensor(mul_416, 0);  mul_416 = None
    convert_element_type_310: "f32[28]" = torch.ops.prims.convert_element_type.default(add_355, torch.float32);  add_355 = None
    add_356: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_310, 0.0);  convert_element_type_310 = None
    mul_417: "f32[28]" = torch.ops.aten.mul.Tensor(add_356, 0.5);  add_356 = None
    convert_element_type_311: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_417, torch.int64);  mul_417 = None
    _unsafe_index_9: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_352, [None, None, unsqueeze_1017, convert_element_type_311]);  add_352 = unsqueeze_1017 = convert_element_type_311 = None
    add_357: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_350, _unsafe_index_9);  add_350 = _unsafe_index_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_116: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_357);  add_357 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_126: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_98, arg378_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_98 = arg378_1 = None
    convert_element_type_312: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1359_1, torch.float32);  arg1359_1 = None
    convert_element_type_313: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1360_1, torch.float32);  arg1360_1 = None
    add_358: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_313, 1e-05);  convert_element_type_313 = None
    sqrt_126: "f32[18]" = torch.ops.aten.sqrt.default(add_358);  add_358 = None
    reciprocal_126: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_126);  sqrt_126 = None
    mul_418: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_126, 1);  reciprocal_126 = None
    unsqueeze_1018: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_312, -1);  convert_element_type_312 = None
    unsqueeze_1019: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1018, -1);  unsqueeze_1018 = None
    unsqueeze_1020: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_418, -1);  mul_418 = None
    unsqueeze_1021: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1020, -1);  unsqueeze_1020 = None
    sub_126: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_126, unsqueeze_1019);  convolution_126 = unsqueeze_1019 = None
    mul_419: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_126, unsqueeze_1021);  sub_126 = unsqueeze_1021 = None
    unsqueeze_1022: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg379_1, -1);  arg379_1 = None
    unsqueeze_1023: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1022, -1);  unsqueeze_1022 = None
    mul_420: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_419, unsqueeze_1023);  mul_419 = unsqueeze_1023 = None
    unsqueeze_1024: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg380_1, -1);  arg380_1 = None
    unsqueeze_1025: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1024, -1);  unsqueeze_1024 = None
    add_359: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_420, unsqueeze_1025);  mul_420 = unsqueeze_1025 = None
    relu_117: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_359);  add_359 = None
    convolution_127: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_117, arg381_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_117 = arg381_1 = None
    convert_element_type_314: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1362_1, torch.float32);  arg1362_1 = None
    convert_element_type_315: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1363_1, torch.float32);  arg1363_1 = None
    add_360: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_315, 1e-05);  convert_element_type_315 = None
    sqrt_127: "f32[72]" = torch.ops.aten.sqrt.default(add_360);  add_360 = None
    reciprocal_127: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_127);  sqrt_127 = None
    mul_421: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_127, 1);  reciprocal_127 = None
    unsqueeze_1026: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_314, -1);  convert_element_type_314 = None
    unsqueeze_1027: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1026, -1);  unsqueeze_1026 = None
    unsqueeze_1028: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_421, -1);  mul_421 = None
    unsqueeze_1029: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1028, -1);  unsqueeze_1028 = None
    sub_127: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_127, unsqueeze_1027);  convolution_127 = unsqueeze_1027 = None
    mul_422: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_127, unsqueeze_1029);  sub_127 = unsqueeze_1029 = None
    unsqueeze_1030: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg382_1, -1);  arg382_1 = None
    unsqueeze_1031: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1030, -1);  unsqueeze_1030 = None
    mul_423: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_422, unsqueeze_1031);  mul_422 = unsqueeze_1031 = None
    unsqueeze_1032: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg383_1, -1);  arg383_1 = None
    unsqueeze_1033: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1032, -1);  unsqueeze_1032 = None
    add_361: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_423, unsqueeze_1033);  mul_423 = unsqueeze_1033 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_128: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_106, arg384_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_106 = arg384_1 = None
    convert_element_type_316: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1365_1, torch.float32);  arg1365_1 = None
    convert_element_type_317: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1366_1, torch.float32);  arg1366_1 = None
    add_362: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_317, 1e-05);  convert_element_type_317 = None
    sqrt_128: "f32[72]" = torch.ops.aten.sqrt.default(add_362);  add_362 = None
    reciprocal_128: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_128);  sqrt_128 = None
    mul_424: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_128, 1);  reciprocal_128 = None
    unsqueeze_1034: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_316, -1);  convert_element_type_316 = None
    unsqueeze_1035: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1034, -1);  unsqueeze_1034 = None
    unsqueeze_1036: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_424, -1);  mul_424 = None
    unsqueeze_1037: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1036, -1);  unsqueeze_1036 = None
    sub_128: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_128, unsqueeze_1035);  convolution_128 = unsqueeze_1035 = None
    mul_425: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_128, unsqueeze_1037);  sub_128 = unsqueeze_1037 = None
    unsqueeze_1038: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg385_1, -1);  arg385_1 = None
    unsqueeze_1039: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1038, -1);  unsqueeze_1038 = None
    mul_426: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_425, unsqueeze_1039);  mul_425 = unsqueeze_1039 = None
    unsqueeze_1040: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg386_1, -1);  arg386_1 = None
    unsqueeze_1041: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1040, -1);  unsqueeze_1040 = None
    add_363: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_426, unsqueeze_1041);  mul_426 = unsqueeze_1041 = None
    add_364: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_361, add_363);  add_361 = add_363 = None
    add_365: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_364, relu_114);  add_364 = relu_114 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_118: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_365);  add_365 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_129: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_115, arg387_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg387_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_318: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1368_1, torch.float32);  arg1368_1 = None
    convert_element_type_319: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1369_1, torch.float32);  arg1369_1 = None
    add_366: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_319, 1e-05);  convert_element_type_319 = None
    sqrt_129: "f32[18]" = torch.ops.aten.sqrt.default(add_366);  add_366 = None
    reciprocal_129: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_129);  sqrt_129 = None
    mul_427: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_129, 1);  reciprocal_129 = None
    unsqueeze_1042: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_318, -1);  convert_element_type_318 = None
    unsqueeze_1043: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1042, -1);  unsqueeze_1042 = None
    unsqueeze_1044: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_427, -1);  mul_427 = None
    unsqueeze_1045: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1044, -1);  unsqueeze_1044 = None
    sub_129: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_129, unsqueeze_1043);  convolution_129 = unsqueeze_1043 = None
    mul_428: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_129, unsqueeze_1045);  sub_129 = unsqueeze_1045 = None
    unsqueeze_1046: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg388_1, -1);  arg388_1 = None
    unsqueeze_1047: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1046, -1);  unsqueeze_1046 = None
    mul_429: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_428, unsqueeze_1047);  mul_428 = unsqueeze_1047 = None
    unsqueeze_1048: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg389_1, -1);  arg389_1 = None
    unsqueeze_1049: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1048, -1);  unsqueeze_1048 = None
    add_367: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_429, unsqueeze_1049);  mul_429 = unsqueeze_1049 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_119: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_367);  add_367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_130: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_119, arg390_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_119 = arg390_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_320: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1371_1, torch.float32);  arg1371_1 = None
    convert_element_type_321: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1372_1, torch.float32);  arg1372_1 = None
    add_368: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_321, 1e-05);  convert_element_type_321 = None
    sqrt_130: "f32[18]" = torch.ops.aten.sqrt.default(add_368);  add_368 = None
    reciprocal_130: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_130);  sqrt_130 = None
    mul_430: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_130, 1);  reciprocal_130 = None
    unsqueeze_1050: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_320, -1);  convert_element_type_320 = None
    unsqueeze_1051: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1050, -1);  unsqueeze_1050 = None
    unsqueeze_1052: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_430, -1);  mul_430 = None
    unsqueeze_1053: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1052, -1);  unsqueeze_1052 = None
    sub_130: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_130, unsqueeze_1051);  convolution_130 = unsqueeze_1051 = None
    mul_431: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_130, unsqueeze_1053);  sub_130 = unsqueeze_1053 = None
    unsqueeze_1054: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg391_1, -1);  arg391_1 = None
    unsqueeze_1055: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1054, -1);  unsqueeze_1054 = None
    mul_432: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_431, unsqueeze_1055);  mul_431 = unsqueeze_1055 = None
    unsqueeze_1056: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg392_1, -1);  arg392_1 = None
    unsqueeze_1057: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1056, -1);  unsqueeze_1056 = None
    add_369: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_432, unsqueeze_1057);  mul_432 = unsqueeze_1057 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_370: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_369, relu_115);  add_369 = relu_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_120: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_370);  add_370 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_131: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_120, arg393_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg393_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_322: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1374_1, torch.float32);  arg1374_1 = None
    convert_element_type_323: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1375_1, torch.float32);  arg1375_1 = None
    add_371: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_323, 1e-05);  convert_element_type_323 = None
    sqrt_131: "f32[18]" = torch.ops.aten.sqrt.default(add_371);  add_371 = None
    reciprocal_131: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_131);  sqrt_131 = None
    mul_433: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_131, 1);  reciprocal_131 = None
    unsqueeze_1058: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_322, -1);  convert_element_type_322 = None
    unsqueeze_1059: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1058, -1);  unsqueeze_1058 = None
    unsqueeze_1060: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_433, -1);  mul_433 = None
    unsqueeze_1061: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1060, -1);  unsqueeze_1060 = None
    sub_131: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_131, unsqueeze_1059);  convolution_131 = unsqueeze_1059 = None
    mul_434: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_131, unsqueeze_1061);  sub_131 = unsqueeze_1061 = None
    unsqueeze_1062: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg394_1, -1);  arg394_1 = None
    unsqueeze_1063: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1062, -1);  unsqueeze_1062 = None
    mul_435: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_434, unsqueeze_1063);  mul_434 = unsqueeze_1063 = None
    unsqueeze_1064: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg395_1, -1);  arg395_1 = None
    unsqueeze_1065: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1064, -1);  unsqueeze_1064 = None
    add_372: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_435, unsqueeze_1065);  mul_435 = unsqueeze_1065 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_121: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_372);  add_372 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_132: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_121, arg396_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_121 = arg396_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_324: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1377_1, torch.float32);  arg1377_1 = None
    convert_element_type_325: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1378_1, torch.float32);  arg1378_1 = None
    add_373: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_325, 1e-05);  convert_element_type_325 = None
    sqrt_132: "f32[18]" = torch.ops.aten.sqrt.default(add_373);  add_373 = None
    reciprocal_132: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_132);  sqrt_132 = None
    mul_436: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_132, 1);  reciprocal_132 = None
    unsqueeze_1066: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_324, -1);  convert_element_type_324 = None
    unsqueeze_1067: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1066, -1);  unsqueeze_1066 = None
    unsqueeze_1068: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_436, -1);  mul_436 = None
    unsqueeze_1069: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1068, -1);  unsqueeze_1068 = None
    sub_132: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_132, unsqueeze_1067);  convolution_132 = unsqueeze_1067 = None
    mul_437: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_132, unsqueeze_1069);  sub_132 = unsqueeze_1069 = None
    unsqueeze_1070: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg397_1, -1);  arg397_1 = None
    unsqueeze_1071: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1070, -1);  unsqueeze_1070 = None
    mul_438: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_437, unsqueeze_1071);  mul_437 = unsqueeze_1071 = None
    unsqueeze_1072: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg398_1, -1);  arg398_1 = None
    unsqueeze_1073: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1072, -1);  unsqueeze_1072 = None
    add_374: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_438, unsqueeze_1073);  mul_438 = unsqueeze_1073 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_375: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_374, relu_120);  add_374 = relu_120 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_122: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_375);  add_375 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_133: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_122, arg399_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg399_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_326: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1380_1, torch.float32);  arg1380_1 = None
    convert_element_type_327: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1381_1, torch.float32);  arg1381_1 = None
    add_376: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_327, 1e-05);  convert_element_type_327 = None
    sqrt_133: "f32[18]" = torch.ops.aten.sqrt.default(add_376);  add_376 = None
    reciprocal_133: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_133);  sqrt_133 = None
    mul_439: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_133, 1);  reciprocal_133 = None
    unsqueeze_1074: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_326, -1);  convert_element_type_326 = None
    unsqueeze_1075: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1074, -1);  unsqueeze_1074 = None
    unsqueeze_1076: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_439, -1);  mul_439 = None
    unsqueeze_1077: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1076, -1);  unsqueeze_1076 = None
    sub_133: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_133, unsqueeze_1075);  convolution_133 = unsqueeze_1075 = None
    mul_440: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_133, unsqueeze_1077);  sub_133 = unsqueeze_1077 = None
    unsqueeze_1078: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg400_1, -1);  arg400_1 = None
    unsqueeze_1079: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1078, -1);  unsqueeze_1078 = None
    mul_441: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_440, unsqueeze_1079);  mul_440 = unsqueeze_1079 = None
    unsqueeze_1080: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg401_1, -1);  arg401_1 = None
    unsqueeze_1081: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1080, -1);  unsqueeze_1080 = None
    add_377: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_441, unsqueeze_1081);  mul_441 = unsqueeze_1081 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_123: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_377);  add_377 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_134: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_123, arg402_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_123 = arg402_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_328: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1383_1, torch.float32);  arg1383_1 = None
    convert_element_type_329: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1384_1, torch.float32);  arg1384_1 = None
    add_378: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_329, 1e-05);  convert_element_type_329 = None
    sqrt_134: "f32[18]" = torch.ops.aten.sqrt.default(add_378);  add_378 = None
    reciprocal_134: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_134);  sqrt_134 = None
    mul_442: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_134, 1);  reciprocal_134 = None
    unsqueeze_1082: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_328, -1);  convert_element_type_328 = None
    unsqueeze_1083: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1082, -1);  unsqueeze_1082 = None
    unsqueeze_1084: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_442, -1);  mul_442 = None
    unsqueeze_1085: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1084, -1);  unsqueeze_1084 = None
    sub_134: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_134, unsqueeze_1083);  convolution_134 = unsqueeze_1083 = None
    mul_443: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_134, unsqueeze_1085);  sub_134 = unsqueeze_1085 = None
    unsqueeze_1086: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg403_1, -1);  arg403_1 = None
    unsqueeze_1087: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1086, -1);  unsqueeze_1086 = None
    mul_444: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_443, unsqueeze_1087);  mul_443 = unsqueeze_1087 = None
    unsqueeze_1088: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg404_1, -1);  arg404_1 = None
    unsqueeze_1089: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1088, -1);  unsqueeze_1088 = None
    add_379: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_444, unsqueeze_1089);  mul_444 = unsqueeze_1089 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_380: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_379, relu_122);  add_379 = relu_122 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_124: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_380);  add_380 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_135: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_124, arg405_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg405_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_330: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1386_1, torch.float32);  arg1386_1 = None
    convert_element_type_331: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1387_1, torch.float32);  arg1387_1 = None
    add_381: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_331, 1e-05);  convert_element_type_331 = None
    sqrt_135: "f32[18]" = torch.ops.aten.sqrt.default(add_381);  add_381 = None
    reciprocal_135: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_135);  sqrt_135 = None
    mul_445: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_135, 1);  reciprocal_135 = None
    unsqueeze_1090: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_330, -1);  convert_element_type_330 = None
    unsqueeze_1091: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1090, -1);  unsqueeze_1090 = None
    unsqueeze_1092: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_445, -1);  mul_445 = None
    unsqueeze_1093: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1092, -1);  unsqueeze_1092 = None
    sub_135: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_135, unsqueeze_1091);  convolution_135 = unsqueeze_1091 = None
    mul_446: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_135, unsqueeze_1093);  sub_135 = unsqueeze_1093 = None
    unsqueeze_1094: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg406_1, -1);  arg406_1 = None
    unsqueeze_1095: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1094, -1);  unsqueeze_1094 = None
    mul_447: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_446, unsqueeze_1095);  mul_446 = unsqueeze_1095 = None
    unsqueeze_1096: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg407_1, -1);  arg407_1 = None
    unsqueeze_1097: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1096, -1);  unsqueeze_1096 = None
    add_382: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_447, unsqueeze_1097);  mul_447 = unsqueeze_1097 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_125: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_382);  add_382 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_136: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_125, arg408_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_125 = arg408_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_332: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1389_1, torch.float32);  arg1389_1 = None
    convert_element_type_333: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1390_1, torch.float32);  arg1390_1 = None
    add_383: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_333, 1e-05);  convert_element_type_333 = None
    sqrt_136: "f32[18]" = torch.ops.aten.sqrt.default(add_383);  add_383 = None
    reciprocal_136: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_136);  sqrt_136 = None
    mul_448: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_136, 1);  reciprocal_136 = None
    unsqueeze_1098: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_332, -1);  convert_element_type_332 = None
    unsqueeze_1099: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1098, -1);  unsqueeze_1098 = None
    unsqueeze_1100: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_448, -1);  mul_448 = None
    unsqueeze_1101: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1100, -1);  unsqueeze_1100 = None
    sub_136: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_136, unsqueeze_1099);  convolution_136 = unsqueeze_1099 = None
    mul_449: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_136, unsqueeze_1101);  sub_136 = unsqueeze_1101 = None
    unsqueeze_1102: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg409_1, -1);  arg409_1 = None
    unsqueeze_1103: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1102, -1);  unsqueeze_1102 = None
    mul_450: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_449, unsqueeze_1103);  mul_449 = unsqueeze_1103 = None
    unsqueeze_1104: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg410_1, -1);  arg410_1 = None
    unsqueeze_1105: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1104, -1);  unsqueeze_1104 = None
    add_384: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_450, unsqueeze_1105);  mul_450 = unsqueeze_1105 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_385: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_384, relu_124);  add_384 = relu_124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_126: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_385);  add_385 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_137: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_116, arg411_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg411_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_334: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1392_1, torch.float32);  arg1392_1 = None
    convert_element_type_335: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1393_1, torch.float32);  arg1393_1 = None
    add_386: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_335, 1e-05);  convert_element_type_335 = None
    sqrt_137: "f32[36]" = torch.ops.aten.sqrt.default(add_386);  add_386 = None
    reciprocal_137: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_137);  sqrt_137 = None
    mul_451: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_137, 1);  reciprocal_137 = None
    unsqueeze_1106: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_334, -1);  convert_element_type_334 = None
    unsqueeze_1107: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1106, -1);  unsqueeze_1106 = None
    unsqueeze_1108: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_451, -1);  mul_451 = None
    unsqueeze_1109: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1108, -1);  unsqueeze_1108 = None
    sub_137: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_137, unsqueeze_1107);  convolution_137 = unsqueeze_1107 = None
    mul_452: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_137, unsqueeze_1109);  sub_137 = unsqueeze_1109 = None
    unsqueeze_1110: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg412_1, -1);  arg412_1 = None
    unsqueeze_1111: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1110, -1);  unsqueeze_1110 = None
    mul_453: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_452, unsqueeze_1111);  mul_452 = unsqueeze_1111 = None
    unsqueeze_1112: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg413_1, -1);  arg413_1 = None
    unsqueeze_1113: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1112, -1);  unsqueeze_1112 = None
    add_387: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_453, unsqueeze_1113);  mul_453 = unsqueeze_1113 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_127: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_387);  add_387 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_138: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_127, arg414_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_127 = arg414_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_336: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1395_1, torch.float32);  arg1395_1 = None
    convert_element_type_337: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1396_1, torch.float32);  arg1396_1 = None
    add_388: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_337, 1e-05);  convert_element_type_337 = None
    sqrt_138: "f32[36]" = torch.ops.aten.sqrt.default(add_388);  add_388 = None
    reciprocal_138: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_138);  sqrt_138 = None
    mul_454: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_138, 1);  reciprocal_138 = None
    unsqueeze_1114: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_336, -1);  convert_element_type_336 = None
    unsqueeze_1115: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1114, -1);  unsqueeze_1114 = None
    unsqueeze_1116: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_454, -1);  mul_454 = None
    unsqueeze_1117: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1116, -1);  unsqueeze_1116 = None
    sub_138: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_138, unsqueeze_1115);  convolution_138 = unsqueeze_1115 = None
    mul_455: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_138, unsqueeze_1117);  sub_138 = unsqueeze_1117 = None
    unsqueeze_1118: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg415_1, -1);  arg415_1 = None
    unsqueeze_1119: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1118, -1);  unsqueeze_1118 = None
    mul_456: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_455, unsqueeze_1119);  mul_455 = unsqueeze_1119 = None
    unsqueeze_1120: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg416_1, -1);  arg416_1 = None
    unsqueeze_1121: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1120, -1);  unsqueeze_1120 = None
    add_389: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_456, unsqueeze_1121);  mul_456 = unsqueeze_1121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_390: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_389, relu_116);  add_389 = relu_116 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_128: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_390);  add_390 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_139: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_128, arg417_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg417_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_338: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1398_1, torch.float32);  arg1398_1 = None
    convert_element_type_339: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1399_1, torch.float32);  arg1399_1 = None
    add_391: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_339, 1e-05);  convert_element_type_339 = None
    sqrt_139: "f32[36]" = torch.ops.aten.sqrt.default(add_391);  add_391 = None
    reciprocal_139: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_139);  sqrt_139 = None
    mul_457: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_139, 1);  reciprocal_139 = None
    unsqueeze_1122: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_338, -1);  convert_element_type_338 = None
    unsqueeze_1123: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1122, -1);  unsqueeze_1122 = None
    unsqueeze_1124: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_457, -1);  mul_457 = None
    unsqueeze_1125: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1124, -1);  unsqueeze_1124 = None
    sub_139: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_139, unsqueeze_1123);  convolution_139 = unsqueeze_1123 = None
    mul_458: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_139, unsqueeze_1125);  sub_139 = unsqueeze_1125 = None
    unsqueeze_1126: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg418_1, -1);  arg418_1 = None
    unsqueeze_1127: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1126, -1);  unsqueeze_1126 = None
    mul_459: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_458, unsqueeze_1127);  mul_458 = unsqueeze_1127 = None
    unsqueeze_1128: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg419_1, -1);  arg419_1 = None
    unsqueeze_1129: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1128, -1);  unsqueeze_1128 = None
    add_392: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_459, unsqueeze_1129);  mul_459 = unsqueeze_1129 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_129: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_392);  add_392 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_140: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_129, arg420_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_129 = arg420_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_340: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1401_1, torch.float32);  arg1401_1 = None
    convert_element_type_341: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1402_1, torch.float32);  arg1402_1 = None
    add_393: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_341, 1e-05);  convert_element_type_341 = None
    sqrt_140: "f32[36]" = torch.ops.aten.sqrt.default(add_393);  add_393 = None
    reciprocal_140: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_140);  sqrt_140 = None
    mul_460: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_140, 1);  reciprocal_140 = None
    unsqueeze_1130: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_340, -1);  convert_element_type_340 = None
    unsqueeze_1131: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1130, -1);  unsqueeze_1130 = None
    unsqueeze_1132: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_460, -1);  mul_460 = None
    unsqueeze_1133: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1132, -1);  unsqueeze_1132 = None
    sub_140: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_140, unsqueeze_1131);  convolution_140 = unsqueeze_1131 = None
    mul_461: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_140, unsqueeze_1133);  sub_140 = unsqueeze_1133 = None
    unsqueeze_1134: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg421_1, -1);  arg421_1 = None
    unsqueeze_1135: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1134, -1);  unsqueeze_1134 = None
    mul_462: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_461, unsqueeze_1135);  mul_461 = unsqueeze_1135 = None
    unsqueeze_1136: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg422_1, -1);  arg422_1 = None
    unsqueeze_1137: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1136, -1);  unsqueeze_1136 = None
    add_394: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_462, unsqueeze_1137);  mul_462 = unsqueeze_1137 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_395: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_394, relu_128);  add_394 = relu_128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_130: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_395);  add_395 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_141: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_130, arg423_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg423_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_342: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1404_1, torch.float32);  arg1404_1 = None
    convert_element_type_343: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1405_1, torch.float32);  arg1405_1 = None
    add_396: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_343, 1e-05);  convert_element_type_343 = None
    sqrt_141: "f32[36]" = torch.ops.aten.sqrt.default(add_396);  add_396 = None
    reciprocal_141: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_141);  sqrt_141 = None
    mul_463: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_141, 1);  reciprocal_141 = None
    unsqueeze_1138: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_342, -1);  convert_element_type_342 = None
    unsqueeze_1139: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1138, -1);  unsqueeze_1138 = None
    unsqueeze_1140: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_463, -1);  mul_463 = None
    unsqueeze_1141: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1140, -1);  unsqueeze_1140 = None
    sub_141: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_141, unsqueeze_1139);  convolution_141 = unsqueeze_1139 = None
    mul_464: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_141, unsqueeze_1141);  sub_141 = unsqueeze_1141 = None
    unsqueeze_1142: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg424_1, -1);  arg424_1 = None
    unsqueeze_1143: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1142, -1);  unsqueeze_1142 = None
    mul_465: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_464, unsqueeze_1143);  mul_464 = unsqueeze_1143 = None
    unsqueeze_1144: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg425_1, -1);  arg425_1 = None
    unsqueeze_1145: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1144, -1);  unsqueeze_1144 = None
    add_397: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_465, unsqueeze_1145);  mul_465 = unsqueeze_1145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_131: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_397);  add_397 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_142: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_131, arg426_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_131 = arg426_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_344: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1407_1, torch.float32);  arg1407_1 = None
    convert_element_type_345: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1408_1, torch.float32);  arg1408_1 = None
    add_398: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_345, 1e-05);  convert_element_type_345 = None
    sqrt_142: "f32[36]" = torch.ops.aten.sqrt.default(add_398);  add_398 = None
    reciprocal_142: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_142);  sqrt_142 = None
    mul_466: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_142, 1);  reciprocal_142 = None
    unsqueeze_1146: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_344, -1);  convert_element_type_344 = None
    unsqueeze_1147: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1146, -1);  unsqueeze_1146 = None
    unsqueeze_1148: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_466, -1);  mul_466 = None
    unsqueeze_1149: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1148, -1);  unsqueeze_1148 = None
    sub_142: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_142, unsqueeze_1147);  convolution_142 = unsqueeze_1147 = None
    mul_467: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_142, unsqueeze_1149);  sub_142 = unsqueeze_1149 = None
    unsqueeze_1150: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg427_1, -1);  arg427_1 = None
    unsqueeze_1151: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1150, -1);  unsqueeze_1150 = None
    mul_468: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_467, unsqueeze_1151);  mul_467 = unsqueeze_1151 = None
    unsqueeze_1152: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg428_1, -1);  arg428_1 = None
    unsqueeze_1153: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1152, -1);  unsqueeze_1152 = None
    add_399: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_468, unsqueeze_1153);  mul_468 = unsqueeze_1153 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_400: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_399, relu_130);  add_399 = relu_130 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_132: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_400);  add_400 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_143: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_132, arg429_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg429_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_346: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1410_1, torch.float32);  arg1410_1 = None
    convert_element_type_347: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1411_1, torch.float32);  arg1411_1 = None
    add_401: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_347, 1e-05);  convert_element_type_347 = None
    sqrt_143: "f32[36]" = torch.ops.aten.sqrt.default(add_401);  add_401 = None
    reciprocal_143: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_143);  sqrt_143 = None
    mul_469: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_143, 1);  reciprocal_143 = None
    unsqueeze_1154: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_346, -1);  convert_element_type_346 = None
    unsqueeze_1155: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1154, -1);  unsqueeze_1154 = None
    unsqueeze_1156: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_469, -1);  mul_469 = None
    unsqueeze_1157: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1156, -1);  unsqueeze_1156 = None
    sub_143: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_143, unsqueeze_1155);  convolution_143 = unsqueeze_1155 = None
    mul_470: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_143, unsqueeze_1157);  sub_143 = unsqueeze_1157 = None
    unsqueeze_1158: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg430_1, -1);  arg430_1 = None
    unsqueeze_1159: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1158, -1);  unsqueeze_1158 = None
    mul_471: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_470, unsqueeze_1159);  mul_470 = unsqueeze_1159 = None
    unsqueeze_1160: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg431_1, -1);  arg431_1 = None
    unsqueeze_1161: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1160, -1);  unsqueeze_1160 = None
    add_402: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_471, unsqueeze_1161);  mul_471 = unsqueeze_1161 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_133: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_402);  add_402 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_144: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_133, arg432_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_133 = arg432_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_348: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1413_1, torch.float32);  arg1413_1 = None
    convert_element_type_349: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1414_1, torch.float32);  arg1414_1 = None
    add_403: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_349, 1e-05);  convert_element_type_349 = None
    sqrt_144: "f32[36]" = torch.ops.aten.sqrt.default(add_403);  add_403 = None
    reciprocal_144: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_144);  sqrt_144 = None
    mul_472: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_144, 1);  reciprocal_144 = None
    unsqueeze_1162: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_348, -1);  convert_element_type_348 = None
    unsqueeze_1163: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1162, -1);  unsqueeze_1162 = None
    unsqueeze_1164: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_472, -1);  mul_472 = None
    unsqueeze_1165: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1164, -1);  unsqueeze_1164 = None
    sub_144: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_144, unsqueeze_1163);  convolution_144 = unsqueeze_1163 = None
    mul_473: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_144, unsqueeze_1165);  sub_144 = unsqueeze_1165 = None
    unsqueeze_1166: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg433_1, -1);  arg433_1 = None
    unsqueeze_1167: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1166, -1);  unsqueeze_1166 = None
    mul_474: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_473, unsqueeze_1167);  mul_473 = unsqueeze_1167 = None
    unsqueeze_1168: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg434_1, -1);  arg434_1 = None
    unsqueeze_1169: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1168, -1);  unsqueeze_1168 = None
    add_404: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_474, unsqueeze_1169);  mul_474 = unsqueeze_1169 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_405: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_404, relu_132);  add_404 = relu_132 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_134: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_405);  add_405 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_145: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_118, arg435_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg435_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_350: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1416_1, torch.float32);  arg1416_1 = None
    convert_element_type_351: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1417_1, torch.float32);  arg1417_1 = None
    add_406: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_351, 1e-05);  convert_element_type_351 = None
    sqrt_145: "f32[72]" = torch.ops.aten.sqrt.default(add_406);  add_406 = None
    reciprocal_145: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_145);  sqrt_145 = None
    mul_475: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_145, 1);  reciprocal_145 = None
    unsqueeze_1170: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_350, -1);  convert_element_type_350 = None
    unsqueeze_1171: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1170, -1);  unsqueeze_1170 = None
    unsqueeze_1172: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_475, -1);  mul_475 = None
    unsqueeze_1173: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1172, -1);  unsqueeze_1172 = None
    sub_145: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_145, unsqueeze_1171);  convolution_145 = unsqueeze_1171 = None
    mul_476: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_145, unsqueeze_1173);  sub_145 = unsqueeze_1173 = None
    unsqueeze_1174: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg436_1, -1);  arg436_1 = None
    unsqueeze_1175: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1174, -1);  unsqueeze_1174 = None
    mul_477: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_476, unsqueeze_1175);  mul_476 = unsqueeze_1175 = None
    unsqueeze_1176: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg437_1, -1);  arg437_1 = None
    unsqueeze_1177: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1176, -1);  unsqueeze_1176 = None
    add_407: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_477, unsqueeze_1177);  mul_477 = unsqueeze_1177 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_135: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_407);  add_407 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_146: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_135, arg438_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_135 = arg438_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_352: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1419_1, torch.float32);  arg1419_1 = None
    convert_element_type_353: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1420_1, torch.float32);  arg1420_1 = None
    add_408: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_353, 1e-05);  convert_element_type_353 = None
    sqrt_146: "f32[72]" = torch.ops.aten.sqrt.default(add_408);  add_408 = None
    reciprocal_146: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_146);  sqrt_146 = None
    mul_478: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_146, 1);  reciprocal_146 = None
    unsqueeze_1178: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_352, -1);  convert_element_type_352 = None
    unsqueeze_1179: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1178, -1);  unsqueeze_1178 = None
    unsqueeze_1180: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_478, -1);  mul_478 = None
    unsqueeze_1181: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1180, -1);  unsqueeze_1180 = None
    sub_146: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_146, unsqueeze_1179);  convolution_146 = unsqueeze_1179 = None
    mul_479: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_146, unsqueeze_1181);  sub_146 = unsqueeze_1181 = None
    unsqueeze_1182: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg439_1, -1);  arg439_1 = None
    unsqueeze_1183: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1182, -1);  unsqueeze_1182 = None
    mul_480: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_479, unsqueeze_1183);  mul_479 = unsqueeze_1183 = None
    unsqueeze_1184: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg440_1, -1);  arg440_1 = None
    unsqueeze_1185: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1184, -1);  unsqueeze_1184 = None
    add_409: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_480, unsqueeze_1185);  mul_480 = unsqueeze_1185 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_410: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_409, relu_118);  add_409 = relu_118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_136: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_410);  add_410 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_147: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_136, arg441_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg441_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_354: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1422_1, torch.float32);  arg1422_1 = None
    convert_element_type_355: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1423_1, torch.float32);  arg1423_1 = None
    add_411: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_355, 1e-05);  convert_element_type_355 = None
    sqrt_147: "f32[72]" = torch.ops.aten.sqrt.default(add_411);  add_411 = None
    reciprocal_147: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_147);  sqrt_147 = None
    mul_481: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_147, 1);  reciprocal_147 = None
    unsqueeze_1186: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_354, -1);  convert_element_type_354 = None
    unsqueeze_1187: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1186, -1);  unsqueeze_1186 = None
    unsqueeze_1188: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_481, -1);  mul_481 = None
    unsqueeze_1189: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1188, -1);  unsqueeze_1188 = None
    sub_147: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_147, unsqueeze_1187);  convolution_147 = unsqueeze_1187 = None
    mul_482: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_147, unsqueeze_1189);  sub_147 = unsqueeze_1189 = None
    unsqueeze_1190: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg442_1, -1);  arg442_1 = None
    unsqueeze_1191: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1190, -1);  unsqueeze_1190 = None
    mul_483: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_482, unsqueeze_1191);  mul_482 = unsqueeze_1191 = None
    unsqueeze_1192: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg443_1, -1);  arg443_1 = None
    unsqueeze_1193: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1192, -1);  unsqueeze_1192 = None
    add_412: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_483, unsqueeze_1193);  mul_483 = unsqueeze_1193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_137: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_412);  add_412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_148: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_137, arg444_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_137 = arg444_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_356: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1425_1, torch.float32);  arg1425_1 = None
    convert_element_type_357: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1426_1, torch.float32);  arg1426_1 = None
    add_413: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_357, 1e-05);  convert_element_type_357 = None
    sqrt_148: "f32[72]" = torch.ops.aten.sqrt.default(add_413);  add_413 = None
    reciprocal_148: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_148);  sqrt_148 = None
    mul_484: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_148, 1);  reciprocal_148 = None
    unsqueeze_1194: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_356, -1);  convert_element_type_356 = None
    unsqueeze_1195: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1194, -1);  unsqueeze_1194 = None
    unsqueeze_1196: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_484, -1);  mul_484 = None
    unsqueeze_1197: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1196, -1);  unsqueeze_1196 = None
    sub_148: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_148, unsqueeze_1195);  convolution_148 = unsqueeze_1195 = None
    mul_485: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_148, unsqueeze_1197);  sub_148 = unsqueeze_1197 = None
    unsqueeze_1198: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg445_1, -1);  arg445_1 = None
    unsqueeze_1199: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1198, -1);  unsqueeze_1198 = None
    mul_486: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_485, unsqueeze_1199);  mul_485 = unsqueeze_1199 = None
    unsqueeze_1200: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg446_1, -1);  arg446_1 = None
    unsqueeze_1201: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1200, -1);  unsqueeze_1200 = None
    add_414: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_486, unsqueeze_1201);  mul_486 = unsqueeze_1201 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_415: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_414, relu_136);  add_414 = relu_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_138: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_415);  add_415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_149: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_138, arg447_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg447_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_358: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1428_1, torch.float32);  arg1428_1 = None
    convert_element_type_359: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1429_1, torch.float32);  arg1429_1 = None
    add_416: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_359, 1e-05);  convert_element_type_359 = None
    sqrt_149: "f32[72]" = torch.ops.aten.sqrt.default(add_416);  add_416 = None
    reciprocal_149: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_149);  sqrt_149 = None
    mul_487: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_149, 1);  reciprocal_149 = None
    unsqueeze_1202: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_358, -1);  convert_element_type_358 = None
    unsqueeze_1203: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1202, -1);  unsqueeze_1202 = None
    unsqueeze_1204: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_487, -1);  mul_487 = None
    unsqueeze_1205: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1204, -1);  unsqueeze_1204 = None
    sub_149: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_149, unsqueeze_1203);  convolution_149 = unsqueeze_1203 = None
    mul_488: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_149, unsqueeze_1205);  sub_149 = unsqueeze_1205 = None
    unsqueeze_1206: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg448_1, -1);  arg448_1 = None
    unsqueeze_1207: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1206, -1);  unsqueeze_1206 = None
    mul_489: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_488, unsqueeze_1207);  mul_488 = unsqueeze_1207 = None
    unsqueeze_1208: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg449_1, -1);  arg449_1 = None
    unsqueeze_1209: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1208, -1);  unsqueeze_1208 = None
    add_417: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_489, unsqueeze_1209);  mul_489 = unsqueeze_1209 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_139: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_417);  add_417 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_150: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_139, arg450_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_139 = arg450_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_360: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1431_1, torch.float32);  arg1431_1 = None
    convert_element_type_361: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1432_1, torch.float32);  arg1432_1 = None
    add_418: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_361, 1e-05);  convert_element_type_361 = None
    sqrt_150: "f32[72]" = torch.ops.aten.sqrt.default(add_418);  add_418 = None
    reciprocal_150: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_150);  sqrt_150 = None
    mul_490: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_150, 1);  reciprocal_150 = None
    unsqueeze_1210: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_360, -1);  convert_element_type_360 = None
    unsqueeze_1211: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1210, -1);  unsqueeze_1210 = None
    unsqueeze_1212: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_490, -1);  mul_490 = None
    unsqueeze_1213: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1212, -1);  unsqueeze_1212 = None
    sub_150: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_150, unsqueeze_1211);  convolution_150 = unsqueeze_1211 = None
    mul_491: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_150, unsqueeze_1213);  sub_150 = unsqueeze_1213 = None
    unsqueeze_1214: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg451_1, -1);  arg451_1 = None
    unsqueeze_1215: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1214, -1);  unsqueeze_1214 = None
    mul_492: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_491, unsqueeze_1215);  mul_491 = unsqueeze_1215 = None
    unsqueeze_1216: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg452_1, -1);  arg452_1 = None
    unsqueeze_1217: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1216, -1);  unsqueeze_1216 = None
    add_419: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_492, unsqueeze_1217);  mul_492 = unsqueeze_1217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_420: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_419, relu_138);  add_419 = relu_138 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_140: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_420);  add_420 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_151: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_140, arg453_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg453_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_362: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1434_1, torch.float32);  arg1434_1 = None
    convert_element_type_363: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1435_1, torch.float32);  arg1435_1 = None
    add_421: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_363, 1e-05);  convert_element_type_363 = None
    sqrt_151: "f32[72]" = torch.ops.aten.sqrt.default(add_421);  add_421 = None
    reciprocal_151: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_151);  sqrt_151 = None
    mul_493: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_151, 1);  reciprocal_151 = None
    unsqueeze_1218: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_362, -1);  convert_element_type_362 = None
    unsqueeze_1219: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1218, -1);  unsqueeze_1218 = None
    unsqueeze_1220: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_493, -1);  mul_493 = None
    unsqueeze_1221: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1220, -1);  unsqueeze_1220 = None
    sub_151: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_151, unsqueeze_1219);  convolution_151 = unsqueeze_1219 = None
    mul_494: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_151, unsqueeze_1221);  sub_151 = unsqueeze_1221 = None
    unsqueeze_1222: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg454_1, -1);  arg454_1 = None
    unsqueeze_1223: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1222, -1);  unsqueeze_1222 = None
    mul_495: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_494, unsqueeze_1223);  mul_494 = unsqueeze_1223 = None
    unsqueeze_1224: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg455_1, -1);  arg455_1 = None
    unsqueeze_1225: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1224, -1);  unsqueeze_1224 = None
    add_422: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_495, unsqueeze_1225);  mul_495 = unsqueeze_1225 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_141: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_422);  add_422 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_152: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_141, arg456_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_141 = arg456_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_364: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1437_1, torch.float32);  arg1437_1 = None
    convert_element_type_365: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1438_1, torch.float32);  arg1438_1 = None
    add_423: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_365, 1e-05);  convert_element_type_365 = None
    sqrt_152: "f32[72]" = torch.ops.aten.sqrt.default(add_423);  add_423 = None
    reciprocal_152: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_152);  sqrt_152 = None
    mul_496: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_152, 1);  reciprocal_152 = None
    unsqueeze_1226: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_364, -1);  convert_element_type_364 = None
    unsqueeze_1227: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1226, -1);  unsqueeze_1226 = None
    unsqueeze_1228: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_496, -1);  mul_496 = None
    unsqueeze_1229: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1228, -1);  unsqueeze_1228 = None
    sub_152: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_152, unsqueeze_1227);  convolution_152 = unsqueeze_1227 = None
    mul_497: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_152, unsqueeze_1229);  sub_152 = unsqueeze_1229 = None
    unsqueeze_1230: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg457_1, -1);  arg457_1 = None
    unsqueeze_1231: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1230, -1);  unsqueeze_1230 = None
    mul_498: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_497, unsqueeze_1231);  mul_497 = unsqueeze_1231 = None
    unsqueeze_1232: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg458_1, -1);  arg458_1 = None
    unsqueeze_1233: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1232, -1);  unsqueeze_1232 = None
    add_424: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_498, unsqueeze_1233);  mul_498 = unsqueeze_1233 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_425: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_424, relu_140);  add_424 = relu_140 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_142: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_425);  add_425 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_153: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_134, arg459_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg459_1 = None
    convert_element_type_366: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1440_1, torch.float32);  arg1440_1 = None
    convert_element_type_367: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1441_1, torch.float32);  arg1441_1 = None
    add_426: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_367, 1e-05);  convert_element_type_367 = None
    sqrt_153: "f32[18]" = torch.ops.aten.sqrt.default(add_426);  add_426 = None
    reciprocal_153: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_153);  sqrt_153 = None
    mul_499: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_153, 1);  reciprocal_153 = None
    unsqueeze_1234: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_366, -1);  convert_element_type_366 = None
    unsqueeze_1235: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1234, -1);  unsqueeze_1234 = None
    unsqueeze_1236: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_499, -1);  mul_499 = None
    unsqueeze_1237: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1236, -1);  unsqueeze_1236 = None
    sub_153: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_153, unsqueeze_1235);  convolution_153 = unsqueeze_1235 = None
    mul_500: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_153, unsqueeze_1237);  sub_153 = unsqueeze_1237 = None
    unsqueeze_1238: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg460_1, -1);  arg460_1 = None
    unsqueeze_1239: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1238, -1);  unsqueeze_1238 = None
    mul_501: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_500, unsqueeze_1239);  mul_500 = unsqueeze_1239 = None
    unsqueeze_1240: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg461_1, -1);  arg461_1 = None
    unsqueeze_1241: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1240, -1);  unsqueeze_1240 = None
    add_427: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_501, unsqueeze_1241);  mul_501 = unsqueeze_1241 = None
    iota_20: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_368: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_20, torch.float64);  iota_20 = None
    mul_502: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_368, 1);  convert_element_type_368 = None
    add_428: "f64[56]" = torch.ops.aten.add.Tensor(mul_502, 0);  mul_502 = None
    convert_element_type_369: "f32[56]" = torch.ops.prims.convert_element_type.default(add_428, torch.float32);  add_428 = None
    add_429: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_369, 0.0);  convert_element_type_369 = None
    mul_503: "f32[56]" = torch.ops.aten.mul.Tensor(add_429, 0.5);  add_429 = None
    convert_element_type_370: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_503, torch.int64);  mul_503 = None
    unsqueeze_1242: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_370, -1);  convert_element_type_370 = None
    iota_21: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_371: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_21, torch.float64);  iota_21 = None
    mul_504: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_371, 1);  convert_element_type_371 = None
    add_430: "f64[56]" = torch.ops.aten.add.Tensor(mul_504, 0);  mul_504 = None
    convert_element_type_372: "f32[56]" = torch.ops.prims.convert_element_type.default(add_430, torch.float32);  add_430 = None
    add_431: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_372, 0.0);  convert_element_type_372 = None
    mul_505: "f32[56]" = torch.ops.aten.mul.Tensor(add_431, 0.5);  add_431 = None
    convert_element_type_373: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_505, torch.int64);  mul_505 = None
    _unsafe_index_10: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_427, [None, None, unsqueeze_1242, convert_element_type_373]);  add_427 = unsqueeze_1242 = convert_element_type_373 = None
    add_432: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_126, _unsafe_index_10);  _unsafe_index_10 = None
    convolution_154: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_142, arg462_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg462_1 = None
    convert_element_type_374: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1443_1, torch.float32);  arg1443_1 = None
    convert_element_type_375: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1444_1, torch.float32);  arg1444_1 = None
    add_433: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_375, 1e-05);  convert_element_type_375 = None
    sqrt_154: "f32[18]" = torch.ops.aten.sqrt.default(add_433);  add_433 = None
    reciprocal_154: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_154);  sqrt_154 = None
    mul_506: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_154, 1);  reciprocal_154 = None
    unsqueeze_1243: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_374, -1);  convert_element_type_374 = None
    unsqueeze_1244: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1243, -1);  unsqueeze_1243 = None
    unsqueeze_1245: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_506, -1);  mul_506 = None
    unsqueeze_1246: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1245, -1);  unsqueeze_1245 = None
    sub_154: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_154, unsqueeze_1244);  convolution_154 = unsqueeze_1244 = None
    mul_507: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_154, unsqueeze_1246);  sub_154 = unsqueeze_1246 = None
    unsqueeze_1247: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg463_1, -1);  arg463_1 = None
    unsqueeze_1248: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1247, -1);  unsqueeze_1247 = None
    mul_508: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_507, unsqueeze_1248);  mul_507 = unsqueeze_1248 = None
    unsqueeze_1249: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg464_1, -1);  arg464_1 = None
    unsqueeze_1250: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1249, -1);  unsqueeze_1249 = None
    add_434: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_508, unsqueeze_1250);  mul_508 = unsqueeze_1250 = None
    iota_22: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_376: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_22, torch.float64);  iota_22 = None
    mul_509: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_376, 1);  convert_element_type_376 = None
    add_435: "f64[56]" = torch.ops.aten.add.Tensor(mul_509, 0);  mul_509 = None
    convert_element_type_377: "f32[56]" = torch.ops.prims.convert_element_type.default(add_435, torch.float32);  add_435 = None
    add_436: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_377, 0.0);  convert_element_type_377 = None
    mul_510: "f32[56]" = torch.ops.aten.mul.Tensor(add_436, 0.25);  add_436 = None
    convert_element_type_378: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_510, torch.int64);  mul_510 = None
    unsqueeze_1251: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_378, -1);  convert_element_type_378 = None
    iota_23: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_379: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_23, torch.float64);  iota_23 = None
    mul_511: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_379, 1);  convert_element_type_379 = None
    add_437: "f64[56]" = torch.ops.aten.add.Tensor(mul_511, 0);  mul_511 = None
    convert_element_type_380: "f32[56]" = torch.ops.prims.convert_element_type.default(add_437, torch.float32);  add_437 = None
    add_438: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_380, 0.0);  convert_element_type_380 = None
    mul_512: "f32[56]" = torch.ops.aten.mul.Tensor(add_438, 0.25);  add_438 = None
    convert_element_type_381: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_512, torch.int64);  mul_512 = None
    _unsafe_index_11: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_434, [None, None, unsqueeze_1251, convert_element_type_381]);  add_434 = unsqueeze_1251 = convert_element_type_381 = None
    add_439: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_432, _unsafe_index_11);  add_432 = _unsafe_index_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_143: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_439);  add_439 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_155: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_126, arg465_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg465_1 = None
    convert_element_type_382: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1446_1, torch.float32);  arg1446_1 = None
    convert_element_type_383: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1447_1, torch.float32);  arg1447_1 = None
    add_440: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_383, 1e-05);  convert_element_type_383 = None
    sqrt_155: "f32[36]" = torch.ops.aten.sqrt.default(add_440);  add_440 = None
    reciprocal_155: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_155);  sqrt_155 = None
    mul_513: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_155, 1);  reciprocal_155 = None
    unsqueeze_1252: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_382, -1);  convert_element_type_382 = None
    unsqueeze_1253: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1252, -1);  unsqueeze_1252 = None
    unsqueeze_1254: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_513, -1);  mul_513 = None
    unsqueeze_1255: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1254, -1);  unsqueeze_1254 = None
    sub_155: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_155, unsqueeze_1253);  convolution_155 = unsqueeze_1253 = None
    mul_514: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_155, unsqueeze_1255);  sub_155 = unsqueeze_1255 = None
    unsqueeze_1256: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg466_1, -1);  arg466_1 = None
    unsqueeze_1257: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1256, -1);  unsqueeze_1256 = None
    mul_515: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_514, unsqueeze_1257);  mul_514 = unsqueeze_1257 = None
    unsqueeze_1258: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg467_1, -1);  arg467_1 = None
    unsqueeze_1259: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1258, -1);  unsqueeze_1258 = None
    add_441: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_515, unsqueeze_1259);  mul_515 = unsqueeze_1259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_442: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_441, relu_134);  add_441 = None
    convolution_156: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_142, arg468_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg468_1 = None
    convert_element_type_384: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1449_1, torch.float32);  arg1449_1 = None
    convert_element_type_385: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1450_1, torch.float32);  arg1450_1 = None
    add_443: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_385, 1e-05);  convert_element_type_385 = None
    sqrt_156: "f32[36]" = torch.ops.aten.sqrt.default(add_443);  add_443 = None
    reciprocal_156: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_156);  sqrt_156 = None
    mul_516: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_156, 1);  reciprocal_156 = None
    unsqueeze_1260: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_384, -1);  convert_element_type_384 = None
    unsqueeze_1261: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1260, -1);  unsqueeze_1260 = None
    unsqueeze_1262: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_516, -1);  mul_516 = None
    unsqueeze_1263: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1262, -1);  unsqueeze_1262 = None
    sub_156: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_156, unsqueeze_1261);  convolution_156 = unsqueeze_1261 = None
    mul_517: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_156, unsqueeze_1263);  sub_156 = unsqueeze_1263 = None
    unsqueeze_1264: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg469_1, -1);  arg469_1 = None
    unsqueeze_1265: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1264, -1);  unsqueeze_1264 = None
    mul_518: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_517, unsqueeze_1265);  mul_517 = unsqueeze_1265 = None
    unsqueeze_1266: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg470_1, -1);  arg470_1 = None
    unsqueeze_1267: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1266, -1);  unsqueeze_1266 = None
    add_444: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_518, unsqueeze_1267);  mul_518 = unsqueeze_1267 = None
    iota_24: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_386: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_24, torch.float64);  iota_24 = None
    mul_519: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_386, 1);  convert_element_type_386 = None
    add_445: "f64[28]" = torch.ops.aten.add.Tensor(mul_519, 0);  mul_519 = None
    convert_element_type_387: "f32[28]" = torch.ops.prims.convert_element_type.default(add_445, torch.float32);  add_445 = None
    add_446: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_387, 0.0);  convert_element_type_387 = None
    mul_520: "f32[28]" = torch.ops.aten.mul.Tensor(add_446, 0.5);  add_446 = None
    convert_element_type_388: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_520, torch.int64);  mul_520 = None
    unsqueeze_1268: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_388, -1);  convert_element_type_388 = None
    iota_25: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_389: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_25, torch.float64);  iota_25 = None
    mul_521: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_389, 1);  convert_element_type_389 = None
    add_447: "f64[28]" = torch.ops.aten.add.Tensor(mul_521, 0);  mul_521 = None
    convert_element_type_390: "f32[28]" = torch.ops.prims.convert_element_type.default(add_447, torch.float32);  add_447 = None
    add_448: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_390, 0.0);  convert_element_type_390 = None
    mul_522: "f32[28]" = torch.ops.aten.mul.Tensor(add_448, 0.5);  add_448 = None
    convert_element_type_391: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_522, torch.int64);  mul_522 = None
    _unsafe_index_12: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_444, [None, None, unsqueeze_1268, convert_element_type_391]);  add_444 = unsqueeze_1268 = convert_element_type_391 = None
    add_449: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_442, _unsafe_index_12);  add_442 = _unsafe_index_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_144: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_449);  add_449 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_157: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_126, arg471_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_126 = arg471_1 = None
    convert_element_type_392: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1452_1, torch.float32);  arg1452_1 = None
    convert_element_type_393: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1453_1, torch.float32);  arg1453_1 = None
    add_450: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_393, 1e-05);  convert_element_type_393 = None
    sqrt_157: "f32[18]" = torch.ops.aten.sqrt.default(add_450);  add_450 = None
    reciprocal_157: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_157);  sqrt_157 = None
    mul_523: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_157, 1);  reciprocal_157 = None
    unsqueeze_1269: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_392, -1);  convert_element_type_392 = None
    unsqueeze_1270: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1269, -1);  unsqueeze_1269 = None
    unsqueeze_1271: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_523, -1);  mul_523 = None
    unsqueeze_1272: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1271, -1);  unsqueeze_1271 = None
    sub_157: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_157, unsqueeze_1270);  convolution_157 = unsqueeze_1270 = None
    mul_524: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_157, unsqueeze_1272);  sub_157 = unsqueeze_1272 = None
    unsqueeze_1273: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg472_1, -1);  arg472_1 = None
    unsqueeze_1274: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1273, -1);  unsqueeze_1273 = None
    mul_525: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_524, unsqueeze_1274);  mul_524 = unsqueeze_1274 = None
    unsqueeze_1275: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg473_1, -1);  arg473_1 = None
    unsqueeze_1276: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1275, -1);  unsqueeze_1275 = None
    add_451: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_525, unsqueeze_1276);  mul_525 = unsqueeze_1276 = None
    relu_145: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_451);  add_451 = None
    convolution_158: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_145, arg474_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_145 = arg474_1 = None
    convert_element_type_394: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1455_1, torch.float32);  arg1455_1 = None
    convert_element_type_395: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1456_1, torch.float32);  arg1456_1 = None
    add_452: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_395, 1e-05);  convert_element_type_395 = None
    sqrt_158: "f32[72]" = torch.ops.aten.sqrt.default(add_452);  add_452 = None
    reciprocal_158: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_158);  sqrt_158 = None
    mul_526: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_158, 1);  reciprocal_158 = None
    unsqueeze_1277: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_394, -1);  convert_element_type_394 = None
    unsqueeze_1278: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1277, -1);  unsqueeze_1277 = None
    unsqueeze_1279: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_526, -1);  mul_526 = None
    unsqueeze_1280: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1279, -1);  unsqueeze_1279 = None
    sub_158: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_158, unsqueeze_1278);  convolution_158 = unsqueeze_1278 = None
    mul_527: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_158, unsqueeze_1280);  sub_158 = unsqueeze_1280 = None
    unsqueeze_1281: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg475_1, -1);  arg475_1 = None
    unsqueeze_1282: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1281, -1);  unsqueeze_1281 = None
    mul_528: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_527, unsqueeze_1282);  mul_527 = unsqueeze_1282 = None
    unsqueeze_1283: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg476_1, -1);  arg476_1 = None
    unsqueeze_1284: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1283, -1);  unsqueeze_1283 = None
    add_453: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_528, unsqueeze_1284);  mul_528 = unsqueeze_1284 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_159: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_134, arg477_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_134 = arg477_1 = None
    convert_element_type_396: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1458_1, torch.float32);  arg1458_1 = None
    convert_element_type_397: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1459_1, torch.float32);  arg1459_1 = None
    add_454: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_397, 1e-05);  convert_element_type_397 = None
    sqrt_159: "f32[72]" = torch.ops.aten.sqrt.default(add_454);  add_454 = None
    reciprocal_159: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_159);  sqrt_159 = None
    mul_529: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_159, 1);  reciprocal_159 = None
    unsqueeze_1285: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_396, -1);  convert_element_type_396 = None
    unsqueeze_1286: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1285, -1);  unsqueeze_1285 = None
    unsqueeze_1287: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_529, -1);  mul_529 = None
    unsqueeze_1288: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1287, -1);  unsqueeze_1287 = None
    sub_159: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_159, unsqueeze_1286);  convolution_159 = unsqueeze_1286 = None
    mul_530: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_159, unsqueeze_1288);  sub_159 = unsqueeze_1288 = None
    unsqueeze_1289: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg478_1, -1);  arg478_1 = None
    unsqueeze_1290: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1289, -1);  unsqueeze_1289 = None
    mul_531: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_530, unsqueeze_1290);  mul_530 = unsqueeze_1290 = None
    unsqueeze_1291: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg479_1, -1);  arg479_1 = None
    unsqueeze_1292: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1291, -1);  unsqueeze_1291 = None
    add_455: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_531, unsqueeze_1292);  mul_531 = unsqueeze_1292 = None
    add_456: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_453, add_455);  add_453 = add_455 = None
    add_457: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_456, relu_142);  add_456 = relu_142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_146: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_457);  add_457 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:756, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition3)]
    convolution_160: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_146, arg480_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg480_1 = None
    convert_element_type_398: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1461_1, torch.float32);  arg1461_1 = None
    convert_element_type_399: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1462_1, torch.float32);  arg1462_1 = None
    add_458: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_399, 1e-05);  convert_element_type_399 = None
    sqrt_160: "f32[144]" = torch.ops.aten.sqrt.default(add_458);  add_458 = None
    reciprocal_160: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_160);  sqrt_160 = None
    mul_532: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_160, 1);  reciprocal_160 = None
    unsqueeze_1293: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_398, -1);  convert_element_type_398 = None
    unsqueeze_1294: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1293, -1);  unsqueeze_1293 = None
    unsqueeze_1295: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_532, -1);  mul_532 = None
    unsqueeze_1296: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1295, -1);  unsqueeze_1295 = None
    sub_160: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_160, unsqueeze_1294);  convolution_160 = unsqueeze_1294 = None
    mul_533: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_160, unsqueeze_1296);  sub_160 = unsqueeze_1296 = None
    unsqueeze_1297: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg481_1, -1);  arg481_1 = None
    unsqueeze_1298: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1297, -1);  unsqueeze_1297 = None
    mul_534: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_533, unsqueeze_1298);  mul_533 = unsqueeze_1298 = None
    unsqueeze_1299: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg482_1, -1);  arg482_1 = None
    unsqueeze_1300: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1299, -1);  unsqueeze_1299 = None
    add_459: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_534, unsqueeze_1300);  mul_534 = unsqueeze_1300 = None
    relu_147: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_459);  add_459 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_161: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_143, arg483_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg483_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_400: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1464_1, torch.float32);  arg1464_1 = None
    convert_element_type_401: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1465_1, torch.float32);  arg1465_1 = None
    add_460: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_401, 1e-05);  convert_element_type_401 = None
    sqrt_161: "f32[18]" = torch.ops.aten.sqrt.default(add_460);  add_460 = None
    reciprocal_161: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_161);  sqrt_161 = None
    mul_535: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_161, 1);  reciprocal_161 = None
    unsqueeze_1301: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_400, -1);  convert_element_type_400 = None
    unsqueeze_1302: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1301, -1);  unsqueeze_1301 = None
    unsqueeze_1303: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_535, -1);  mul_535 = None
    unsqueeze_1304: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1303, -1);  unsqueeze_1303 = None
    sub_161: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_161, unsqueeze_1302);  convolution_161 = unsqueeze_1302 = None
    mul_536: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_161, unsqueeze_1304);  sub_161 = unsqueeze_1304 = None
    unsqueeze_1305: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg484_1, -1);  arg484_1 = None
    unsqueeze_1306: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1305, -1);  unsqueeze_1305 = None
    mul_537: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_536, unsqueeze_1306);  mul_536 = unsqueeze_1306 = None
    unsqueeze_1307: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg485_1, -1);  arg485_1 = None
    unsqueeze_1308: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1307, -1);  unsqueeze_1307 = None
    add_461: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_537, unsqueeze_1308);  mul_537 = unsqueeze_1308 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_148: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_461);  add_461 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_162: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_148, arg486_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_148 = arg486_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_402: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1467_1, torch.float32);  arg1467_1 = None
    convert_element_type_403: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1468_1, torch.float32);  arg1468_1 = None
    add_462: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_403, 1e-05);  convert_element_type_403 = None
    sqrt_162: "f32[18]" = torch.ops.aten.sqrt.default(add_462);  add_462 = None
    reciprocal_162: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_162);  sqrt_162 = None
    mul_538: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_162, 1);  reciprocal_162 = None
    unsqueeze_1309: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_402, -1);  convert_element_type_402 = None
    unsqueeze_1310: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1309, -1);  unsqueeze_1309 = None
    unsqueeze_1311: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_538, -1);  mul_538 = None
    unsqueeze_1312: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1311, -1);  unsqueeze_1311 = None
    sub_162: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_162, unsqueeze_1310);  convolution_162 = unsqueeze_1310 = None
    mul_539: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_162, unsqueeze_1312);  sub_162 = unsqueeze_1312 = None
    unsqueeze_1313: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg487_1, -1);  arg487_1 = None
    unsqueeze_1314: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1313, -1);  unsqueeze_1313 = None
    mul_540: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_539, unsqueeze_1314);  mul_539 = unsqueeze_1314 = None
    unsqueeze_1315: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg488_1, -1);  arg488_1 = None
    unsqueeze_1316: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1315, -1);  unsqueeze_1315 = None
    add_463: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_540, unsqueeze_1316);  mul_540 = unsqueeze_1316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_464: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_463, relu_143);  add_463 = relu_143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_149: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_464);  add_464 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_163: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_149, arg489_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg489_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_404: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1470_1, torch.float32);  arg1470_1 = None
    convert_element_type_405: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1471_1, torch.float32);  arg1471_1 = None
    add_465: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_405, 1e-05);  convert_element_type_405 = None
    sqrt_163: "f32[18]" = torch.ops.aten.sqrt.default(add_465);  add_465 = None
    reciprocal_163: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_163);  sqrt_163 = None
    mul_541: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_163, 1);  reciprocal_163 = None
    unsqueeze_1317: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_404, -1);  convert_element_type_404 = None
    unsqueeze_1318: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1317, -1);  unsqueeze_1317 = None
    unsqueeze_1319: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_541, -1);  mul_541 = None
    unsqueeze_1320: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1319, -1);  unsqueeze_1319 = None
    sub_163: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_163, unsqueeze_1318);  convolution_163 = unsqueeze_1318 = None
    mul_542: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_163, unsqueeze_1320);  sub_163 = unsqueeze_1320 = None
    unsqueeze_1321: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg490_1, -1);  arg490_1 = None
    unsqueeze_1322: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1321, -1);  unsqueeze_1321 = None
    mul_543: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_542, unsqueeze_1322);  mul_542 = unsqueeze_1322 = None
    unsqueeze_1323: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg491_1, -1);  arg491_1 = None
    unsqueeze_1324: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1323, -1);  unsqueeze_1323 = None
    add_466: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_543, unsqueeze_1324);  mul_543 = unsqueeze_1324 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_150: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_466);  add_466 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_164: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_150, arg492_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_150 = arg492_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_406: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1473_1, torch.float32);  arg1473_1 = None
    convert_element_type_407: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1474_1, torch.float32);  arg1474_1 = None
    add_467: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_407, 1e-05);  convert_element_type_407 = None
    sqrt_164: "f32[18]" = torch.ops.aten.sqrt.default(add_467);  add_467 = None
    reciprocal_164: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_164);  sqrt_164 = None
    mul_544: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_164, 1);  reciprocal_164 = None
    unsqueeze_1325: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_406, -1);  convert_element_type_406 = None
    unsqueeze_1326: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1325, -1);  unsqueeze_1325 = None
    unsqueeze_1327: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_544, -1);  mul_544 = None
    unsqueeze_1328: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1327, -1);  unsqueeze_1327 = None
    sub_164: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_164, unsqueeze_1326);  convolution_164 = unsqueeze_1326 = None
    mul_545: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_164, unsqueeze_1328);  sub_164 = unsqueeze_1328 = None
    unsqueeze_1329: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg493_1, -1);  arg493_1 = None
    unsqueeze_1330: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1329, -1);  unsqueeze_1329 = None
    mul_546: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_545, unsqueeze_1330);  mul_545 = unsqueeze_1330 = None
    unsqueeze_1331: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg494_1, -1);  arg494_1 = None
    unsqueeze_1332: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1331, -1);  unsqueeze_1331 = None
    add_468: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_546, unsqueeze_1332);  mul_546 = unsqueeze_1332 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_469: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_468, relu_149);  add_468 = relu_149 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_151: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_469);  add_469 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_165: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_151, arg495_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg495_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_408: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1476_1, torch.float32);  arg1476_1 = None
    convert_element_type_409: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1477_1, torch.float32);  arg1477_1 = None
    add_470: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_409, 1e-05);  convert_element_type_409 = None
    sqrt_165: "f32[18]" = torch.ops.aten.sqrt.default(add_470);  add_470 = None
    reciprocal_165: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_165);  sqrt_165 = None
    mul_547: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_165, 1);  reciprocal_165 = None
    unsqueeze_1333: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_408, -1);  convert_element_type_408 = None
    unsqueeze_1334: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1333, -1);  unsqueeze_1333 = None
    unsqueeze_1335: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_547, -1);  mul_547 = None
    unsqueeze_1336: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1335, -1);  unsqueeze_1335 = None
    sub_165: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_165, unsqueeze_1334);  convolution_165 = unsqueeze_1334 = None
    mul_548: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_165, unsqueeze_1336);  sub_165 = unsqueeze_1336 = None
    unsqueeze_1337: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg496_1, -1);  arg496_1 = None
    unsqueeze_1338: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1337, -1);  unsqueeze_1337 = None
    mul_549: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_548, unsqueeze_1338);  mul_548 = unsqueeze_1338 = None
    unsqueeze_1339: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg497_1, -1);  arg497_1 = None
    unsqueeze_1340: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1339, -1);  unsqueeze_1339 = None
    add_471: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_549, unsqueeze_1340);  mul_549 = unsqueeze_1340 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_152: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_471);  add_471 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_166: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_152, arg498_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_152 = arg498_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_410: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1479_1, torch.float32);  arg1479_1 = None
    convert_element_type_411: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1480_1, torch.float32);  arg1480_1 = None
    add_472: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_411, 1e-05);  convert_element_type_411 = None
    sqrt_166: "f32[18]" = torch.ops.aten.sqrt.default(add_472);  add_472 = None
    reciprocal_166: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_166);  sqrt_166 = None
    mul_550: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_166, 1);  reciprocal_166 = None
    unsqueeze_1341: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_410, -1);  convert_element_type_410 = None
    unsqueeze_1342: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1341, -1);  unsqueeze_1341 = None
    unsqueeze_1343: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_550, -1);  mul_550 = None
    unsqueeze_1344: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1343, -1);  unsqueeze_1343 = None
    sub_166: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_166, unsqueeze_1342);  convolution_166 = unsqueeze_1342 = None
    mul_551: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_166, unsqueeze_1344);  sub_166 = unsqueeze_1344 = None
    unsqueeze_1345: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg499_1, -1);  arg499_1 = None
    unsqueeze_1346: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1345, -1);  unsqueeze_1345 = None
    mul_552: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_551, unsqueeze_1346);  mul_551 = unsqueeze_1346 = None
    unsqueeze_1347: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg500_1, -1);  arg500_1 = None
    unsqueeze_1348: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1347, -1);  unsqueeze_1347 = None
    add_473: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_552, unsqueeze_1348);  mul_552 = unsqueeze_1348 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_474: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_473, relu_151);  add_473 = relu_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_153: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_474);  add_474 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_167: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_153, arg501_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg501_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_412: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1482_1, torch.float32);  arg1482_1 = None
    convert_element_type_413: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1483_1, torch.float32);  arg1483_1 = None
    add_475: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_413, 1e-05);  convert_element_type_413 = None
    sqrt_167: "f32[18]" = torch.ops.aten.sqrt.default(add_475);  add_475 = None
    reciprocal_167: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_167);  sqrt_167 = None
    mul_553: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_167, 1);  reciprocal_167 = None
    unsqueeze_1349: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_412, -1);  convert_element_type_412 = None
    unsqueeze_1350: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1349, -1);  unsqueeze_1349 = None
    unsqueeze_1351: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_553, -1);  mul_553 = None
    unsqueeze_1352: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1351, -1);  unsqueeze_1351 = None
    sub_167: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_167, unsqueeze_1350);  convolution_167 = unsqueeze_1350 = None
    mul_554: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_167, unsqueeze_1352);  sub_167 = unsqueeze_1352 = None
    unsqueeze_1353: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg502_1, -1);  arg502_1 = None
    unsqueeze_1354: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1353, -1);  unsqueeze_1353 = None
    mul_555: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_554, unsqueeze_1354);  mul_554 = unsqueeze_1354 = None
    unsqueeze_1355: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg503_1, -1);  arg503_1 = None
    unsqueeze_1356: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1355, -1);  unsqueeze_1355 = None
    add_476: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_555, unsqueeze_1356);  mul_555 = unsqueeze_1356 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_154: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_476);  add_476 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_168: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_154, arg504_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_154 = arg504_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_414: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1485_1, torch.float32);  arg1485_1 = None
    convert_element_type_415: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1486_1, torch.float32);  arg1486_1 = None
    add_477: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_415, 1e-05);  convert_element_type_415 = None
    sqrt_168: "f32[18]" = torch.ops.aten.sqrt.default(add_477);  add_477 = None
    reciprocal_168: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_168);  sqrt_168 = None
    mul_556: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_168, 1);  reciprocal_168 = None
    unsqueeze_1357: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_414, -1);  convert_element_type_414 = None
    unsqueeze_1358: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1357, -1);  unsqueeze_1357 = None
    unsqueeze_1359: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_556, -1);  mul_556 = None
    unsqueeze_1360: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1359, -1);  unsqueeze_1359 = None
    sub_168: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_168, unsqueeze_1358);  convolution_168 = unsqueeze_1358 = None
    mul_557: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_168, unsqueeze_1360);  sub_168 = unsqueeze_1360 = None
    unsqueeze_1361: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg505_1, -1);  arg505_1 = None
    unsqueeze_1362: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1361, -1);  unsqueeze_1361 = None
    mul_558: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_557, unsqueeze_1362);  mul_557 = unsqueeze_1362 = None
    unsqueeze_1363: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg506_1, -1);  arg506_1 = None
    unsqueeze_1364: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1363, -1);  unsqueeze_1363 = None
    add_478: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_558, unsqueeze_1364);  mul_558 = unsqueeze_1364 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_479: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_478, relu_153);  add_478 = relu_153 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_155: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_479);  add_479 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_169: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_144, arg507_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg507_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_416: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1488_1, torch.float32);  arg1488_1 = None
    convert_element_type_417: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1489_1, torch.float32);  arg1489_1 = None
    add_480: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_417, 1e-05);  convert_element_type_417 = None
    sqrt_169: "f32[36]" = torch.ops.aten.sqrt.default(add_480);  add_480 = None
    reciprocal_169: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_169);  sqrt_169 = None
    mul_559: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_169, 1);  reciprocal_169 = None
    unsqueeze_1365: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_416, -1);  convert_element_type_416 = None
    unsqueeze_1366: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1365, -1);  unsqueeze_1365 = None
    unsqueeze_1367: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_559, -1);  mul_559 = None
    unsqueeze_1368: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1367, -1);  unsqueeze_1367 = None
    sub_169: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_169, unsqueeze_1366);  convolution_169 = unsqueeze_1366 = None
    mul_560: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_169, unsqueeze_1368);  sub_169 = unsqueeze_1368 = None
    unsqueeze_1369: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg508_1, -1);  arg508_1 = None
    unsqueeze_1370: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1369, -1);  unsqueeze_1369 = None
    mul_561: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_560, unsqueeze_1370);  mul_560 = unsqueeze_1370 = None
    unsqueeze_1371: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg509_1, -1);  arg509_1 = None
    unsqueeze_1372: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1371, -1);  unsqueeze_1371 = None
    add_481: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_561, unsqueeze_1372);  mul_561 = unsqueeze_1372 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_156: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_481);  add_481 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_170: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_156, arg510_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_156 = arg510_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_418: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1491_1, torch.float32);  arg1491_1 = None
    convert_element_type_419: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1492_1, torch.float32);  arg1492_1 = None
    add_482: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_419, 1e-05);  convert_element_type_419 = None
    sqrt_170: "f32[36]" = torch.ops.aten.sqrt.default(add_482);  add_482 = None
    reciprocal_170: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_170);  sqrt_170 = None
    mul_562: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_170, 1);  reciprocal_170 = None
    unsqueeze_1373: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_418, -1);  convert_element_type_418 = None
    unsqueeze_1374: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1373, -1);  unsqueeze_1373 = None
    unsqueeze_1375: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_562, -1);  mul_562 = None
    unsqueeze_1376: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1375, -1);  unsqueeze_1375 = None
    sub_170: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_170, unsqueeze_1374);  convolution_170 = unsqueeze_1374 = None
    mul_563: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_170, unsqueeze_1376);  sub_170 = unsqueeze_1376 = None
    unsqueeze_1377: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg511_1, -1);  arg511_1 = None
    unsqueeze_1378: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1377, -1);  unsqueeze_1377 = None
    mul_564: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_563, unsqueeze_1378);  mul_563 = unsqueeze_1378 = None
    unsqueeze_1379: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg512_1, -1);  arg512_1 = None
    unsqueeze_1380: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1379, -1);  unsqueeze_1379 = None
    add_483: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_564, unsqueeze_1380);  mul_564 = unsqueeze_1380 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_484: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_483, relu_144);  add_483 = relu_144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_157: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_484);  add_484 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_171: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_157, arg513_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg513_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_420: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1494_1, torch.float32);  arg1494_1 = None
    convert_element_type_421: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1495_1, torch.float32);  arg1495_1 = None
    add_485: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_421, 1e-05);  convert_element_type_421 = None
    sqrt_171: "f32[36]" = torch.ops.aten.sqrt.default(add_485);  add_485 = None
    reciprocal_171: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_171);  sqrt_171 = None
    mul_565: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_171, 1);  reciprocal_171 = None
    unsqueeze_1381: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_420, -1);  convert_element_type_420 = None
    unsqueeze_1382: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1381, -1);  unsqueeze_1381 = None
    unsqueeze_1383: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_565, -1);  mul_565 = None
    unsqueeze_1384: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1383, -1);  unsqueeze_1383 = None
    sub_171: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_171, unsqueeze_1382);  convolution_171 = unsqueeze_1382 = None
    mul_566: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_171, unsqueeze_1384);  sub_171 = unsqueeze_1384 = None
    unsqueeze_1385: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg514_1, -1);  arg514_1 = None
    unsqueeze_1386: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1385, -1);  unsqueeze_1385 = None
    mul_567: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_566, unsqueeze_1386);  mul_566 = unsqueeze_1386 = None
    unsqueeze_1387: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg515_1, -1);  arg515_1 = None
    unsqueeze_1388: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1387, -1);  unsqueeze_1387 = None
    add_486: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_567, unsqueeze_1388);  mul_567 = unsqueeze_1388 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_158: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_486);  add_486 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_172: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_158, arg516_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_158 = arg516_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_422: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1497_1, torch.float32);  arg1497_1 = None
    convert_element_type_423: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1498_1, torch.float32);  arg1498_1 = None
    add_487: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_423, 1e-05);  convert_element_type_423 = None
    sqrt_172: "f32[36]" = torch.ops.aten.sqrt.default(add_487);  add_487 = None
    reciprocal_172: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_172);  sqrt_172 = None
    mul_568: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_172, 1);  reciprocal_172 = None
    unsqueeze_1389: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_422, -1);  convert_element_type_422 = None
    unsqueeze_1390: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1389, -1);  unsqueeze_1389 = None
    unsqueeze_1391: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_568, -1);  mul_568 = None
    unsqueeze_1392: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1391, -1);  unsqueeze_1391 = None
    sub_172: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_172, unsqueeze_1390);  convolution_172 = unsqueeze_1390 = None
    mul_569: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_172, unsqueeze_1392);  sub_172 = unsqueeze_1392 = None
    unsqueeze_1393: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg517_1, -1);  arg517_1 = None
    unsqueeze_1394: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1393, -1);  unsqueeze_1393 = None
    mul_570: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_569, unsqueeze_1394);  mul_569 = unsqueeze_1394 = None
    unsqueeze_1395: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg518_1, -1);  arg518_1 = None
    unsqueeze_1396: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1395, -1);  unsqueeze_1395 = None
    add_488: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_570, unsqueeze_1396);  mul_570 = unsqueeze_1396 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_489: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_488, relu_157);  add_488 = relu_157 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_159: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_489);  add_489 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_173: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_159, arg519_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg519_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_424: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1500_1, torch.float32);  arg1500_1 = None
    convert_element_type_425: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1501_1, torch.float32);  arg1501_1 = None
    add_490: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_425, 1e-05);  convert_element_type_425 = None
    sqrt_173: "f32[36]" = torch.ops.aten.sqrt.default(add_490);  add_490 = None
    reciprocal_173: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_173);  sqrt_173 = None
    mul_571: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_173, 1);  reciprocal_173 = None
    unsqueeze_1397: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_424, -1);  convert_element_type_424 = None
    unsqueeze_1398: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1397, -1);  unsqueeze_1397 = None
    unsqueeze_1399: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_571, -1);  mul_571 = None
    unsqueeze_1400: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1399, -1);  unsqueeze_1399 = None
    sub_173: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_173, unsqueeze_1398);  convolution_173 = unsqueeze_1398 = None
    mul_572: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_173, unsqueeze_1400);  sub_173 = unsqueeze_1400 = None
    unsqueeze_1401: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg520_1, -1);  arg520_1 = None
    unsqueeze_1402: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1401, -1);  unsqueeze_1401 = None
    mul_573: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_572, unsqueeze_1402);  mul_572 = unsqueeze_1402 = None
    unsqueeze_1403: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg521_1, -1);  arg521_1 = None
    unsqueeze_1404: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1403, -1);  unsqueeze_1403 = None
    add_491: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_573, unsqueeze_1404);  mul_573 = unsqueeze_1404 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_160: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_491);  add_491 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_174: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_160, arg522_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_160 = arg522_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_426: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1503_1, torch.float32);  arg1503_1 = None
    convert_element_type_427: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1504_1, torch.float32);  arg1504_1 = None
    add_492: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_427, 1e-05);  convert_element_type_427 = None
    sqrt_174: "f32[36]" = torch.ops.aten.sqrt.default(add_492);  add_492 = None
    reciprocal_174: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_174);  sqrt_174 = None
    mul_574: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_174, 1);  reciprocal_174 = None
    unsqueeze_1405: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_426, -1);  convert_element_type_426 = None
    unsqueeze_1406: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1405, -1);  unsqueeze_1405 = None
    unsqueeze_1407: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_574, -1);  mul_574 = None
    unsqueeze_1408: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1407, -1);  unsqueeze_1407 = None
    sub_174: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_174, unsqueeze_1406);  convolution_174 = unsqueeze_1406 = None
    mul_575: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_174, unsqueeze_1408);  sub_174 = unsqueeze_1408 = None
    unsqueeze_1409: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg523_1, -1);  arg523_1 = None
    unsqueeze_1410: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1409, -1);  unsqueeze_1409 = None
    mul_576: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_575, unsqueeze_1410);  mul_575 = unsqueeze_1410 = None
    unsqueeze_1411: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg524_1, -1);  arg524_1 = None
    unsqueeze_1412: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1411, -1);  unsqueeze_1411 = None
    add_493: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_576, unsqueeze_1412);  mul_576 = unsqueeze_1412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_494: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_493, relu_159);  add_493 = relu_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_161: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_494);  add_494 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_175: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_161, arg525_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg525_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_428: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1506_1, torch.float32);  arg1506_1 = None
    convert_element_type_429: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1507_1, torch.float32);  arg1507_1 = None
    add_495: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_429, 1e-05);  convert_element_type_429 = None
    sqrt_175: "f32[36]" = torch.ops.aten.sqrt.default(add_495);  add_495 = None
    reciprocal_175: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_175);  sqrt_175 = None
    mul_577: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_175, 1);  reciprocal_175 = None
    unsqueeze_1413: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_428, -1);  convert_element_type_428 = None
    unsqueeze_1414: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1413, -1);  unsqueeze_1413 = None
    unsqueeze_1415: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_577, -1);  mul_577 = None
    unsqueeze_1416: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1415, -1);  unsqueeze_1415 = None
    sub_175: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_175, unsqueeze_1414);  convolution_175 = unsqueeze_1414 = None
    mul_578: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_175, unsqueeze_1416);  sub_175 = unsqueeze_1416 = None
    unsqueeze_1417: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg526_1, -1);  arg526_1 = None
    unsqueeze_1418: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1417, -1);  unsqueeze_1417 = None
    mul_579: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_578, unsqueeze_1418);  mul_578 = unsqueeze_1418 = None
    unsqueeze_1419: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg527_1, -1);  arg527_1 = None
    unsqueeze_1420: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1419, -1);  unsqueeze_1419 = None
    add_496: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_579, unsqueeze_1420);  mul_579 = unsqueeze_1420 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_162: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_496);  add_496 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_176: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_162, arg528_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_162 = arg528_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_430: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1509_1, torch.float32);  arg1509_1 = None
    convert_element_type_431: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1510_1, torch.float32);  arg1510_1 = None
    add_497: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_431, 1e-05);  convert_element_type_431 = None
    sqrt_176: "f32[36]" = torch.ops.aten.sqrt.default(add_497);  add_497 = None
    reciprocal_176: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_176);  sqrt_176 = None
    mul_580: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_176, 1);  reciprocal_176 = None
    unsqueeze_1421: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_430, -1);  convert_element_type_430 = None
    unsqueeze_1422: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1421, -1);  unsqueeze_1421 = None
    unsqueeze_1423: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_580, -1);  mul_580 = None
    unsqueeze_1424: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1423, -1);  unsqueeze_1423 = None
    sub_176: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_176, unsqueeze_1422);  convolution_176 = unsqueeze_1422 = None
    mul_581: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_176, unsqueeze_1424);  sub_176 = unsqueeze_1424 = None
    unsqueeze_1425: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg529_1, -1);  arg529_1 = None
    unsqueeze_1426: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1425, -1);  unsqueeze_1425 = None
    mul_582: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_581, unsqueeze_1426);  mul_581 = unsqueeze_1426 = None
    unsqueeze_1427: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg530_1, -1);  arg530_1 = None
    unsqueeze_1428: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1427, -1);  unsqueeze_1427 = None
    add_498: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_582, unsqueeze_1428);  mul_582 = unsqueeze_1428 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_499: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_498, relu_161);  add_498 = relu_161 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_163: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_499);  add_499 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_177: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_146, arg531_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg531_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_432: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1512_1, torch.float32);  arg1512_1 = None
    convert_element_type_433: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1513_1, torch.float32);  arg1513_1 = None
    add_500: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_433, 1e-05);  convert_element_type_433 = None
    sqrt_177: "f32[72]" = torch.ops.aten.sqrt.default(add_500);  add_500 = None
    reciprocal_177: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_177);  sqrt_177 = None
    mul_583: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_177, 1);  reciprocal_177 = None
    unsqueeze_1429: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_432, -1);  convert_element_type_432 = None
    unsqueeze_1430: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1429, -1);  unsqueeze_1429 = None
    unsqueeze_1431: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_583, -1);  mul_583 = None
    unsqueeze_1432: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1431, -1);  unsqueeze_1431 = None
    sub_177: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_177, unsqueeze_1430);  convolution_177 = unsqueeze_1430 = None
    mul_584: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_177, unsqueeze_1432);  sub_177 = unsqueeze_1432 = None
    unsqueeze_1433: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg532_1, -1);  arg532_1 = None
    unsqueeze_1434: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1433, -1);  unsqueeze_1433 = None
    mul_585: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_584, unsqueeze_1434);  mul_584 = unsqueeze_1434 = None
    unsqueeze_1435: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg533_1, -1);  arg533_1 = None
    unsqueeze_1436: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1435, -1);  unsqueeze_1435 = None
    add_501: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_585, unsqueeze_1436);  mul_585 = unsqueeze_1436 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_164: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_501);  add_501 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_178: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_164, arg534_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_164 = arg534_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_434: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1515_1, torch.float32);  arg1515_1 = None
    convert_element_type_435: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1516_1, torch.float32);  arg1516_1 = None
    add_502: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_435, 1e-05);  convert_element_type_435 = None
    sqrt_178: "f32[72]" = torch.ops.aten.sqrt.default(add_502);  add_502 = None
    reciprocal_178: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_178);  sqrt_178 = None
    mul_586: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_178, 1);  reciprocal_178 = None
    unsqueeze_1437: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_434, -1);  convert_element_type_434 = None
    unsqueeze_1438: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1437, -1);  unsqueeze_1437 = None
    unsqueeze_1439: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_586, -1);  mul_586 = None
    unsqueeze_1440: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1439, -1);  unsqueeze_1439 = None
    sub_178: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_178, unsqueeze_1438);  convolution_178 = unsqueeze_1438 = None
    mul_587: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_178, unsqueeze_1440);  sub_178 = unsqueeze_1440 = None
    unsqueeze_1441: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg535_1, -1);  arg535_1 = None
    unsqueeze_1442: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1441, -1);  unsqueeze_1441 = None
    mul_588: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_587, unsqueeze_1442);  mul_587 = unsqueeze_1442 = None
    unsqueeze_1443: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg536_1, -1);  arg536_1 = None
    unsqueeze_1444: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1443, -1);  unsqueeze_1443 = None
    add_503: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_588, unsqueeze_1444);  mul_588 = unsqueeze_1444 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_504: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_503, relu_146);  add_503 = relu_146 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_165: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_504);  add_504 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_179: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_165, arg537_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg537_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_436: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1518_1, torch.float32);  arg1518_1 = None
    convert_element_type_437: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1519_1, torch.float32);  arg1519_1 = None
    add_505: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_437, 1e-05);  convert_element_type_437 = None
    sqrt_179: "f32[72]" = torch.ops.aten.sqrt.default(add_505);  add_505 = None
    reciprocal_179: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_179);  sqrt_179 = None
    mul_589: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_179, 1);  reciprocal_179 = None
    unsqueeze_1445: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_436, -1);  convert_element_type_436 = None
    unsqueeze_1446: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1445, -1);  unsqueeze_1445 = None
    unsqueeze_1447: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_589, -1);  mul_589 = None
    unsqueeze_1448: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1447, -1);  unsqueeze_1447 = None
    sub_179: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_179, unsqueeze_1446);  convolution_179 = unsqueeze_1446 = None
    mul_590: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_179, unsqueeze_1448);  sub_179 = unsqueeze_1448 = None
    unsqueeze_1449: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg538_1, -1);  arg538_1 = None
    unsqueeze_1450: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1449, -1);  unsqueeze_1449 = None
    mul_591: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_590, unsqueeze_1450);  mul_590 = unsqueeze_1450 = None
    unsqueeze_1451: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg539_1, -1);  arg539_1 = None
    unsqueeze_1452: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1451, -1);  unsqueeze_1451 = None
    add_506: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_591, unsqueeze_1452);  mul_591 = unsqueeze_1452 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_166: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_506);  add_506 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_180: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_166, arg540_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_166 = arg540_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_438: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1521_1, torch.float32);  arg1521_1 = None
    convert_element_type_439: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1522_1, torch.float32);  arg1522_1 = None
    add_507: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_439, 1e-05);  convert_element_type_439 = None
    sqrt_180: "f32[72]" = torch.ops.aten.sqrt.default(add_507);  add_507 = None
    reciprocal_180: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_180);  sqrt_180 = None
    mul_592: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_180, 1);  reciprocal_180 = None
    unsqueeze_1453: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_438, -1);  convert_element_type_438 = None
    unsqueeze_1454: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1453, -1);  unsqueeze_1453 = None
    unsqueeze_1455: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_592, -1);  mul_592 = None
    unsqueeze_1456: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1455, -1);  unsqueeze_1455 = None
    sub_180: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_180, unsqueeze_1454);  convolution_180 = unsqueeze_1454 = None
    mul_593: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_180, unsqueeze_1456);  sub_180 = unsqueeze_1456 = None
    unsqueeze_1457: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg541_1, -1);  arg541_1 = None
    unsqueeze_1458: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1457, -1);  unsqueeze_1457 = None
    mul_594: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_593, unsqueeze_1458);  mul_593 = unsqueeze_1458 = None
    unsqueeze_1459: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg542_1, -1);  arg542_1 = None
    unsqueeze_1460: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1459, -1);  unsqueeze_1459 = None
    add_508: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_594, unsqueeze_1460);  mul_594 = unsqueeze_1460 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_509: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_508, relu_165);  add_508 = relu_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_167: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_509);  add_509 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_181: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_167, arg543_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg543_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_440: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1524_1, torch.float32);  arg1524_1 = None
    convert_element_type_441: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1525_1, torch.float32);  arg1525_1 = None
    add_510: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_441, 1e-05);  convert_element_type_441 = None
    sqrt_181: "f32[72]" = torch.ops.aten.sqrt.default(add_510);  add_510 = None
    reciprocal_181: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_181);  sqrt_181 = None
    mul_595: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_181, 1);  reciprocal_181 = None
    unsqueeze_1461: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_440, -1);  convert_element_type_440 = None
    unsqueeze_1462: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1461, -1);  unsqueeze_1461 = None
    unsqueeze_1463: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_595, -1);  mul_595 = None
    unsqueeze_1464: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1463, -1);  unsqueeze_1463 = None
    sub_181: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_181, unsqueeze_1462);  convolution_181 = unsqueeze_1462 = None
    mul_596: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_181, unsqueeze_1464);  sub_181 = unsqueeze_1464 = None
    unsqueeze_1465: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg544_1, -1);  arg544_1 = None
    unsqueeze_1466: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1465, -1);  unsqueeze_1465 = None
    mul_597: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_596, unsqueeze_1466);  mul_596 = unsqueeze_1466 = None
    unsqueeze_1467: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg545_1, -1);  arg545_1 = None
    unsqueeze_1468: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1467, -1);  unsqueeze_1467 = None
    add_511: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_597, unsqueeze_1468);  mul_597 = unsqueeze_1468 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_168: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_511);  add_511 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_182: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_168, arg546_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_168 = arg546_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_442: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1527_1, torch.float32);  arg1527_1 = None
    convert_element_type_443: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1528_1, torch.float32);  arg1528_1 = None
    add_512: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_443, 1e-05);  convert_element_type_443 = None
    sqrt_182: "f32[72]" = torch.ops.aten.sqrt.default(add_512);  add_512 = None
    reciprocal_182: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_182);  sqrt_182 = None
    mul_598: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_182, 1);  reciprocal_182 = None
    unsqueeze_1469: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_442, -1);  convert_element_type_442 = None
    unsqueeze_1470: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1469, -1);  unsqueeze_1469 = None
    unsqueeze_1471: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_598, -1);  mul_598 = None
    unsqueeze_1472: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1471, -1);  unsqueeze_1471 = None
    sub_182: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_182, unsqueeze_1470);  convolution_182 = unsqueeze_1470 = None
    mul_599: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_182, unsqueeze_1472);  sub_182 = unsqueeze_1472 = None
    unsqueeze_1473: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg547_1, -1);  arg547_1 = None
    unsqueeze_1474: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1473, -1);  unsqueeze_1473 = None
    mul_600: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_599, unsqueeze_1474);  mul_599 = unsqueeze_1474 = None
    unsqueeze_1475: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg548_1, -1);  arg548_1 = None
    unsqueeze_1476: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1475, -1);  unsqueeze_1475 = None
    add_513: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_600, unsqueeze_1476);  mul_600 = unsqueeze_1476 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_514: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_513, relu_167);  add_513 = relu_167 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_169: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_514);  add_514 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_183: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_169, arg549_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg549_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_444: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1530_1, torch.float32);  arg1530_1 = None
    convert_element_type_445: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1531_1, torch.float32);  arg1531_1 = None
    add_515: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_445, 1e-05);  convert_element_type_445 = None
    sqrt_183: "f32[72]" = torch.ops.aten.sqrt.default(add_515);  add_515 = None
    reciprocal_183: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_183);  sqrt_183 = None
    mul_601: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_183, 1);  reciprocal_183 = None
    unsqueeze_1477: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_444, -1);  convert_element_type_444 = None
    unsqueeze_1478: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1477, -1);  unsqueeze_1477 = None
    unsqueeze_1479: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_601, -1);  mul_601 = None
    unsqueeze_1480: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1479, -1);  unsqueeze_1479 = None
    sub_183: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_183, unsqueeze_1478);  convolution_183 = unsqueeze_1478 = None
    mul_602: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_183, unsqueeze_1480);  sub_183 = unsqueeze_1480 = None
    unsqueeze_1481: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg550_1, -1);  arg550_1 = None
    unsqueeze_1482: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1481, -1);  unsqueeze_1481 = None
    mul_603: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_602, unsqueeze_1482);  mul_602 = unsqueeze_1482 = None
    unsqueeze_1483: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg551_1, -1);  arg551_1 = None
    unsqueeze_1484: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1483, -1);  unsqueeze_1483 = None
    add_516: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_603, unsqueeze_1484);  mul_603 = unsqueeze_1484 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_170: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_516);  add_516 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_184: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_170, arg552_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_170 = arg552_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_446: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1533_1, torch.float32);  arg1533_1 = None
    convert_element_type_447: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1534_1, torch.float32);  arg1534_1 = None
    add_517: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_447, 1e-05);  convert_element_type_447 = None
    sqrt_184: "f32[72]" = torch.ops.aten.sqrt.default(add_517);  add_517 = None
    reciprocal_184: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_184);  sqrt_184 = None
    mul_604: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_184, 1);  reciprocal_184 = None
    unsqueeze_1485: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_446, -1);  convert_element_type_446 = None
    unsqueeze_1486: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1485, -1);  unsqueeze_1485 = None
    unsqueeze_1487: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_604, -1);  mul_604 = None
    unsqueeze_1488: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1487, -1);  unsqueeze_1487 = None
    sub_184: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_184, unsqueeze_1486);  convolution_184 = unsqueeze_1486 = None
    mul_605: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_184, unsqueeze_1488);  sub_184 = unsqueeze_1488 = None
    unsqueeze_1489: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg553_1, -1);  arg553_1 = None
    unsqueeze_1490: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1489, -1);  unsqueeze_1489 = None
    mul_606: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_605, unsqueeze_1490);  mul_605 = unsqueeze_1490 = None
    unsqueeze_1491: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg554_1, -1);  arg554_1 = None
    unsqueeze_1492: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1491, -1);  unsqueeze_1491 = None
    add_518: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_606, unsqueeze_1492);  mul_606 = unsqueeze_1492 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_519: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_518, relu_169);  add_518 = relu_169 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_171: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_519);  add_519 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_185: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_147, arg555_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg555_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_448: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1536_1, torch.float32);  arg1536_1 = None
    convert_element_type_449: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1537_1, torch.float32);  arg1537_1 = None
    add_520: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_449, 1e-05);  convert_element_type_449 = None
    sqrt_185: "f32[144]" = torch.ops.aten.sqrt.default(add_520);  add_520 = None
    reciprocal_185: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_185);  sqrt_185 = None
    mul_607: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_185, 1);  reciprocal_185 = None
    unsqueeze_1493: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_448, -1);  convert_element_type_448 = None
    unsqueeze_1494: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1493, -1);  unsqueeze_1493 = None
    unsqueeze_1495: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_607, -1);  mul_607 = None
    unsqueeze_1496: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1495, -1);  unsqueeze_1495 = None
    sub_185: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_185, unsqueeze_1494);  convolution_185 = unsqueeze_1494 = None
    mul_608: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_185, unsqueeze_1496);  sub_185 = unsqueeze_1496 = None
    unsqueeze_1497: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg556_1, -1);  arg556_1 = None
    unsqueeze_1498: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1497, -1);  unsqueeze_1497 = None
    mul_609: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_608, unsqueeze_1498);  mul_608 = unsqueeze_1498 = None
    unsqueeze_1499: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg557_1, -1);  arg557_1 = None
    unsqueeze_1500: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1499, -1);  unsqueeze_1499 = None
    add_521: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_609, unsqueeze_1500);  mul_609 = unsqueeze_1500 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_172: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_521);  add_521 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_186: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_172, arg558_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_172 = arg558_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_450: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1539_1, torch.float32);  arg1539_1 = None
    convert_element_type_451: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1540_1, torch.float32);  arg1540_1 = None
    add_522: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_451, 1e-05);  convert_element_type_451 = None
    sqrt_186: "f32[144]" = torch.ops.aten.sqrt.default(add_522);  add_522 = None
    reciprocal_186: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_186);  sqrt_186 = None
    mul_610: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_186, 1);  reciprocal_186 = None
    unsqueeze_1501: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_450, -1);  convert_element_type_450 = None
    unsqueeze_1502: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1501, -1);  unsqueeze_1501 = None
    unsqueeze_1503: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_610, -1);  mul_610 = None
    unsqueeze_1504: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1503, -1);  unsqueeze_1503 = None
    sub_186: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_186, unsqueeze_1502);  convolution_186 = unsqueeze_1502 = None
    mul_611: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_186, unsqueeze_1504);  sub_186 = unsqueeze_1504 = None
    unsqueeze_1505: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg559_1, -1);  arg559_1 = None
    unsqueeze_1506: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1505, -1);  unsqueeze_1505 = None
    mul_612: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_611, unsqueeze_1506);  mul_611 = unsqueeze_1506 = None
    unsqueeze_1507: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg560_1, -1);  arg560_1 = None
    unsqueeze_1508: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1507, -1);  unsqueeze_1507 = None
    add_523: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_612, unsqueeze_1508);  mul_612 = unsqueeze_1508 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_524: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_523, relu_147);  add_523 = relu_147 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_173: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_524);  add_524 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_187: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_173, arg561_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg561_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_452: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1542_1, torch.float32);  arg1542_1 = None
    convert_element_type_453: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1543_1, torch.float32);  arg1543_1 = None
    add_525: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_453, 1e-05);  convert_element_type_453 = None
    sqrt_187: "f32[144]" = torch.ops.aten.sqrt.default(add_525);  add_525 = None
    reciprocal_187: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_187);  sqrt_187 = None
    mul_613: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_187, 1);  reciprocal_187 = None
    unsqueeze_1509: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_452, -1);  convert_element_type_452 = None
    unsqueeze_1510: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1509, -1);  unsqueeze_1509 = None
    unsqueeze_1511: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_613, -1);  mul_613 = None
    unsqueeze_1512: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1511, -1);  unsqueeze_1511 = None
    sub_187: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_187, unsqueeze_1510);  convolution_187 = unsqueeze_1510 = None
    mul_614: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_187, unsqueeze_1512);  sub_187 = unsqueeze_1512 = None
    unsqueeze_1513: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg562_1, -1);  arg562_1 = None
    unsqueeze_1514: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1513, -1);  unsqueeze_1513 = None
    mul_615: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_614, unsqueeze_1514);  mul_614 = unsqueeze_1514 = None
    unsqueeze_1515: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg563_1, -1);  arg563_1 = None
    unsqueeze_1516: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1515, -1);  unsqueeze_1515 = None
    add_526: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_615, unsqueeze_1516);  mul_615 = unsqueeze_1516 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_174: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_526);  add_526 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_188: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_174, arg564_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_174 = arg564_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_454: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1545_1, torch.float32);  arg1545_1 = None
    convert_element_type_455: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1546_1, torch.float32);  arg1546_1 = None
    add_527: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_455, 1e-05);  convert_element_type_455 = None
    sqrt_188: "f32[144]" = torch.ops.aten.sqrt.default(add_527);  add_527 = None
    reciprocal_188: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_188);  sqrt_188 = None
    mul_616: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_188, 1);  reciprocal_188 = None
    unsqueeze_1517: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_454, -1);  convert_element_type_454 = None
    unsqueeze_1518: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1517, -1);  unsqueeze_1517 = None
    unsqueeze_1519: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_616, -1);  mul_616 = None
    unsqueeze_1520: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1519, -1);  unsqueeze_1519 = None
    sub_188: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_188, unsqueeze_1518);  convolution_188 = unsqueeze_1518 = None
    mul_617: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_188, unsqueeze_1520);  sub_188 = unsqueeze_1520 = None
    unsqueeze_1521: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg565_1, -1);  arg565_1 = None
    unsqueeze_1522: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1521, -1);  unsqueeze_1521 = None
    mul_618: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_617, unsqueeze_1522);  mul_617 = unsqueeze_1522 = None
    unsqueeze_1523: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg566_1, -1);  arg566_1 = None
    unsqueeze_1524: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1523, -1);  unsqueeze_1523 = None
    add_528: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_618, unsqueeze_1524);  mul_618 = unsqueeze_1524 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_529: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_528, relu_173);  add_528 = relu_173 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_175: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_529);  add_529 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_189: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_175, arg567_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg567_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_456: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1548_1, torch.float32);  arg1548_1 = None
    convert_element_type_457: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1549_1, torch.float32);  arg1549_1 = None
    add_530: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_457, 1e-05);  convert_element_type_457 = None
    sqrt_189: "f32[144]" = torch.ops.aten.sqrt.default(add_530);  add_530 = None
    reciprocal_189: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_189);  sqrt_189 = None
    mul_619: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_189, 1);  reciprocal_189 = None
    unsqueeze_1525: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_456, -1);  convert_element_type_456 = None
    unsqueeze_1526: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1525, -1);  unsqueeze_1525 = None
    unsqueeze_1527: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_619, -1);  mul_619 = None
    unsqueeze_1528: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1527, -1);  unsqueeze_1527 = None
    sub_189: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_189, unsqueeze_1526);  convolution_189 = unsqueeze_1526 = None
    mul_620: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_189, unsqueeze_1528);  sub_189 = unsqueeze_1528 = None
    unsqueeze_1529: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg568_1, -1);  arg568_1 = None
    unsqueeze_1530: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1529, -1);  unsqueeze_1529 = None
    mul_621: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_620, unsqueeze_1530);  mul_620 = unsqueeze_1530 = None
    unsqueeze_1531: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg569_1, -1);  arg569_1 = None
    unsqueeze_1532: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1531, -1);  unsqueeze_1531 = None
    add_531: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_621, unsqueeze_1532);  mul_621 = unsqueeze_1532 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_176: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_531);  add_531 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_190: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_176, arg570_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_176 = arg570_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_458: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1551_1, torch.float32);  arg1551_1 = None
    convert_element_type_459: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1552_1, torch.float32);  arg1552_1 = None
    add_532: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_459, 1e-05);  convert_element_type_459 = None
    sqrt_190: "f32[144]" = torch.ops.aten.sqrt.default(add_532);  add_532 = None
    reciprocal_190: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_190);  sqrt_190 = None
    mul_622: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_190, 1);  reciprocal_190 = None
    unsqueeze_1533: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_458, -1);  convert_element_type_458 = None
    unsqueeze_1534: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1533, -1);  unsqueeze_1533 = None
    unsqueeze_1535: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_622, -1);  mul_622 = None
    unsqueeze_1536: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1535, -1);  unsqueeze_1535 = None
    sub_190: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_190, unsqueeze_1534);  convolution_190 = unsqueeze_1534 = None
    mul_623: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_190, unsqueeze_1536);  sub_190 = unsqueeze_1536 = None
    unsqueeze_1537: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg571_1, -1);  arg571_1 = None
    unsqueeze_1538: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1537, -1);  unsqueeze_1537 = None
    mul_624: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_623, unsqueeze_1538);  mul_623 = unsqueeze_1538 = None
    unsqueeze_1539: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg572_1, -1);  arg572_1 = None
    unsqueeze_1540: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1539, -1);  unsqueeze_1539 = None
    add_533: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_624, unsqueeze_1540);  mul_624 = unsqueeze_1540 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_534: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_533, relu_175);  add_533 = relu_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_177: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_534);  add_534 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_191: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_177, arg573_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg573_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_460: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1554_1, torch.float32);  arg1554_1 = None
    convert_element_type_461: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1555_1, torch.float32);  arg1555_1 = None
    add_535: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_461, 1e-05);  convert_element_type_461 = None
    sqrt_191: "f32[144]" = torch.ops.aten.sqrt.default(add_535);  add_535 = None
    reciprocal_191: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_191);  sqrt_191 = None
    mul_625: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_191, 1);  reciprocal_191 = None
    unsqueeze_1541: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_460, -1);  convert_element_type_460 = None
    unsqueeze_1542: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1541, -1);  unsqueeze_1541 = None
    unsqueeze_1543: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_625, -1);  mul_625 = None
    unsqueeze_1544: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1543, -1);  unsqueeze_1543 = None
    sub_191: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_191, unsqueeze_1542);  convolution_191 = unsqueeze_1542 = None
    mul_626: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_191, unsqueeze_1544);  sub_191 = unsqueeze_1544 = None
    unsqueeze_1545: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg574_1, -1);  arg574_1 = None
    unsqueeze_1546: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1545, -1);  unsqueeze_1545 = None
    mul_627: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_626, unsqueeze_1546);  mul_626 = unsqueeze_1546 = None
    unsqueeze_1547: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg575_1, -1);  arg575_1 = None
    unsqueeze_1548: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1547, -1);  unsqueeze_1547 = None
    add_536: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_627, unsqueeze_1548);  mul_627 = unsqueeze_1548 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_178: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_536);  add_536 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_192: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_178, arg576_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_178 = arg576_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_462: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1557_1, torch.float32);  arg1557_1 = None
    convert_element_type_463: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1558_1, torch.float32);  arg1558_1 = None
    add_537: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_463, 1e-05);  convert_element_type_463 = None
    sqrt_192: "f32[144]" = torch.ops.aten.sqrt.default(add_537);  add_537 = None
    reciprocal_192: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_192);  sqrt_192 = None
    mul_628: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_192, 1);  reciprocal_192 = None
    unsqueeze_1549: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_462, -1);  convert_element_type_462 = None
    unsqueeze_1550: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1549, -1);  unsqueeze_1549 = None
    unsqueeze_1551: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_628, -1);  mul_628 = None
    unsqueeze_1552: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1551, -1);  unsqueeze_1551 = None
    sub_192: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_192, unsqueeze_1550);  convolution_192 = unsqueeze_1550 = None
    mul_629: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_192, unsqueeze_1552);  sub_192 = unsqueeze_1552 = None
    unsqueeze_1553: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg577_1, -1);  arg577_1 = None
    unsqueeze_1554: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1553, -1);  unsqueeze_1553 = None
    mul_630: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_629, unsqueeze_1554);  mul_629 = unsqueeze_1554 = None
    unsqueeze_1555: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg578_1, -1);  arg578_1 = None
    unsqueeze_1556: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1555, -1);  unsqueeze_1555 = None
    add_538: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_630, unsqueeze_1556);  mul_630 = unsqueeze_1556 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_539: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_538, relu_177);  add_538 = relu_177 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_179: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_539);  add_539 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_193: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_163, arg579_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg579_1 = None
    convert_element_type_464: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1560_1, torch.float32);  arg1560_1 = None
    convert_element_type_465: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1561_1, torch.float32);  arg1561_1 = None
    add_540: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_465, 1e-05);  convert_element_type_465 = None
    sqrt_193: "f32[18]" = torch.ops.aten.sqrt.default(add_540);  add_540 = None
    reciprocal_193: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_193);  sqrt_193 = None
    mul_631: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_193, 1);  reciprocal_193 = None
    unsqueeze_1557: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_464, -1);  convert_element_type_464 = None
    unsqueeze_1558: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1557, -1);  unsqueeze_1557 = None
    unsqueeze_1559: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_631, -1);  mul_631 = None
    unsqueeze_1560: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1559, -1);  unsqueeze_1559 = None
    sub_193: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_193, unsqueeze_1558);  convolution_193 = unsqueeze_1558 = None
    mul_632: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_193, unsqueeze_1560);  sub_193 = unsqueeze_1560 = None
    unsqueeze_1561: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg580_1, -1);  arg580_1 = None
    unsqueeze_1562: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1561, -1);  unsqueeze_1561 = None
    mul_633: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_632, unsqueeze_1562);  mul_632 = unsqueeze_1562 = None
    unsqueeze_1563: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg581_1, -1);  arg581_1 = None
    unsqueeze_1564: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1563, -1);  unsqueeze_1563 = None
    add_541: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_633, unsqueeze_1564);  mul_633 = unsqueeze_1564 = None
    iota_26: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_466: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_26, torch.float64);  iota_26 = None
    mul_634: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_466, 1);  convert_element_type_466 = None
    add_542: "f64[56]" = torch.ops.aten.add.Tensor(mul_634, 0);  mul_634 = None
    convert_element_type_467: "f32[56]" = torch.ops.prims.convert_element_type.default(add_542, torch.float32);  add_542 = None
    add_543: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_467, 0.0);  convert_element_type_467 = None
    mul_635: "f32[56]" = torch.ops.aten.mul.Tensor(add_543, 0.5);  add_543 = None
    convert_element_type_468: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_635, torch.int64);  mul_635 = None
    unsqueeze_1565: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_468, -1);  convert_element_type_468 = None
    iota_27: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_469: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_27, torch.float64);  iota_27 = None
    mul_636: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_469, 1);  convert_element_type_469 = None
    add_544: "f64[56]" = torch.ops.aten.add.Tensor(mul_636, 0);  mul_636 = None
    convert_element_type_470: "f32[56]" = torch.ops.prims.convert_element_type.default(add_544, torch.float32);  add_544 = None
    add_545: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_470, 0.0);  convert_element_type_470 = None
    mul_637: "f32[56]" = torch.ops.aten.mul.Tensor(add_545, 0.5);  add_545 = None
    convert_element_type_471: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_637, torch.int64);  mul_637 = None
    _unsafe_index_13: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_541, [None, None, unsqueeze_1565, convert_element_type_471]);  add_541 = unsqueeze_1565 = convert_element_type_471 = None
    add_546: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_155, _unsafe_index_13);  _unsafe_index_13 = None
    convolution_194: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_171, arg582_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg582_1 = None
    convert_element_type_472: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1563_1, torch.float32);  arg1563_1 = None
    convert_element_type_473: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1564_1, torch.float32);  arg1564_1 = None
    add_547: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_473, 1e-05);  convert_element_type_473 = None
    sqrt_194: "f32[18]" = torch.ops.aten.sqrt.default(add_547);  add_547 = None
    reciprocal_194: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_194);  sqrt_194 = None
    mul_638: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_194, 1);  reciprocal_194 = None
    unsqueeze_1566: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_472, -1);  convert_element_type_472 = None
    unsqueeze_1567: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1566, -1);  unsqueeze_1566 = None
    unsqueeze_1568: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_638, -1);  mul_638 = None
    unsqueeze_1569: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1568, -1);  unsqueeze_1568 = None
    sub_194: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_194, unsqueeze_1567);  convolution_194 = unsqueeze_1567 = None
    mul_639: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_194, unsqueeze_1569);  sub_194 = unsqueeze_1569 = None
    unsqueeze_1570: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg583_1, -1);  arg583_1 = None
    unsqueeze_1571: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1570, -1);  unsqueeze_1570 = None
    mul_640: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_639, unsqueeze_1571);  mul_639 = unsqueeze_1571 = None
    unsqueeze_1572: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg584_1, -1);  arg584_1 = None
    unsqueeze_1573: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1572, -1);  unsqueeze_1572 = None
    add_548: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_640, unsqueeze_1573);  mul_640 = unsqueeze_1573 = None
    iota_28: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_474: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_28, torch.float64);  iota_28 = None
    mul_641: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_474, 1);  convert_element_type_474 = None
    add_549: "f64[56]" = torch.ops.aten.add.Tensor(mul_641, 0);  mul_641 = None
    convert_element_type_475: "f32[56]" = torch.ops.prims.convert_element_type.default(add_549, torch.float32);  add_549 = None
    add_550: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_475, 0.0);  convert_element_type_475 = None
    mul_642: "f32[56]" = torch.ops.aten.mul.Tensor(add_550, 0.25);  add_550 = None
    convert_element_type_476: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_642, torch.int64);  mul_642 = None
    unsqueeze_1574: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_476, -1);  convert_element_type_476 = None
    iota_29: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_477: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_29, torch.float64);  iota_29 = None
    mul_643: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_477, 1);  convert_element_type_477 = None
    add_551: "f64[56]" = torch.ops.aten.add.Tensor(mul_643, 0);  mul_643 = None
    convert_element_type_478: "f32[56]" = torch.ops.prims.convert_element_type.default(add_551, torch.float32);  add_551 = None
    add_552: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_478, 0.0);  convert_element_type_478 = None
    mul_644: "f32[56]" = torch.ops.aten.mul.Tensor(add_552, 0.25);  add_552 = None
    convert_element_type_479: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_644, torch.int64);  mul_644 = None
    _unsafe_index_14: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_548, [None, None, unsqueeze_1574, convert_element_type_479]);  add_548 = unsqueeze_1574 = convert_element_type_479 = None
    add_553: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_546, _unsafe_index_14);  add_546 = _unsafe_index_14 = None
    convolution_195: "f32[8, 18, 7, 7]" = torch.ops.aten.convolution.default(relu_179, arg585_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg585_1 = None
    convert_element_type_480: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1566_1, torch.float32);  arg1566_1 = None
    convert_element_type_481: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1567_1, torch.float32);  arg1567_1 = None
    add_554: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_481, 1e-05);  convert_element_type_481 = None
    sqrt_195: "f32[18]" = torch.ops.aten.sqrt.default(add_554);  add_554 = None
    reciprocal_195: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_195);  sqrt_195 = None
    mul_645: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_195, 1);  reciprocal_195 = None
    unsqueeze_1575: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_480, -1);  convert_element_type_480 = None
    unsqueeze_1576: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1575, -1);  unsqueeze_1575 = None
    unsqueeze_1577: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_645, -1);  mul_645 = None
    unsqueeze_1578: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1577, -1);  unsqueeze_1577 = None
    sub_195: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_195, unsqueeze_1576);  convolution_195 = unsqueeze_1576 = None
    mul_646: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_195, unsqueeze_1578);  sub_195 = unsqueeze_1578 = None
    unsqueeze_1579: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg586_1, -1);  arg586_1 = None
    unsqueeze_1580: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1579, -1);  unsqueeze_1579 = None
    mul_647: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(mul_646, unsqueeze_1580);  mul_646 = unsqueeze_1580 = None
    unsqueeze_1581: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg587_1, -1);  arg587_1 = None
    unsqueeze_1582: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1581, -1);  unsqueeze_1581 = None
    add_555: "f32[8, 18, 7, 7]" = torch.ops.aten.add.Tensor(mul_647, unsqueeze_1582);  mul_647 = unsqueeze_1582 = None
    iota_30: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_482: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_30, torch.float64);  iota_30 = None
    mul_648: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_482, 1);  convert_element_type_482 = None
    add_556: "f64[56]" = torch.ops.aten.add.Tensor(mul_648, 0);  mul_648 = None
    convert_element_type_483: "f32[56]" = torch.ops.prims.convert_element_type.default(add_556, torch.float32);  add_556 = None
    add_557: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_483, 0.0);  convert_element_type_483 = None
    mul_649: "f32[56]" = torch.ops.aten.mul.Tensor(add_557, 0.125);  add_557 = None
    convert_element_type_484: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_649, torch.int64);  mul_649 = None
    unsqueeze_1583: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_484, -1);  convert_element_type_484 = None
    iota_31: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_485: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_31, torch.float64);  iota_31 = None
    mul_650: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_485, 1);  convert_element_type_485 = None
    add_558: "f64[56]" = torch.ops.aten.add.Tensor(mul_650, 0);  mul_650 = None
    convert_element_type_486: "f32[56]" = torch.ops.prims.convert_element_type.default(add_558, torch.float32);  add_558 = None
    add_559: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_486, 0.0);  convert_element_type_486 = None
    mul_651: "f32[56]" = torch.ops.aten.mul.Tensor(add_559, 0.125);  add_559 = None
    convert_element_type_487: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_651, torch.int64);  mul_651 = None
    _unsafe_index_15: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_555, [None, None, unsqueeze_1583, convert_element_type_487]);  add_555 = unsqueeze_1583 = convert_element_type_487 = None
    add_560: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_553, _unsafe_index_15);  add_553 = _unsafe_index_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_180: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_560);  add_560 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_196: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_155, arg588_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg588_1 = None
    convert_element_type_488: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1569_1, torch.float32);  arg1569_1 = None
    convert_element_type_489: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1570_1, torch.float32);  arg1570_1 = None
    add_561: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_489, 1e-05);  convert_element_type_489 = None
    sqrt_196: "f32[36]" = torch.ops.aten.sqrt.default(add_561);  add_561 = None
    reciprocal_196: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_196);  sqrt_196 = None
    mul_652: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_196, 1);  reciprocal_196 = None
    unsqueeze_1584: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_488, -1);  convert_element_type_488 = None
    unsqueeze_1585: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1584, -1);  unsqueeze_1584 = None
    unsqueeze_1586: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_652, -1);  mul_652 = None
    unsqueeze_1587: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1586, -1);  unsqueeze_1586 = None
    sub_196: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_196, unsqueeze_1585);  convolution_196 = unsqueeze_1585 = None
    mul_653: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_196, unsqueeze_1587);  sub_196 = unsqueeze_1587 = None
    unsqueeze_1588: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg589_1, -1);  arg589_1 = None
    unsqueeze_1589: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1588, -1);  unsqueeze_1588 = None
    mul_654: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_653, unsqueeze_1589);  mul_653 = unsqueeze_1589 = None
    unsqueeze_1590: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg590_1, -1);  arg590_1 = None
    unsqueeze_1591: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1590, -1);  unsqueeze_1590 = None
    add_562: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_654, unsqueeze_1591);  mul_654 = unsqueeze_1591 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_563: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_562, relu_163);  add_562 = None
    convolution_197: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_171, arg591_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg591_1 = None
    convert_element_type_490: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1572_1, torch.float32);  arg1572_1 = None
    convert_element_type_491: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1573_1, torch.float32);  arg1573_1 = None
    add_564: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_491, 1e-05);  convert_element_type_491 = None
    sqrt_197: "f32[36]" = torch.ops.aten.sqrt.default(add_564);  add_564 = None
    reciprocal_197: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_197);  sqrt_197 = None
    mul_655: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_197, 1);  reciprocal_197 = None
    unsqueeze_1592: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_490, -1);  convert_element_type_490 = None
    unsqueeze_1593: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1592, -1);  unsqueeze_1592 = None
    unsqueeze_1594: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_655, -1);  mul_655 = None
    unsqueeze_1595: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1594, -1);  unsqueeze_1594 = None
    sub_197: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_197, unsqueeze_1593);  convolution_197 = unsqueeze_1593 = None
    mul_656: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_197, unsqueeze_1595);  sub_197 = unsqueeze_1595 = None
    unsqueeze_1596: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg592_1, -1);  arg592_1 = None
    unsqueeze_1597: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1596, -1);  unsqueeze_1596 = None
    mul_657: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_656, unsqueeze_1597);  mul_656 = unsqueeze_1597 = None
    unsqueeze_1598: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg593_1, -1);  arg593_1 = None
    unsqueeze_1599: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1598, -1);  unsqueeze_1598 = None
    add_565: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_657, unsqueeze_1599);  mul_657 = unsqueeze_1599 = None
    iota_32: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_492: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_32, torch.float64);  iota_32 = None
    mul_658: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_492, 1);  convert_element_type_492 = None
    add_566: "f64[28]" = torch.ops.aten.add.Tensor(mul_658, 0);  mul_658 = None
    convert_element_type_493: "f32[28]" = torch.ops.prims.convert_element_type.default(add_566, torch.float32);  add_566 = None
    add_567: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_493, 0.0);  convert_element_type_493 = None
    mul_659: "f32[28]" = torch.ops.aten.mul.Tensor(add_567, 0.5);  add_567 = None
    convert_element_type_494: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_659, torch.int64);  mul_659 = None
    unsqueeze_1600: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_494, -1);  convert_element_type_494 = None
    iota_33: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_495: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_33, torch.float64);  iota_33 = None
    mul_660: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_495, 1);  convert_element_type_495 = None
    add_568: "f64[28]" = torch.ops.aten.add.Tensor(mul_660, 0);  mul_660 = None
    convert_element_type_496: "f32[28]" = torch.ops.prims.convert_element_type.default(add_568, torch.float32);  add_568 = None
    add_569: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_496, 0.0);  convert_element_type_496 = None
    mul_661: "f32[28]" = torch.ops.aten.mul.Tensor(add_569, 0.5);  add_569 = None
    convert_element_type_497: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_661, torch.int64);  mul_661 = None
    _unsafe_index_16: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_565, [None, None, unsqueeze_1600, convert_element_type_497]);  add_565 = unsqueeze_1600 = convert_element_type_497 = None
    add_570: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_563, _unsafe_index_16);  add_563 = _unsafe_index_16 = None
    convolution_198: "f32[8, 36, 7, 7]" = torch.ops.aten.convolution.default(relu_179, arg594_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg594_1 = None
    convert_element_type_498: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1575_1, torch.float32);  arg1575_1 = None
    convert_element_type_499: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1576_1, torch.float32);  arg1576_1 = None
    add_571: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_499, 1e-05);  convert_element_type_499 = None
    sqrt_198: "f32[36]" = torch.ops.aten.sqrt.default(add_571);  add_571 = None
    reciprocal_198: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_198);  sqrt_198 = None
    mul_662: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_198, 1);  reciprocal_198 = None
    unsqueeze_1601: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_498, -1);  convert_element_type_498 = None
    unsqueeze_1602: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1601, -1);  unsqueeze_1601 = None
    unsqueeze_1603: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_662, -1);  mul_662 = None
    unsqueeze_1604: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1603, -1);  unsqueeze_1603 = None
    sub_198: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_198, unsqueeze_1602);  convolution_198 = unsqueeze_1602 = None
    mul_663: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_198, unsqueeze_1604);  sub_198 = unsqueeze_1604 = None
    unsqueeze_1605: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg595_1, -1);  arg595_1 = None
    unsqueeze_1606: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1605, -1);  unsqueeze_1605 = None
    mul_664: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(mul_663, unsqueeze_1606);  mul_663 = unsqueeze_1606 = None
    unsqueeze_1607: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg596_1, -1);  arg596_1 = None
    unsqueeze_1608: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1607, -1);  unsqueeze_1607 = None
    add_572: "f32[8, 36, 7, 7]" = torch.ops.aten.add.Tensor(mul_664, unsqueeze_1608);  mul_664 = unsqueeze_1608 = None
    iota_34: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_500: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_34, torch.float64);  iota_34 = None
    mul_665: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_500, 1);  convert_element_type_500 = None
    add_573: "f64[28]" = torch.ops.aten.add.Tensor(mul_665, 0);  mul_665 = None
    convert_element_type_501: "f32[28]" = torch.ops.prims.convert_element_type.default(add_573, torch.float32);  add_573 = None
    add_574: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_501, 0.0);  convert_element_type_501 = None
    mul_666: "f32[28]" = torch.ops.aten.mul.Tensor(add_574, 0.25);  add_574 = None
    convert_element_type_502: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_666, torch.int64);  mul_666 = None
    unsqueeze_1609: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_502, -1);  convert_element_type_502 = None
    iota_35: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_503: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_35, torch.float64);  iota_35 = None
    mul_667: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_503, 1);  convert_element_type_503 = None
    add_575: "f64[28]" = torch.ops.aten.add.Tensor(mul_667, 0);  mul_667 = None
    convert_element_type_504: "f32[28]" = torch.ops.prims.convert_element_type.default(add_575, torch.float32);  add_575 = None
    add_576: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_504, 0.0);  convert_element_type_504 = None
    mul_668: "f32[28]" = torch.ops.aten.mul.Tensor(add_576, 0.25);  add_576 = None
    convert_element_type_505: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_668, torch.int64);  mul_668 = None
    _unsafe_index_17: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_572, [None, None, unsqueeze_1609, convert_element_type_505]);  add_572 = unsqueeze_1609 = convert_element_type_505 = None
    add_577: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_570, _unsafe_index_17);  add_570 = _unsafe_index_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_181: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_577);  add_577 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_199: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_155, arg597_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg597_1 = None
    convert_element_type_506: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1578_1, torch.float32);  arg1578_1 = None
    convert_element_type_507: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1579_1, torch.float32);  arg1579_1 = None
    add_578: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_507, 1e-05);  convert_element_type_507 = None
    sqrt_199: "f32[18]" = torch.ops.aten.sqrt.default(add_578);  add_578 = None
    reciprocal_199: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_199);  sqrt_199 = None
    mul_669: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_199, 1);  reciprocal_199 = None
    unsqueeze_1610: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_506, -1);  convert_element_type_506 = None
    unsqueeze_1611: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1610, -1);  unsqueeze_1610 = None
    unsqueeze_1612: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_669, -1);  mul_669 = None
    unsqueeze_1613: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1612, -1);  unsqueeze_1612 = None
    sub_199: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_199, unsqueeze_1611);  convolution_199 = unsqueeze_1611 = None
    mul_670: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_199, unsqueeze_1613);  sub_199 = unsqueeze_1613 = None
    unsqueeze_1614: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg598_1, -1);  arg598_1 = None
    unsqueeze_1615: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1614, -1);  unsqueeze_1614 = None
    mul_671: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_670, unsqueeze_1615);  mul_670 = unsqueeze_1615 = None
    unsqueeze_1616: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg599_1, -1);  arg599_1 = None
    unsqueeze_1617: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1616, -1);  unsqueeze_1616 = None
    add_579: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_671, unsqueeze_1617);  mul_671 = unsqueeze_1617 = None
    relu_182: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_579);  add_579 = None
    convolution_200: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_182, arg600_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_182 = arg600_1 = None
    convert_element_type_508: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1581_1, torch.float32);  arg1581_1 = None
    convert_element_type_509: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1582_1, torch.float32);  arg1582_1 = None
    add_580: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_509, 1e-05);  convert_element_type_509 = None
    sqrt_200: "f32[72]" = torch.ops.aten.sqrt.default(add_580);  add_580 = None
    reciprocal_200: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_200);  sqrt_200 = None
    mul_672: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_200, 1);  reciprocal_200 = None
    unsqueeze_1618: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_508, -1);  convert_element_type_508 = None
    unsqueeze_1619: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1618, -1);  unsqueeze_1618 = None
    unsqueeze_1620: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_672, -1);  mul_672 = None
    unsqueeze_1621: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1620, -1);  unsqueeze_1620 = None
    sub_200: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_200, unsqueeze_1619);  convolution_200 = unsqueeze_1619 = None
    mul_673: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_200, unsqueeze_1621);  sub_200 = unsqueeze_1621 = None
    unsqueeze_1622: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg601_1, -1);  arg601_1 = None
    unsqueeze_1623: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1622, -1);  unsqueeze_1622 = None
    mul_674: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_673, unsqueeze_1623);  mul_673 = unsqueeze_1623 = None
    unsqueeze_1624: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg602_1, -1);  arg602_1 = None
    unsqueeze_1625: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1624, -1);  unsqueeze_1624 = None
    add_581: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_674, unsqueeze_1625);  mul_674 = unsqueeze_1625 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_201: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_163, arg603_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg603_1 = None
    convert_element_type_510: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1584_1, torch.float32);  arg1584_1 = None
    convert_element_type_511: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1585_1, torch.float32);  arg1585_1 = None
    add_582: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_511, 1e-05);  convert_element_type_511 = None
    sqrt_201: "f32[72]" = torch.ops.aten.sqrt.default(add_582);  add_582 = None
    reciprocal_201: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_201);  sqrt_201 = None
    mul_675: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_201, 1);  reciprocal_201 = None
    unsqueeze_1626: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_510, -1);  convert_element_type_510 = None
    unsqueeze_1627: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1626, -1);  unsqueeze_1626 = None
    unsqueeze_1628: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_675, -1);  mul_675 = None
    unsqueeze_1629: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1628, -1);  unsqueeze_1628 = None
    sub_201: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_201, unsqueeze_1627);  convolution_201 = unsqueeze_1627 = None
    mul_676: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_201, unsqueeze_1629);  sub_201 = unsqueeze_1629 = None
    unsqueeze_1630: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg604_1, -1);  arg604_1 = None
    unsqueeze_1631: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1630, -1);  unsqueeze_1630 = None
    mul_677: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_676, unsqueeze_1631);  mul_676 = unsqueeze_1631 = None
    unsqueeze_1632: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg605_1, -1);  arg605_1 = None
    unsqueeze_1633: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1632, -1);  unsqueeze_1632 = None
    add_583: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_677, unsqueeze_1633);  mul_677 = unsqueeze_1633 = None
    add_584: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_581, add_583);  add_581 = add_583 = None
    add_585: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_584, relu_171);  add_584 = None
    convolution_202: "f32[8, 72, 7, 7]" = torch.ops.aten.convolution.default(relu_179, arg606_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg606_1 = None
    convert_element_type_512: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1587_1, torch.float32);  arg1587_1 = None
    convert_element_type_513: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1588_1, torch.float32);  arg1588_1 = None
    add_586: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_513, 1e-05);  convert_element_type_513 = None
    sqrt_202: "f32[72]" = torch.ops.aten.sqrt.default(add_586);  add_586 = None
    reciprocal_202: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_202);  sqrt_202 = None
    mul_678: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_202, 1);  reciprocal_202 = None
    unsqueeze_1634: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_512, -1);  convert_element_type_512 = None
    unsqueeze_1635: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1634, -1);  unsqueeze_1634 = None
    unsqueeze_1636: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_678, -1);  mul_678 = None
    unsqueeze_1637: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1636, -1);  unsqueeze_1636 = None
    sub_202: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_202, unsqueeze_1635);  convolution_202 = unsqueeze_1635 = None
    mul_679: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_202, unsqueeze_1637);  sub_202 = unsqueeze_1637 = None
    unsqueeze_1638: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg607_1, -1);  arg607_1 = None
    unsqueeze_1639: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1638, -1);  unsqueeze_1638 = None
    mul_680: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(mul_679, unsqueeze_1639);  mul_679 = unsqueeze_1639 = None
    unsqueeze_1640: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg608_1, -1);  arg608_1 = None
    unsqueeze_1641: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1640, -1);  unsqueeze_1640 = None
    add_587: "f32[8, 72, 7, 7]" = torch.ops.aten.add.Tensor(mul_680, unsqueeze_1641);  mul_680 = unsqueeze_1641 = None
    iota_36: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_514: "f64[14]" = torch.ops.prims.convert_element_type.default(iota_36, torch.float64);  iota_36 = None
    mul_681: "f64[14]" = torch.ops.aten.mul.Tensor(convert_element_type_514, 1);  convert_element_type_514 = None
    add_588: "f64[14]" = torch.ops.aten.add.Tensor(mul_681, 0);  mul_681 = None
    convert_element_type_515: "f32[14]" = torch.ops.prims.convert_element_type.default(add_588, torch.float32);  add_588 = None
    add_589: "f32[14]" = torch.ops.aten.add.Tensor(convert_element_type_515, 0.0);  convert_element_type_515 = None
    mul_682: "f32[14]" = torch.ops.aten.mul.Tensor(add_589, 0.5);  add_589 = None
    convert_element_type_516: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_682, torch.int64);  mul_682 = None
    unsqueeze_1642: "i64[14, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_516, -1);  convert_element_type_516 = None
    iota_37: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_517: "f64[14]" = torch.ops.prims.convert_element_type.default(iota_37, torch.float64);  iota_37 = None
    mul_683: "f64[14]" = torch.ops.aten.mul.Tensor(convert_element_type_517, 1);  convert_element_type_517 = None
    add_590: "f64[14]" = torch.ops.aten.add.Tensor(mul_683, 0);  mul_683 = None
    convert_element_type_518: "f32[14]" = torch.ops.prims.convert_element_type.default(add_590, torch.float32);  add_590 = None
    add_591: "f32[14]" = torch.ops.aten.add.Tensor(convert_element_type_518, 0.0);  convert_element_type_518 = None
    mul_684: "f32[14]" = torch.ops.aten.mul.Tensor(add_591, 0.5);  add_591 = None
    convert_element_type_519: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_684, torch.int64);  mul_684 = None
    _unsafe_index_18: "f32[8, 72, 14, 14]" = torch.ops.aten._unsafe_index.Tensor(add_587, [None, None, unsqueeze_1642, convert_element_type_519]);  add_587 = unsqueeze_1642 = convert_element_type_519 = None
    add_592: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_585, _unsafe_index_18);  add_585 = _unsafe_index_18 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_183: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_592);  add_592 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_203: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_155, arg609_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_155 = arg609_1 = None
    convert_element_type_520: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1590_1, torch.float32);  arg1590_1 = None
    convert_element_type_521: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1591_1, torch.float32);  arg1591_1 = None
    add_593: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_521, 1e-05);  convert_element_type_521 = None
    sqrt_203: "f32[18]" = torch.ops.aten.sqrt.default(add_593);  add_593 = None
    reciprocal_203: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_203);  sqrt_203 = None
    mul_685: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_203, 1);  reciprocal_203 = None
    unsqueeze_1643: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_520, -1);  convert_element_type_520 = None
    unsqueeze_1644: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1643, -1);  unsqueeze_1643 = None
    unsqueeze_1645: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_685, -1);  mul_685 = None
    unsqueeze_1646: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1645, -1);  unsqueeze_1645 = None
    sub_203: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_203, unsqueeze_1644);  convolution_203 = unsqueeze_1644 = None
    mul_686: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_203, unsqueeze_1646);  sub_203 = unsqueeze_1646 = None
    unsqueeze_1647: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg610_1, -1);  arg610_1 = None
    unsqueeze_1648: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1647, -1);  unsqueeze_1647 = None
    mul_687: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_686, unsqueeze_1648);  mul_686 = unsqueeze_1648 = None
    unsqueeze_1649: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg611_1, -1);  arg611_1 = None
    unsqueeze_1650: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1649, -1);  unsqueeze_1649 = None
    add_594: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_687, unsqueeze_1650);  mul_687 = unsqueeze_1650 = None
    relu_184: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_594);  add_594 = None
    convolution_204: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_184, arg612_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_184 = arg612_1 = None
    convert_element_type_522: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1593_1, torch.float32);  arg1593_1 = None
    convert_element_type_523: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1594_1, torch.float32);  arg1594_1 = None
    add_595: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_523, 1e-05);  convert_element_type_523 = None
    sqrt_204: "f32[18]" = torch.ops.aten.sqrt.default(add_595);  add_595 = None
    reciprocal_204: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_204);  sqrt_204 = None
    mul_688: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_204, 1);  reciprocal_204 = None
    unsqueeze_1651: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_522, -1);  convert_element_type_522 = None
    unsqueeze_1652: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1651, -1);  unsqueeze_1651 = None
    unsqueeze_1653: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_688, -1);  mul_688 = None
    unsqueeze_1654: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1653, -1);  unsqueeze_1653 = None
    sub_204: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_204, unsqueeze_1652);  convolution_204 = unsqueeze_1652 = None
    mul_689: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_204, unsqueeze_1654);  sub_204 = unsqueeze_1654 = None
    unsqueeze_1655: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg613_1, -1);  arg613_1 = None
    unsqueeze_1656: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1655, -1);  unsqueeze_1655 = None
    mul_690: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_689, unsqueeze_1656);  mul_689 = unsqueeze_1656 = None
    unsqueeze_1657: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg614_1, -1);  arg614_1 = None
    unsqueeze_1658: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1657, -1);  unsqueeze_1657 = None
    add_596: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_690, unsqueeze_1658);  mul_690 = unsqueeze_1658 = None
    relu_185: "f32[8, 18, 14, 14]" = torch.ops.aten.relu.default(add_596);  add_596 = None
    convolution_205: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_185, arg615_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_185 = arg615_1 = None
    convert_element_type_524: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1596_1, torch.float32);  arg1596_1 = None
    convert_element_type_525: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1597_1, torch.float32);  arg1597_1 = None
    add_597: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_525, 1e-05);  convert_element_type_525 = None
    sqrt_205: "f32[144]" = torch.ops.aten.sqrt.default(add_597);  add_597 = None
    reciprocal_205: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_205);  sqrt_205 = None
    mul_691: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_205, 1);  reciprocal_205 = None
    unsqueeze_1659: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_524, -1);  convert_element_type_524 = None
    unsqueeze_1660: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1659, -1);  unsqueeze_1659 = None
    unsqueeze_1661: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_691, -1);  mul_691 = None
    unsqueeze_1662: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1661, -1);  unsqueeze_1661 = None
    sub_205: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_205, unsqueeze_1660);  convolution_205 = unsqueeze_1660 = None
    mul_692: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_205, unsqueeze_1662);  sub_205 = unsqueeze_1662 = None
    unsqueeze_1663: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg616_1, -1);  arg616_1 = None
    unsqueeze_1664: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1663, -1);  unsqueeze_1663 = None
    mul_693: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_692, unsqueeze_1664);  mul_692 = unsqueeze_1664 = None
    unsqueeze_1665: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg617_1, -1);  arg617_1 = None
    unsqueeze_1666: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1665, -1);  unsqueeze_1665 = None
    add_598: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_693, unsqueeze_1666);  mul_693 = unsqueeze_1666 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_206: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_163, arg618_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_163 = arg618_1 = None
    convert_element_type_526: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1599_1, torch.float32);  arg1599_1 = None
    convert_element_type_527: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1600_1, torch.float32);  arg1600_1 = None
    add_599: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_527, 1e-05);  convert_element_type_527 = None
    sqrt_206: "f32[36]" = torch.ops.aten.sqrt.default(add_599);  add_599 = None
    reciprocal_206: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_206);  sqrt_206 = None
    mul_694: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_206, 1);  reciprocal_206 = None
    unsqueeze_1667: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_526, -1);  convert_element_type_526 = None
    unsqueeze_1668: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1667, -1);  unsqueeze_1667 = None
    unsqueeze_1669: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_694, -1);  mul_694 = None
    unsqueeze_1670: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1669, -1);  unsqueeze_1669 = None
    sub_206: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_206, unsqueeze_1668);  convolution_206 = unsqueeze_1668 = None
    mul_695: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_206, unsqueeze_1670);  sub_206 = unsqueeze_1670 = None
    unsqueeze_1671: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg619_1, -1);  arg619_1 = None
    unsqueeze_1672: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1671, -1);  unsqueeze_1671 = None
    mul_696: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_695, unsqueeze_1672);  mul_695 = unsqueeze_1672 = None
    unsqueeze_1673: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg620_1, -1);  arg620_1 = None
    unsqueeze_1674: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1673, -1);  unsqueeze_1673 = None
    add_600: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_696, unsqueeze_1674);  mul_696 = unsqueeze_1674 = None
    relu_186: "f32[8, 36, 14, 14]" = torch.ops.aten.relu.default(add_600);  add_600 = None
    convolution_207: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_186, arg621_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_186 = arg621_1 = None
    convert_element_type_528: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1602_1, torch.float32);  arg1602_1 = None
    convert_element_type_529: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1603_1, torch.float32);  arg1603_1 = None
    add_601: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_529, 1e-05);  convert_element_type_529 = None
    sqrt_207: "f32[144]" = torch.ops.aten.sqrt.default(add_601);  add_601 = None
    reciprocal_207: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_207);  sqrt_207 = None
    mul_697: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_207, 1);  reciprocal_207 = None
    unsqueeze_1675: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_528, -1);  convert_element_type_528 = None
    unsqueeze_1676: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1675, -1);  unsqueeze_1675 = None
    unsqueeze_1677: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_697, -1);  mul_697 = None
    unsqueeze_1678: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1677, -1);  unsqueeze_1677 = None
    sub_207: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_207, unsqueeze_1676);  convolution_207 = unsqueeze_1676 = None
    mul_698: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_207, unsqueeze_1678);  sub_207 = unsqueeze_1678 = None
    unsqueeze_1679: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg622_1, -1);  arg622_1 = None
    unsqueeze_1680: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1679, -1);  unsqueeze_1679 = None
    mul_699: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_698, unsqueeze_1680);  mul_698 = unsqueeze_1680 = None
    unsqueeze_1681: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg623_1, -1);  arg623_1 = None
    unsqueeze_1682: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1681, -1);  unsqueeze_1681 = None
    add_602: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_699, unsqueeze_1682);  mul_699 = unsqueeze_1682 = None
    add_603: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_598, add_602);  add_598 = add_602 = None
    convolution_208: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_171, arg624_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_171 = arg624_1 = None
    convert_element_type_530: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1605_1, torch.float32);  arg1605_1 = None
    convert_element_type_531: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1606_1, torch.float32);  arg1606_1 = None
    add_604: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_531, 1e-05);  convert_element_type_531 = None
    sqrt_208: "f32[144]" = torch.ops.aten.sqrt.default(add_604);  add_604 = None
    reciprocal_208: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_208);  sqrt_208 = None
    mul_700: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_208, 1);  reciprocal_208 = None
    unsqueeze_1683: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_530, -1);  convert_element_type_530 = None
    unsqueeze_1684: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1683, -1);  unsqueeze_1683 = None
    unsqueeze_1685: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_700, -1);  mul_700 = None
    unsqueeze_1686: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1685, -1);  unsqueeze_1685 = None
    sub_208: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_208, unsqueeze_1684);  convolution_208 = unsqueeze_1684 = None
    mul_701: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_208, unsqueeze_1686);  sub_208 = unsqueeze_1686 = None
    unsqueeze_1687: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg625_1, -1);  arg625_1 = None
    unsqueeze_1688: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1687, -1);  unsqueeze_1687 = None
    mul_702: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_701, unsqueeze_1688);  mul_701 = unsqueeze_1688 = None
    unsqueeze_1689: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg626_1, -1);  arg626_1 = None
    unsqueeze_1690: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1689, -1);  unsqueeze_1689 = None
    add_605: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_702, unsqueeze_1690);  mul_702 = unsqueeze_1690 = None
    add_606: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_603, add_605);  add_603 = add_605 = None
    add_607: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_606, relu_179);  add_606 = relu_179 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_187: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_607);  add_607 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_209: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_180, arg627_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg627_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_532: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1608_1, torch.float32);  arg1608_1 = None
    convert_element_type_533: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1609_1, torch.float32);  arg1609_1 = None
    add_608: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_533, 1e-05);  convert_element_type_533 = None
    sqrt_209: "f32[18]" = torch.ops.aten.sqrt.default(add_608);  add_608 = None
    reciprocal_209: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_209);  sqrt_209 = None
    mul_703: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_209, 1);  reciprocal_209 = None
    unsqueeze_1691: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_532, -1);  convert_element_type_532 = None
    unsqueeze_1692: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1691, -1);  unsqueeze_1691 = None
    unsqueeze_1693: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_703, -1);  mul_703 = None
    unsqueeze_1694: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1693, -1);  unsqueeze_1693 = None
    sub_209: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_209, unsqueeze_1692);  convolution_209 = unsqueeze_1692 = None
    mul_704: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_209, unsqueeze_1694);  sub_209 = unsqueeze_1694 = None
    unsqueeze_1695: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg628_1, -1);  arg628_1 = None
    unsqueeze_1696: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1695, -1);  unsqueeze_1695 = None
    mul_705: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_704, unsqueeze_1696);  mul_704 = unsqueeze_1696 = None
    unsqueeze_1697: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg629_1, -1);  arg629_1 = None
    unsqueeze_1698: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1697, -1);  unsqueeze_1697 = None
    add_609: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_705, unsqueeze_1698);  mul_705 = unsqueeze_1698 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_188: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_609);  add_609 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_210: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_188, arg630_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_188 = arg630_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_534: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1611_1, torch.float32);  arg1611_1 = None
    convert_element_type_535: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1612_1, torch.float32);  arg1612_1 = None
    add_610: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_535, 1e-05);  convert_element_type_535 = None
    sqrt_210: "f32[18]" = torch.ops.aten.sqrt.default(add_610);  add_610 = None
    reciprocal_210: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_210);  sqrt_210 = None
    mul_706: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_210, 1);  reciprocal_210 = None
    unsqueeze_1699: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_534, -1);  convert_element_type_534 = None
    unsqueeze_1700: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1699, -1);  unsqueeze_1699 = None
    unsqueeze_1701: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_706, -1);  mul_706 = None
    unsqueeze_1702: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1701, -1);  unsqueeze_1701 = None
    sub_210: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_210, unsqueeze_1700);  convolution_210 = unsqueeze_1700 = None
    mul_707: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_210, unsqueeze_1702);  sub_210 = unsqueeze_1702 = None
    unsqueeze_1703: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg631_1, -1);  arg631_1 = None
    unsqueeze_1704: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1703, -1);  unsqueeze_1703 = None
    mul_708: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_707, unsqueeze_1704);  mul_707 = unsqueeze_1704 = None
    unsqueeze_1705: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg632_1, -1);  arg632_1 = None
    unsqueeze_1706: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1705, -1);  unsqueeze_1705 = None
    add_611: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_708, unsqueeze_1706);  mul_708 = unsqueeze_1706 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_612: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_611, relu_180);  add_611 = relu_180 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_189: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_612);  add_612 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_211: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_189, arg633_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg633_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_536: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1614_1, torch.float32);  arg1614_1 = None
    convert_element_type_537: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1615_1, torch.float32);  arg1615_1 = None
    add_613: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_537, 1e-05);  convert_element_type_537 = None
    sqrt_211: "f32[18]" = torch.ops.aten.sqrt.default(add_613);  add_613 = None
    reciprocal_211: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_211);  sqrt_211 = None
    mul_709: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_211, 1);  reciprocal_211 = None
    unsqueeze_1707: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_536, -1);  convert_element_type_536 = None
    unsqueeze_1708: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1707, -1);  unsqueeze_1707 = None
    unsqueeze_1709: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_709, -1);  mul_709 = None
    unsqueeze_1710: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1709, -1);  unsqueeze_1709 = None
    sub_211: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_211, unsqueeze_1708);  convolution_211 = unsqueeze_1708 = None
    mul_710: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_211, unsqueeze_1710);  sub_211 = unsqueeze_1710 = None
    unsqueeze_1711: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg634_1, -1);  arg634_1 = None
    unsqueeze_1712: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1711, -1);  unsqueeze_1711 = None
    mul_711: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_710, unsqueeze_1712);  mul_710 = unsqueeze_1712 = None
    unsqueeze_1713: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg635_1, -1);  arg635_1 = None
    unsqueeze_1714: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1713, -1);  unsqueeze_1713 = None
    add_614: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_711, unsqueeze_1714);  mul_711 = unsqueeze_1714 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_190: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_614);  add_614 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_212: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_190, arg636_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_190 = arg636_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_538: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1617_1, torch.float32);  arg1617_1 = None
    convert_element_type_539: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1618_1, torch.float32);  arg1618_1 = None
    add_615: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_539, 1e-05);  convert_element_type_539 = None
    sqrt_212: "f32[18]" = torch.ops.aten.sqrt.default(add_615);  add_615 = None
    reciprocal_212: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_212);  sqrt_212 = None
    mul_712: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_212, 1);  reciprocal_212 = None
    unsqueeze_1715: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_538, -1);  convert_element_type_538 = None
    unsqueeze_1716: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1715, -1);  unsqueeze_1715 = None
    unsqueeze_1717: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_712, -1);  mul_712 = None
    unsqueeze_1718: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1717, -1);  unsqueeze_1717 = None
    sub_212: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_212, unsqueeze_1716);  convolution_212 = unsqueeze_1716 = None
    mul_713: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_212, unsqueeze_1718);  sub_212 = unsqueeze_1718 = None
    unsqueeze_1719: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg637_1, -1);  arg637_1 = None
    unsqueeze_1720: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1719, -1);  unsqueeze_1719 = None
    mul_714: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_713, unsqueeze_1720);  mul_713 = unsqueeze_1720 = None
    unsqueeze_1721: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg638_1, -1);  arg638_1 = None
    unsqueeze_1722: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1721, -1);  unsqueeze_1721 = None
    add_616: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_714, unsqueeze_1722);  mul_714 = unsqueeze_1722 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_617: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_616, relu_189);  add_616 = relu_189 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_191: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_617);  add_617 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_213: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_191, arg639_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg639_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_540: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1620_1, torch.float32);  arg1620_1 = None
    convert_element_type_541: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1621_1, torch.float32);  arg1621_1 = None
    add_618: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_541, 1e-05);  convert_element_type_541 = None
    sqrt_213: "f32[18]" = torch.ops.aten.sqrt.default(add_618);  add_618 = None
    reciprocal_213: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_213);  sqrt_213 = None
    mul_715: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_213, 1);  reciprocal_213 = None
    unsqueeze_1723: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_540, -1);  convert_element_type_540 = None
    unsqueeze_1724: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1723, -1);  unsqueeze_1723 = None
    unsqueeze_1725: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_715, -1);  mul_715 = None
    unsqueeze_1726: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1725, -1);  unsqueeze_1725 = None
    sub_213: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_213, unsqueeze_1724);  convolution_213 = unsqueeze_1724 = None
    mul_716: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_213, unsqueeze_1726);  sub_213 = unsqueeze_1726 = None
    unsqueeze_1727: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg640_1, -1);  arg640_1 = None
    unsqueeze_1728: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1727, -1);  unsqueeze_1727 = None
    mul_717: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_716, unsqueeze_1728);  mul_716 = unsqueeze_1728 = None
    unsqueeze_1729: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg641_1, -1);  arg641_1 = None
    unsqueeze_1730: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1729, -1);  unsqueeze_1729 = None
    add_619: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_717, unsqueeze_1730);  mul_717 = unsqueeze_1730 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_192: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_619);  add_619 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_214: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_192, arg642_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_192 = arg642_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_542: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1623_1, torch.float32);  arg1623_1 = None
    convert_element_type_543: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1624_1, torch.float32);  arg1624_1 = None
    add_620: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_543, 1e-05);  convert_element_type_543 = None
    sqrt_214: "f32[18]" = torch.ops.aten.sqrt.default(add_620);  add_620 = None
    reciprocal_214: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_214);  sqrt_214 = None
    mul_718: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_214, 1);  reciprocal_214 = None
    unsqueeze_1731: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_542, -1);  convert_element_type_542 = None
    unsqueeze_1732: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1731, -1);  unsqueeze_1731 = None
    unsqueeze_1733: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_718, -1);  mul_718 = None
    unsqueeze_1734: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1733, -1);  unsqueeze_1733 = None
    sub_214: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_214, unsqueeze_1732);  convolution_214 = unsqueeze_1732 = None
    mul_719: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_214, unsqueeze_1734);  sub_214 = unsqueeze_1734 = None
    unsqueeze_1735: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg643_1, -1);  arg643_1 = None
    unsqueeze_1736: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1735, -1);  unsqueeze_1735 = None
    mul_720: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_719, unsqueeze_1736);  mul_719 = unsqueeze_1736 = None
    unsqueeze_1737: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg644_1, -1);  arg644_1 = None
    unsqueeze_1738: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1737, -1);  unsqueeze_1737 = None
    add_621: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_720, unsqueeze_1738);  mul_720 = unsqueeze_1738 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_622: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_621, relu_191);  add_621 = relu_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_193: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_622);  add_622 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_215: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_193, arg645_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg645_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_544: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1626_1, torch.float32);  arg1626_1 = None
    convert_element_type_545: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1627_1, torch.float32);  arg1627_1 = None
    add_623: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_545, 1e-05);  convert_element_type_545 = None
    sqrt_215: "f32[18]" = torch.ops.aten.sqrt.default(add_623);  add_623 = None
    reciprocal_215: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_215);  sqrt_215 = None
    mul_721: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_215, 1);  reciprocal_215 = None
    unsqueeze_1739: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_544, -1);  convert_element_type_544 = None
    unsqueeze_1740: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1739, -1);  unsqueeze_1739 = None
    unsqueeze_1741: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_721, -1);  mul_721 = None
    unsqueeze_1742: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1741, -1);  unsqueeze_1741 = None
    sub_215: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_215, unsqueeze_1740);  convolution_215 = unsqueeze_1740 = None
    mul_722: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_215, unsqueeze_1742);  sub_215 = unsqueeze_1742 = None
    unsqueeze_1743: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg646_1, -1);  arg646_1 = None
    unsqueeze_1744: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1743, -1);  unsqueeze_1743 = None
    mul_723: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_722, unsqueeze_1744);  mul_722 = unsqueeze_1744 = None
    unsqueeze_1745: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg647_1, -1);  arg647_1 = None
    unsqueeze_1746: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1745, -1);  unsqueeze_1745 = None
    add_624: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_723, unsqueeze_1746);  mul_723 = unsqueeze_1746 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_194: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_624);  add_624 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_216: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_194, arg648_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_194 = arg648_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_546: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1629_1, torch.float32);  arg1629_1 = None
    convert_element_type_547: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1630_1, torch.float32);  arg1630_1 = None
    add_625: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_547, 1e-05);  convert_element_type_547 = None
    sqrt_216: "f32[18]" = torch.ops.aten.sqrt.default(add_625);  add_625 = None
    reciprocal_216: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_216);  sqrt_216 = None
    mul_724: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_216, 1);  reciprocal_216 = None
    unsqueeze_1747: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_546, -1);  convert_element_type_546 = None
    unsqueeze_1748: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1747, -1);  unsqueeze_1747 = None
    unsqueeze_1749: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_724, -1);  mul_724 = None
    unsqueeze_1750: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1749, -1);  unsqueeze_1749 = None
    sub_216: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_216, unsqueeze_1748);  convolution_216 = unsqueeze_1748 = None
    mul_725: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_216, unsqueeze_1750);  sub_216 = unsqueeze_1750 = None
    unsqueeze_1751: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg649_1, -1);  arg649_1 = None
    unsqueeze_1752: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1751, -1);  unsqueeze_1751 = None
    mul_726: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_725, unsqueeze_1752);  mul_725 = unsqueeze_1752 = None
    unsqueeze_1753: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg650_1, -1);  arg650_1 = None
    unsqueeze_1754: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1753, -1);  unsqueeze_1753 = None
    add_626: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_726, unsqueeze_1754);  mul_726 = unsqueeze_1754 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_627: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_626, relu_193);  add_626 = relu_193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_195: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_627);  add_627 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_217: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_181, arg651_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg651_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_548: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1632_1, torch.float32);  arg1632_1 = None
    convert_element_type_549: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1633_1, torch.float32);  arg1633_1 = None
    add_628: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_549, 1e-05);  convert_element_type_549 = None
    sqrt_217: "f32[36]" = torch.ops.aten.sqrt.default(add_628);  add_628 = None
    reciprocal_217: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_217);  sqrt_217 = None
    mul_727: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_217, 1);  reciprocal_217 = None
    unsqueeze_1755: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_548, -1);  convert_element_type_548 = None
    unsqueeze_1756: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1755, -1);  unsqueeze_1755 = None
    unsqueeze_1757: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_727, -1);  mul_727 = None
    unsqueeze_1758: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1757, -1);  unsqueeze_1757 = None
    sub_217: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_217, unsqueeze_1756);  convolution_217 = unsqueeze_1756 = None
    mul_728: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_217, unsqueeze_1758);  sub_217 = unsqueeze_1758 = None
    unsqueeze_1759: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg652_1, -1);  arg652_1 = None
    unsqueeze_1760: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1759, -1);  unsqueeze_1759 = None
    mul_729: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_728, unsqueeze_1760);  mul_728 = unsqueeze_1760 = None
    unsqueeze_1761: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg653_1, -1);  arg653_1 = None
    unsqueeze_1762: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1761, -1);  unsqueeze_1761 = None
    add_629: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_729, unsqueeze_1762);  mul_729 = unsqueeze_1762 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_196: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_629);  add_629 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_218: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_196, arg654_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_196 = arg654_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_550: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1635_1, torch.float32);  arg1635_1 = None
    convert_element_type_551: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1636_1, torch.float32);  arg1636_1 = None
    add_630: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_551, 1e-05);  convert_element_type_551 = None
    sqrt_218: "f32[36]" = torch.ops.aten.sqrt.default(add_630);  add_630 = None
    reciprocal_218: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_218);  sqrt_218 = None
    mul_730: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_218, 1);  reciprocal_218 = None
    unsqueeze_1763: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_550, -1);  convert_element_type_550 = None
    unsqueeze_1764: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1763, -1);  unsqueeze_1763 = None
    unsqueeze_1765: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_730, -1);  mul_730 = None
    unsqueeze_1766: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1765, -1);  unsqueeze_1765 = None
    sub_218: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_218, unsqueeze_1764);  convolution_218 = unsqueeze_1764 = None
    mul_731: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_218, unsqueeze_1766);  sub_218 = unsqueeze_1766 = None
    unsqueeze_1767: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg655_1, -1);  arg655_1 = None
    unsqueeze_1768: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1767, -1);  unsqueeze_1767 = None
    mul_732: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_731, unsqueeze_1768);  mul_731 = unsqueeze_1768 = None
    unsqueeze_1769: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg656_1, -1);  arg656_1 = None
    unsqueeze_1770: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1769, -1);  unsqueeze_1769 = None
    add_631: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_732, unsqueeze_1770);  mul_732 = unsqueeze_1770 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_632: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_631, relu_181);  add_631 = relu_181 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_197: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_632);  add_632 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_219: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_197, arg657_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg657_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_552: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1638_1, torch.float32);  arg1638_1 = None
    convert_element_type_553: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1639_1, torch.float32);  arg1639_1 = None
    add_633: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_553, 1e-05);  convert_element_type_553 = None
    sqrt_219: "f32[36]" = torch.ops.aten.sqrt.default(add_633);  add_633 = None
    reciprocal_219: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_219);  sqrt_219 = None
    mul_733: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_219, 1);  reciprocal_219 = None
    unsqueeze_1771: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_552, -1);  convert_element_type_552 = None
    unsqueeze_1772: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1771, -1);  unsqueeze_1771 = None
    unsqueeze_1773: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_733, -1);  mul_733 = None
    unsqueeze_1774: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1773, -1);  unsqueeze_1773 = None
    sub_219: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_219, unsqueeze_1772);  convolution_219 = unsqueeze_1772 = None
    mul_734: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_219, unsqueeze_1774);  sub_219 = unsqueeze_1774 = None
    unsqueeze_1775: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg658_1, -1);  arg658_1 = None
    unsqueeze_1776: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1775, -1);  unsqueeze_1775 = None
    mul_735: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_734, unsqueeze_1776);  mul_734 = unsqueeze_1776 = None
    unsqueeze_1777: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg659_1, -1);  arg659_1 = None
    unsqueeze_1778: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1777, -1);  unsqueeze_1777 = None
    add_634: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_735, unsqueeze_1778);  mul_735 = unsqueeze_1778 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_198: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_634);  add_634 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_220: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_198, arg660_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_198 = arg660_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_554: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1641_1, torch.float32);  arg1641_1 = None
    convert_element_type_555: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1642_1, torch.float32);  arg1642_1 = None
    add_635: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_555, 1e-05);  convert_element_type_555 = None
    sqrt_220: "f32[36]" = torch.ops.aten.sqrt.default(add_635);  add_635 = None
    reciprocal_220: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_220);  sqrt_220 = None
    mul_736: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_220, 1);  reciprocal_220 = None
    unsqueeze_1779: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_554, -1);  convert_element_type_554 = None
    unsqueeze_1780: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1779, -1);  unsqueeze_1779 = None
    unsqueeze_1781: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_736, -1);  mul_736 = None
    unsqueeze_1782: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1781, -1);  unsqueeze_1781 = None
    sub_220: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_220, unsqueeze_1780);  convolution_220 = unsqueeze_1780 = None
    mul_737: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_220, unsqueeze_1782);  sub_220 = unsqueeze_1782 = None
    unsqueeze_1783: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg661_1, -1);  arg661_1 = None
    unsqueeze_1784: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1783, -1);  unsqueeze_1783 = None
    mul_738: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_737, unsqueeze_1784);  mul_737 = unsqueeze_1784 = None
    unsqueeze_1785: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg662_1, -1);  arg662_1 = None
    unsqueeze_1786: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1785, -1);  unsqueeze_1785 = None
    add_636: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_738, unsqueeze_1786);  mul_738 = unsqueeze_1786 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_637: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_636, relu_197);  add_636 = relu_197 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_199: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_637);  add_637 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_221: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_199, arg663_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg663_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_556: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1644_1, torch.float32);  arg1644_1 = None
    convert_element_type_557: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1645_1, torch.float32);  arg1645_1 = None
    add_638: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_557, 1e-05);  convert_element_type_557 = None
    sqrt_221: "f32[36]" = torch.ops.aten.sqrt.default(add_638);  add_638 = None
    reciprocal_221: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_221);  sqrt_221 = None
    mul_739: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_221, 1);  reciprocal_221 = None
    unsqueeze_1787: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_556, -1);  convert_element_type_556 = None
    unsqueeze_1788: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1787, -1);  unsqueeze_1787 = None
    unsqueeze_1789: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_739, -1);  mul_739 = None
    unsqueeze_1790: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1789, -1);  unsqueeze_1789 = None
    sub_221: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_221, unsqueeze_1788);  convolution_221 = unsqueeze_1788 = None
    mul_740: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_221, unsqueeze_1790);  sub_221 = unsqueeze_1790 = None
    unsqueeze_1791: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg664_1, -1);  arg664_1 = None
    unsqueeze_1792: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1791, -1);  unsqueeze_1791 = None
    mul_741: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_740, unsqueeze_1792);  mul_740 = unsqueeze_1792 = None
    unsqueeze_1793: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg665_1, -1);  arg665_1 = None
    unsqueeze_1794: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1793, -1);  unsqueeze_1793 = None
    add_639: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_741, unsqueeze_1794);  mul_741 = unsqueeze_1794 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_200: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_639);  add_639 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_222: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_200, arg666_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_200 = arg666_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_558: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1647_1, torch.float32);  arg1647_1 = None
    convert_element_type_559: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1648_1, torch.float32);  arg1648_1 = None
    add_640: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_559, 1e-05);  convert_element_type_559 = None
    sqrt_222: "f32[36]" = torch.ops.aten.sqrt.default(add_640);  add_640 = None
    reciprocal_222: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_222);  sqrt_222 = None
    mul_742: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_222, 1);  reciprocal_222 = None
    unsqueeze_1795: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_558, -1);  convert_element_type_558 = None
    unsqueeze_1796: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1795, -1);  unsqueeze_1795 = None
    unsqueeze_1797: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_742, -1);  mul_742 = None
    unsqueeze_1798: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1797, -1);  unsqueeze_1797 = None
    sub_222: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_222, unsqueeze_1796);  convolution_222 = unsqueeze_1796 = None
    mul_743: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_222, unsqueeze_1798);  sub_222 = unsqueeze_1798 = None
    unsqueeze_1799: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg667_1, -1);  arg667_1 = None
    unsqueeze_1800: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1799, -1);  unsqueeze_1799 = None
    mul_744: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_743, unsqueeze_1800);  mul_743 = unsqueeze_1800 = None
    unsqueeze_1801: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg668_1, -1);  arg668_1 = None
    unsqueeze_1802: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1801, -1);  unsqueeze_1801 = None
    add_641: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_744, unsqueeze_1802);  mul_744 = unsqueeze_1802 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_642: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_641, relu_199);  add_641 = relu_199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_201: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_642);  add_642 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_223: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_201, arg669_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg669_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_560: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1650_1, torch.float32);  arg1650_1 = None
    convert_element_type_561: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1651_1, torch.float32);  arg1651_1 = None
    add_643: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_561, 1e-05);  convert_element_type_561 = None
    sqrt_223: "f32[36]" = torch.ops.aten.sqrt.default(add_643);  add_643 = None
    reciprocal_223: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_223);  sqrt_223 = None
    mul_745: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_223, 1);  reciprocal_223 = None
    unsqueeze_1803: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_560, -1);  convert_element_type_560 = None
    unsqueeze_1804: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1803, -1);  unsqueeze_1803 = None
    unsqueeze_1805: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_745, -1);  mul_745 = None
    unsqueeze_1806: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1805, -1);  unsqueeze_1805 = None
    sub_223: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_223, unsqueeze_1804);  convolution_223 = unsqueeze_1804 = None
    mul_746: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_223, unsqueeze_1806);  sub_223 = unsqueeze_1806 = None
    unsqueeze_1807: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg670_1, -1);  arg670_1 = None
    unsqueeze_1808: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1807, -1);  unsqueeze_1807 = None
    mul_747: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_746, unsqueeze_1808);  mul_746 = unsqueeze_1808 = None
    unsqueeze_1809: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg671_1, -1);  arg671_1 = None
    unsqueeze_1810: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1809, -1);  unsqueeze_1809 = None
    add_644: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_747, unsqueeze_1810);  mul_747 = unsqueeze_1810 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_202: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_644);  add_644 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_224: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_202, arg672_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_202 = arg672_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_562: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1653_1, torch.float32);  arg1653_1 = None
    convert_element_type_563: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1654_1, torch.float32);  arg1654_1 = None
    add_645: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_563, 1e-05);  convert_element_type_563 = None
    sqrt_224: "f32[36]" = torch.ops.aten.sqrt.default(add_645);  add_645 = None
    reciprocal_224: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_224);  sqrt_224 = None
    mul_748: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_224, 1);  reciprocal_224 = None
    unsqueeze_1811: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_562, -1);  convert_element_type_562 = None
    unsqueeze_1812: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1811, -1);  unsqueeze_1811 = None
    unsqueeze_1813: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_748, -1);  mul_748 = None
    unsqueeze_1814: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1813, -1);  unsqueeze_1813 = None
    sub_224: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_224, unsqueeze_1812);  convolution_224 = unsqueeze_1812 = None
    mul_749: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_224, unsqueeze_1814);  sub_224 = unsqueeze_1814 = None
    unsqueeze_1815: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg673_1, -1);  arg673_1 = None
    unsqueeze_1816: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1815, -1);  unsqueeze_1815 = None
    mul_750: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_749, unsqueeze_1816);  mul_749 = unsqueeze_1816 = None
    unsqueeze_1817: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg674_1, -1);  arg674_1 = None
    unsqueeze_1818: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1817, -1);  unsqueeze_1817 = None
    add_646: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_750, unsqueeze_1818);  mul_750 = unsqueeze_1818 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_647: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_646, relu_201);  add_646 = relu_201 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_203: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_647);  add_647 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_225: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_183, arg675_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg675_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_564: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1656_1, torch.float32);  arg1656_1 = None
    convert_element_type_565: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1657_1, torch.float32);  arg1657_1 = None
    add_648: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_565, 1e-05);  convert_element_type_565 = None
    sqrt_225: "f32[72]" = torch.ops.aten.sqrt.default(add_648);  add_648 = None
    reciprocal_225: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_225);  sqrt_225 = None
    mul_751: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_225, 1);  reciprocal_225 = None
    unsqueeze_1819: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_564, -1);  convert_element_type_564 = None
    unsqueeze_1820: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1819, -1);  unsqueeze_1819 = None
    unsqueeze_1821: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_751, -1);  mul_751 = None
    unsqueeze_1822: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1821, -1);  unsqueeze_1821 = None
    sub_225: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_225, unsqueeze_1820);  convolution_225 = unsqueeze_1820 = None
    mul_752: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_225, unsqueeze_1822);  sub_225 = unsqueeze_1822 = None
    unsqueeze_1823: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg676_1, -1);  arg676_1 = None
    unsqueeze_1824: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1823, -1);  unsqueeze_1823 = None
    mul_753: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_752, unsqueeze_1824);  mul_752 = unsqueeze_1824 = None
    unsqueeze_1825: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg677_1, -1);  arg677_1 = None
    unsqueeze_1826: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1825, -1);  unsqueeze_1825 = None
    add_649: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_753, unsqueeze_1826);  mul_753 = unsqueeze_1826 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_204: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_649);  add_649 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_226: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_204, arg678_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_204 = arg678_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_566: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1659_1, torch.float32);  arg1659_1 = None
    convert_element_type_567: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1660_1, torch.float32);  arg1660_1 = None
    add_650: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_567, 1e-05);  convert_element_type_567 = None
    sqrt_226: "f32[72]" = torch.ops.aten.sqrt.default(add_650);  add_650 = None
    reciprocal_226: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_226);  sqrt_226 = None
    mul_754: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_226, 1);  reciprocal_226 = None
    unsqueeze_1827: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_566, -1);  convert_element_type_566 = None
    unsqueeze_1828: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1827, -1);  unsqueeze_1827 = None
    unsqueeze_1829: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_754, -1);  mul_754 = None
    unsqueeze_1830: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1829, -1);  unsqueeze_1829 = None
    sub_226: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_226, unsqueeze_1828);  convolution_226 = unsqueeze_1828 = None
    mul_755: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_226, unsqueeze_1830);  sub_226 = unsqueeze_1830 = None
    unsqueeze_1831: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg679_1, -1);  arg679_1 = None
    unsqueeze_1832: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1831, -1);  unsqueeze_1831 = None
    mul_756: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_755, unsqueeze_1832);  mul_755 = unsqueeze_1832 = None
    unsqueeze_1833: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg680_1, -1);  arg680_1 = None
    unsqueeze_1834: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1833, -1);  unsqueeze_1833 = None
    add_651: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_756, unsqueeze_1834);  mul_756 = unsqueeze_1834 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_652: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_651, relu_183);  add_651 = relu_183 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_205: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_652);  add_652 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_227: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_205, arg681_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg681_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_568: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1662_1, torch.float32);  arg1662_1 = None
    convert_element_type_569: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1663_1, torch.float32);  arg1663_1 = None
    add_653: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_569, 1e-05);  convert_element_type_569 = None
    sqrt_227: "f32[72]" = torch.ops.aten.sqrt.default(add_653);  add_653 = None
    reciprocal_227: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_227);  sqrt_227 = None
    mul_757: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_227, 1);  reciprocal_227 = None
    unsqueeze_1835: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_568, -1);  convert_element_type_568 = None
    unsqueeze_1836: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1835, -1);  unsqueeze_1835 = None
    unsqueeze_1837: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_757, -1);  mul_757 = None
    unsqueeze_1838: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1837, -1);  unsqueeze_1837 = None
    sub_227: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_227, unsqueeze_1836);  convolution_227 = unsqueeze_1836 = None
    mul_758: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_227, unsqueeze_1838);  sub_227 = unsqueeze_1838 = None
    unsqueeze_1839: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg682_1, -1);  arg682_1 = None
    unsqueeze_1840: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1839, -1);  unsqueeze_1839 = None
    mul_759: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_758, unsqueeze_1840);  mul_758 = unsqueeze_1840 = None
    unsqueeze_1841: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg683_1, -1);  arg683_1 = None
    unsqueeze_1842: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1841, -1);  unsqueeze_1841 = None
    add_654: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_759, unsqueeze_1842);  mul_759 = unsqueeze_1842 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_206: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_654);  add_654 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_228: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_206, arg684_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_206 = arg684_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_570: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1665_1, torch.float32);  arg1665_1 = None
    convert_element_type_571: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1666_1, torch.float32);  arg1666_1 = None
    add_655: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_571, 1e-05);  convert_element_type_571 = None
    sqrt_228: "f32[72]" = torch.ops.aten.sqrt.default(add_655);  add_655 = None
    reciprocal_228: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_228);  sqrt_228 = None
    mul_760: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_228, 1);  reciprocal_228 = None
    unsqueeze_1843: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_570, -1);  convert_element_type_570 = None
    unsqueeze_1844: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1843, -1);  unsqueeze_1843 = None
    unsqueeze_1845: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_760, -1);  mul_760 = None
    unsqueeze_1846: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1845, -1);  unsqueeze_1845 = None
    sub_228: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_228, unsqueeze_1844);  convolution_228 = unsqueeze_1844 = None
    mul_761: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_228, unsqueeze_1846);  sub_228 = unsqueeze_1846 = None
    unsqueeze_1847: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg685_1, -1);  arg685_1 = None
    unsqueeze_1848: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1847, -1);  unsqueeze_1847 = None
    mul_762: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_761, unsqueeze_1848);  mul_761 = unsqueeze_1848 = None
    unsqueeze_1849: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg686_1, -1);  arg686_1 = None
    unsqueeze_1850: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1849, -1);  unsqueeze_1849 = None
    add_656: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_762, unsqueeze_1850);  mul_762 = unsqueeze_1850 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_657: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_656, relu_205);  add_656 = relu_205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_207: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_657);  add_657 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_229: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_207, arg687_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg687_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_572: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1668_1, torch.float32);  arg1668_1 = None
    convert_element_type_573: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1669_1, torch.float32);  arg1669_1 = None
    add_658: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_573, 1e-05);  convert_element_type_573 = None
    sqrt_229: "f32[72]" = torch.ops.aten.sqrt.default(add_658);  add_658 = None
    reciprocal_229: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_229);  sqrt_229 = None
    mul_763: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_229, 1);  reciprocal_229 = None
    unsqueeze_1851: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_572, -1);  convert_element_type_572 = None
    unsqueeze_1852: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1851, -1);  unsqueeze_1851 = None
    unsqueeze_1853: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_763, -1);  mul_763 = None
    unsqueeze_1854: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1853, -1);  unsqueeze_1853 = None
    sub_229: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_229, unsqueeze_1852);  convolution_229 = unsqueeze_1852 = None
    mul_764: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_229, unsqueeze_1854);  sub_229 = unsqueeze_1854 = None
    unsqueeze_1855: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg688_1, -1);  arg688_1 = None
    unsqueeze_1856: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1855, -1);  unsqueeze_1855 = None
    mul_765: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_764, unsqueeze_1856);  mul_764 = unsqueeze_1856 = None
    unsqueeze_1857: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg689_1, -1);  arg689_1 = None
    unsqueeze_1858: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1857, -1);  unsqueeze_1857 = None
    add_659: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_765, unsqueeze_1858);  mul_765 = unsqueeze_1858 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_208: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_659);  add_659 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_230: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_208, arg690_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_208 = arg690_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_574: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1671_1, torch.float32);  arg1671_1 = None
    convert_element_type_575: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1672_1, torch.float32);  arg1672_1 = None
    add_660: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_575, 1e-05);  convert_element_type_575 = None
    sqrt_230: "f32[72]" = torch.ops.aten.sqrt.default(add_660);  add_660 = None
    reciprocal_230: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_230);  sqrt_230 = None
    mul_766: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_230, 1);  reciprocal_230 = None
    unsqueeze_1859: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_574, -1);  convert_element_type_574 = None
    unsqueeze_1860: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1859, -1);  unsqueeze_1859 = None
    unsqueeze_1861: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_766, -1);  mul_766 = None
    unsqueeze_1862: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1861, -1);  unsqueeze_1861 = None
    sub_230: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_230, unsqueeze_1860);  convolution_230 = unsqueeze_1860 = None
    mul_767: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_230, unsqueeze_1862);  sub_230 = unsqueeze_1862 = None
    unsqueeze_1863: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg691_1, -1);  arg691_1 = None
    unsqueeze_1864: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1863, -1);  unsqueeze_1863 = None
    mul_768: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_767, unsqueeze_1864);  mul_767 = unsqueeze_1864 = None
    unsqueeze_1865: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg692_1, -1);  arg692_1 = None
    unsqueeze_1866: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1865, -1);  unsqueeze_1865 = None
    add_661: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_768, unsqueeze_1866);  mul_768 = unsqueeze_1866 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_662: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_661, relu_207);  add_661 = relu_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_209: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_662);  add_662 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_231: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_209, arg693_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg693_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_576: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1674_1, torch.float32);  arg1674_1 = None
    convert_element_type_577: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1675_1, torch.float32);  arg1675_1 = None
    add_663: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_577, 1e-05);  convert_element_type_577 = None
    sqrt_231: "f32[72]" = torch.ops.aten.sqrt.default(add_663);  add_663 = None
    reciprocal_231: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_231);  sqrt_231 = None
    mul_769: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_231, 1);  reciprocal_231 = None
    unsqueeze_1867: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_576, -1);  convert_element_type_576 = None
    unsqueeze_1868: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1867, -1);  unsqueeze_1867 = None
    unsqueeze_1869: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_769, -1);  mul_769 = None
    unsqueeze_1870: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1869, -1);  unsqueeze_1869 = None
    sub_231: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_231, unsqueeze_1868);  convolution_231 = unsqueeze_1868 = None
    mul_770: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_231, unsqueeze_1870);  sub_231 = unsqueeze_1870 = None
    unsqueeze_1871: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg694_1, -1);  arg694_1 = None
    unsqueeze_1872: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1871, -1);  unsqueeze_1871 = None
    mul_771: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_770, unsqueeze_1872);  mul_770 = unsqueeze_1872 = None
    unsqueeze_1873: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg695_1, -1);  arg695_1 = None
    unsqueeze_1874: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1873, -1);  unsqueeze_1873 = None
    add_664: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_771, unsqueeze_1874);  mul_771 = unsqueeze_1874 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_210: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_664);  add_664 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_232: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_210, arg696_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_210 = arg696_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_578: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1677_1, torch.float32);  arg1677_1 = None
    convert_element_type_579: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1678_1, torch.float32);  arg1678_1 = None
    add_665: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_579, 1e-05);  convert_element_type_579 = None
    sqrt_232: "f32[72]" = torch.ops.aten.sqrt.default(add_665);  add_665 = None
    reciprocal_232: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_232);  sqrt_232 = None
    mul_772: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_232, 1);  reciprocal_232 = None
    unsqueeze_1875: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_578, -1);  convert_element_type_578 = None
    unsqueeze_1876: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1875, -1);  unsqueeze_1875 = None
    unsqueeze_1877: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_772, -1);  mul_772 = None
    unsqueeze_1878: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1877, -1);  unsqueeze_1877 = None
    sub_232: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_232, unsqueeze_1876);  convolution_232 = unsqueeze_1876 = None
    mul_773: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_232, unsqueeze_1878);  sub_232 = unsqueeze_1878 = None
    unsqueeze_1879: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg697_1, -1);  arg697_1 = None
    unsqueeze_1880: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1879, -1);  unsqueeze_1879 = None
    mul_774: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_773, unsqueeze_1880);  mul_773 = unsqueeze_1880 = None
    unsqueeze_1881: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg698_1, -1);  arg698_1 = None
    unsqueeze_1882: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1881, -1);  unsqueeze_1881 = None
    add_666: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_774, unsqueeze_1882);  mul_774 = unsqueeze_1882 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_667: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_666, relu_209);  add_666 = relu_209 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_211: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_667);  add_667 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_233: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_187, arg699_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg699_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_580: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1680_1, torch.float32);  arg1680_1 = None
    convert_element_type_581: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1681_1, torch.float32);  arg1681_1 = None
    add_668: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_581, 1e-05);  convert_element_type_581 = None
    sqrt_233: "f32[144]" = torch.ops.aten.sqrt.default(add_668);  add_668 = None
    reciprocal_233: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_233);  sqrt_233 = None
    mul_775: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_233, 1);  reciprocal_233 = None
    unsqueeze_1883: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_580, -1);  convert_element_type_580 = None
    unsqueeze_1884: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1883, -1);  unsqueeze_1883 = None
    unsqueeze_1885: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_775, -1);  mul_775 = None
    unsqueeze_1886: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1885, -1);  unsqueeze_1885 = None
    sub_233: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_233, unsqueeze_1884);  convolution_233 = unsqueeze_1884 = None
    mul_776: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_233, unsqueeze_1886);  sub_233 = unsqueeze_1886 = None
    unsqueeze_1887: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg700_1, -1);  arg700_1 = None
    unsqueeze_1888: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1887, -1);  unsqueeze_1887 = None
    mul_777: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_776, unsqueeze_1888);  mul_776 = unsqueeze_1888 = None
    unsqueeze_1889: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg701_1, -1);  arg701_1 = None
    unsqueeze_1890: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1889, -1);  unsqueeze_1889 = None
    add_669: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_777, unsqueeze_1890);  mul_777 = unsqueeze_1890 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_212: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_669);  add_669 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_234: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_212, arg702_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_212 = arg702_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_582: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1683_1, torch.float32);  arg1683_1 = None
    convert_element_type_583: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1684_1, torch.float32);  arg1684_1 = None
    add_670: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_583, 1e-05);  convert_element_type_583 = None
    sqrt_234: "f32[144]" = torch.ops.aten.sqrt.default(add_670);  add_670 = None
    reciprocal_234: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_234);  sqrt_234 = None
    mul_778: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_234, 1);  reciprocal_234 = None
    unsqueeze_1891: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_582, -1);  convert_element_type_582 = None
    unsqueeze_1892: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1891, -1);  unsqueeze_1891 = None
    unsqueeze_1893: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_778, -1);  mul_778 = None
    unsqueeze_1894: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1893, -1);  unsqueeze_1893 = None
    sub_234: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_234, unsqueeze_1892);  convolution_234 = unsqueeze_1892 = None
    mul_779: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_234, unsqueeze_1894);  sub_234 = unsqueeze_1894 = None
    unsqueeze_1895: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg703_1, -1);  arg703_1 = None
    unsqueeze_1896: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1895, -1);  unsqueeze_1895 = None
    mul_780: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_779, unsqueeze_1896);  mul_779 = unsqueeze_1896 = None
    unsqueeze_1897: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg704_1, -1);  arg704_1 = None
    unsqueeze_1898: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1897, -1);  unsqueeze_1897 = None
    add_671: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_780, unsqueeze_1898);  mul_780 = unsqueeze_1898 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_672: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_671, relu_187);  add_671 = relu_187 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_213: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_672);  add_672 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_235: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_213, arg705_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg705_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_584: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1686_1, torch.float32);  arg1686_1 = None
    convert_element_type_585: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1687_1, torch.float32);  arg1687_1 = None
    add_673: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_585, 1e-05);  convert_element_type_585 = None
    sqrt_235: "f32[144]" = torch.ops.aten.sqrt.default(add_673);  add_673 = None
    reciprocal_235: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_235);  sqrt_235 = None
    mul_781: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_235, 1);  reciprocal_235 = None
    unsqueeze_1899: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_584, -1);  convert_element_type_584 = None
    unsqueeze_1900: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1899, -1);  unsqueeze_1899 = None
    unsqueeze_1901: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_781, -1);  mul_781 = None
    unsqueeze_1902: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1901, -1);  unsqueeze_1901 = None
    sub_235: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_235, unsqueeze_1900);  convolution_235 = unsqueeze_1900 = None
    mul_782: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_235, unsqueeze_1902);  sub_235 = unsqueeze_1902 = None
    unsqueeze_1903: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg706_1, -1);  arg706_1 = None
    unsqueeze_1904: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1903, -1);  unsqueeze_1903 = None
    mul_783: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_782, unsqueeze_1904);  mul_782 = unsqueeze_1904 = None
    unsqueeze_1905: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg707_1, -1);  arg707_1 = None
    unsqueeze_1906: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1905, -1);  unsqueeze_1905 = None
    add_674: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_783, unsqueeze_1906);  mul_783 = unsqueeze_1906 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_214: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_674);  add_674 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_236: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_214, arg708_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_214 = arg708_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_586: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1689_1, torch.float32);  arg1689_1 = None
    convert_element_type_587: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1690_1, torch.float32);  arg1690_1 = None
    add_675: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_587, 1e-05);  convert_element_type_587 = None
    sqrt_236: "f32[144]" = torch.ops.aten.sqrt.default(add_675);  add_675 = None
    reciprocal_236: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_236);  sqrt_236 = None
    mul_784: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_236, 1);  reciprocal_236 = None
    unsqueeze_1907: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_586, -1);  convert_element_type_586 = None
    unsqueeze_1908: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1907, -1);  unsqueeze_1907 = None
    unsqueeze_1909: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_784, -1);  mul_784 = None
    unsqueeze_1910: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1909, -1);  unsqueeze_1909 = None
    sub_236: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_236, unsqueeze_1908);  convolution_236 = unsqueeze_1908 = None
    mul_785: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_236, unsqueeze_1910);  sub_236 = unsqueeze_1910 = None
    unsqueeze_1911: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg709_1, -1);  arg709_1 = None
    unsqueeze_1912: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1911, -1);  unsqueeze_1911 = None
    mul_786: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_785, unsqueeze_1912);  mul_785 = unsqueeze_1912 = None
    unsqueeze_1913: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg710_1, -1);  arg710_1 = None
    unsqueeze_1914: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1913, -1);  unsqueeze_1913 = None
    add_676: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_786, unsqueeze_1914);  mul_786 = unsqueeze_1914 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_677: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_676, relu_213);  add_676 = relu_213 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_215: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_677);  add_677 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_237: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_215, arg711_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg711_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_588: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1692_1, torch.float32);  arg1692_1 = None
    convert_element_type_589: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1693_1, torch.float32);  arg1693_1 = None
    add_678: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_589, 1e-05);  convert_element_type_589 = None
    sqrt_237: "f32[144]" = torch.ops.aten.sqrt.default(add_678);  add_678 = None
    reciprocal_237: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_237);  sqrt_237 = None
    mul_787: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_237, 1);  reciprocal_237 = None
    unsqueeze_1915: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_588, -1);  convert_element_type_588 = None
    unsqueeze_1916: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1915, -1);  unsqueeze_1915 = None
    unsqueeze_1917: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_787, -1);  mul_787 = None
    unsqueeze_1918: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1917, -1);  unsqueeze_1917 = None
    sub_237: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_237, unsqueeze_1916);  convolution_237 = unsqueeze_1916 = None
    mul_788: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_237, unsqueeze_1918);  sub_237 = unsqueeze_1918 = None
    unsqueeze_1919: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg712_1, -1);  arg712_1 = None
    unsqueeze_1920: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1919, -1);  unsqueeze_1919 = None
    mul_789: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_788, unsqueeze_1920);  mul_788 = unsqueeze_1920 = None
    unsqueeze_1921: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg713_1, -1);  arg713_1 = None
    unsqueeze_1922: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1921, -1);  unsqueeze_1921 = None
    add_679: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_789, unsqueeze_1922);  mul_789 = unsqueeze_1922 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_216: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_679);  add_679 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_238: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_216, arg714_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_216 = arg714_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_590: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1695_1, torch.float32);  arg1695_1 = None
    convert_element_type_591: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1696_1, torch.float32);  arg1696_1 = None
    add_680: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_591, 1e-05);  convert_element_type_591 = None
    sqrt_238: "f32[144]" = torch.ops.aten.sqrt.default(add_680);  add_680 = None
    reciprocal_238: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_238);  sqrt_238 = None
    mul_790: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_238, 1);  reciprocal_238 = None
    unsqueeze_1923: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_590, -1);  convert_element_type_590 = None
    unsqueeze_1924: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1923, -1);  unsqueeze_1923 = None
    unsqueeze_1925: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_790, -1);  mul_790 = None
    unsqueeze_1926: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1925, -1);  unsqueeze_1925 = None
    sub_238: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_238, unsqueeze_1924);  convolution_238 = unsqueeze_1924 = None
    mul_791: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_238, unsqueeze_1926);  sub_238 = unsqueeze_1926 = None
    unsqueeze_1927: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg715_1, -1);  arg715_1 = None
    unsqueeze_1928: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1927, -1);  unsqueeze_1927 = None
    mul_792: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_791, unsqueeze_1928);  mul_791 = unsqueeze_1928 = None
    unsqueeze_1929: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg716_1, -1);  arg716_1 = None
    unsqueeze_1930: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1929, -1);  unsqueeze_1929 = None
    add_681: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_792, unsqueeze_1930);  mul_792 = unsqueeze_1930 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_682: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_681, relu_215);  add_681 = relu_215 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_217: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_682);  add_682 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_239: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_217, arg717_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg717_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_592: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1698_1, torch.float32);  arg1698_1 = None
    convert_element_type_593: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1699_1, torch.float32);  arg1699_1 = None
    add_683: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_593, 1e-05);  convert_element_type_593 = None
    sqrt_239: "f32[144]" = torch.ops.aten.sqrt.default(add_683);  add_683 = None
    reciprocal_239: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_239);  sqrt_239 = None
    mul_793: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_239, 1);  reciprocal_239 = None
    unsqueeze_1931: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_592, -1);  convert_element_type_592 = None
    unsqueeze_1932: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1931, -1);  unsqueeze_1931 = None
    unsqueeze_1933: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_793, -1);  mul_793 = None
    unsqueeze_1934: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1933, -1);  unsqueeze_1933 = None
    sub_239: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_239, unsqueeze_1932);  convolution_239 = unsqueeze_1932 = None
    mul_794: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_239, unsqueeze_1934);  sub_239 = unsqueeze_1934 = None
    unsqueeze_1935: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg718_1, -1);  arg718_1 = None
    unsqueeze_1936: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1935, -1);  unsqueeze_1935 = None
    mul_795: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_794, unsqueeze_1936);  mul_794 = unsqueeze_1936 = None
    unsqueeze_1937: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg719_1, -1);  arg719_1 = None
    unsqueeze_1938: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1937, -1);  unsqueeze_1937 = None
    add_684: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_795, unsqueeze_1938);  mul_795 = unsqueeze_1938 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_218: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_684);  add_684 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_240: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_218, arg720_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_218 = arg720_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_594: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1701_1, torch.float32);  arg1701_1 = None
    convert_element_type_595: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1702_1, torch.float32);  arg1702_1 = None
    add_685: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_595, 1e-05);  convert_element_type_595 = None
    sqrt_240: "f32[144]" = torch.ops.aten.sqrt.default(add_685);  add_685 = None
    reciprocal_240: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_240);  sqrt_240 = None
    mul_796: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_240, 1);  reciprocal_240 = None
    unsqueeze_1939: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_594, -1);  convert_element_type_594 = None
    unsqueeze_1940: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1939, -1);  unsqueeze_1939 = None
    unsqueeze_1941: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_796, -1);  mul_796 = None
    unsqueeze_1942: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1941, -1);  unsqueeze_1941 = None
    sub_240: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_240, unsqueeze_1940);  convolution_240 = unsqueeze_1940 = None
    mul_797: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_240, unsqueeze_1942);  sub_240 = unsqueeze_1942 = None
    unsqueeze_1943: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg721_1, -1);  arg721_1 = None
    unsqueeze_1944: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1943, -1);  unsqueeze_1943 = None
    mul_798: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_797, unsqueeze_1944);  mul_797 = unsqueeze_1944 = None
    unsqueeze_1945: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg722_1, -1);  arg722_1 = None
    unsqueeze_1946: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1945, -1);  unsqueeze_1945 = None
    add_686: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_798, unsqueeze_1946);  mul_798 = unsqueeze_1946 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_687: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_686, relu_217);  add_686 = relu_217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_219: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_687);  add_687 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_241: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_203, arg723_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg723_1 = None
    convert_element_type_596: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1704_1, torch.float32);  arg1704_1 = None
    convert_element_type_597: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1705_1, torch.float32);  arg1705_1 = None
    add_688: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_597, 1e-05);  convert_element_type_597 = None
    sqrt_241: "f32[18]" = torch.ops.aten.sqrt.default(add_688);  add_688 = None
    reciprocal_241: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_241);  sqrt_241 = None
    mul_799: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_241, 1);  reciprocal_241 = None
    unsqueeze_1947: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_596, -1);  convert_element_type_596 = None
    unsqueeze_1948: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1947, -1);  unsqueeze_1947 = None
    unsqueeze_1949: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_799, -1);  mul_799 = None
    unsqueeze_1950: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1949, -1);  unsqueeze_1949 = None
    sub_241: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_241, unsqueeze_1948);  convolution_241 = unsqueeze_1948 = None
    mul_800: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_241, unsqueeze_1950);  sub_241 = unsqueeze_1950 = None
    unsqueeze_1951: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg724_1, -1);  arg724_1 = None
    unsqueeze_1952: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1951, -1);  unsqueeze_1951 = None
    mul_801: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_800, unsqueeze_1952);  mul_800 = unsqueeze_1952 = None
    unsqueeze_1953: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg725_1, -1);  arg725_1 = None
    unsqueeze_1954: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1953, -1);  unsqueeze_1953 = None
    add_689: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_801, unsqueeze_1954);  mul_801 = unsqueeze_1954 = None
    iota_38: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_598: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_38, torch.float64);  iota_38 = None
    mul_802: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_598, 1);  convert_element_type_598 = None
    add_690: "f64[56]" = torch.ops.aten.add.Tensor(mul_802, 0);  mul_802 = None
    convert_element_type_599: "f32[56]" = torch.ops.prims.convert_element_type.default(add_690, torch.float32);  add_690 = None
    add_691: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_599, 0.0);  convert_element_type_599 = None
    mul_803: "f32[56]" = torch.ops.aten.mul.Tensor(add_691, 0.5);  add_691 = None
    convert_element_type_600: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_803, torch.int64);  mul_803 = None
    unsqueeze_1955: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_600, -1);  convert_element_type_600 = None
    iota_39: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_601: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_39, torch.float64);  iota_39 = None
    mul_804: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_601, 1);  convert_element_type_601 = None
    add_692: "f64[56]" = torch.ops.aten.add.Tensor(mul_804, 0);  mul_804 = None
    convert_element_type_602: "f32[56]" = torch.ops.prims.convert_element_type.default(add_692, torch.float32);  add_692 = None
    add_693: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_602, 0.0);  convert_element_type_602 = None
    mul_805: "f32[56]" = torch.ops.aten.mul.Tensor(add_693, 0.5);  add_693 = None
    convert_element_type_603: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_805, torch.int64);  mul_805 = None
    _unsafe_index_19: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_689, [None, None, unsqueeze_1955, convert_element_type_603]);  add_689 = unsqueeze_1955 = convert_element_type_603 = None
    add_694: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_195, _unsafe_index_19);  _unsafe_index_19 = None
    convolution_242: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_211, arg726_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg726_1 = None
    convert_element_type_604: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1707_1, torch.float32);  arg1707_1 = None
    convert_element_type_605: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1708_1, torch.float32);  arg1708_1 = None
    add_695: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_605, 1e-05);  convert_element_type_605 = None
    sqrt_242: "f32[18]" = torch.ops.aten.sqrt.default(add_695);  add_695 = None
    reciprocal_242: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_242);  sqrt_242 = None
    mul_806: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_242, 1);  reciprocal_242 = None
    unsqueeze_1956: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_604, -1);  convert_element_type_604 = None
    unsqueeze_1957: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1956, -1);  unsqueeze_1956 = None
    unsqueeze_1958: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_806, -1);  mul_806 = None
    unsqueeze_1959: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1958, -1);  unsqueeze_1958 = None
    sub_242: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_242, unsqueeze_1957);  convolution_242 = unsqueeze_1957 = None
    mul_807: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_242, unsqueeze_1959);  sub_242 = unsqueeze_1959 = None
    unsqueeze_1960: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg727_1, -1);  arg727_1 = None
    unsqueeze_1961: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1960, -1);  unsqueeze_1960 = None
    mul_808: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_807, unsqueeze_1961);  mul_807 = unsqueeze_1961 = None
    unsqueeze_1962: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg728_1, -1);  arg728_1 = None
    unsqueeze_1963: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1962, -1);  unsqueeze_1962 = None
    add_696: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_808, unsqueeze_1963);  mul_808 = unsqueeze_1963 = None
    iota_40: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_606: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_40, torch.float64);  iota_40 = None
    mul_809: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_606, 1);  convert_element_type_606 = None
    add_697: "f64[56]" = torch.ops.aten.add.Tensor(mul_809, 0);  mul_809 = None
    convert_element_type_607: "f32[56]" = torch.ops.prims.convert_element_type.default(add_697, torch.float32);  add_697 = None
    add_698: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_607, 0.0);  convert_element_type_607 = None
    mul_810: "f32[56]" = torch.ops.aten.mul.Tensor(add_698, 0.25);  add_698 = None
    convert_element_type_608: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_810, torch.int64);  mul_810 = None
    unsqueeze_1964: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_608, -1);  convert_element_type_608 = None
    iota_41: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_609: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_41, torch.float64);  iota_41 = None
    mul_811: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_609, 1);  convert_element_type_609 = None
    add_699: "f64[56]" = torch.ops.aten.add.Tensor(mul_811, 0);  mul_811 = None
    convert_element_type_610: "f32[56]" = torch.ops.prims.convert_element_type.default(add_699, torch.float32);  add_699 = None
    add_700: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_610, 0.0);  convert_element_type_610 = None
    mul_812: "f32[56]" = torch.ops.aten.mul.Tensor(add_700, 0.25);  add_700 = None
    convert_element_type_611: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_812, torch.int64);  mul_812 = None
    _unsafe_index_20: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_696, [None, None, unsqueeze_1964, convert_element_type_611]);  add_696 = unsqueeze_1964 = convert_element_type_611 = None
    add_701: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_694, _unsafe_index_20);  add_694 = _unsafe_index_20 = None
    convolution_243: "f32[8, 18, 7, 7]" = torch.ops.aten.convolution.default(relu_219, arg729_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg729_1 = None
    convert_element_type_612: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1710_1, torch.float32);  arg1710_1 = None
    convert_element_type_613: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1711_1, torch.float32);  arg1711_1 = None
    add_702: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_613, 1e-05);  convert_element_type_613 = None
    sqrt_243: "f32[18]" = torch.ops.aten.sqrt.default(add_702);  add_702 = None
    reciprocal_243: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_243);  sqrt_243 = None
    mul_813: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_243, 1);  reciprocal_243 = None
    unsqueeze_1965: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_612, -1);  convert_element_type_612 = None
    unsqueeze_1966: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1965, -1);  unsqueeze_1965 = None
    unsqueeze_1967: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_813, -1);  mul_813 = None
    unsqueeze_1968: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1967, -1);  unsqueeze_1967 = None
    sub_243: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_243, unsqueeze_1966);  convolution_243 = unsqueeze_1966 = None
    mul_814: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_243, unsqueeze_1968);  sub_243 = unsqueeze_1968 = None
    unsqueeze_1969: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg730_1, -1);  arg730_1 = None
    unsqueeze_1970: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1969, -1);  unsqueeze_1969 = None
    mul_815: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(mul_814, unsqueeze_1970);  mul_814 = unsqueeze_1970 = None
    unsqueeze_1971: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg731_1, -1);  arg731_1 = None
    unsqueeze_1972: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1971, -1);  unsqueeze_1971 = None
    add_703: "f32[8, 18, 7, 7]" = torch.ops.aten.add.Tensor(mul_815, unsqueeze_1972);  mul_815 = unsqueeze_1972 = None
    iota_42: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_614: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_42, torch.float64);  iota_42 = None
    mul_816: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_614, 1);  convert_element_type_614 = None
    add_704: "f64[56]" = torch.ops.aten.add.Tensor(mul_816, 0);  mul_816 = None
    convert_element_type_615: "f32[56]" = torch.ops.prims.convert_element_type.default(add_704, torch.float32);  add_704 = None
    add_705: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_615, 0.0);  convert_element_type_615 = None
    mul_817: "f32[56]" = torch.ops.aten.mul.Tensor(add_705, 0.125);  add_705 = None
    convert_element_type_616: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_817, torch.int64);  mul_817 = None
    unsqueeze_1973: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_616, -1);  convert_element_type_616 = None
    iota_43: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_617: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_43, torch.float64);  iota_43 = None
    mul_818: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_617, 1);  convert_element_type_617 = None
    add_706: "f64[56]" = torch.ops.aten.add.Tensor(mul_818, 0);  mul_818 = None
    convert_element_type_618: "f32[56]" = torch.ops.prims.convert_element_type.default(add_706, torch.float32);  add_706 = None
    add_707: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_618, 0.0);  convert_element_type_618 = None
    mul_819: "f32[56]" = torch.ops.aten.mul.Tensor(add_707, 0.125);  add_707 = None
    convert_element_type_619: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_819, torch.int64);  mul_819 = None
    _unsafe_index_21: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_703, [None, None, unsqueeze_1973, convert_element_type_619]);  add_703 = unsqueeze_1973 = convert_element_type_619 = None
    add_708: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_701, _unsafe_index_21);  add_701 = _unsafe_index_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_220: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_708);  add_708 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_244: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_195, arg732_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg732_1 = None
    convert_element_type_620: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1713_1, torch.float32);  arg1713_1 = None
    convert_element_type_621: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1714_1, torch.float32);  arg1714_1 = None
    add_709: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_621, 1e-05);  convert_element_type_621 = None
    sqrt_244: "f32[36]" = torch.ops.aten.sqrt.default(add_709);  add_709 = None
    reciprocal_244: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_244);  sqrt_244 = None
    mul_820: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_244, 1);  reciprocal_244 = None
    unsqueeze_1974: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_620, -1);  convert_element_type_620 = None
    unsqueeze_1975: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1974, -1);  unsqueeze_1974 = None
    unsqueeze_1976: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_820, -1);  mul_820 = None
    unsqueeze_1977: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1976, -1);  unsqueeze_1976 = None
    sub_244: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_244, unsqueeze_1975);  convolution_244 = unsqueeze_1975 = None
    mul_821: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_244, unsqueeze_1977);  sub_244 = unsqueeze_1977 = None
    unsqueeze_1978: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg733_1, -1);  arg733_1 = None
    unsqueeze_1979: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1978, -1);  unsqueeze_1978 = None
    mul_822: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_821, unsqueeze_1979);  mul_821 = unsqueeze_1979 = None
    unsqueeze_1980: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg734_1, -1);  arg734_1 = None
    unsqueeze_1981: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1980, -1);  unsqueeze_1980 = None
    add_710: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_822, unsqueeze_1981);  mul_822 = unsqueeze_1981 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_711: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_710, relu_203);  add_710 = None
    convolution_245: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_211, arg735_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg735_1 = None
    convert_element_type_622: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1716_1, torch.float32);  arg1716_1 = None
    convert_element_type_623: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1717_1, torch.float32);  arg1717_1 = None
    add_712: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_623, 1e-05);  convert_element_type_623 = None
    sqrt_245: "f32[36]" = torch.ops.aten.sqrt.default(add_712);  add_712 = None
    reciprocal_245: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_245);  sqrt_245 = None
    mul_823: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_245, 1);  reciprocal_245 = None
    unsqueeze_1982: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_622, -1);  convert_element_type_622 = None
    unsqueeze_1983: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1982, -1);  unsqueeze_1982 = None
    unsqueeze_1984: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_823, -1);  mul_823 = None
    unsqueeze_1985: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1984, -1);  unsqueeze_1984 = None
    sub_245: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_245, unsqueeze_1983);  convolution_245 = unsqueeze_1983 = None
    mul_824: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_245, unsqueeze_1985);  sub_245 = unsqueeze_1985 = None
    unsqueeze_1986: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg736_1, -1);  arg736_1 = None
    unsqueeze_1987: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1986, -1);  unsqueeze_1986 = None
    mul_825: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_824, unsqueeze_1987);  mul_824 = unsqueeze_1987 = None
    unsqueeze_1988: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg737_1, -1);  arg737_1 = None
    unsqueeze_1989: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1988, -1);  unsqueeze_1988 = None
    add_713: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_825, unsqueeze_1989);  mul_825 = unsqueeze_1989 = None
    iota_44: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_624: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_44, torch.float64);  iota_44 = None
    mul_826: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_624, 1);  convert_element_type_624 = None
    add_714: "f64[28]" = torch.ops.aten.add.Tensor(mul_826, 0);  mul_826 = None
    convert_element_type_625: "f32[28]" = torch.ops.prims.convert_element_type.default(add_714, torch.float32);  add_714 = None
    add_715: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_625, 0.0);  convert_element_type_625 = None
    mul_827: "f32[28]" = torch.ops.aten.mul.Tensor(add_715, 0.5);  add_715 = None
    convert_element_type_626: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_827, torch.int64);  mul_827 = None
    unsqueeze_1990: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_626, -1);  convert_element_type_626 = None
    iota_45: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_627: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_45, torch.float64);  iota_45 = None
    mul_828: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_627, 1);  convert_element_type_627 = None
    add_716: "f64[28]" = torch.ops.aten.add.Tensor(mul_828, 0);  mul_828 = None
    convert_element_type_628: "f32[28]" = torch.ops.prims.convert_element_type.default(add_716, torch.float32);  add_716 = None
    add_717: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_628, 0.0);  convert_element_type_628 = None
    mul_829: "f32[28]" = torch.ops.aten.mul.Tensor(add_717, 0.5);  add_717 = None
    convert_element_type_629: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_829, torch.int64);  mul_829 = None
    _unsafe_index_22: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_713, [None, None, unsqueeze_1990, convert_element_type_629]);  add_713 = unsqueeze_1990 = convert_element_type_629 = None
    add_718: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_711, _unsafe_index_22);  add_711 = _unsafe_index_22 = None
    convolution_246: "f32[8, 36, 7, 7]" = torch.ops.aten.convolution.default(relu_219, arg738_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg738_1 = None
    convert_element_type_630: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1719_1, torch.float32);  arg1719_1 = None
    convert_element_type_631: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1720_1, torch.float32);  arg1720_1 = None
    add_719: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_631, 1e-05);  convert_element_type_631 = None
    sqrt_246: "f32[36]" = torch.ops.aten.sqrt.default(add_719);  add_719 = None
    reciprocal_246: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_246);  sqrt_246 = None
    mul_830: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_246, 1);  reciprocal_246 = None
    unsqueeze_1991: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_630, -1);  convert_element_type_630 = None
    unsqueeze_1992: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1991, -1);  unsqueeze_1991 = None
    unsqueeze_1993: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_830, -1);  mul_830 = None
    unsqueeze_1994: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1993, -1);  unsqueeze_1993 = None
    sub_246: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_246, unsqueeze_1992);  convolution_246 = unsqueeze_1992 = None
    mul_831: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_246, unsqueeze_1994);  sub_246 = unsqueeze_1994 = None
    unsqueeze_1995: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg739_1, -1);  arg739_1 = None
    unsqueeze_1996: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1995, -1);  unsqueeze_1995 = None
    mul_832: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(mul_831, unsqueeze_1996);  mul_831 = unsqueeze_1996 = None
    unsqueeze_1997: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg740_1, -1);  arg740_1 = None
    unsqueeze_1998: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1997, -1);  unsqueeze_1997 = None
    add_720: "f32[8, 36, 7, 7]" = torch.ops.aten.add.Tensor(mul_832, unsqueeze_1998);  mul_832 = unsqueeze_1998 = None
    iota_46: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_632: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_46, torch.float64);  iota_46 = None
    mul_833: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_632, 1);  convert_element_type_632 = None
    add_721: "f64[28]" = torch.ops.aten.add.Tensor(mul_833, 0);  mul_833 = None
    convert_element_type_633: "f32[28]" = torch.ops.prims.convert_element_type.default(add_721, torch.float32);  add_721 = None
    add_722: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_633, 0.0);  convert_element_type_633 = None
    mul_834: "f32[28]" = torch.ops.aten.mul.Tensor(add_722, 0.25);  add_722 = None
    convert_element_type_634: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_834, torch.int64);  mul_834 = None
    unsqueeze_1999: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_634, -1);  convert_element_type_634 = None
    iota_47: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_635: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_47, torch.float64);  iota_47 = None
    mul_835: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_635, 1);  convert_element_type_635 = None
    add_723: "f64[28]" = torch.ops.aten.add.Tensor(mul_835, 0);  mul_835 = None
    convert_element_type_636: "f32[28]" = torch.ops.prims.convert_element_type.default(add_723, torch.float32);  add_723 = None
    add_724: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_636, 0.0);  convert_element_type_636 = None
    mul_836: "f32[28]" = torch.ops.aten.mul.Tensor(add_724, 0.25);  add_724 = None
    convert_element_type_637: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_836, torch.int64);  mul_836 = None
    _unsafe_index_23: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_720, [None, None, unsqueeze_1999, convert_element_type_637]);  add_720 = unsqueeze_1999 = convert_element_type_637 = None
    add_725: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_718, _unsafe_index_23);  add_718 = _unsafe_index_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_221: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_725);  add_725 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_247: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_195, arg741_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg741_1 = None
    convert_element_type_638: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1722_1, torch.float32);  arg1722_1 = None
    convert_element_type_639: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1723_1, torch.float32);  arg1723_1 = None
    add_726: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_639, 1e-05);  convert_element_type_639 = None
    sqrt_247: "f32[18]" = torch.ops.aten.sqrt.default(add_726);  add_726 = None
    reciprocal_247: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_247);  sqrt_247 = None
    mul_837: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_247, 1);  reciprocal_247 = None
    unsqueeze_2000: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_638, -1);  convert_element_type_638 = None
    unsqueeze_2001: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2000, -1);  unsqueeze_2000 = None
    unsqueeze_2002: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_837, -1);  mul_837 = None
    unsqueeze_2003: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2002, -1);  unsqueeze_2002 = None
    sub_247: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_247, unsqueeze_2001);  convolution_247 = unsqueeze_2001 = None
    mul_838: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_247, unsqueeze_2003);  sub_247 = unsqueeze_2003 = None
    unsqueeze_2004: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg742_1, -1);  arg742_1 = None
    unsqueeze_2005: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2004, -1);  unsqueeze_2004 = None
    mul_839: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_838, unsqueeze_2005);  mul_838 = unsqueeze_2005 = None
    unsqueeze_2006: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg743_1, -1);  arg743_1 = None
    unsqueeze_2007: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2006, -1);  unsqueeze_2006 = None
    add_727: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_839, unsqueeze_2007);  mul_839 = unsqueeze_2007 = None
    relu_222: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_727);  add_727 = None
    convolution_248: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_222, arg744_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_222 = arg744_1 = None
    convert_element_type_640: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1725_1, torch.float32);  arg1725_1 = None
    convert_element_type_641: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1726_1, torch.float32);  arg1726_1 = None
    add_728: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_641, 1e-05);  convert_element_type_641 = None
    sqrt_248: "f32[72]" = torch.ops.aten.sqrt.default(add_728);  add_728 = None
    reciprocal_248: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_248);  sqrt_248 = None
    mul_840: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_248, 1);  reciprocal_248 = None
    unsqueeze_2008: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_640, -1);  convert_element_type_640 = None
    unsqueeze_2009: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2008, -1);  unsqueeze_2008 = None
    unsqueeze_2010: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_840, -1);  mul_840 = None
    unsqueeze_2011: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2010, -1);  unsqueeze_2010 = None
    sub_248: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_248, unsqueeze_2009);  convolution_248 = unsqueeze_2009 = None
    mul_841: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_248, unsqueeze_2011);  sub_248 = unsqueeze_2011 = None
    unsqueeze_2012: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg745_1, -1);  arg745_1 = None
    unsqueeze_2013: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2012, -1);  unsqueeze_2012 = None
    mul_842: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_841, unsqueeze_2013);  mul_841 = unsqueeze_2013 = None
    unsqueeze_2014: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg746_1, -1);  arg746_1 = None
    unsqueeze_2015: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2014, -1);  unsqueeze_2014 = None
    add_729: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_842, unsqueeze_2015);  mul_842 = unsqueeze_2015 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_249: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_203, arg747_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg747_1 = None
    convert_element_type_642: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1728_1, torch.float32);  arg1728_1 = None
    convert_element_type_643: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1729_1, torch.float32);  arg1729_1 = None
    add_730: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_643, 1e-05);  convert_element_type_643 = None
    sqrt_249: "f32[72]" = torch.ops.aten.sqrt.default(add_730);  add_730 = None
    reciprocal_249: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_249);  sqrt_249 = None
    mul_843: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_249, 1);  reciprocal_249 = None
    unsqueeze_2016: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_642, -1);  convert_element_type_642 = None
    unsqueeze_2017: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2016, -1);  unsqueeze_2016 = None
    unsqueeze_2018: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_843, -1);  mul_843 = None
    unsqueeze_2019: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2018, -1);  unsqueeze_2018 = None
    sub_249: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_249, unsqueeze_2017);  convolution_249 = unsqueeze_2017 = None
    mul_844: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_249, unsqueeze_2019);  sub_249 = unsqueeze_2019 = None
    unsqueeze_2020: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg748_1, -1);  arg748_1 = None
    unsqueeze_2021: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2020, -1);  unsqueeze_2020 = None
    mul_845: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_844, unsqueeze_2021);  mul_844 = unsqueeze_2021 = None
    unsqueeze_2022: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg749_1, -1);  arg749_1 = None
    unsqueeze_2023: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2022, -1);  unsqueeze_2022 = None
    add_731: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_845, unsqueeze_2023);  mul_845 = unsqueeze_2023 = None
    add_732: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_729, add_731);  add_729 = add_731 = None
    add_733: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_732, relu_211);  add_732 = None
    convolution_250: "f32[8, 72, 7, 7]" = torch.ops.aten.convolution.default(relu_219, arg750_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg750_1 = None
    convert_element_type_644: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1731_1, torch.float32);  arg1731_1 = None
    convert_element_type_645: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1732_1, torch.float32);  arg1732_1 = None
    add_734: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_645, 1e-05);  convert_element_type_645 = None
    sqrt_250: "f32[72]" = torch.ops.aten.sqrt.default(add_734);  add_734 = None
    reciprocal_250: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_250);  sqrt_250 = None
    mul_846: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_250, 1);  reciprocal_250 = None
    unsqueeze_2024: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_644, -1);  convert_element_type_644 = None
    unsqueeze_2025: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2024, -1);  unsqueeze_2024 = None
    unsqueeze_2026: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_846, -1);  mul_846 = None
    unsqueeze_2027: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2026, -1);  unsqueeze_2026 = None
    sub_250: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_250, unsqueeze_2025);  convolution_250 = unsqueeze_2025 = None
    mul_847: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_250, unsqueeze_2027);  sub_250 = unsqueeze_2027 = None
    unsqueeze_2028: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg751_1, -1);  arg751_1 = None
    unsqueeze_2029: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2028, -1);  unsqueeze_2028 = None
    mul_848: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(mul_847, unsqueeze_2029);  mul_847 = unsqueeze_2029 = None
    unsqueeze_2030: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg752_1, -1);  arg752_1 = None
    unsqueeze_2031: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2030, -1);  unsqueeze_2030 = None
    add_735: "f32[8, 72, 7, 7]" = torch.ops.aten.add.Tensor(mul_848, unsqueeze_2031);  mul_848 = unsqueeze_2031 = None
    iota_48: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_646: "f64[14]" = torch.ops.prims.convert_element_type.default(iota_48, torch.float64);  iota_48 = None
    mul_849: "f64[14]" = torch.ops.aten.mul.Tensor(convert_element_type_646, 1);  convert_element_type_646 = None
    add_736: "f64[14]" = torch.ops.aten.add.Tensor(mul_849, 0);  mul_849 = None
    convert_element_type_647: "f32[14]" = torch.ops.prims.convert_element_type.default(add_736, torch.float32);  add_736 = None
    add_737: "f32[14]" = torch.ops.aten.add.Tensor(convert_element_type_647, 0.0);  convert_element_type_647 = None
    mul_850: "f32[14]" = torch.ops.aten.mul.Tensor(add_737, 0.5);  add_737 = None
    convert_element_type_648: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_850, torch.int64);  mul_850 = None
    unsqueeze_2032: "i64[14, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_648, -1);  convert_element_type_648 = None
    iota_49: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_649: "f64[14]" = torch.ops.prims.convert_element_type.default(iota_49, torch.float64);  iota_49 = None
    mul_851: "f64[14]" = torch.ops.aten.mul.Tensor(convert_element_type_649, 1);  convert_element_type_649 = None
    add_738: "f64[14]" = torch.ops.aten.add.Tensor(mul_851, 0);  mul_851 = None
    convert_element_type_650: "f32[14]" = torch.ops.prims.convert_element_type.default(add_738, torch.float32);  add_738 = None
    add_739: "f32[14]" = torch.ops.aten.add.Tensor(convert_element_type_650, 0.0);  convert_element_type_650 = None
    mul_852: "f32[14]" = torch.ops.aten.mul.Tensor(add_739, 0.5);  add_739 = None
    convert_element_type_651: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_852, torch.int64);  mul_852 = None
    _unsafe_index_24: "f32[8, 72, 14, 14]" = torch.ops.aten._unsafe_index.Tensor(add_735, [None, None, unsqueeze_2032, convert_element_type_651]);  add_735 = unsqueeze_2032 = convert_element_type_651 = None
    add_740: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_733, _unsafe_index_24);  add_733 = _unsafe_index_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_223: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_740);  add_740 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_251: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_195, arg753_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_195 = arg753_1 = None
    convert_element_type_652: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1734_1, torch.float32);  arg1734_1 = None
    convert_element_type_653: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1735_1, torch.float32);  arg1735_1 = None
    add_741: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_653, 1e-05);  convert_element_type_653 = None
    sqrt_251: "f32[18]" = torch.ops.aten.sqrt.default(add_741);  add_741 = None
    reciprocal_251: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_251);  sqrt_251 = None
    mul_853: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_251, 1);  reciprocal_251 = None
    unsqueeze_2033: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_652, -1);  convert_element_type_652 = None
    unsqueeze_2034: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2033, -1);  unsqueeze_2033 = None
    unsqueeze_2035: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_853, -1);  mul_853 = None
    unsqueeze_2036: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2035, -1);  unsqueeze_2035 = None
    sub_251: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_251, unsqueeze_2034);  convolution_251 = unsqueeze_2034 = None
    mul_854: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_251, unsqueeze_2036);  sub_251 = unsqueeze_2036 = None
    unsqueeze_2037: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg754_1, -1);  arg754_1 = None
    unsqueeze_2038: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2037, -1);  unsqueeze_2037 = None
    mul_855: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_854, unsqueeze_2038);  mul_854 = unsqueeze_2038 = None
    unsqueeze_2039: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg755_1, -1);  arg755_1 = None
    unsqueeze_2040: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2039, -1);  unsqueeze_2039 = None
    add_742: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_855, unsqueeze_2040);  mul_855 = unsqueeze_2040 = None
    relu_224: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_742);  add_742 = None
    convolution_252: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_224, arg756_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_224 = arg756_1 = None
    convert_element_type_654: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1737_1, torch.float32);  arg1737_1 = None
    convert_element_type_655: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1738_1, torch.float32);  arg1738_1 = None
    add_743: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_655, 1e-05);  convert_element_type_655 = None
    sqrt_252: "f32[18]" = torch.ops.aten.sqrt.default(add_743);  add_743 = None
    reciprocal_252: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_252);  sqrt_252 = None
    mul_856: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_252, 1);  reciprocal_252 = None
    unsqueeze_2041: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_654, -1);  convert_element_type_654 = None
    unsqueeze_2042: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2041, -1);  unsqueeze_2041 = None
    unsqueeze_2043: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_856, -1);  mul_856 = None
    unsqueeze_2044: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2043, -1);  unsqueeze_2043 = None
    sub_252: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_252, unsqueeze_2042);  convolution_252 = unsqueeze_2042 = None
    mul_857: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_252, unsqueeze_2044);  sub_252 = unsqueeze_2044 = None
    unsqueeze_2045: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg757_1, -1);  arg757_1 = None
    unsqueeze_2046: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2045, -1);  unsqueeze_2045 = None
    mul_858: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_857, unsqueeze_2046);  mul_857 = unsqueeze_2046 = None
    unsqueeze_2047: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg758_1, -1);  arg758_1 = None
    unsqueeze_2048: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2047, -1);  unsqueeze_2047 = None
    add_744: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_858, unsqueeze_2048);  mul_858 = unsqueeze_2048 = None
    relu_225: "f32[8, 18, 14, 14]" = torch.ops.aten.relu.default(add_744);  add_744 = None
    convolution_253: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_225, arg759_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_225 = arg759_1 = None
    convert_element_type_656: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1740_1, torch.float32);  arg1740_1 = None
    convert_element_type_657: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1741_1, torch.float32);  arg1741_1 = None
    add_745: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_657, 1e-05);  convert_element_type_657 = None
    sqrt_253: "f32[144]" = torch.ops.aten.sqrt.default(add_745);  add_745 = None
    reciprocal_253: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_253);  sqrt_253 = None
    mul_859: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_253, 1);  reciprocal_253 = None
    unsqueeze_2049: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_656, -1);  convert_element_type_656 = None
    unsqueeze_2050: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2049, -1);  unsqueeze_2049 = None
    unsqueeze_2051: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_859, -1);  mul_859 = None
    unsqueeze_2052: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2051, -1);  unsqueeze_2051 = None
    sub_253: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_253, unsqueeze_2050);  convolution_253 = unsqueeze_2050 = None
    mul_860: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_253, unsqueeze_2052);  sub_253 = unsqueeze_2052 = None
    unsqueeze_2053: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg760_1, -1);  arg760_1 = None
    unsqueeze_2054: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2053, -1);  unsqueeze_2053 = None
    mul_861: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_860, unsqueeze_2054);  mul_860 = unsqueeze_2054 = None
    unsqueeze_2055: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg761_1, -1);  arg761_1 = None
    unsqueeze_2056: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2055, -1);  unsqueeze_2055 = None
    add_746: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_861, unsqueeze_2056);  mul_861 = unsqueeze_2056 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_254: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_203, arg762_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_203 = arg762_1 = None
    convert_element_type_658: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1743_1, torch.float32);  arg1743_1 = None
    convert_element_type_659: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1744_1, torch.float32);  arg1744_1 = None
    add_747: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_659, 1e-05);  convert_element_type_659 = None
    sqrt_254: "f32[36]" = torch.ops.aten.sqrt.default(add_747);  add_747 = None
    reciprocal_254: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_254);  sqrt_254 = None
    mul_862: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_254, 1);  reciprocal_254 = None
    unsqueeze_2057: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_658, -1);  convert_element_type_658 = None
    unsqueeze_2058: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2057, -1);  unsqueeze_2057 = None
    unsqueeze_2059: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_862, -1);  mul_862 = None
    unsqueeze_2060: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2059, -1);  unsqueeze_2059 = None
    sub_254: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_254, unsqueeze_2058);  convolution_254 = unsqueeze_2058 = None
    mul_863: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_254, unsqueeze_2060);  sub_254 = unsqueeze_2060 = None
    unsqueeze_2061: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg763_1, -1);  arg763_1 = None
    unsqueeze_2062: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2061, -1);  unsqueeze_2061 = None
    mul_864: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_863, unsqueeze_2062);  mul_863 = unsqueeze_2062 = None
    unsqueeze_2063: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg764_1, -1);  arg764_1 = None
    unsqueeze_2064: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2063, -1);  unsqueeze_2063 = None
    add_748: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_864, unsqueeze_2064);  mul_864 = unsqueeze_2064 = None
    relu_226: "f32[8, 36, 14, 14]" = torch.ops.aten.relu.default(add_748);  add_748 = None
    convolution_255: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_226, arg765_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_226 = arg765_1 = None
    convert_element_type_660: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1746_1, torch.float32);  arg1746_1 = None
    convert_element_type_661: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1747_1, torch.float32);  arg1747_1 = None
    add_749: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_661, 1e-05);  convert_element_type_661 = None
    sqrt_255: "f32[144]" = torch.ops.aten.sqrt.default(add_749);  add_749 = None
    reciprocal_255: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_255);  sqrt_255 = None
    mul_865: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_255, 1);  reciprocal_255 = None
    unsqueeze_2065: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_660, -1);  convert_element_type_660 = None
    unsqueeze_2066: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2065, -1);  unsqueeze_2065 = None
    unsqueeze_2067: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_865, -1);  mul_865 = None
    unsqueeze_2068: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2067, -1);  unsqueeze_2067 = None
    sub_255: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_255, unsqueeze_2066);  convolution_255 = unsqueeze_2066 = None
    mul_866: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_255, unsqueeze_2068);  sub_255 = unsqueeze_2068 = None
    unsqueeze_2069: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg766_1, -1);  arg766_1 = None
    unsqueeze_2070: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2069, -1);  unsqueeze_2069 = None
    mul_867: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_866, unsqueeze_2070);  mul_866 = unsqueeze_2070 = None
    unsqueeze_2071: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg767_1, -1);  arg767_1 = None
    unsqueeze_2072: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2071, -1);  unsqueeze_2071 = None
    add_750: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_867, unsqueeze_2072);  mul_867 = unsqueeze_2072 = None
    add_751: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_746, add_750);  add_746 = add_750 = None
    convolution_256: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_211, arg768_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_211 = arg768_1 = None
    convert_element_type_662: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1749_1, torch.float32);  arg1749_1 = None
    convert_element_type_663: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1750_1, torch.float32);  arg1750_1 = None
    add_752: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_663, 1e-05);  convert_element_type_663 = None
    sqrt_256: "f32[144]" = torch.ops.aten.sqrt.default(add_752);  add_752 = None
    reciprocal_256: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_256);  sqrt_256 = None
    mul_868: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_256, 1);  reciprocal_256 = None
    unsqueeze_2073: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_662, -1);  convert_element_type_662 = None
    unsqueeze_2074: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2073, -1);  unsqueeze_2073 = None
    unsqueeze_2075: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_868, -1);  mul_868 = None
    unsqueeze_2076: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2075, -1);  unsqueeze_2075 = None
    sub_256: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_256, unsqueeze_2074);  convolution_256 = unsqueeze_2074 = None
    mul_869: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_256, unsqueeze_2076);  sub_256 = unsqueeze_2076 = None
    unsqueeze_2077: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg769_1, -1);  arg769_1 = None
    unsqueeze_2078: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2077, -1);  unsqueeze_2077 = None
    mul_870: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_869, unsqueeze_2078);  mul_869 = unsqueeze_2078 = None
    unsqueeze_2079: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg770_1, -1);  arg770_1 = None
    unsqueeze_2080: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2079, -1);  unsqueeze_2079 = None
    add_753: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_870, unsqueeze_2080);  mul_870 = unsqueeze_2080 = None
    add_754: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_751, add_753);  add_751 = add_753 = None
    add_755: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_754, relu_219);  add_754 = relu_219 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_227: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_755);  add_755 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_257: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_220, arg771_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg771_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_664: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1752_1, torch.float32);  arg1752_1 = None
    convert_element_type_665: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1753_1, torch.float32);  arg1753_1 = None
    add_756: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_665, 1e-05);  convert_element_type_665 = None
    sqrt_257: "f32[18]" = torch.ops.aten.sqrt.default(add_756);  add_756 = None
    reciprocal_257: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_257);  sqrt_257 = None
    mul_871: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_257, 1);  reciprocal_257 = None
    unsqueeze_2081: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_664, -1);  convert_element_type_664 = None
    unsqueeze_2082: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2081, -1);  unsqueeze_2081 = None
    unsqueeze_2083: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_871, -1);  mul_871 = None
    unsqueeze_2084: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2083, -1);  unsqueeze_2083 = None
    sub_257: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_257, unsqueeze_2082);  convolution_257 = unsqueeze_2082 = None
    mul_872: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_257, unsqueeze_2084);  sub_257 = unsqueeze_2084 = None
    unsqueeze_2085: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg772_1, -1);  arg772_1 = None
    unsqueeze_2086: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2085, -1);  unsqueeze_2085 = None
    mul_873: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_872, unsqueeze_2086);  mul_872 = unsqueeze_2086 = None
    unsqueeze_2087: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg773_1, -1);  arg773_1 = None
    unsqueeze_2088: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2087, -1);  unsqueeze_2087 = None
    add_757: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_873, unsqueeze_2088);  mul_873 = unsqueeze_2088 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_228: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_757);  add_757 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_258: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_228, arg774_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_228 = arg774_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_666: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1755_1, torch.float32);  arg1755_1 = None
    convert_element_type_667: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1756_1, torch.float32);  arg1756_1 = None
    add_758: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_667, 1e-05);  convert_element_type_667 = None
    sqrt_258: "f32[18]" = torch.ops.aten.sqrt.default(add_758);  add_758 = None
    reciprocal_258: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_258);  sqrt_258 = None
    mul_874: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_258, 1);  reciprocal_258 = None
    unsqueeze_2089: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_666, -1);  convert_element_type_666 = None
    unsqueeze_2090: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2089, -1);  unsqueeze_2089 = None
    unsqueeze_2091: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_874, -1);  mul_874 = None
    unsqueeze_2092: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2091, -1);  unsqueeze_2091 = None
    sub_258: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_258, unsqueeze_2090);  convolution_258 = unsqueeze_2090 = None
    mul_875: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_258, unsqueeze_2092);  sub_258 = unsqueeze_2092 = None
    unsqueeze_2093: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg775_1, -1);  arg775_1 = None
    unsqueeze_2094: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2093, -1);  unsqueeze_2093 = None
    mul_876: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_875, unsqueeze_2094);  mul_875 = unsqueeze_2094 = None
    unsqueeze_2095: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg776_1, -1);  arg776_1 = None
    unsqueeze_2096: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2095, -1);  unsqueeze_2095 = None
    add_759: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_876, unsqueeze_2096);  mul_876 = unsqueeze_2096 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_760: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_759, relu_220);  add_759 = relu_220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_229: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_760);  add_760 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_259: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_229, arg777_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg777_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_668: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1758_1, torch.float32);  arg1758_1 = None
    convert_element_type_669: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1759_1, torch.float32);  arg1759_1 = None
    add_761: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_669, 1e-05);  convert_element_type_669 = None
    sqrt_259: "f32[18]" = torch.ops.aten.sqrt.default(add_761);  add_761 = None
    reciprocal_259: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_259);  sqrt_259 = None
    mul_877: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_259, 1);  reciprocal_259 = None
    unsqueeze_2097: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_668, -1);  convert_element_type_668 = None
    unsqueeze_2098: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2097, -1);  unsqueeze_2097 = None
    unsqueeze_2099: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_877, -1);  mul_877 = None
    unsqueeze_2100: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2099, -1);  unsqueeze_2099 = None
    sub_259: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_259, unsqueeze_2098);  convolution_259 = unsqueeze_2098 = None
    mul_878: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_259, unsqueeze_2100);  sub_259 = unsqueeze_2100 = None
    unsqueeze_2101: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg778_1, -1);  arg778_1 = None
    unsqueeze_2102: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2101, -1);  unsqueeze_2101 = None
    mul_879: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_878, unsqueeze_2102);  mul_878 = unsqueeze_2102 = None
    unsqueeze_2103: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg779_1, -1);  arg779_1 = None
    unsqueeze_2104: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2103, -1);  unsqueeze_2103 = None
    add_762: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_879, unsqueeze_2104);  mul_879 = unsqueeze_2104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_230: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_762);  add_762 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_260: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_230, arg780_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_230 = arg780_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_670: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1761_1, torch.float32);  arg1761_1 = None
    convert_element_type_671: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1762_1, torch.float32);  arg1762_1 = None
    add_763: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_671, 1e-05);  convert_element_type_671 = None
    sqrt_260: "f32[18]" = torch.ops.aten.sqrt.default(add_763);  add_763 = None
    reciprocal_260: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_260);  sqrt_260 = None
    mul_880: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_260, 1);  reciprocal_260 = None
    unsqueeze_2105: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_670, -1);  convert_element_type_670 = None
    unsqueeze_2106: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2105, -1);  unsqueeze_2105 = None
    unsqueeze_2107: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_880, -1);  mul_880 = None
    unsqueeze_2108: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2107, -1);  unsqueeze_2107 = None
    sub_260: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_260, unsqueeze_2106);  convolution_260 = unsqueeze_2106 = None
    mul_881: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_260, unsqueeze_2108);  sub_260 = unsqueeze_2108 = None
    unsqueeze_2109: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg781_1, -1);  arg781_1 = None
    unsqueeze_2110: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2109, -1);  unsqueeze_2109 = None
    mul_882: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_881, unsqueeze_2110);  mul_881 = unsqueeze_2110 = None
    unsqueeze_2111: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg782_1, -1);  arg782_1 = None
    unsqueeze_2112: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2111, -1);  unsqueeze_2111 = None
    add_764: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_882, unsqueeze_2112);  mul_882 = unsqueeze_2112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_765: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_764, relu_229);  add_764 = relu_229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_231: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_765);  add_765 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_261: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_231, arg783_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg783_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_672: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1764_1, torch.float32);  arg1764_1 = None
    convert_element_type_673: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1765_1, torch.float32);  arg1765_1 = None
    add_766: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_673, 1e-05);  convert_element_type_673 = None
    sqrt_261: "f32[18]" = torch.ops.aten.sqrt.default(add_766);  add_766 = None
    reciprocal_261: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_261);  sqrt_261 = None
    mul_883: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_261, 1);  reciprocal_261 = None
    unsqueeze_2113: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_672, -1);  convert_element_type_672 = None
    unsqueeze_2114: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2113, -1);  unsqueeze_2113 = None
    unsqueeze_2115: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_883, -1);  mul_883 = None
    unsqueeze_2116: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2115, -1);  unsqueeze_2115 = None
    sub_261: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_261, unsqueeze_2114);  convolution_261 = unsqueeze_2114 = None
    mul_884: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_261, unsqueeze_2116);  sub_261 = unsqueeze_2116 = None
    unsqueeze_2117: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg784_1, -1);  arg784_1 = None
    unsqueeze_2118: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2117, -1);  unsqueeze_2117 = None
    mul_885: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_884, unsqueeze_2118);  mul_884 = unsqueeze_2118 = None
    unsqueeze_2119: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg785_1, -1);  arg785_1 = None
    unsqueeze_2120: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2119, -1);  unsqueeze_2119 = None
    add_767: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_885, unsqueeze_2120);  mul_885 = unsqueeze_2120 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_232: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_767);  add_767 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_262: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_232, arg786_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_232 = arg786_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_674: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1767_1, torch.float32);  arg1767_1 = None
    convert_element_type_675: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1768_1, torch.float32);  arg1768_1 = None
    add_768: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_675, 1e-05);  convert_element_type_675 = None
    sqrt_262: "f32[18]" = torch.ops.aten.sqrt.default(add_768);  add_768 = None
    reciprocal_262: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_262);  sqrt_262 = None
    mul_886: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_262, 1);  reciprocal_262 = None
    unsqueeze_2121: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_674, -1);  convert_element_type_674 = None
    unsqueeze_2122: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2121, -1);  unsqueeze_2121 = None
    unsqueeze_2123: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_886, -1);  mul_886 = None
    unsqueeze_2124: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2123, -1);  unsqueeze_2123 = None
    sub_262: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_262, unsqueeze_2122);  convolution_262 = unsqueeze_2122 = None
    mul_887: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_262, unsqueeze_2124);  sub_262 = unsqueeze_2124 = None
    unsqueeze_2125: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg787_1, -1);  arg787_1 = None
    unsqueeze_2126: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2125, -1);  unsqueeze_2125 = None
    mul_888: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_887, unsqueeze_2126);  mul_887 = unsqueeze_2126 = None
    unsqueeze_2127: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg788_1, -1);  arg788_1 = None
    unsqueeze_2128: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2127, -1);  unsqueeze_2127 = None
    add_769: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_888, unsqueeze_2128);  mul_888 = unsqueeze_2128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_770: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_769, relu_231);  add_769 = relu_231 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_233: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_770);  add_770 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_263: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_233, arg789_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg789_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_676: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1770_1, torch.float32);  arg1770_1 = None
    convert_element_type_677: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1771_1, torch.float32);  arg1771_1 = None
    add_771: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_677, 1e-05);  convert_element_type_677 = None
    sqrt_263: "f32[18]" = torch.ops.aten.sqrt.default(add_771);  add_771 = None
    reciprocal_263: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_263);  sqrt_263 = None
    mul_889: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_263, 1);  reciprocal_263 = None
    unsqueeze_2129: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_676, -1);  convert_element_type_676 = None
    unsqueeze_2130: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2129, -1);  unsqueeze_2129 = None
    unsqueeze_2131: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_889, -1);  mul_889 = None
    unsqueeze_2132: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2131, -1);  unsqueeze_2131 = None
    sub_263: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_263, unsqueeze_2130);  convolution_263 = unsqueeze_2130 = None
    mul_890: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_263, unsqueeze_2132);  sub_263 = unsqueeze_2132 = None
    unsqueeze_2133: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg790_1, -1);  arg790_1 = None
    unsqueeze_2134: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2133, -1);  unsqueeze_2133 = None
    mul_891: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_890, unsqueeze_2134);  mul_890 = unsqueeze_2134 = None
    unsqueeze_2135: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg791_1, -1);  arg791_1 = None
    unsqueeze_2136: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2135, -1);  unsqueeze_2135 = None
    add_772: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_891, unsqueeze_2136);  mul_891 = unsqueeze_2136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_234: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_772);  add_772 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_264: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_234, arg792_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_234 = arg792_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_678: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1773_1, torch.float32);  arg1773_1 = None
    convert_element_type_679: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1774_1, torch.float32);  arg1774_1 = None
    add_773: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_679, 1e-05);  convert_element_type_679 = None
    sqrt_264: "f32[18]" = torch.ops.aten.sqrt.default(add_773);  add_773 = None
    reciprocal_264: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_264);  sqrt_264 = None
    mul_892: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_264, 1);  reciprocal_264 = None
    unsqueeze_2137: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_678, -1);  convert_element_type_678 = None
    unsqueeze_2138: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2137, -1);  unsqueeze_2137 = None
    unsqueeze_2139: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_892, -1);  mul_892 = None
    unsqueeze_2140: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2139, -1);  unsqueeze_2139 = None
    sub_264: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_264, unsqueeze_2138);  convolution_264 = unsqueeze_2138 = None
    mul_893: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_264, unsqueeze_2140);  sub_264 = unsqueeze_2140 = None
    unsqueeze_2141: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg793_1, -1);  arg793_1 = None
    unsqueeze_2142: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2141, -1);  unsqueeze_2141 = None
    mul_894: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_893, unsqueeze_2142);  mul_893 = unsqueeze_2142 = None
    unsqueeze_2143: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg794_1, -1);  arg794_1 = None
    unsqueeze_2144: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2143, -1);  unsqueeze_2143 = None
    add_774: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_894, unsqueeze_2144);  mul_894 = unsqueeze_2144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_775: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_774, relu_233);  add_774 = relu_233 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_235: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_775);  add_775 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_265: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_221, arg795_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg795_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_680: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1776_1, torch.float32);  arg1776_1 = None
    convert_element_type_681: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1777_1, torch.float32);  arg1777_1 = None
    add_776: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_681, 1e-05);  convert_element_type_681 = None
    sqrt_265: "f32[36]" = torch.ops.aten.sqrt.default(add_776);  add_776 = None
    reciprocal_265: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_265);  sqrt_265 = None
    mul_895: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_265, 1);  reciprocal_265 = None
    unsqueeze_2145: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_680, -1);  convert_element_type_680 = None
    unsqueeze_2146: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2145, -1);  unsqueeze_2145 = None
    unsqueeze_2147: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_895, -1);  mul_895 = None
    unsqueeze_2148: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2147, -1);  unsqueeze_2147 = None
    sub_265: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_265, unsqueeze_2146);  convolution_265 = unsqueeze_2146 = None
    mul_896: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_265, unsqueeze_2148);  sub_265 = unsqueeze_2148 = None
    unsqueeze_2149: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg796_1, -1);  arg796_1 = None
    unsqueeze_2150: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2149, -1);  unsqueeze_2149 = None
    mul_897: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_896, unsqueeze_2150);  mul_896 = unsqueeze_2150 = None
    unsqueeze_2151: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg797_1, -1);  arg797_1 = None
    unsqueeze_2152: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2151, -1);  unsqueeze_2151 = None
    add_777: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_897, unsqueeze_2152);  mul_897 = unsqueeze_2152 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_236: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_777);  add_777 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_266: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_236, arg798_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_236 = arg798_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_682: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1779_1, torch.float32);  arg1779_1 = None
    convert_element_type_683: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1780_1, torch.float32);  arg1780_1 = None
    add_778: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_683, 1e-05);  convert_element_type_683 = None
    sqrt_266: "f32[36]" = torch.ops.aten.sqrt.default(add_778);  add_778 = None
    reciprocal_266: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_266);  sqrt_266 = None
    mul_898: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_266, 1);  reciprocal_266 = None
    unsqueeze_2153: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_682, -1);  convert_element_type_682 = None
    unsqueeze_2154: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2153, -1);  unsqueeze_2153 = None
    unsqueeze_2155: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_898, -1);  mul_898 = None
    unsqueeze_2156: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2155, -1);  unsqueeze_2155 = None
    sub_266: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_266, unsqueeze_2154);  convolution_266 = unsqueeze_2154 = None
    mul_899: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_266, unsqueeze_2156);  sub_266 = unsqueeze_2156 = None
    unsqueeze_2157: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg799_1, -1);  arg799_1 = None
    unsqueeze_2158: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2157, -1);  unsqueeze_2157 = None
    mul_900: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_899, unsqueeze_2158);  mul_899 = unsqueeze_2158 = None
    unsqueeze_2159: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg800_1, -1);  arg800_1 = None
    unsqueeze_2160: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2159, -1);  unsqueeze_2159 = None
    add_779: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_900, unsqueeze_2160);  mul_900 = unsqueeze_2160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_780: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_779, relu_221);  add_779 = relu_221 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_237: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_780);  add_780 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_267: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_237, arg801_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg801_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_684: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1782_1, torch.float32);  arg1782_1 = None
    convert_element_type_685: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1783_1, torch.float32);  arg1783_1 = None
    add_781: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_685, 1e-05);  convert_element_type_685 = None
    sqrt_267: "f32[36]" = torch.ops.aten.sqrt.default(add_781);  add_781 = None
    reciprocal_267: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_267);  sqrt_267 = None
    mul_901: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_267, 1);  reciprocal_267 = None
    unsqueeze_2161: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_684, -1);  convert_element_type_684 = None
    unsqueeze_2162: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2161, -1);  unsqueeze_2161 = None
    unsqueeze_2163: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_901, -1);  mul_901 = None
    unsqueeze_2164: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2163, -1);  unsqueeze_2163 = None
    sub_267: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_267, unsqueeze_2162);  convolution_267 = unsqueeze_2162 = None
    mul_902: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_267, unsqueeze_2164);  sub_267 = unsqueeze_2164 = None
    unsqueeze_2165: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg802_1, -1);  arg802_1 = None
    unsqueeze_2166: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2165, -1);  unsqueeze_2165 = None
    mul_903: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_902, unsqueeze_2166);  mul_902 = unsqueeze_2166 = None
    unsqueeze_2167: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg803_1, -1);  arg803_1 = None
    unsqueeze_2168: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2167, -1);  unsqueeze_2167 = None
    add_782: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_903, unsqueeze_2168);  mul_903 = unsqueeze_2168 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_238: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_782);  add_782 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_268: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_238, arg804_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_238 = arg804_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_686: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1785_1, torch.float32);  arg1785_1 = None
    convert_element_type_687: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1786_1, torch.float32);  arg1786_1 = None
    add_783: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_687, 1e-05);  convert_element_type_687 = None
    sqrt_268: "f32[36]" = torch.ops.aten.sqrt.default(add_783);  add_783 = None
    reciprocal_268: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_268);  sqrt_268 = None
    mul_904: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_268, 1);  reciprocal_268 = None
    unsqueeze_2169: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_686, -1);  convert_element_type_686 = None
    unsqueeze_2170: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2169, -1);  unsqueeze_2169 = None
    unsqueeze_2171: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_904, -1);  mul_904 = None
    unsqueeze_2172: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2171, -1);  unsqueeze_2171 = None
    sub_268: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_268, unsqueeze_2170);  convolution_268 = unsqueeze_2170 = None
    mul_905: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_268, unsqueeze_2172);  sub_268 = unsqueeze_2172 = None
    unsqueeze_2173: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg805_1, -1);  arg805_1 = None
    unsqueeze_2174: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2173, -1);  unsqueeze_2173 = None
    mul_906: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_905, unsqueeze_2174);  mul_905 = unsqueeze_2174 = None
    unsqueeze_2175: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg806_1, -1);  arg806_1 = None
    unsqueeze_2176: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2175, -1);  unsqueeze_2175 = None
    add_784: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_906, unsqueeze_2176);  mul_906 = unsqueeze_2176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_785: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_784, relu_237);  add_784 = relu_237 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_239: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_785);  add_785 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_269: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_239, arg807_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg807_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_688: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1788_1, torch.float32);  arg1788_1 = None
    convert_element_type_689: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1789_1, torch.float32);  arg1789_1 = None
    add_786: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_689, 1e-05);  convert_element_type_689 = None
    sqrt_269: "f32[36]" = torch.ops.aten.sqrt.default(add_786);  add_786 = None
    reciprocal_269: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_269);  sqrt_269 = None
    mul_907: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_269, 1);  reciprocal_269 = None
    unsqueeze_2177: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_688, -1);  convert_element_type_688 = None
    unsqueeze_2178: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2177, -1);  unsqueeze_2177 = None
    unsqueeze_2179: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_907, -1);  mul_907 = None
    unsqueeze_2180: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2179, -1);  unsqueeze_2179 = None
    sub_269: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_269, unsqueeze_2178);  convolution_269 = unsqueeze_2178 = None
    mul_908: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_269, unsqueeze_2180);  sub_269 = unsqueeze_2180 = None
    unsqueeze_2181: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg808_1, -1);  arg808_1 = None
    unsqueeze_2182: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2181, -1);  unsqueeze_2181 = None
    mul_909: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_908, unsqueeze_2182);  mul_908 = unsqueeze_2182 = None
    unsqueeze_2183: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg809_1, -1);  arg809_1 = None
    unsqueeze_2184: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2183, -1);  unsqueeze_2183 = None
    add_787: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_909, unsqueeze_2184);  mul_909 = unsqueeze_2184 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_240: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_787);  add_787 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_270: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_240, arg810_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_240 = arg810_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_690: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1791_1, torch.float32);  arg1791_1 = None
    convert_element_type_691: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1792_1, torch.float32);  arg1792_1 = None
    add_788: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_691, 1e-05);  convert_element_type_691 = None
    sqrt_270: "f32[36]" = torch.ops.aten.sqrt.default(add_788);  add_788 = None
    reciprocal_270: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_270);  sqrt_270 = None
    mul_910: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_270, 1);  reciprocal_270 = None
    unsqueeze_2185: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_690, -1);  convert_element_type_690 = None
    unsqueeze_2186: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2185, -1);  unsqueeze_2185 = None
    unsqueeze_2187: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_910, -1);  mul_910 = None
    unsqueeze_2188: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2187, -1);  unsqueeze_2187 = None
    sub_270: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_270, unsqueeze_2186);  convolution_270 = unsqueeze_2186 = None
    mul_911: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_270, unsqueeze_2188);  sub_270 = unsqueeze_2188 = None
    unsqueeze_2189: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg811_1, -1);  arg811_1 = None
    unsqueeze_2190: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2189, -1);  unsqueeze_2189 = None
    mul_912: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_911, unsqueeze_2190);  mul_911 = unsqueeze_2190 = None
    unsqueeze_2191: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg812_1, -1);  arg812_1 = None
    unsqueeze_2192: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2191, -1);  unsqueeze_2191 = None
    add_789: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_912, unsqueeze_2192);  mul_912 = unsqueeze_2192 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_790: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_789, relu_239);  add_789 = relu_239 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_241: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_790);  add_790 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_271: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_241, arg813_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg813_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_692: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1794_1, torch.float32);  arg1794_1 = None
    convert_element_type_693: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1795_1, torch.float32);  arg1795_1 = None
    add_791: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_693, 1e-05);  convert_element_type_693 = None
    sqrt_271: "f32[36]" = torch.ops.aten.sqrt.default(add_791);  add_791 = None
    reciprocal_271: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_271);  sqrt_271 = None
    mul_913: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_271, 1);  reciprocal_271 = None
    unsqueeze_2193: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_692, -1);  convert_element_type_692 = None
    unsqueeze_2194: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2193, -1);  unsqueeze_2193 = None
    unsqueeze_2195: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_913, -1);  mul_913 = None
    unsqueeze_2196: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2195, -1);  unsqueeze_2195 = None
    sub_271: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_271, unsqueeze_2194);  convolution_271 = unsqueeze_2194 = None
    mul_914: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_271, unsqueeze_2196);  sub_271 = unsqueeze_2196 = None
    unsqueeze_2197: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg814_1, -1);  arg814_1 = None
    unsqueeze_2198: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2197, -1);  unsqueeze_2197 = None
    mul_915: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_914, unsqueeze_2198);  mul_914 = unsqueeze_2198 = None
    unsqueeze_2199: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg815_1, -1);  arg815_1 = None
    unsqueeze_2200: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2199, -1);  unsqueeze_2199 = None
    add_792: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_915, unsqueeze_2200);  mul_915 = unsqueeze_2200 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_242: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_792);  add_792 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_272: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_242, arg816_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_242 = arg816_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_694: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1797_1, torch.float32);  arg1797_1 = None
    convert_element_type_695: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1798_1, torch.float32);  arg1798_1 = None
    add_793: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_695, 1e-05);  convert_element_type_695 = None
    sqrt_272: "f32[36]" = torch.ops.aten.sqrt.default(add_793);  add_793 = None
    reciprocal_272: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_272);  sqrt_272 = None
    mul_916: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_272, 1);  reciprocal_272 = None
    unsqueeze_2201: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_694, -1);  convert_element_type_694 = None
    unsqueeze_2202: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2201, -1);  unsqueeze_2201 = None
    unsqueeze_2203: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_916, -1);  mul_916 = None
    unsqueeze_2204: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2203, -1);  unsqueeze_2203 = None
    sub_272: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_272, unsqueeze_2202);  convolution_272 = unsqueeze_2202 = None
    mul_917: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_272, unsqueeze_2204);  sub_272 = unsqueeze_2204 = None
    unsqueeze_2205: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg817_1, -1);  arg817_1 = None
    unsqueeze_2206: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2205, -1);  unsqueeze_2205 = None
    mul_918: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_917, unsqueeze_2206);  mul_917 = unsqueeze_2206 = None
    unsqueeze_2207: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg818_1, -1);  arg818_1 = None
    unsqueeze_2208: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2207, -1);  unsqueeze_2207 = None
    add_794: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_918, unsqueeze_2208);  mul_918 = unsqueeze_2208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_795: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_794, relu_241);  add_794 = relu_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_243: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_795);  add_795 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_273: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_223, arg819_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg819_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_696: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1800_1, torch.float32);  arg1800_1 = None
    convert_element_type_697: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1801_1, torch.float32);  arg1801_1 = None
    add_796: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_697, 1e-05);  convert_element_type_697 = None
    sqrt_273: "f32[72]" = torch.ops.aten.sqrt.default(add_796);  add_796 = None
    reciprocal_273: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_273);  sqrt_273 = None
    mul_919: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_273, 1);  reciprocal_273 = None
    unsqueeze_2209: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_696, -1);  convert_element_type_696 = None
    unsqueeze_2210: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2209, -1);  unsqueeze_2209 = None
    unsqueeze_2211: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_919, -1);  mul_919 = None
    unsqueeze_2212: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2211, -1);  unsqueeze_2211 = None
    sub_273: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_273, unsqueeze_2210);  convolution_273 = unsqueeze_2210 = None
    mul_920: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_273, unsqueeze_2212);  sub_273 = unsqueeze_2212 = None
    unsqueeze_2213: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg820_1, -1);  arg820_1 = None
    unsqueeze_2214: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2213, -1);  unsqueeze_2213 = None
    mul_921: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_920, unsqueeze_2214);  mul_920 = unsqueeze_2214 = None
    unsqueeze_2215: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg821_1, -1);  arg821_1 = None
    unsqueeze_2216: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2215, -1);  unsqueeze_2215 = None
    add_797: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_921, unsqueeze_2216);  mul_921 = unsqueeze_2216 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_244: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_797);  add_797 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_274: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_244, arg822_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_244 = arg822_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_698: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1803_1, torch.float32);  arg1803_1 = None
    convert_element_type_699: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1804_1, torch.float32);  arg1804_1 = None
    add_798: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_699, 1e-05);  convert_element_type_699 = None
    sqrt_274: "f32[72]" = torch.ops.aten.sqrt.default(add_798);  add_798 = None
    reciprocal_274: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_274);  sqrt_274 = None
    mul_922: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_274, 1);  reciprocal_274 = None
    unsqueeze_2217: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_698, -1);  convert_element_type_698 = None
    unsqueeze_2218: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2217, -1);  unsqueeze_2217 = None
    unsqueeze_2219: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_922, -1);  mul_922 = None
    unsqueeze_2220: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2219, -1);  unsqueeze_2219 = None
    sub_274: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_274, unsqueeze_2218);  convolution_274 = unsqueeze_2218 = None
    mul_923: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_274, unsqueeze_2220);  sub_274 = unsqueeze_2220 = None
    unsqueeze_2221: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg823_1, -1);  arg823_1 = None
    unsqueeze_2222: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2221, -1);  unsqueeze_2221 = None
    mul_924: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_923, unsqueeze_2222);  mul_923 = unsqueeze_2222 = None
    unsqueeze_2223: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg824_1, -1);  arg824_1 = None
    unsqueeze_2224: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2223, -1);  unsqueeze_2223 = None
    add_799: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_924, unsqueeze_2224);  mul_924 = unsqueeze_2224 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_800: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_799, relu_223);  add_799 = relu_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_245: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_800);  add_800 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_275: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_245, arg825_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg825_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_700: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1806_1, torch.float32);  arg1806_1 = None
    convert_element_type_701: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1807_1, torch.float32);  arg1807_1 = None
    add_801: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_701, 1e-05);  convert_element_type_701 = None
    sqrt_275: "f32[72]" = torch.ops.aten.sqrt.default(add_801);  add_801 = None
    reciprocal_275: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_275);  sqrt_275 = None
    mul_925: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_275, 1);  reciprocal_275 = None
    unsqueeze_2225: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_700, -1);  convert_element_type_700 = None
    unsqueeze_2226: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2225, -1);  unsqueeze_2225 = None
    unsqueeze_2227: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_925, -1);  mul_925 = None
    unsqueeze_2228: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2227, -1);  unsqueeze_2227 = None
    sub_275: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_275, unsqueeze_2226);  convolution_275 = unsqueeze_2226 = None
    mul_926: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_275, unsqueeze_2228);  sub_275 = unsqueeze_2228 = None
    unsqueeze_2229: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg826_1, -1);  arg826_1 = None
    unsqueeze_2230: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2229, -1);  unsqueeze_2229 = None
    mul_927: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_926, unsqueeze_2230);  mul_926 = unsqueeze_2230 = None
    unsqueeze_2231: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg827_1, -1);  arg827_1 = None
    unsqueeze_2232: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2231, -1);  unsqueeze_2231 = None
    add_802: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_927, unsqueeze_2232);  mul_927 = unsqueeze_2232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_246: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_802);  add_802 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_276: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_246, arg828_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_246 = arg828_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_702: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1809_1, torch.float32);  arg1809_1 = None
    convert_element_type_703: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1810_1, torch.float32);  arg1810_1 = None
    add_803: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_703, 1e-05);  convert_element_type_703 = None
    sqrt_276: "f32[72]" = torch.ops.aten.sqrt.default(add_803);  add_803 = None
    reciprocal_276: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_276);  sqrt_276 = None
    mul_928: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_276, 1);  reciprocal_276 = None
    unsqueeze_2233: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_702, -1);  convert_element_type_702 = None
    unsqueeze_2234: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2233, -1);  unsqueeze_2233 = None
    unsqueeze_2235: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_928, -1);  mul_928 = None
    unsqueeze_2236: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2235, -1);  unsqueeze_2235 = None
    sub_276: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_276, unsqueeze_2234);  convolution_276 = unsqueeze_2234 = None
    mul_929: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_276, unsqueeze_2236);  sub_276 = unsqueeze_2236 = None
    unsqueeze_2237: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg829_1, -1);  arg829_1 = None
    unsqueeze_2238: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2237, -1);  unsqueeze_2237 = None
    mul_930: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_929, unsqueeze_2238);  mul_929 = unsqueeze_2238 = None
    unsqueeze_2239: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg830_1, -1);  arg830_1 = None
    unsqueeze_2240: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2239, -1);  unsqueeze_2239 = None
    add_804: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_930, unsqueeze_2240);  mul_930 = unsqueeze_2240 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_805: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_804, relu_245);  add_804 = relu_245 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_247: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_805);  add_805 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_277: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_247, arg831_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg831_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_704: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1812_1, torch.float32);  arg1812_1 = None
    convert_element_type_705: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1813_1, torch.float32);  arg1813_1 = None
    add_806: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_705, 1e-05);  convert_element_type_705 = None
    sqrt_277: "f32[72]" = torch.ops.aten.sqrt.default(add_806);  add_806 = None
    reciprocal_277: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_277);  sqrt_277 = None
    mul_931: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_277, 1);  reciprocal_277 = None
    unsqueeze_2241: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_704, -1);  convert_element_type_704 = None
    unsqueeze_2242: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2241, -1);  unsqueeze_2241 = None
    unsqueeze_2243: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_931, -1);  mul_931 = None
    unsqueeze_2244: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2243, -1);  unsqueeze_2243 = None
    sub_277: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_277, unsqueeze_2242);  convolution_277 = unsqueeze_2242 = None
    mul_932: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_277, unsqueeze_2244);  sub_277 = unsqueeze_2244 = None
    unsqueeze_2245: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg832_1, -1);  arg832_1 = None
    unsqueeze_2246: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2245, -1);  unsqueeze_2245 = None
    mul_933: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_932, unsqueeze_2246);  mul_932 = unsqueeze_2246 = None
    unsqueeze_2247: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg833_1, -1);  arg833_1 = None
    unsqueeze_2248: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2247, -1);  unsqueeze_2247 = None
    add_807: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_933, unsqueeze_2248);  mul_933 = unsqueeze_2248 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_248: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_807);  add_807 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_278: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_248, arg834_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_248 = arg834_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_706: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1815_1, torch.float32);  arg1815_1 = None
    convert_element_type_707: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1816_1, torch.float32);  arg1816_1 = None
    add_808: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_707, 1e-05);  convert_element_type_707 = None
    sqrt_278: "f32[72]" = torch.ops.aten.sqrt.default(add_808);  add_808 = None
    reciprocal_278: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_278);  sqrt_278 = None
    mul_934: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_278, 1);  reciprocal_278 = None
    unsqueeze_2249: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_706, -1);  convert_element_type_706 = None
    unsqueeze_2250: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2249, -1);  unsqueeze_2249 = None
    unsqueeze_2251: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_934, -1);  mul_934 = None
    unsqueeze_2252: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2251, -1);  unsqueeze_2251 = None
    sub_278: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_278, unsqueeze_2250);  convolution_278 = unsqueeze_2250 = None
    mul_935: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_278, unsqueeze_2252);  sub_278 = unsqueeze_2252 = None
    unsqueeze_2253: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg835_1, -1);  arg835_1 = None
    unsqueeze_2254: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2253, -1);  unsqueeze_2253 = None
    mul_936: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_935, unsqueeze_2254);  mul_935 = unsqueeze_2254 = None
    unsqueeze_2255: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg836_1, -1);  arg836_1 = None
    unsqueeze_2256: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2255, -1);  unsqueeze_2255 = None
    add_809: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_936, unsqueeze_2256);  mul_936 = unsqueeze_2256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_810: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_809, relu_247);  add_809 = relu_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_249: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_810);  add_810 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_279: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_249, arg837_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg837_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_708: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1818_1, torch.float32);  arg1818_1 = None
    convert_element_type_709: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1819_1, torch.float32);  arg1819_1 = None
    add_811: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_709, 1e-05);  convert_element_type_709 = None
    sqrt_279: "f32[72]" = torch.ops.aten.sqrt.default(add_811);  add_811 = None
    reciprocal_279: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_279);  sqrt_279 = None
    mul_937: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_279, 1);  reciprocal_279 = None
    unsqueeze_2257: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_708, -1);  convert_element_type_708 = None
    unsqueeze_2258: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2257, -1);  unsqueeze_2257 = None
    unsqueeze_2259: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_937, -1);  mul_937 = None
    unsqueeze_2260: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2259, -1);  unsqueeze_2259 = None
    sub_279: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_279, unsqueeze_2258);  convolution_279 = unsqueeze_2258 = None
    mul_938: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_279, unsqueeze_2260);  sub_279 = unsqueeze_2260 = None
    unsqueeze_2261: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg838_1, -1);  arg838_1 = None
    unsqueeze_2262: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2261, -1);  unsqueeze_2261 = None
    mul_939: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_938, unsqueeze_2262);  mul_938 = unsqueeze_2262 = None
    unsqueeze_2263: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg839_1, -1);  arg839_1 = None
    unsqueeze_2264: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2263, -1);  unsqueeze_2263 = None
    add_812: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_939, unsqueeze_2264);  mul_939 = unsqueeze_2264 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_250: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_812);  add_812 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_280: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_250, arg840_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_250 = arg840_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_710: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1821_1, torch.float32);  arg1821_1 = None
    convert_element_type_711: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1822_1, torch.float32);  arg1822_1 = None
    add_813: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_711, 1e-05);  convert_element_type_711 = None
    sqrt_280: "f32[72]" = torch.ops.aten.sqrt.default(add_813);  add_813 = None
    reciprocal_280: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_280);  sqrt_280 = None
    mul_940: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_280, 1);  reciprocal_280 = None
    unsqueeze_2265: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_710, -1);  convert_element_type_710 = None
    unsqueeze_2266: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2265, -1);  unsqueeze_2265 = None
    unsqueeze_2267: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_940, -1);  mul_940 = None
    unsqueeze_2268: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2267, -1);  unsqueeze_2267 = None
    sub_280: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_280, unsqueeze_2266);  convolution_280 = unsqueeze_2266 = None
    mul_941: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_280, unsqueeze_2268);  sub_280 = unsqueeze_2268 = None
    unsqueeze_2269: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg841_1, -1);  arg841_1 = None
    unsqueeze_2270: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2269, -1);  unsqueeze_2269 = None
    mul_942: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_941, unsqueeze_2270);  mul_941 = unsqueeze_2270 = None
    unsqueeze_2271: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg842_1, -1);  arg842_1 = None
    unsqueeze_2272: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2271, -1);  unsqueeze_2271 = None
    add_814: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_942, unsqueeze_2272);  mul_942 = unsqueeze_2272 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_815: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_814, relu_249);  add_814 = relu_249 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_251: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_815);  add_815 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_281: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_227, arg843_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg843_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_712: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1824_1, torch.float32);  arg1824_1 = None
    convert_element_type_713: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1825_1, torch.float32);  arg1825_1 = None
    add_816: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_713, 1e-05);  convert_element_type_713 = None
    sqrt_281: "f32[144]" = torch.ops.aten.sqrt.default(add_816);  add_816 = None
    reciprocal_281: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_281);  sqrt_281 = None
    mul_943: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_281, 1);  reciprocal_281 = None
    unsqueeze_2273: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_712, -1);  convert_element_type_712 = None
    unsqueeze_2274: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2273, -1);  unsqueeze_2273 = None
    unsqueeze_2275: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_943, -1);  mul_943 = None
    unsqueeze_2276: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2275, -1);  unsqueeze_2275 = None
    sub_281: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_281, unsqueeze_2274);  convolution_281 = unsqueeze_2274 = None
    mul_944: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_281, unsqueeze_2276);  sub_281 = unsqueeze_2276 = None
    unsqueeze_2277: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg844_1, -1);  arg844_1 = None
    unsqueeze_2278: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2277, -1);  unsqueeze_2277 = None
    mul_945: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_944, unsqueeze_2278);  mul_944 = unsqueeze_2278 = None
    unsqueeze_2279: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg845_1, -1);  arg845_1 = None
    unsqueeze_2280: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2279, -1);  unsqueeze_2279 = None
    add_817: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_945, unsqueeze_2280);  mul_945 = unsqueeze_2280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_252: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_817);  add_817 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_282: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_252, arg846_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_252 = arg846_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_714: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1827_1, torch.float32);  arg1827_1 = None
    convert_element_type_715: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1828_1, torch.float32);  arg1828_1 = None
    add_818: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_715, 1e-05);  convert_element_type_715 = None
    sqrt_282: "f32[144]" = torch.ops.aten.sqrt.default(add_818);  add_818 = None
    reciprocal_282: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_282);  sqrt_282 = None
    mul_946: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_282, 1);  reciprocal_282 = None
    unsqueeze_2281: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_714, -1);  convert_element_type_714 = None
    unsqueeze_2282: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2281, -1);  unsqueeze_2281 = None
    unsqueeze_2283: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_946, -1);  mul_946 = None
    unsqueeze_2284: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2283, -1);  unsqueeze_2283 = None
    sub_282: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_282, unsqueeze_2282);  convolution_282 = unsqueeze_2282 = None
    mul_947: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_282, unsqueeze_2284);  sub_282 = unsqueeze_2284 = None
    unsqueeze_2285: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg847_1, -1);  arg847_1 = None
    unsqueeze_2286: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2285, -1);  unsqueeze_2285 = None
    mul_948: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_947, unsqueeze_2286);  mul_947 = unsqueeze_2286 = None
    unsqueeze_2287: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg848_1, -1);  arg848_1 = None
    unsqueeze_2288: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2287, -1);  unsqueeze_2287 = None
    add_819: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_948, unsqueeze_2288);  mul_948 = unsqueeze_2288 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_820: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_819, relu_227);  add_819 = relu_227 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_253: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_820);  add_820 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_283: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_253, arg849_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg849_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_716: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1830_1, torch.float32);  arg1830_1 = None
    convert_element_type_717: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1831_1, torch.float32);  arg1831_1 = None
    add_821: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_717, 1e-05);  convert_element_type_717 = None
    sqrt_283: "f32[144]" = torch.ops.aten.sqrt.default(add_821);  add_821 = None
    reciprocal_283: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_283);  sqrt_283 = None
    mul_949: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_283, 1);  reciprocal_283 = None
    unsqueeze_2289: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_716, -1);  convert_element_type_716 = None
    unsqueeze_2290: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2289, -1);  unsqueeze_2289 = None
    unsqueeze_2291: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_949, -1);  mul_949 = None
    unsqueeze_2292: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2291, -1);  unsqueeze_2291 = None
    sub_283: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_283, unsqueeze_2290);  convolution_283 = unsqueeze_2290 = None
    mul_950: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_283, unsqueeze_2292);  sub_283 = unsqueeze_2292 = None
    unsqueeze_2293: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg850_1, -1);  arg850_1 = None
    unsqueeze_2294: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2293, -1);  unsqueeze_2293 = None
    mul_951: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_950, unsqueeze_2294);  mul_950 = unsqueeze_2294 = None
    unsqueeze_2295: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg851_1, -1);  arg851_1 = None
    unsqueeze_2296: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2295, -1);  unsqueeze_2295 = None
    add_822: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_951, unsqueeze_2296);  mul_951 = unsqueeze_2296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_254: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_822);  add_822 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_284: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_254, arg852_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_254 = arg852_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_718: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1833_1, torch.float32);  arg1833_1 = None
    convert_element_type_719: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1834_1, torch.float32);  arg1834_1 = None
    add_823: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_719, 1e-05);  convert_element_type_719 = None
    sqrt_284: "f32[144]" = torch.ops.aten.sqrt.default(add_823);  add_823 = None
    reciprocal_284: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_284);  sqrt_284 = None
    mul_952: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_284, 1);  reciprocal_284 = None
    unsqueeze_2297: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_718, -1);  convert_element_type_718 = None
    unsqueeze_2298: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2297, -1);  unsqueeze_2297 = None
    unsqueeze_2299: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_952, -1);  mul_952 = None
    unsqueeze_2300: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2299, -1);  unsqueeze_2299 = None
    sub_284: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_284, unsqueeze_2298);  convolution_284 = unsqueeze_2298 = None
    mul_953: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_284, unsqueeze_2300);  sub_284 = unsqueeze_2300 = None
    unsqueeze_2301: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg853_1, -1);  arg853_1 = None
    unsqueeze_2302: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2301, -1);  unsqueeze_2301 = None
    mul_954: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_953, unsqueeze_2302);  mul_953 = unsqueeze_2302 = None
    unsqueeze_2303: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg854_1, -1);  arg854_1 = None
    unsqueeze_2304: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2303, -1);  unsqueeze_2303 = None
    add_824: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_954, unsqueeze_2304);  mul_954 = unsqueeze_2304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_825: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_824, relu_253);  add_824 = relu_253 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_255: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_825);  add_825 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_285: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_255, arg855_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg855_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_720: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1836_1, torch.float32);  arg1836_1 = None
    convert_element_type_721: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1837_1, torch.float32);  arg1837_1 = None
    add_826: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_721, 1e-05);  convert_element_type_721 = None
    sqrt_285: "f32[144]" = torch.ops.aten.sqrt.default(add_826);  add_826 = None
    reciprocal_285: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_285);  sqrt_285 = None
    mul_955: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_285, 1);  reciprocal_285 = None
    unsqueeze_2305: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_720, -1);  convert_element_type_720 = None
    unsqueeze_2306: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2305, -1);  unsqueeze_2305 = None
    unsqueeze_2307: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_955, -1);  mul_955 = None
    unsqueeze_2308: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2307, -1);  unsqueeze_2307 = None
    sub_285: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_285, unsqueeze_2306);  convolution_285 = unsqueeze_2306 = None
    mul_956: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_285, unsqueeze_2308);  sub_285 = unsqueeze_2308 = None
    unsqueeze_2309: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg856_1, -1);  arg856_1 = None
    unsqueeze_2310: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2309, -1);  unsqueeze_2309 = None
    mul_957: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_956, unsqueeze_2310);  mul_956 = unsqueeze_2310 = None
    unsqueeze_2311: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg857_1, -1);  arg857_1 = None
    unsqueeze_2312: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2311, -1);  unsqueeze_2311 = None
    add_827: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_957, unsqueeze_2312);  mul_957 = unsqueeze_2312 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_256: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_827);  add_827 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_286: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_256, arg858_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_256 = arg858_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_722: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1839_1, torch.float32);  arg1839_1 = None
    convert_element_type_723: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1840_1, torch.float32);  arg1840_1 = None
    add_828: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_723, 1e-05);  convert_element_type_723 = None
    sqrt_286: "f32[144]" = torch.ops.aten.sqrt.default(add_828);  add_828 = None
    reciprocal_286: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_286);  sqrt_286 = None
    mul_958: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_286, 1);  reciprocal_286 = None
    unsqueeze_2313: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_722, -1);  convert_element_type_722 = None
    unsqueeze_2314: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2313, -1);  unsqueeze_2313 = None
    unsqueeze_2315: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_958, -1);  mul_958 = None
    unsqueeze_2316: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2315, -1);  unsqueeze_2315 = None
    sub_286: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_286, unsqueeze_2314);  convolution_286 = unsqueeze_2314 = None
    mul_959: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_286, unsqueeze_2316);  sub_286 = unsqueeze_2316 = None
    unsqueeze_2317: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg859_1, -1);  arg859_1 = None
    unsqueeze_2318: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2317, -1);  unsqueeze_2317 = None
    mul_960: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_959, unsqueeze_2318);  mul_959 = unsqueeze_2318 = None
    unsqueeze_2319: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg860_1, -1);  arg860_1 = None
    unsqueeze_2320: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2319, -1);  unsqueeze_2319 = None
    add_829: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_960, unsqueeze_2320);  mul_960 = unsqueeze_2320 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_830: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_829, relu_255);  add_829 = relu_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_257: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_830);  add_830 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_287: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_257, arg861_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  arg861_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    convert_element_type_724: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1842_1, torch.float32);  arg1842_1 = None
    convert_element_type_725: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1843_1, torch.float32);  arg1843_1 = None
    add_831: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_725, 1e-05);  convert_element_type_725 = None
    sqrt_287: "f32[144]" = torch.ops.aten.sqrt.default(add_831);  add_831 = None
    reciprocal_287: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_287);  sqrt_287 = None
    mul_961: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_287, 1);  reciprocal_287 = None
    unsqueeze_2321: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_724, -1);  convert_element_type_724 = None
    unsqueeze_2322: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2321, -1);  unsqueeze_2321 = None
    unsqueeze_2323: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_961, -1);  mul_961 = None
    unsqueeze_2324: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2323, -1);  unsqueeze_2323 = None
    sub_287: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_287, unsqueeze_2322);  convolution_287 = unsqueeze_2322 = None
    mul_962: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_287, unsqueeze_2324);  sub_287 = unsqueeze_2324 = None
    unsqueeze_2325: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg862_1, -1);  arg862_1 = None
    unsqueeze_2326: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2325, -1);  unsqueeze_2325 = None
    mul_963: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_962, unsqueeze_2326);  mul_962 = unsqueeze_2326 = None
    unsqueeze_2327: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg863_1, -1);  arg863_1 = None
    unsqueeze_2328: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2327, -1);  unsqueeze_2327 = None
    add_832: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_963, unsqueeze_2328);  mul_963 = unsqueeze_2328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_258: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_832);  add_832 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_288: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_258, arg864_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_258 = arg864_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    convert_element_type_726: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1845_1, torch.float32);  arg1845_1 = None
    convert_element_type_727: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1846_1, torch.float32);  arg1846_1 = None
    add_833: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_727, 1e-05);  convert_element_type_727 = None
    sqrt_288: "f32[144]" = torch.ops.aten.sqrt.default(add_833);  add_833 = None
    reciprocal_288: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_288);  sqrt_288 = None
    mul_964: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_288, 1);  reciprocal_288 = None
    unsqueeze_2329: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_726, -1);  convert_element_type_726 = None
    unsqueeze_2330: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2329, -1);  unsqueeze_2329 = None
    unsqueeze_2331: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_964, -1);  mul_964 = None
    unsqueeze_2332: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2331, -1);  unsqueeze_2331 = None
    sub_288: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_288, unsqueeze_2330);  convolution_288 = unsqueeze_2330 = None
    mul_965: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_288, unsqueeze_2332);  sub_288 = unsqueeze_2332 = None
    unsqueeze_2333: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg865_1, -1);  arg865_1 = None
    unsqueeze_2334: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2333, -1);  unsqueeze_2333 = None
    mul_966: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_965, unsqueeze_2334);  mul_965 = unsqueeze_2334 = None
    unsqueeze_2335: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg866_1, -1);  arg866_1 = None
    unsqueeze_2336: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2335, -1);  unsqueeze_2335 = None
    add_834: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_966, unsqueeze_2336);  mul_966 = unsqueeze_2336 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_835: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_834, relu_257);  add_834 = relu_257 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_259: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_835);  add_835 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_289: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_243, arg867_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg867_1 = None
    convert_element_type_728: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1848_1, torch.float32);  arg1848_1 = None
    convert_element_type_729: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1849_1, torch.float32);  arg1849_1 = None
    add_836: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_729, 1e-05);  convert_element_type_729 = None
    sqrt_289: "f32[18]" = torch.ops.aten.sqrt.default(add_836);  add_836 = None
    reciprocal_289: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_289);  sqrt_289 = None
    mul_967: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_289, 1);  reciprocal_289 = None
    unsqueeze_2337: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_728, -1);  convert_element_type_728 = None
    unsqueeze_2338: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2337, -1);  unsqueeze_2337 = None
    unsqueeze_2339: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_967, -1);  mul_967 = None
    unsqueeze_2340: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2339, -1);  unsqueeze_2339 = None
    sub_289: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_289, unsqueeze_2338);  convolution_289 = unsqueeze_2338 = None
    mul_968: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_289, unsqueeze_2340);  sub_289 = unsqueeze_2340 = None
    unsqueeze_2341: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg868_1, -1);  arg868_1 = None
    unsqueeze_2342: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2341, -1);  unsqueeze_2341 = None
    mul_969: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_968, unsqueeze_2342);  mul_968 = unsqueeze_2342 = None
    unsqueeze_2343: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg869_1, -1);  arg869_1 = None
    unsqueeze_2344: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2343, -1);  unsqueeze_2343 = None
    add_837: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_969, unsqueeze_2344);  mul_969 = unsqueeze_2344 = None
    iota_50: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_730: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_50, torch.float64);  iota_50 = None
    mul_970: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_730, 1);  convert_element_type_730 = None
    add_838: "f64[56]" = torch.ops.aten.add.Tensor(mul_970, 0);  mul_970 = None
    convert_element_type_731: "f32[56]" = torch.ops.prims.convert_element_type.default(add_838, torch.float32);  add_838 = None
    add_839: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_731, 0.0);  convert_element_type_731 = None
    mul_971: "f32[56]" = torch.ops.aten.mul.Tensor(add_839, 0.5);  add_839 = None
    convert_element_type_732: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_971, torch.int64);  mul_971 = None
    unsqueeze_2345: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_732, -1);  convert_element_type_732 = None
    iota_51: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_733: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_51, torch.float64);  iota_51 = None
    mul_972: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_733, 1);  convert_element_type_733 = None
    add_840: "f64[56]" = torch.ops.aten.add.Tensor(mul_972, 0);  mul_972 = None
    convert_element_type_734: "f32[56]" = torch.ops.prims.convert_element_type.default(add_840, torch.float32);  add_840 = None
    add_841: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_734, 0.0);  convert_element_type_734 = None
    mul_973: "f32[56]" = torch.ops.aten.mul.Tensor(add_841, 0.5);  add_841 = None
    convert_element_type_735: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_973, torch.int64);  mul_973 = None
    _unsafe_index_25: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_837, [None, None, unsqueeze_2345, convert_element_type_735]);  add_837 = unsqueeze_2345 = convert_element_type_735 = None
    add_842: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_235, _unsafe_index_25);  _unsafe_index_25 = None
    convolution_290: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_251, arg870_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg870_1 = None
    convert_element_type_736: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1851_1, torch.float32);  arg1851_1 = None
    convert_element_type_737: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1852_1, torch.float32);  arg1852_1 = None
    add_843: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_737, 1e-05);  convert_element_type_737 = None
    sqrt_290: "f32[18]" = torch.ops.aten.sqrt.default(add_843);  add_843 = None
    reciprocal_290: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_290);  sqrt_290 = None
    mul_974: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_290, 1);  reciprocal_290 = None
    unsqueeze_2346: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_736, -1);  convert_element_type_736 = None
    unsqueeze_2347: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2346, -1);  unsqueeze_2346 = None
    unsqueeze_2348: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_974, -1);  mul_974 = None
    unsqueeze_2349: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2348, -1);  unsqueeze_2348 = None
    sub_290: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_290, unsqueeze_2347);  convolution_290 = unsqueeze_2347 = None
    mul_975: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_290, unsqueeze_2349);  sub_290 = unsqueeze_2349 = None
    unsqueeze_2350: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg871_1, -1);  arg871_1 = None
    unsqueeze_2351: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2350, -1);  unsqueeze_2350 = None
    mul_976: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_975, unsqueeze_2351);  mul_975 = unsqueeze_2351 = None
    unsqueeze_2352: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg872_1, -1);  arg872_1 = None
    unsqueeze_2353: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2352, -1);  unsqueeze_2352 = None
    add_844: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_976, unsqueeze_2353);  mul_976 = unsqueeze_2353 = None
    iota_52: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_738: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_52, torch.float64);  iota_52 = None
    mul_977: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_738, 1);  convert_element_type_738 = None
    add_845: "f64[56]" = torch.ops.aten.add.Tensor(mul_977, 0);  mul_977 = None
    convert_element_type_739: "f32[56]" = torch.ops.prims.convert_element_type.default(add_845, torch.float32);  add_845 = None
    add_846: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_739, 0.0);  convert_element_type_739 = None
    mul_978: "f32[56]" = torch.ops.aten.mul.Tensor(add_846, 0.25);  add_846 = None
    convert_element_type_740: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_978, torch.int64);  mul_978 = None
    unsqueeze_2354: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_740, -1);  convert_element_type_740 = None
    iota_53: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_741: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_53, torch.float64);  iota_53 = None
    mul_979: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_741, 1);  convert_element_type_741 = None
    add_847: "f64[56]" = torch.ops.aten.add.Tensor(mul_979, 0);  mul_979 = None
    convert_element_type_742: "f32[56]" = torch.ops.prims.convert_element_type.default(add_847, torch.float32);  add_847 = None
    add_848: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_742, 0.0);  convert_element_type_742 = None
    mul_980: "f32[56]" = torch.ops.aten.mul.Tensor(add_848, 0.25);  add_848 = None
    convert_element_type_743: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_980, torch.int64);  mul_980 = None
    _unsafe_index_26: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_844, [None, None, unsqueeze_2354, convert_element_type_743]);  add_844 = unsqueeze_2354 = convert_element_type_743 = None
    add_849: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_842, _unsafe_index_26);  add_842 = _unsafe_index_26 = None
    convolution_291: "f32[8, 18, 7, 7]" = torch.ops.aten.convolution.default(relu_259, arg873_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg873_1 = None
    convert_element_type_744: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1854_1, torch.float32);  arg1854_1 = None
    convert_element_type_745: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1855_1, torch.float32);  arg1855_1 = None
    add_850: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_745, 1e-05);  convert_element_type_745 = None
    sqrt_291: "f32[18]" = torch.ops.aten.sqrt.default(add_850);  add_850 = None
    reciprocal_291: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_291);  sqrt_291 = None
    mul_981: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_291, 1);  reciprocal_291 = None
    unsqueeze_2355: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_744, -1);  convert_element_type_744 = None
    unsqueeze_2356: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2355, -1);  unsqueeze_2355 = None
    unsqueeze_2357: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_981, -1);  mul_981 = None
    unsqueeze_2358: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2357, -1);  unsqueeze_2357 = None
    sub_291: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_291, unsqueeze_2356);  convolution_291 = unsqueeze_2356 = None
    mul_982: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_291, unsqueeze_2358);  sub_291 = unsqueeze_2358 = None
    unsqueeze_2359: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg874_1, -1);  arg874_1 = None
    unsqueeze_2360: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2359, -1);  unsqueeze_2359 = None
    mul_983: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(mul_982, unsqueeze_2360);  mul_982 = unsqueeze_2360 = None
    unsqueeze_2361: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg875_1, -1);  arg875_1 = None
    unsqueeze_2362: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2361, -1);  unsqueeze_2361 = None
    add_851: "f32[8, 18, 7, 7]" = torch.ops.aten.add.Tensor(mul_983, unsqueeze_2362);  mul_983 = unsqueeze_2362 = None
    iota_54: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_746: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_54, torch.float64);  iota_54 = None
    mul_984: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_746, 1);  convert_element_type_746 = None
    add_852: "f64[56]" = torch.ops.aten.add.Tensor(mul_984, 0);  mul_984 = None
    convert_element_type_747: "f32[56]" = torch.ops.prims.convert_element_type.default(add_852, torch.float32);  add_852 = None
    add_853: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_747, 0.0);  convert_element_type_747 = None
    mul_985: "f32[56]" = torch.ops.aten.mul.Tensor(add_853, 0.125);  add_853 = None
    convert_element_type_748: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_985, torch.int64);  mul_985 = None
    unsqueeze_2363: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_748, -1);  convert_element_type_748 = None
    iota_55: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_749: "f64[56]" = torch.ops.prims.convert_element_type.default(iota_55, torch.float64);  iota_55 = None
    mul_986: "f64[56]" = torch.ops.aten.mul.Tensor(convert_element_type_749, 1);  convert_element_type_749 = None
    add_854: "f64[56]" = torch.ops.aten.add.Tensor(mul_986, 0);  mul_986 = None
    convert_element_type_750: "f32[56]" = torch.ops.prims.convert_element_type.default(add_854, torch.float32);  add_854 = None
    add_855: "f32[56]" = torch.ops.aten.add.Tensor(convert_element_type_750, 0.0);  convert_element_type_750 = None
    mul_987: "f32[56]" = torch.ops.aten.mul.Tensor(add_855, 0.125);  add_855 = None
    convert_element_type_751: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_987, torch.int64);  mul_987 = None
    _unsafe_index_27: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_851, [None, None, unsqueeze_2363, convert_element_type_751]);  add_851 = unsqueeze_2363 = convert_element_type_751 = None
    add_856: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_849, _unsafe_index_27);  add_849 = _unsafe_index_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_260: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_856);  add_856 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_292: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_235, arg876_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg876_1 = None
    convert_element_type_752: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1857_1, torch.float32);  arg1857_1 = None
    convert_element_type_753: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1858_1, torch.float32);  arg1858_1 = None
    add_857: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_753, 1e-05);  convert_element_type_753 = None
    sqrt_292: "f32[36]" = torch.ops.aten.sqrt.default(add_857);  add_857 = None
    reciprocal_292: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_292);  sqrt_292 = None
    mul_988: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_292, 1);  reciprocal_292 = None
    unsqueeze_2364: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_752, -1);  convert_element_type_752 = None
    unsqueeze_2365: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2364, -1);  unsqueeze_2364 = None
    unsqueeze_2366: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_988, -1);  mul_988 = None
    unsqueeze_2367: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2366, -1);  unsqueeze_2366 = None
    sub_292: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_292, unsqueeze_2365);  convolution_292 = unsqueeze_2365 = None
    mul_989: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_292, unsqueeze_2367);  sub_292 = unsqueeze_2367 = None
    unsqueeze_2368: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg877_1, -1);  arg877_1 = None
    unsqueeze_2369: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2368, -1);  unsqueeze_2368 = None
    mul_990: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_989, unsqueeze_2369);  mul_989 = unsqueeze_2369 = None
    unsqueeze_2370: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg878_1, -1);  arg878_1 = None
    unsqueeze_2371: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2370, -1);  unsqueeze_2370 = None
    add_858: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_990, unsqueeze_2371);  mul_990 = unsqueeze_2371 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_859: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_858, relu_243);  add_858 = None
    convolution_293: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_251, arg879_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg879_1 = None
    convert_element_type_754: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1860_1, torch.float32);  arg1860_1 = None
    convert_element_type_755: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1861_1, torch.float32);  arg1861_1 = None
    add_860: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_755, 1e-05);  convert_element_type_755 = None
    sqrt_293: "f32[36]" = torch.ops.aten.sqrt.default(add_860);  add_860 = None
    reciprocal_293: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_293);  sqrt_293 = None
    mul_991: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_293, 1);  reciprocal_293 = None
    unsqueeze_2372: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_754, -1);  convert_element_type_754 = None
    unsqueeze_2373: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2372, -1);  unsqueeze_2372 = None
    unsqueeze_2374: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_991, -1);  mul_991 = None
    unsqueeze_2375: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2374, -1);  unsqueeze_2374 = None
    sub_293: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_293, unsqueeze_2373);  convolution_293 = unsqueeze_2373 = None
    mul_992: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_293, unsqueeze_2375);  sub_293 = unsqueeze_2375 = None
    unsqueeze_2376: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg880_1, -1);  arg880_1 = None
    unsqueeze_2377: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2376, -1);  unsqueeze_2376 = None
    mul_993: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_992, unsqueeze_2377);  mul_992 = unsqueeze_2377 = None
    unsqueeze_2378: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg881_1, -1);  arg881_1 = None
    unsqueeze_2379: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2378, -1);  unsqueeze_2378 = None
    add_861: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_993, unsqueeze_2379);  mul_993 = unsqueeze_2379 = None
    iota_56: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_756: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_56, torch.float64);  iota_56 = None
    mul_994: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_756, 1);  convert_element_type_756 = None
    add_862: "f64[28]" = torch.ops.aten.add.Tensor(mul_994, 0);  mul_994 = None
    convert_element_type_757: "f32[28]" = torch.ops.prims.convert_element_type.default(add_862, torch.float32);  add_862 = None
    add_863: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_757, 0.0);  convert_element_type_757 = None
    mul_995: "f32[28]" = torch.ops.aten.mul.Tensor(add_863, 0.5);  add_863 = None
    convert_element_type_758: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_995, torch.int64);  mul_995 = None
    unsqueeze_2380: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_758, -1);  convert_element_type_758 = None
    iota_57: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_759: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_57, torch.float64);  iota_57 = None
    mul_996: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_759, 1);  convert_element_type_759 = None
    add_864: "f64[28]" = torch.ops.aten.add.Tensor(mul_996, 0);  mul_996 = None
    convert_element_type_760: "f32[28]" = torch.ops.prims.convert_element_type.default(add_864, torch.float32);  add_864 = None
    add_865: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_760, 0.0);  convert_element_type_760 = None
    mul_997: "f32[28]" = torch.ops.aten.mul.Tensor(add_865, 0.5);  add_865 = None
    convert_element_type_761: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_997, torch.int64);  mul_997 = None
    _unsafe_index_28: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_861, [None, None, unsqueeze_2380, convert_element_type_761]);  add_861 = unsqueeze_2380 = convert_element_type_761 = None
    add_866: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_859, _unsafe_index_28);  add_859 = _unsafe_index_28 = None
    convolution_294: "f32[8, 36, 7, 7]" = torch.ops.aten.convolution.default(relu_259, arg882_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg882_1 = None
    convert_element_type_762: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1863_1, torch.float32);  arg1863_1 = None
    convert_element_type_763: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1864_1, torch.float32);  arg1864_1 = None
    add_867: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_763, 1e-05);  convert_element_type_763 = None
    sqrt_294: "f32[36]" = torch.ops.aten.sqrt.default(add_867);  add_867 = None
    reciprocal_294: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_294);  sqrt_294 = None
    mul_998: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_294, 1);  reciprocal_294 = None
    unsqueeze_2381: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_762, -1);  convert_element_type_762 = None
    unsqueeze_2382: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2381, -1);  unsqueeze_2381 = None
    unsqueeze_2383: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_998, -1);  mul_998 = None
    unsqueeze_2384: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2383, -1);  unsqueeze_2383 = None
    sub_294: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_294, unsqueeze_2382);  convolution_294 = unsqueeze_2382 = None
    mul_999: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_294, unsqueeze_2384);  sub_294 = unsqueeze_2384 = None
    unsqueeze_2385: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg883_1, -1);  arg883_1 = None
    unsqueeze_2386: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2385, -1);  unsqueeze_2385 = None
    mul_1000: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(mul_999, unsqueeze_2386);  mul_999 = unsqueeze_2386 = None
    unsqueeze_2387: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg884_1, -1);  arg884_1 = None
    unsqueeze_2388: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2387, -1);  unsqueeze_2387 = None
    add_868: "f32[8, 36, 7, 7]" = torch.ops.aten.add.Tensor(mul_1000, unsqueeze_2388);  mul_1000 = unsqueeze_2388 = None
    iota_58: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_764: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_58, torch.float64);  iota_58 = None
    mul_1001: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_764, 1);  convert_element_type_764 = None
    add_869: "f64[28]" = torch.ops.aten.add.Tensor(mul_1001, 0);  mul_1001 = None
    convert_element_type_765: "f32[28]" = torch.ops.prims.convert_element_type.default(add_869, torch.float32);  add_869 = None
    add_870: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_765, 0.0);  convert_element_type_765 = None
    mul_1002: "f32[28]" = torch.ops.aten.mul.Tensor(add_870, 0.25);  add_870 = None
    convert_element_type_766: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1002, torch.int64);  mul_1002 = None
    unsqueeze_2389: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_766, -1);  convert_element_type_766 = None
    iota_59: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_767: "f64[28]" = torch.ops.prims.convert_element_type.default(iota_59, torch.float64);  iota_59 = None
    mul_1003: "f64[28]" = torch.ops.aten.mul.Tensor(convert_element_type_767, 1);  convert_element_type_767 = None
    add_871: "f64[28]" = torch.ops.aten.add.Tensor(mul_1003, 0);  mul_1003 = None
    convert_element_type_768: "f32[28]" = torch.ops.prims.convert_element_type.default(add_871, torch.float32);  add_871 = None
    add_872: "f32[28]" = torch.ops.aten.add.Tensor(convert_element_type_768, 0.0);  convert_element_type_768 = None
    mul_1004: "f32[28]" = torch.ops.aten.mul.Tensor(add_872, 0.25);  add_872 = None
    convert_element_type_769: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1004, torch.int64);  mul_1004 = None
    _unsafe_index_29: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_868, [None, None, unsqueeze_2389, convert_element_type_769]);  add_868 = unsqueeze_2389 = convert_element_type_769 = None
    add_873: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_866, _unsafe_index_29);  add_866 = _unsafe_index_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_261: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_873);  add_873 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_295: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_235, arg885_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg885_1 = None
    convert_element_type_770: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1866_1, torch.float32);  arg1866_1 = None
    convert_element_type_771: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1867_1, torch.float32);  arg1867_1 = None
    add_874: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_771, 1e-05);  convert_element_type_771 = None
    sqrt_295: "f32[18]" = torch.ops.aten.sqrt.default(add_874);  add_874 = None
    reciprocal_295: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_295);  sqrt_295 = None
    mul_1005: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_295, 1);  reciprocal_295 = None
    unsqueeze_2390: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_770, -1);  convert_element_type_770 = None
    unsqueeze_2391: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2390, -1);  unsqueeze_2390 = None
    unsqueeze_2392: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_1005, -1);  mul_1005 = None
    unsqueeze_2393: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2392, -1);  unsqueeze_2392 = None
    sub_295: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_295, unsqueeze_2391);  convolution_295 = unsqueeze_2391 = None
    mul_1006: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_295, unsqueeze_2393);  sub_295 = unsqueeze_2393 = None
    unsqueeze_2394: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg886_1, -1);  arg886_1 = None
    unsqueeze_2395: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2394, -1);  unsqueeze_2394 = None
    mul_1007: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1006, unsqueeze_2395);  mul_1006 = unsqueeze_2395 = None
    unsqueeze_2396: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg887_1, -1);  arg887_1 = None
    unsqueeze_2397: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2396, -1);  unsqueeze_2396 = None
    add_875: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1007, unsqueeze_2397);  mul_1007 = unsqueeze_2397 = None
    relu_262: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_875);  add_875 = None
    convolution_296: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_262, arg888_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_262 = arg888_1 = None
    convert_element_type_772: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1869_1, torch.float32);  arg1869_1 = None
    convert_element_type_773: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1870_1, torch.float32);  arg1870_1 = None
    add_876: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_773, 1e-05);  convert_element_type_773 = None
    sqrt_296: "f32[72]" = torch.ops.aten.sqrt.default(add_876);  add_876 = None
    reciprocal_296: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_296);  sqrt_296 = None
    mul_1008: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_296, 1);  reciprocal_296 = None
    unsqueeze_2398: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_772, -1);  convert_element_type_772 = None
    unsqueeze_2399: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2398, -1);  unsqueeze_2398 = None
    unsqueeze_2400: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_1008, -1);  mul_1008 = None
    unsqueeze_2401: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2400, -1);  unsqueeze_2400 = None
    sub_296: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_296, unsqueeze_2399);  convolution_296 = unsqueeze_2399 = None
    mul_1009: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_296, unsqueeze_2401);  sub_296 = unsqueeze_2401 = None
    unsqueeze_2402: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg889_1, -1);  arg889_1 = None
    unsqueeze_2403: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2402, -1);  unsqueeze_2402 = None
    mul_1010: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1009, unsqueeze_2403);  mul_1009 = unsqueeze_2403 = None
    unsqueeze_2404: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg890_1, -1);  arg890_1 = None
    unsqueeze_2405: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2404, -1);  unsqueeze_2404 = None
    add_877: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1010, unsqueeze_2405);  mul_1010 = unsqueeze_2405 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_297: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_243, arg891_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  arg891_1 = None
    convert_element_type_774: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1872_1, torch.float32);  arg1872_1 = None
    convert_element_type_775: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1873_1, torch.float32);  arg1873_1 = None
    add_878: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_775, 1e-05);  convert_element_type_775 = None
    sqrt_297: "f32[72]" = torch.ops.aten.sqrt.default(add_878);  add_878 = None
    reciprocal_297: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_297);  sqrt_297 = None
    mul_1011: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_297, 1);  reciprocal_297 = None
    unsqueeze_2406: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_774, -1);  convert_element_type_774 = None
    unsqueeze_2407: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2406, -1);  unsqueeze_2406 = None
    unsqueeze_2408: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_1011, -1);  mul_1011 = None
    unsqueeze_2409: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2408, -1);  unsqueeze_2408 = None
    sub_297: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_297, unsqueeze_2407);  convolution_297 = unsqueeze_2407 = None
    mul_1012: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_297, unsqueeze_2409);  sub_297 = unsqueeze_2409 = None
    unsqueeze_2410: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg892_1, -1);  arg892_1 = None
    unsqueeze_2411: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2410, -1);  unsqueeze_2410 = None
    mul_1013: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1012, unsqueeze_2411);  mul_1012 = unsqueeze_2411 = None
    unsqueeze_2412: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg893_1, -1);  arg893_1 = None
    unsqueeze_2413: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2412, -1);  unsqueeze_2412 = None
    add_879: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1013, unsqueeze_2413);  mul_1013 = unsqueeze_2413 = None
    add_880: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_877, add_879);  add_877 = add_879 = None
    add_881: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_880, relu_251);  add_880 = None
    convolution_298: "f32[8, 72, 7, 7]" = torch.ops.aten.convolution.default(relu_259, arg894_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg894_1 = None
    convert_element_type_776: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1875_1, torch.float32);  arg1875_1 = None
    convert_element_type_777: "f32[72]" = torch.ops.prims.convert_element_type.default(arg1876_1, torch.float32);  arg1876_1 = None
    add_882: "f32[72]" = torch.ops.aten.add.Tensor(convert_element_type_777, 1e-05);  convert_element_type_777 = None
    sqrt_298: "f32[72]" = torch.ops.aten.sqrt.default(add_882);  add_882 = None
    reciprocal_298: "f32[72]" = torch.ops.aten.reciprocal.default(sqrt_298);  sqrt_298 = None
    mul_1014: "f32[72]" = torch.ops.aten.mul.Tensor(reciprocal_298, 1);  reciprocal_298 = None
    unsqueeze_2414: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_776, -1);  convert_element_type_776 = None
    unsqueeze_2415: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2414, -1);  unsqueeze_2414 = None
    unsqueeze_2416: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(mul_1014, -1);  mul_1014 = None
    unsqueeze_2417: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2416, -1);  unsqueeze_2416 = None
    sub_298: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_298, unsqueeze_2415);  convolution_298 = unsqueeze_2415 = None
    mul_1015: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_298, unsqueeze_2417);  sub_298 = unsqueeze_2417 = None
    unsqueeze_2418: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg895_1, -1);  arg895_1 = None
    unsqueeze_2419: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2418, -1);  unsqueeze_2418 = None
    mul_1016: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1015, unsqueeze_2419);  mul_1015 = unsqueeze_2419 = None
    unsqueeze_2420: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(arg896_1, -1);  arg896_1 = None
    unsqueeze_2421: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2420, -1);  unsqueeze_2420 = None
    add_883: "f32[8, 72, 7, 7]" = torch.ops.aten.add.Tensor(mul_1016, unsqueeze_2421);  mul_1016 = unsqueeze_2421 = None
    iota_60: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_778: "f64[14]" = torch.ops.prims.convert_element_type.default(iota_60, torch.float64);  iota_60 = None
    mul_1017: "f64[14]" = torch.ops.aten.mul.Tensor(convert_element_type_778, 1);  convert_element_type_778 = None
    add_884: "f64[14]" = torch.ops.aten.add.Tensor(mul_1017, 0);  mul_1017 = None
    convert_element_type_779: "f32[14]" = torch.ops.prims.convert_element_type.default(add_884, torch.float32);  add_884 = None
    add_885: "f32[14]" = torch.ops.aten.add.Tensor(convert_element_type_779, 0.0);  convert_element_type_779 = None
    mul_1018: "f32[14]" = torch.ops.aten.mul.Tensor(add_885, 0.5);  add_885 = None
    convert_element_type_780: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_1018, torch.int64);  mul_1018 = None
    unsqueeze_2422: "i64[14, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_780, -1);  convert_element_type_780 = None
    iota_61: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cpu'), requires_grad = False)
    convert_element_type_781: "f64[14]" = torch.ops.prims.convert_element_type.default(iota_61, torch.float64);  iota_61 = None
    mul_1019: "f64[14]" = torch.ops.aten.mul.Tensor(convert_element_type_781, 1);  convert_element_type_781 = None
    add_886: "f64[14]" = torch.ops.aten.add.Tensor(mul_1019, 0);  mul_1019 = None
    convert_element_type_782: "f32[14]" = torch.ops.prims.convert_element_type.default(add_886, torch.float32);  add_886 = None
    add_887: "f32[14]" = torch.ops.aten.add.Tensor(convert_element_type_782, 0.0);  convert_element_type_782 = None
    mul_1020: "f32[14]" = torch.ops.aten.mul.Tensor(add_887, 0.5);  add_887 = None
    convert_element_type_783: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_1020, torch.int64);  mul_1020 = None
    _unsafe_index_30: "f32[8, 72, 14, 14]" = torch.ops.aten._unsafe_index.Tensor(add_883, [None, None, unsqueeze_2422, convert_element_type_783]);  add_883 = unsqueeze_2422 = convert_element_type_783 = None
    add_888: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_881, _unsafe_index_30);  add_881 = _unsafe_index_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_263: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_888);  add_888 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_299: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_235, arg897_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_235 = arg897_1 = None
    convert_element_type_784: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1878_1, torch.float32);  arg1878_1 = None
    convert_element_type_785: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1879_1, torch.float32);  arg1879_1 = None
    add_889: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_785, 1e-05);  convert_element_type_785 = None
    sqrt_299: "f32[18]" = torch.ops.aten.sqrt.default(add_889);  add_889 = None
    reciprocal_299: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_299);  sqrt_299 = None
    mul_1021: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_299, 1);  reciprocal_299 = None
    unsqueeze_2423: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_784, -1);  convert_element_type_784 = None
    unsqueeze_2424: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2423, -1);  unsqueeze_2423 = None
    unsqueeze_2425: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_1021, -1);  mul_1021 = None
    unsqueeze_2426: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2425, -1);  unsqueeze_2425 = None
    sub_299: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_299, unsqueeze_2424);  convolution_299 = unsqueeze_2424 = None
    mul_1022: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_299, unsqueeze_2426);  sub_299 = unsqueeze_2426 = None
    unsqueeze_2427: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg898_1, -1);  arg898_1 = None
    unsqueeze_2428: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2427, -1);  unsqueeze_2427 = None
    mul_1023: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1022, unsqueeze_2428);  mul_1022 = unsqueeze_2428 = None
    unsqueeze_2429: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg899_1, -1);  arg899_1 = None
    unsqueeze_2430: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2429, -1);  unsqueeze_2429 = None
    add_890: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1023, unsqueeze_2430);  mul_1023 = unsqueeze_2430 = None
    relu_264: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_890);  add_890 = None
    convolution_300: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_264, arg900_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_264 = arg900_1 = None
    convert_element_type_786: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1881_1, torch.float32);  arg1881_1 = None
    convert_element_type_787: "f32[18]" = torch.ops.prims.convert_element_type.default(arg1882_1, torch.float32);  arg1882_1 = None
    add_891: "f32[18]" = torch.ops.aten.add.Tensor(convert_element_type_787, 1e-05);  convert_element_type_787 = None
    sqrt_300: "f32[18]" = torch.ops.aten.sqrt.default(add_891);  add_891 = None
    reciprocal_300: "f32[18]" = torch.ops.aten.reciprocal.default(sqrt_300);  sqrt_300 = None
    mul_1024: "f32[18]" = torch.ops.aten.mul.Tensor(reciprocal_300, 1);  reciprocal_300 = None
    unsqueeze_2431: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_786, -1);  convert_element_type_786 = None
    unsqueeze_2432: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2431, -1);  unsqueeze_2431 = None
    unsqueeze_2433: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(mul_1024, -1);  mul_1024 = None
    unsqueeze_2434: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2433, -1);  unsqueeze_2433 = None
    sub_300: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_300, unsqueeze_2432);  convolution_300 = unsqueeze_2432 = None
    mul_1025: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_300, unsqueeze_2434);  sub_300 = unsqueeze_2434 = None
    unsqueeze_2435: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg901_1, -1);  arg901_1 = None
    unsqueeze_2436: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2435, -1);  unsqueeze_2435 = None
    mul_1026: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1025, unsqueeze_2436);  mul_1025 = unsqueeze_2436 = None
    unsqueeze_2437: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(arg902_1, -1);  arg902_1 = None
    unsqueeze_2438: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2437, -1);  unsqueeze_2437 = None
    add_892: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_1026, unsqueeze_2438);  mul_1026 = unsqueeze_2438 = None
    relu_265: "f32[8, 18, 14, 14]" = torch.ops.aten.relu.default(add_892);  add_892 = None
    convolution_301: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_265, arg903_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_265 = arg903_1 = None
    convert_element_type_788: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1884_1, torch.float32);  arg1884_1 = None
    convert_element_type_789: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1885_1, torch.float32);  arg1885_1 = None
    add_893: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_789, 1e-05);  convert_element_type_789 = None
    sqrt_301: "f32[144]" = torch.ops.aten.sqrt.default(add_893);  add_893 = None
    reciprocal_301: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_301);  sqrt_301 = None
    mul_1027: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_301, 1);  reciprocal_301 = None
    unsqueeze_2439: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_788, -1);  convert_element_type_788 = None
    unsqueeze_2440: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2439, -1);  unsqueeze_2439 = None
    unsqueeze_2441: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_1027, -1);  mul_1027 = None
    unsqueeze_2442: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2441, -1);  unsqueeze_2441 = None
    sub_301: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_301, unsqueeze_2440);  convolution_301 = unsqueeze_2440 = None
    mul_1028: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_301, unsqueeze_2442);  sub_301 = unsqueeze_2442 = None
    unsqueeze_2443: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg904_1, -1);  arg904_1 = None
    unsqueeze_2444: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2443, -1);  unsqueeze_2443 = None
    mul_1029: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1028, unsqueeze_2444);  mul_1028 = unsqueeze_2444 = None
    unsqueeze_2445: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg905_1, -1);  arg905_1 = None
    unsqueeze_2446: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2445, -1);  unsqueeze_2445 = None
    add_894: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1029, unsqueeze_2446);  mul_1029 = unsqueeze_2446 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_302: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_243, arg906_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_243 = arg906_1 = None
    convert_element_type_790: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1887_1, torch.float32);  arg1887_1 = None
    convert_element_type_791: "f32[36]" = torch.ops.prims.convert_element_type.default(arg1888_1, torch.float32);  arg1888_1 = None
    add_895: "f32[36]" = torch.ops.aten.add.Tensor(convert_element_type_791, 1e-05);  convert_element_type_791 = None
    sqrt_302: "f32[36]" = torch.ops.aten.sqrt.default(add_895);  add_895 = None
    reciprocal_302: "f32[36]" = torch.ops.aten.reciprocal.default(sqrt_302);  sqrt_302 = None
    mul_1030: "f32[36]" = torch.ops.aten.mul.Tensor(reciprocal_302, 1);  reciprocal_302 = None
    unsqueeze_2447: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_790, -1);  convert_element_type_790 = None
    unsqueeze_2448: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2447, -1);  unsqueeze_2447 = None
    unsqueeze_2449: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(mul_1030, -1);  mul_1030 = None
    unsqueeze_2450: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2449, -1);  unsqueeze_2449 = None
    sub_302: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_302, unsqueeze_2448);  convolution_302 = unsqueeze_2448 = None
    mul_1031: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_302, unsqueeze_2450);  sub_302 = unsqueeze_2450 = None
    unsqueeze_2451: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg907_1, -1);  arg907_1 = None
    unsqueeze_2452: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2451, -1);  unsqueeze_2451 = None
    mul_1032: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1031, unsqueeze_2452);  mul_1031 = unsqueeze_2452 = None
    unsqueeze_2453: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(arg908_1, -1);  arg908_1 = None
    unsqueeze_2454: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2453, -1);  unsqueeze_2453 = None
    add_896: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_1032, unsqueeze_2454);  mul_1032 = unsqueeze_2454 = None
    relu_266: "f32[8, 36, 14, 14]" = torch.ops.aten.relu.default(add_896);  add_896 = None
    convolution_303: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_266, arg909_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_266 = arg909_1 = None
    convert_element_type_792: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1890_1, torch.float32);  arg1890_1 = None
    convert_element_type_793: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1891_1, torch.float32);  arg1891_1 = None
    add_897: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_793, 1e-05);  convert_element_type_793 = None
    sqrt_303: "f32[144]" = torch.ops.aten.sqrt.default(add_897);  add_897 = None
    reciprocal_303: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_303);  sqrt_303 = None
    mul_1033: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_303, 1);  reciprocal_303 = None
    unsqueeze_2455: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_792, -1);  convert_element_type_792 = None
    unsqueeze_2456: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2455, -1);  unsqueeze_2455 = None
    unsqueeze_2457: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_1033, -1);  mul_1033 = None
    unsqueeze_2458: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2457, -1);  unsqueeze_2457 = None
    sub_303: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_303, unsqueeze_2456);  convolution_303 = unsqueeze_2456 = None
    mul_1034: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_303, unsqueeze_2458);  sub_303 = unsqueeze_2458 = None
    unsqueeze_2459: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg910_1, -1);  arg910_1 = None
    unsqueeze_2460: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2459, -1);  unsqueeze_2459 = None
    mul_1035: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1034, unsqueeze_2460);  mul_1034 = unsqueeze_2460 = None
    unsqueeze_2461: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg911_1, -1);  arg911_1 = None
    unsqueeze_2462: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2461, -1);  unsqueeze_2461 = None
    add_898: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1035, unsqueeze_2462);  mul_1035 = unsqueeze_2462 = None
    add_899: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_894, add_898);  add_894 = add_898 = None
    convolution_304: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_251, arg912_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_251 = arg912_1 = None
    convert_element_type_794: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1893_1, torch.float32);  arg1893_1 = None
    convert_element_type_795: "f32[144]" = torch.ops.prims.convert_element_type.default(arg1894_1, torch.float32);  arg1894_1 = None
    add_900: "f32[144]" = torch.ops.aten.add.Tensor(convert_element_type_795, 1e-05);  convert_element_type_795 = None
    sqrt_304: "f32[144]" = torch.ops.aten.sqrt.default(add_900);  add_900 = None
    reciprocal_304: "f32[144]" = torch.ops.aten.reciprocal.default(sqrt_304);  sqrt_304 = None
    mul_1036: "f32[144]" = torch.ops.aten.mul.Tensor(reciprocal_304, 1);  reciprocal_304 = None
    unsqueeze_2463: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_794, -1);  convert_element_type_794 = None
    unsqueeze_2464: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2463, -1);  unsqueeze_2463 = None
    unsqueeze_2465: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(mul_1036, -1);  mul_1036 = None
    unsqueeze_2466: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2465, -1);  unsqueeze_2465 = None
    sub_304: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_304, unsqueeze_2464);  convolution_304 = unsqueeze_2464 = None
    mul_1037: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_304, unsqueeze_2466);  sub_304 = unsqueeze_2466 = None
    unsqueeze_2467: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg913_1, -1);  arg913_1 = None
    unsqueeze_2468: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2467, -1);  unsqueeze_2467 = None
    mul_1038: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1037, unsqueeze_2468);  mul_1037 = unsqueeze_2468 = None
    unsqueeze_2469: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(arg914_1, -1);  arg914_1 = None
    unsqueeze_2470: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2469, -1);  unsqueeze_2469 = None
    add_901: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1038, unsqueeze_2470);  mul_1038 = unsqueeze_2470 = None
    add_902: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_899, add_901);  add_899 = add_901 = None
    add_903: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_902, relu_259);  add_902 = relu_259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_267: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_903);  add_903 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_305: "f32[8, 32, 56, 56]" = torch.ops.aten.convolution.default(relu_260, arg915_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg915_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_796: "f32[32]" = torch.ops.prims.convert_element_type.default(arg1896_1, torch.float32);  arg1896_1 = None
    convert_element_type_797: "f32[32]" = torch.ops.prims.convert_element_type.default(arg1897_1, torch.float32);  arg1897_1 = None
    add_904: "f32[32]" = torch.ops.aten.add.Tensor(convert_element_type_797, 1e-05);  convert_element_type_797 = None
    sqrt_305: "f32[32]" = torch.ops.aten.sqrt.default(add_904);  add_904 = None
    reciprocal_305: "f32[32]" = torch.ops.aten.reciprocal.default(sqrt_305);  sqrt_305 = None
    mul_1039: "f32[32]" = torch.ops.aten.mul.Tensor(reciprocal_305, 1);  reciprocal_305 = None
    unsqueeze_2471: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_796, -1);  convert_element_type_796 = None
    unsqueeze_2472: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2471, -1);  unsqueeze_2471 = None
    unsqueeze_2473: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(mul_1039, -1);  mul_1039 = None
    unsqueeze_2474: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2473, -1);  unsqueeze_2473 = None
    sub_305: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_305, unsqueeze_2472);  convolution_305 = unsqueeze_2472 = None
    mul_1040: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_305, unsqueeze_2474);  sub_305 = unsqueeze_2474 = None
    unsqueeze_2475: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(arg916_1, -1);  arg916_1 = None
    unsqueeze_2476: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2475, -1);  unsqueeze_2475 = None
    mul_1041: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1040, unsqueeze_2476);  mul_1040 = unsqueeze_2476 = None
    unsqueeze_2477: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(arg917_1, -1);  arg917_1 = None
    unsqueeze_2478: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2477, -1);  unsqueeze_2477 = None
    add_905: "f32[8, 32, 56, 56]" = torch.ops.aten.add.Tensor(mul_1041, unsqueeze_2478);  mul_1041 = unsqueeze_2478 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_268: "f32[8, 32, 56, 56]" = torch.ops.aten.relu.default(add_905);  add_905 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_306: "f32[8, 32, 56, 56]" = torch.ops.aten.convolution.default(relu_268, arg918_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_268 = arg918_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_798: "f32[32]" = torch.ops.prims.convert_element_type.default(arg1899_1, torch.float32);  arg1899_1 = None
    convert_element_type_799: "f32[32]" = torch.ops.prims.convert_element_type.default(arg1900_1, torch.float32);  arg1900_1 = None
    add_906: "f32[32]" = torch.ops.aten.add.Tensor(convert_element_type_799, 1e-05);  convert_element_type_799 = None
    sqrt_306: "f32[32]" = torch.ops.aten.sqrt.default(add_906);  add_906 = None
    reciprocal_306: "f32[32]" = torch.ops.aten.reciprocal.default(sqrt_306);  sqrt_306 = None
    mul_1042: "f32[32]" = torch.ops.aten.mul.Tensor(reciprocal_306, 1);  reciprocal_306 = None
    unsqueeze_2479: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_798, -1);  convert_element_type_798 = None
    unsqueeze_2480: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2479, -1);  unsqueeze_2479 = None
    unsqueeze_2481: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(mul_1042, -1);  mul_1042 = None
    unsqueeze_2482: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2481, -1);  unsqueeze_2481 = None
    sub_306: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_306, unsqueeze_2480);  convolution_306 = unsqueeze_2480 = None
    mul_1043: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_306, unsqueeze_2482);  sub_306 = unsqueeze_2482 = None
    unsqueeze_2483: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(arg919_1, -1);  arg919_1 = None
    unsqueeze_2484: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2483, -1);  unsqueeze_2483 = None
    mul_1044: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1043, unsqueeze_2484);  mul_1043 = unsqueeze_2484 = None
    unsqueeze_2485: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(arg920_1, -1);  arg920_1 = None
    unsqueeze_2486: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2485, -1);  unsqueeze_2485 = None
    add_907: "f32[8, 32, 56, 56]" = torch.ops.aten.add.Tensor(mul_1044, unsqueeze_2486);  mul_1044 = unsqueeze_2486 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_269: "f32[8, 32, 56, 56]" = torch.ops.aten.relu.default(add_907);  add_907 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_307: "f32[8, 128, 56, 56]" = torch.ops.aten.convolution.default(relu_269, arg921_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_269 = arg921_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_800: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1902_1, torch.float32);  arg1902_1 = None
    convert_element_type_801: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1903_1, torch.float32);  arg1903_1 = None
    add_908: "f32[128]" = torch.ops.aten.add.Tensor(convert_element_type_801, 1e-05);  convert_element_type_801 = None
    sqrt_307: "f32[128]" = torch.ops.aten.sqrt.default(add_908);  add_908 = None
    reciprocal_307: "f32[128]" = torch.ops.aten.reciprocal.default(sqrt_307);  sqrt_307 = None
    mul_1045: "f32[128]" = torch.ops.aten.mul.Tensor(reciprocal_307, 1);  reciprocal_307 = None
    unsqueeze_2487: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_800, -1);  convert_element_type_800 = None
    unsqueeze_2488: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2487, -1);  unsqueeze_2487 = None
    unsqueeze_2489: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(mul_1045, -1);  mul_1045 = None
    unsqueeze_2490: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2489, -1);  unsqueeze_2489 = None
    sub_307: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_307, unsqueeze_2488);  convolution_307 = unsqueeze_2488 = None
    mul_1046: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_307, unsqueeze_2490);  sub_307 = unsqueeze_2490 = None
    unsqueeze_2491: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg922_1, -1);  arg922_1 = None
    unsqueeze_2492: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2491, -1);  unsqueeze_2491 = None
    mul_1047: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1046, unsqueeze_2492);  mul_1046 = unsqueeze_2492 = None
    unsqueeze_2493: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg923_1, -1);  arg923_1 = None
    unsqueeze_2494: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2493, -1);  unsqueeze_2493 = None
    add_909: "f32[8, 128, 56, 56]" = torch.ops.aten.add.Tensor(mul_1047, unsqueeze_2494);  mul_1047 = unsqueeze_2494 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_308: "f32[8, 128, 56, 56]" = torch.ops.aten.convolution.default(relu_260, arg924_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_260 = arg924_1 = None
    convert_element_type_802: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1905_1, torch.float32);  arg1905_1 = None
    convert_element_type_803: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1906_1, torch.float32);  arg1906_1 = None
    add_910: "f32[128]" = torch.ops.aten.add.Tensor(convert_element_type_803, 1e-05);  convert_element_type_803 = None
    sqrt_308: "f32[128]" = torch.ops.aten.sqrt.default(add_910);  add_910 = None
    reciprocal_308: "f32[128]" = torch.ops.aten.reciprocal.default(sqrt_308);  sqrt_308 = None
    mul_1048: "f32[128]" = torch.ops.aten.mul.Tensor(reciprocal_308, 1);  reciprocal_308 = None
    unsqueeze_2495: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_802, -1);  convert_element_type_802 = None
    unsqueeze_2496: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2495, -1);  unsqueeze_2495 = None
    unsqueeze_2497: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(mul_1048, -1);  mul_1048 = None
    unsqueeze_2498: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2497, -1);  unsqueeze_2497 = None
    sub_308: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_308, unsqueeze_2496);  convolution_308 = unsqueeze_2496 = None
    mul_1049: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_308, unsqueeze_2498);  sub_308 = unsqueeze_2498 = None
    unsqueeze_2499: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg925_1, -1);  arg925_1 = None
    unsqueeze_2500: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2499, -1);  unsqueeze_2499 = None
    mul_1050: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1049, unsqueeze_2500);  mul_1049 = unsqueeze_2500 = None
    unsqueeze_2501: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg926_1, -1);  arg926_1 = None
    unsqueeze_2502: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2501, -1);  unsqueeze_2501 = None
    add_911: "f32[8, 128, 56, 56]" = torch.ops.aten.add.Tensor(mul_1050, unsqueeze_2502);  mul_1050 = unsqueeze_2502 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_912: "f32[8, 128, 56, 56]" = torch.ops.aten.add.Tensor(add_909, add_911);  add_909 = add_911 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_270: "f32[8, 128, 56, 56]" = torch.ops.aten.relu.default(add_912);  add_912 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_309: "f32[8, 64, 28, 28]" = torch.ops.aten.convolution.default(relu_261, arg927_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg927_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_804: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1908_1, torch.float32);  arg1908_1 = None
    convert_element_type_805: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1909_1, torch.float32);  arg1909_1 = None
    add_913: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_805, 1e-05);  convert_element_type_805 = None
    sqrt_309: "f32[64]" = torch.ops.aten.sqrt.default(add_913);  add_913 = None
    reciprocal_309: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_309);  sqrt_309 = None
    mul_1051: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_309, 1);  reciprocal_309 = None
    unsqueeze_2503: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_804, -1);  convert_element_type_804 = None
    unsqueeze_2504: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2503, -1);  unsqueeze_2503 = None
    unsqueeze_2505: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_1051, -1);  mul_1051 = None
    unsqueeze_2506: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2505, -1);  unsqueeze_2505 = None
    sub_309: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_309, unsqueeze_2504);  convolution_309 = unsqueeze_2504 = None
    mul_1052: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_309, unsqueeze_2506);  sub_309 = unsqueeze_2506 = None
    unsqueeze_2507: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg928_1, -1);  arg928_1 = None
    unsqueeze_2508: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2507, -1);  unsqueeze_2507 = None
    mul_1053: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1052, unsqueeze_2508);  mul_1052 = unsqueeze_2508 = None
    unsqueeze_2509: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg929_1, -1);  arg929_1 = None
    unsqueeze_2510: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2509, -1);  unsqueeze_2509 = None
    add_914: "f32[8, 64, 28, 28]" = torch.ops.aten.add.Tensor(mul_1053, unsqueeze_2510);  mul_1053 = unsqueeze_2510 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_271: "f32[8, 64, 28, 28]" = torch.ops.aten.relu.default(add_914);  add_914 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_310: "f32[8, 64, 28, 28]" = torch.ops.aten.convolution.default(relu_271, arg930_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_271 = arg930_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_806: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1911_1, torch.float32);  arg1911_1 = None
    convert_element_type_807: "f32[64]" = torch.ops.prims.convert_element_type.default(arg1912_1, torch.float32);  arg1912_1 = None
    add_915: "f32[64]" = torch.ops.aten.add.Tensor(convert_element_type_807, 1e-05);  convert_element_type_807 = None
    sqrt_310: "f32[64]" = torch.ops.aten.sqrt.default(add_915);  add_915 = None
    reciprocal_310: "f32[64]" = torch.ops.aten.reciprocal.default(sqrt_310);  sqrt_310 = None
    mul_1054: "f32[64]" = torch.ops.aten.mul.Tensor(reciprocal_310, 1);  reciprocal_310 = None
    unsqueeze_2511: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_806, -1);  convert_element_type_806 = None
    unsqueeze_2512: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2511, -1);  unsqueeze_2511 = None
    unsqueeze_2513: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(mul_1054, -1);  mul_1054 = None
    unsqueeze_2514: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2513, -1);  unsqueeze_2513 = None
    sub_310: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_310, unsqueeze_2512);  convolution_310 = unsqueeze_2512 = None
    mul_1055: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_310, unsqueeze_2514);  sub_310 = unsqueeze_2514 = None
    unsqueeze_2515: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg931_1, -1);  arg931_1 = None
    unsqueeze_2516: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2515, -1);  unsqueeze_2515 = None
    mul_1056: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1055, unsqueeze_2516);  mul_1055 = unsqueeze_2516 = None
    unsqueeze_2517: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(arg932_1, -1);  arg932_1 = None
    unsqueeze_2518: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2517, -1);  unsqueeze_2517 = None
    add_916: "f32[8, 64, 28, 28]" = torch.ops.aten.add.Tensor(mul_1056, unsqueeze_2518);  mul_1056 = unsqueeze_2518 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_272: "f32[8, 64, 28, 28]" = torch.ops.aten.relu.default(add_916);  add_916 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_311: "f32[8, 256, 28, 28]" = torch.ops.aten.convolution.default(relu_272, arg933_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_272 = arg933_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_808: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1914_1, torch.float32);  arg1914_1 = None
    convert_element_type_809: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1915_1, torch.float32);  arg1915_1 = None
    add_917: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_809, 1e-05);  convert_element_type_809 = None
    sqrt_311: "f32[256]" = torch.ops.aten.sqrt.default(add_917);  add_917 = None
    reciprocal_311: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_311);  sqrt_311 = None
    mul_1057: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_311, 1);  reciprocal_311 = None
    unsqueeze_2519: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_808, -1);  convert_element_type_808 = None
    unsqueeze_2520: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2519, -1);  unsqueeze_2519 = None
    unsqueeze_2521: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_1057, -1);  mul_1057 = None
    unsqueeze_2522: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2521, -1);  unsqueeze_2521 = None
    sub_311: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_311, unsqueeze_2520);  convolution_311 = unsqueeze_2520 = None
    mul_1058: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_311, unsqueeze_2522);  sub_311 = unsqueeze_2522 = None
    unsqueeze_2523: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg934_1, -1);  arg934_1 = None
    unsqueeze_2524: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2523, -1);  unsqueeze_2523 = None
    mul_1059: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1058, unsqueeze_2524);  mul_1058 = unsqueeze_2524 = None
    unsqueeze_2525: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg935_1, -1);  arg935_1 = None
    unsqueeze_2526: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2525, -1);  unsqueeze_2525 = None
    add_918: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(mul_1059, unsqueeze_2526);  mul_1059 = unsqueeze_2526 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_312: "f32[8, 256, 28, 28]" = torch.ops.aten.convolution.default(relu_261, arg936_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_261 = arg936_1 = None
    convert_element_type_810: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1917_1, torch.float32);  arg1917_1 = None
    convert_element_type_811: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1918_1, torch.float32);  arg1918_1 = None
    add_919: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_811, 1e-05);  convert_element_type_811 = None
    sqrt_312: "f32[256]" = torch.ops.aten.sqrt.default(add_919);  add_919 = None
    reciprocal_312: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_312);  sqrt_312 = None
    mul_1060: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_312, 1);  reciprocal_312 = None
    unsqueeze_2527: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_810, -1);  convert_element_type_810 = None
    unsqueeze_2528: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2527, -1);  unsqueeze_2527 = None
    unsqueeze_2529: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_1060, -1);  mul_1060 = None
    unsqueeze_2530: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2529, -1);  unsqueeze_2529 = None
    sub_312: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_312, unsqueeze_2528);  convolution_312 = unsqueeze_2528 = None
    mul_1061: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_312, unsqueeze_2530);  sub_312 = unsqueeze_2530 = None
    unsqueeze_2531: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg937_1, -1);  arg937_1 = None
    unsqueeze_2532: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2531, -1);  unsqueeze_2531 = None
    mul_1062: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1061, unsqueeze_2532);  mul_1061 = unsqueeze_2532 = None
    unsqueeze_2533: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg938_1, -1);  arg938_1 = None
    unsqueeze_2534: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2533, -1);  unsqueeze_2533 = None
    add_920: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(mul_1062, unsqueeze_2534);  mul_1062 = unsqueeze_2534 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_921: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(add_918, add_920);  add_918 = add_920 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_273: "f32[8, 256, 28, 28]" = torch.ops.aten.relu.default(add_921);  add_921 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    convolution_313: "f32[8, 256, 28, 28]" = torch.ops.aten.convolution.default(relu_270, arg939_1, arg940_1, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  relu_270 = arg939_1 = arg940_1 = None
    convert_element_type_812: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1920_1, torch.float32);  arg1920_1 = None
    convert_element_type_813: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1921_1, torch.float32);  arg1921_1 = None
    add_922: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_813, 1e-05);  convert_element_type_813 = None
    sqrt_313: "f32[256]" = torch.ops.aten.sqrt.default(add_922);  add_922 = None
    reciprocal_313: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_313);  sqrt_313 = None
    mul_1063: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_313, 1);  reciprocal_313 = None
    unsqueeze_2535: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_812, -1);  convert_element_type_812 = None
    unsqueeze_2536: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2535, -1);  unsqueeze_2535 = None
    unsqueeze_2537: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_1063, -1);  mul_1063 = None
    unsqueeze_2538: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2537, -1);  unsqueeze_2537 = None
    sub_313: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_313, unsqueeze_2536);  convolution_313 = unsqueeze_2536 = None
    mul_1064: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_313, unsqueeze_2538);  sub_313 = unsqueeze_2538 = None
    unsqueeze_2539: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg941_1, -1);  arg941_1 = None
    unsqueeze_2540: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2539, -1);  unsqueeze_2539 = None
    mul_1065: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1064, unsqueeze_2540);  mul_1064 = unsqueeze_2540 = None
    unsqueeze_2541: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg942_1, -1);  arg942_1 = None
    unsqueeze_2542: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2541, -1);  unsqueeze_2541 = None
    add_923: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(mul_1065, unsqueeze_2542);  mul_1065 = unsqueeze_2542 = None
    relu_274: "f32[8, 256, 28, 28]" = torch.ops.aten.relu.default(add_923);  add_923 = None
    add_924: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(relu_273, relu_274);  relu_273 = relu_274 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_314: "f32[8, 128, 14, 14]" = torch.ops.aten.convolution.default(relu_263, arg943_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg943_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_814: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1923_1, torch.float32);  arg1923_1 = None
    convert_element_type_815: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1924_1, torch.float32);  arg1924_1 = None
    add_925: "f32[128]" = torch.ops.aten.add.Tensor(convert_element_type_815, 1e-05);  convert_element_type_815 = None
    sqrt_314: "f32[128]" = torch.ops.aten.sqrt.default(add_925);  add_925 = None
    reciprocal_314: "f32[128]" = torch.ops.aten.reciprocal.default(sqrt_314);  sqrt_314 = None
    mul_1066: "f32[128]" = torch.ops.aten.mul.Tensor(reciprocal_314, 1);  reciprocal_314 = None
    unsqueeze_2543: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_814, -1);  convert_element_type_814 = None
    unsqueeze_2544: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2543, -1);  unsqueeze_2543 = None
    unsqueeze_2545: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(mul_1066, -1);  mul_1066 = None
    unsqueeze_2546: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2545, -1);  unsqueeze_2545 = None
    sub_314: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_314, unsqueeze_2544);  convolution_314 = unsqueeze_2544 = None
    mul_1067: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_314, unsqueeze_2546);  sub_314 = unsqueeze_2546 = None
    unsqueeze_2547: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg944_1, -1);  arg944_1 = None
    unsqueeze_2548: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2547, -1);  unsqueeze_2547 = None
    mul_1068: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1067, unsqueeze_2548);  mul_1067 = unsqueeze_2548 = None
    unsqueeze_2549: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg945_1, -1);  arg945_1 = None
    unsqueeze_2550: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2549, -1);  unsqueeze_2549 = None
    add_926: "f32[8, 128, 14, 14]" = torch.ops.aten.add.Tensor(mul_1068, unsqueeze_2550);  mul_1068 = unsqueeze_2550 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_275: "f32[8, 128, 14, 14]" = torch.ops.aten.relu.default(add_926);  add_926 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_315: "f32[8, 128, 14, 14]" = torch.ops.aten.convolution.default(relu_275, arg946_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_275 = arg946_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_816: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1926_1, torch.float32);  arg1926_1 = None
    convert_element_type_817: "f32[128]" = torch.ops.prims.convert_element_type.default(arg1927_1, torch.float32);  arg1927_1 = None
    add_927: "f32[128]" = torch.ops.aten.add.Tensor(convert_element_type_817, 1e-05);  convert_element_type_817 = None
    sqrt_315: "f32[128]" = torch.ops.aten.sqrt.default(add_927);  add_927 = None
    reciprocal_315: "f32[128]" = torch.ops.aten.reciprocal.default(sqrt_315);  sqrt_315 = None
    mul_1069: "f32[128]" = torch.ops.aten.mul.Tensor(reciprocal_315, 1);  reciprocal_315 = None
    unsqueeze_2551: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_816, -1);  convert_element_type_816 = None
    unsqueeze_2552: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2551, -1);  unsqueeze_2551 = None
    unsqueeze_2553: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(mul_1069, -1);  mul_1069 = None
    unsqueeze_2554: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2553, -1);  unsqueeze_2553 = None
    sub_315: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_315, unsqueeze_2552);  convolution_315 = unsqueeze_2552 = None
    mul_1070: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_315, unsqueeze_2554);  sub_315 = unsqueeze_2554 = None
    unsqueeze_2555: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg947_1, -1);  arg947_1 = None
    unsqueeze_2556: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2555, -1);  unsqueeze_2555 = None
    mul_1071: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1070, unsqueeze_2556);  mul_1070 = unsqueeze_2556 = None
    unsqueeze_2557: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(arg948_1, -1);  arg948_1 = None
    unsqueeze_2558: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2557, -1);  unsqueeze_2557 = None
    add_928: "f32[8, 128, 14, 14]" = torch.ops.aten.add.Tensor(mul_1071, unsqueeze_2558);  mul_1071 = unsqueeze_2558 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_276: "f32[8, 128, 14, 14]" = torch.ops.aten.relu.default(add_928);  add_928 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_316: "f32[8, 512, 14, 14]" = torch.ops.aten.convolution.default(relu_276, arg949_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_276 = arg949_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_818: "f32[512]" = torch.ops.prims.convert_element_type.default(arg1929_1, torch.float32);  arg1929_1 = None
    convert_element_type_819: "f32[512]" = torch.ops.prims.convert_element_type.default(arg1930_1, torch.float32);  arg1930_1 = None
    add_929: "f32[512]" = torch.ops.aten.add.Tensor(convert_element_type_819, 1e-05);  convert_element_type_819 = None
    sqrt_316: "f32[512]" = torch.ops.aten.sqrt.default(add_929);  add_929 = None
    reciprocal_316: "f32[512]" = torch.ops.aten.reciprocal.default(sqrt_316);  sqrt_316 = None
    mul_1072: "f32[512]" = torch.ops.aten.mul.Tensor(reciprocal_316, 1);  reciprocal_316 = None
    unsqueeze_2559: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_818, -1);  convert_element_type_818 = None
    unsqueeze_2560: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2559, -1);  unsqueeze_2559 = None
    unsqueeze_2561: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(mul_1072, -1);  mul_1072 = None
    unsqueeze_2562: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2561, -1);  unsqueeze_2561 = None
    sub_316: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_316, unsqueeze_2560);  convolution_316 = unsqueeze_2560 = None
    mul_1073: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_316, unsqueeze_2562);  sub_316 = unsqueeze_2562 = None
    unsqueeze_2563: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(arg950_1, -1);  arg950_1 = None
    unsqueeze_2564: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2563, -1);  unsqueeze_2563 = None
    mul_1074: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1073, unsqueeze_2564);  mul_1073 = unsqueeze_2564 = None
    unsqueeze_2565: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(arg951_1, -1);  arg951_1 = None
    unsqueeze_2566: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2565, -1);  unsqueeze_2565 = None
    add_930: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(mul_1074, unsqueeze_2566);  mul_1074 = unsqueeze_2566 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_317: "f32[8, 512, 14, 14]" = torch.ops.aten.convolution.default(relu_263, arg952_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_263 = arg952_1 = None
    convert_element_type_820: "f32[512]" = torch.ops.prims.convert_element_type.default(arg1932_1, torch.float32);  arg1932_1 = None
    convert_element_type_821: "f32[512]" = torch.ops.prims.convert_element_type.default(arg1933_1, torch.float32);  arg1933_1 = None
    add_931: "f32[512]" = torch.ops.aten.add.Tensor(convert_element_type_821, 1e-05);  convert_element_type_821 = None
    sqrt_317: "f32[512]" = torch.ops.aten.sqrt.default(add_931);  add_931 = None
    reciprocal_317: "f32[512]" = torch.ops.aten.reciprocal.default(sqrt_317);  sqrt_317 = None
    mul_1075: "f32[512]" = torch.ops.aten.mul.Tensor(reciprocal_317, 1);  reciprocal_317 = None
    unsqueeze_2567: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_820, -1);  convert_element_type_820 = None
    unsqueeze_2568: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2567, -1);  unsqueeze_2567 = None
    unsqueeze_2569: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(mul_1075, -1);  mul_1075 = None
    unsqueeze_2570: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2569, -1);  unsqueeze_2569 = None
    sub_317: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_317, unsqueeze_2568);  convolution_317 = unsqueeze_2568 = None
    mul_1076: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_317, unsqueeze_2570);  sub_317 = unsqueeze_2570 = None
    unsqueeze_2571: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(arg953_1, -1);  arg953_1 = None
    unsqueeze_2572: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2571, -1);  unsqueeze_2571 = None
    mul_1077: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1076, unsqueeze_2572);  mul_1076 = unsqueeze_2572 = None
    unsqueeze_2573: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(arg954_1, -1);  arg954_1 = None
    unsqueeze_2574: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2573, -1);  unsqueeze_2573 = None
    add_932: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(mul_1077, unsqueeze_2574);  mul_1077 = unsqueeze_2574 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_933: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(add_930, add_932);  add_930 = add_932 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_277: "f32[8, 512, 14, 14]" = torch.ops.aten.relu.default(add_933);  add_933 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    convolution_318: "f32[8, 512, 14, 14]" = torch.ops.aten.convolution.default(add_924, arg955_1, arg956_1, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  add_924 = arg955_1 = arg956_1 = None
    convert_element_type_822: "f32[512]" = torch.ops.prims.convert_element_type.default(arg1935_1, torch.float32);  arg1935_1 = None
    convert_element_type_823: "f32[512]" = torch.ops.prims.convert_element_type.default(arg1936_1, torch.float32);  arg1936_1 = None
    add_934: "f32[512]" = torch.ops.aten.add.Tensor(convert_element_type_823, 1e-05);  convert_element_type_823 = None
    sqrt_318: "f32[512]" = torch.ops.aten.sqrt.default(add_934);  add_934 = None
    reciprocal_318: "f32[512]" = torch.ops.aten.reciprocal.default(sqrt_318);  sqrt_318 = None
    mul_1078: "f32[512]" = torch.ops.aten.mul.Tensor(reciprocal_318, 1);  reciprocal_318 = None
    unsqueeze_2575: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_822, -1);  convert_element_type_822 = None
    unsqueeze_2576: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2575, -1);  unsqueeze_2575 = None
    unsqueeze_2577: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(mul_1078, -1);  mul_1078 = None
    unsqueeze_2578: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2577, -1);  unsqueeze_2577 = None
    sub_318: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_318, unsqueeze_2576);  convolution_318 = unsqueeze_2576 = None
    mul_1079: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_318, unsqueeze_2578);  sub_318 = unsqueeze_2578 = None
    unsqueeze_2579: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(arg957_1, -1);  arg957_1 = None
    unsqueeze_2580: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2579, -1);  unsqueeze_2579 = None
    mul_1080: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1079, unsqueeze_2580);  mul_1079 = unsqueeze_2580 = None
    unsqueeze_2581: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(arg958_1, -1);  arg958_1 = None
    unsqueeze_2582: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2581, -1);  unsqueeze_2581 = None
    add_935: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(mul_1080, unsqueeze_2582);  mul_1080 = unsqueeze_2582 = None
    relu_278: "f32[8, 512, 14, 14]" = torch.ops.aten.relu.default(add_935);  add_935 = None
    add_936: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(relu_277, relu_278);  relu_277 = relu_278 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_319: "f32[8, 256, 7, 7]" = torch.ops.aten.convolution.default(relu_267, arg959_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  arg959_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    convert_element_type_824: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1938_1, torch.float32);  arg1938_1 = None
    convert_element_type_825: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1939_1, torch.float32);  arg1939_1 = None
    add_937: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_825, 1e-05);  convert_element_type_825 = None
    sqrt_319: "f32[256]" = torch.ops.aten.sqrt.default(add_937);  add_937 = None
    reciprocal_319: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_319);  sqrt_319 = None
    mul_1081: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_319, 1);  reciprocal_319 = None
    unsqueeze_2583: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_824, -1);  convert_element_type_824 = None
    unsqueeze_2584: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2583, -1);  unsqueeze_2583 = None
    unsqueeze_2585: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_1081, -1);  mul_1081 = None
    unsqueeze_2586: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2585, -1);  unsqueeze_2585 = None
    sub_319: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_319, unsqueeze_2584);  convolution_319 = unsqueeze_2584 = None
    mul_1082: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_319, unsqueeze_2586);  sub_319 = unsqueeze_2586 = None
    unsqueeze_2587: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg960_1, -1);  arg960_1 = None
    unsqueeze_2588: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2587, -1);  unsqueeze_2587 = None
    mul_1083: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1082, unsqueeze_2588);  mul_1082 = unsqueeze_2588 = None
    unsqueeze_2589: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg961_1, -1);  arg961_1 = None
    unsqueeze_2590: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2589, -1);  unsqueeze_2589 = None
    add_938: "f32[8, 256, 7, 7]" = torch.ops.aten.add.Tensor(mul_1083, unsqueeze_2590);  mul_1083 = unsqueeze_2590 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_279: "f32[8, 256, 7, 7]" = torch.ops.aten.relu.default(add_938);  add_938 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_320: "f32[8, 256, 7, 7]" = torch.ops.aten.convolution.default(relu_279, arg962_1, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1);  relu_279 = arg962_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    convert_element_type_826: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1941_1, torch.float32);  arg1941_1 = None
    convert_element_type_827: "f32[256]" = torch.ops.prims.convert_element_type.default(arg1942_1, torch.float32);  arg1942_1 = None
    add_939: "f32[256]" = torch.ops.aten.add.Tensor(convert_element_type_827, 1e-05);  convert_element_type_827 = None
    sqrt_320: "f32[256]" = torch.ops.aten.sqrt.default(add_939);  add_939 = None
    reciprocal_320: "f32[256]" = torch.ops.aten.reciprocal.default(sqrt_320);  sqrt_320 = None
    mul_1084: "f32[256]" = torch.ops.aten.mul.Tensor(reciprocal_320, 1);  reciprocal_320 = None
    unsqueeze_2591: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_826, -1);  convert_element_type_826 = None
    unsqueeze_2592: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2591, -1);  unsqueeze_2591 = None
    unsqueeze_2593: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(mul_1084, -1);  mul_1084 = None
    unsqueeze_2594: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2593, -1);  unsqueeze_2593 = None
    sub_320: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_320, unsqueeze_2592);  convolution_320 = unsqueeze_2592 = None
    mul_1085: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_320, unsqueeze_2594);  sub_320 = unsqueeze_2594 = None
    unsqueeze_2595: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg963_1, -1);  arg963_1 = None
    unsqueeze_2596: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2595, -1);  unsqueeze_2595 = None
    mul_1086: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1085, unsqueeze_2596);  mul_1085 = unsqueeze_2596 = None
    unsqueeze_2597: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(arg964_1, -1);  arg964_1 = None
    unsqueeze_2598: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2597, -1);  unsqueeze_2597 = None
    add_940: "f32[8, 256, 7, 7]" = torch.ops.aten.add.Tensor(mul_1086, unsqueeze_2598);  mul_1086 = unsqueeze_2598 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_280: "f32[8, 256, 7, 7]" = torch.ops.aten.relu.default(add_940);  add_940 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_321: "f32[8, 1024, 7, 7]" = torch.ops.aten.convolution.default(relu_280, arg965_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_280 = arg965_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    convert_element_type_828: "f32[1024]" = torch.ops.prims.convert_element_type.default(arg1944_1, torch.float32);  arg1944_1 = None
    convert_element_type_829: "f32[1024]" = torch.ops.prims.convert_element_type.default(arg1945_1, torch.float32);  arg1945_1 = None
    add_941: "f32[1024]" = torch.ops.aten.add.Tensor(convert_element_type_829, 1e-05);  convert_element_type_829 = None
    sqrt_321: "f32[1024]" = torch.ops.aten.sqrt.default(add_941);  add_941 = None
    reciprocal_321: "f32[1024]" = torch.ops.aten.reciprocal.default(sqrt_321);  sqrt_321 = None
    mul_1087: "f32[1024]" = torch.ops.aten.mul.Tensor(reciprocal_321, 1);  reciprocal_321 = None
    unsqueeze_2599: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_828, -1);  convert_element_type_828 = None
    unsqueeze_2600: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2599, -1);  unsqueeze_2599 = None
    unsqueeze_2601: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(mul_1087, -1);  mul_1087 = None
    unsqueeze_2602: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2601, -1);  unsqueeze_2601 = None
    sub_321: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_321, unsqueeze_2600);  convolution_321 = unsqueeze_2600 = None
    mul_1088: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_321, unsqueeze_2602);  sub_321 = unsqueeze_2602 = None
    unsqueeze_2603: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(arg966_1, -1);  arg966_1 = None
    unsqueeze_2604: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2603, -1);  unsqueeze_2603 = None
    mul_1089: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1088, unsqueeze_2604);  mul_1088 = unsqueeze_2604 = None
    unsqueeze_2605: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(arg967_1, -1);  arg967_1 = None
    unsqueeze_2606: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2605, -1);  unsqueeze_2605 = None
    add_942: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(mul_1089, unsqueeze_2606);  mul_1089 = unsqueeze_2606 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_322: "f32[8, 1024, 7, 7]" = torch.ops.aten.convolution.default(relu_267, arg968_1, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  relu_267 = arg968_1 = None
    convert_element_type_830: "f32[1024]" = torch.ops.prims.convert_element_type.default(arg1947_1, torch.float32);  arg1947_1 = None
    convert_element_type_831: "f32[1024]" = torch.ops.prims.convert_element_type.default(arg1948_1, torch.float32);  arg1948_1 = None
    add_943: "f32[1024]" = torch.ops.aten.add.Tensor(convert_element_type_831, 1e-05);  convert_element_type_831 = None
    sqrt_322: "f32[1024]" = torch.ops.aten.sqrt.default(add_943);  add_943 = None
    reciprocal_322: "f32[1024]" = torch.ops.aten.reciprocal.default(sqrt_322);  sqrt_322 = None
    mul_1090: "f32[1024]" = torch.ops.aten.mul.Tensor(reciprocal_322, 1);  reciprocal_322 = None
    unsqueeze_2607: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_830, -1);  convert_element_type_830 = None
    unsqueeze_2608: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2607, -1);  unsqueeze_2607 = None
    unsqueeze_2609: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(mul_1090, -1);  mul_1090 = None
    unsqueeze_2610: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2609, -1);  unsqueeze_2609 = None
    sub_322: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_322, unsqueeze_2608);  convolution_322 = unsqueeze_2608 = None
    mul_1091: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_322, unsqueeze_2610);  sub_322 = unsqueeze_2610 = None
    unsqueeze_2611: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(arg969_1, -1);  arg969_1 = None
    unsqueeze_2612: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2611, -1);  unsqueeze_2611 = None
    mul_1092: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1091, unsqueeze_2612);  mul_1091 = unsqueeze_2612 = None
    unsqueeze_2613: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(arg970_1, -1);  arg970_1 = None
    unsqueeze_2614: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2613, -1);  unsqueeze_2613 = None
    add_944: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(mul_1092, unsqueeze_2614);  mul_1092 = unsqueeze_2614 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_945: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(add_942, add_944);  add_942 = add_944 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_281: "f32[8, 1024, 7, 7]" = torch.ops.aten.relu.default(add_945);  add_945 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    convolution_323: "f32[8, 1024, 7, 7]" = torch.ops.aten.convolution.default(add_936, arg971_1, arg972_1, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  add_936 = arg971_1 = arg972_1 = None
    convert_element_type_832: "f32[1024]" = torch.ops.prims.convert_element_type.default(arg1950_1, torch.float32);  arg1950_1 = None
    convert_element_type_833: "f32[1024]" = torch.ops.prims.convert_element_type.default(arg1951_1, torch.float32);  arg1951_1 = None
    add_946: "f32[1024]" = torch.ops.aten.add.Tensor(convert_element_type_833, 1e-05);  convert_element_type_833 = None
    sqrt_323: "f32[1024]" = torch.ops.aten.sqrt.default(add_946);  add_946 = None
    reciprocal_323: "f32[1024]" = torch.ops.aten.reciprocal.default(sqrt_323);  sqrt_323 = None
    mul_1093: "f32[1024]" = torch.ops.aten.mul.Tensor(reciprocal_323, 1);  reciprocal_323 = None
    unsqueeze_2615: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_832, -1);  convert_element_type_832 = None
    unsqueeze_2616: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2615, -1);  unsqueeze_2615 = None
    unsqueeze_2617: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(mul_1093, -1);  mul_1093 = None
    unsqueeze_2618: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2617, -1);  unsqueeze_2617 = None
    sub_323: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_323, unsqueeze_2616);  convolution_323 = unsqueeze_2616 = None
    mul_1094: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_323, unsqueeze_2618);  sub_323 = unsqueeze_2618 = None
    unsqueeze_2619: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(arg973_1, -1);  arg973_1 = None
    unsqueeze_2620: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2619, -1);  unsqueeze_2619 = None
    mul_1095: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1094, unsqueeze_2620);  mul_1094 = unsqueeze_2620 = None
    unsqueeze_2621: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(arg974_1, -1);  arg974_1 = None
    unsqueeze_2622: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2621, -1);  unsqueeze_2621 = None
    add_947: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(mul_1095, unsqueeze_2622);  mul_1095 = unsqueeze_2622 = None
    relu_282: "f32[8, 1024, 7, 7]" = torch.ops.aten.relu.default(add_947);  add_947 = None
    add_948: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(relu_281, relu_282);  relu_281 = relu_282 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:782, code: y = self.final_layer(y)
    convolution_324: "f32[8, 2048, 7, 7]" = torch.ops.aten.convolution.default(add_948, arg975_1, arg976_1, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  add_948 = arg975_1 = arg976_1 = None
    convert_element_type_834: "f32[2048]" = torch.ops.prims.convert_element_type.default(arg1953_1, torch.float32);  arg1953_1 = None
    convert_element_type_835: "f32[2048]" = torch.ops.prims.convert_element_type.default(arg1954_1, torch.float32);  arg1954_1 = None
    add_949: "f32[2048]" = torch.ops.aten.add.Tensor(convert_element_type_835, 1e-05);  convert_element_type_835 = None
    sqrt_324: "f32[2048]" = torch.ops.aten.sqrt.default(add_949);  add_949 = None
    reciprocal_324: "f32[2048]" = torch.ops.aten.reciprocal.default(sqrt_324);  sqrt_324 = None
    mul_1096: "f32[2048]" = torch.ops.aten.mul.Tensor(reciprocal_324, 1);  reciprocal_324 = None
    unsqueeze_2623: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_834, -1);  convert_element_type_834 = None
    unsqueeze_2624: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2623, -1);  unsqueeze_2623 = None
    unsqueeze_2625: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(mul_1096, -1);  mul_1096 = None
    unsqueeze_2626: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2625, -1);  unsqueeze_2625 = None
    sub_324: "f32[8, 2048, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_324, unsqueeze_2624);  convolution_324 = unsqueeze_2624 = None
    mul_1097: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(sub_324, unsqueeze_2626);  sub_324 = unsqueeze_2626 = None
    unsqueeze_2627: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(arg977_1, -1);  arg977_1 = None
    unsqueeze_2628: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2627, -1);  unsqueeze_2627 = None
    mul_1098: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1097, unsqueeze_2628);  mul_1097 = unsqueeze_2628 = None
    unsqueeze_2629: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(arg978_1, -1);  arg978_1 = None
    unsqueeze_2630: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2629, -1);  unsqueeze_2629 = None
    add_950: "f32[8, 2048, 7, 7]" = torch.ops.aten.add.Tensor(mul_1098, unsqueeze_2630);  mul_1098 = unsqueeze_2630 = None
    relu_283: "f32[8, 2048, 7, 7]" = torch.ops.aten.relu.default(add_950);  add_950 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:167, code: x = self.pool(x)
    mean: "f32[8, 2048, 1, 1]" = torch.ops.aten.mean.dim(relu_283, [-1, -2], True);  relu_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:168, code: x = self.flatten(x)
    view: "f32[8, 2048]" = torch.ops.aten.view.default(mean, [8, 2048]);  mean = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:788, code: x = self.head_drop(x)
    clone: "f32[8, 2048]" = torch.ops.aten.clone.default(view);  view = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:789, code: return x if pre_logits else self.classifier(x)
    permute: "f32[2048, 1000]" = torch.ops.aten.permute.default(arg979_1, [1, 0]);  arg979_1 = None
    addmm: "f32[8, 1000]" = torch.ops.aten.addmm.default(arg980_1, clone, permute);  arg980_1 = clone = permute = None
    return (addmm,)
    