from __future__ import annotations



def forward(self, primals, tangents):
    primals_1: "f32[64, 3, 3, 3]"; primals_2: "f32[64]"; primals_3: "f32[64]"; primals_4: "f32[64, 64, 3, 3]"; primals_5: "f32[64]"; primals_6: "f32[64]"; primals_7: "f32[128, 64, 3, 3]"; primals_8: "f32[128]"; primals_9: "f32[128]"; primals_10: "f32[64, 128, 1, 1]"; primals_11: "f32[64]"; primals_12: "f32[64]"; primals_13: "f32[128, 32, 3, 3]"; primals_14: "f32[128]"; primals_15: "f32[128]"; primals_16: "f32[32, 64, 1, 1]"; primals_17: "f32[32]"; primals_18: "f32[32]"; primals_19: "f32[32]"; primals_20: "f32[128, 32, 1, 1]"; primals_21: "f32[128]"; primals_22: "f32[256, 64, 1, 1]"; primals_23: "f32[256]"; primals_24: "f32[256]"; primals_25: "f32[256, 128, 1, 1]"; primals_26: "f32[256]"; primals_27: "f32[256]"; primals_28: "f32[64, 256, 1, 1]"; primals_29: "f32[64]"; primals_30: "f32[64]"; primals_31: "f32[128, 32, 3, 3]"; primals_32: "f32[128]"; primals_33: "f32[128]"; primals_34: "f32[32, 64, 1, 1]"; primals_35: "f32[32]"; primals_36: "f32[32]"; primals_37: "f32[32]"; primals_38: "f32[128, 32, 1, 1]"; primals_39: "f32[128]"; primals_40: "f32[256, 64, 1, 1]"; primals_41: "f32[256]"; primals_42: "f32[256]"; primals_43: "f32[64, 256, 1, 1]"; primals_44: "f32[64]"; primals_45: "f32[64]"; primals_46: "f32[128, 32, 3, 3]"; primals_47: "f32[128]"; primals_48: "f32[128]"; primals_49: "f32[32, 64, 1, 1]"; primals_50: "f32[32]"; primals_51: "f32[32]"; primals_52: "f32[32]"; primals_53: "f32[128, 32, 1, 1]"; primals_54: "f32[128]"; primals_55: "f32[256, 64, 1, 1]"; primals_56: "f32[256]"; primals_57: "f32[256]"; primals_58: "f32[128, 256, 1, 1]"; primals_59: "f32[128]"; primals_60: "f32[128]"; primals_61: "f32[256, 64, 3, 3]"; primals_62: "f32[256]"; primals_63: "f32[256]"; primals_64: "f32[64, 128, 1, 1]"; primals_65: "f32[64]"; primals_66: "f32[64]"; primals_67: "f32[64]"; primals_68: "f32[256, 64, 1, 1]"; primals_69: "f32[256]"; primals_70: "f32[512, 128, 1, 1]"; primals_71: "f32[512]"; primals_72: "f32[512]"; primals_73: "f32[512, 256, 1, 1]"; primals_74: "f32[512]"; primals_75: "f32[512]"; primals_76: "f32[128, 512, 1, 1]"; primals_77: "f32[128]"; primals_78: "f32[128]"; primals_79: "f32[256, 64, 3, 3]"; primals_80: "f32[256]"; primals_81: "f32[256]"; primals_82: "f32[64, 128, 1, 1]"; primals_83: "f32[64]"; primals_84: "f32[64]"; primals_85: "f32[64]"; primals_86: "f32[256, 64, 1, 1]"; primals_87: "f32[256]"; primals_88: "f32[512, 128, 1, 1]"; primals_89: "f32[512]"; primals_90: "f32[512]"; primals_91: "f32[128, 512, 1, 1]"; primals_92: "f32[128]"; primals_93: "f32[128]"; primals_94: "f32[256, 64, 3, 3]"; primals_95: "f32[256]"; primals_96: "f32[256]"; primals_97: "f32[64, 128, 1, 1]"; primals_98: "f32[64]"; primals_99: "f32[64]"; primals_100: "f32[64]"; primals_101: "f32[256, 64, 1, 1]"; primals_102: "f32[256]"; primals_103: "f32[512, 128, 1, 1]"; primals_104: "f32[512]"; primals_105: "f32[512]"; primals_106: "f32[128, 512, 1, 1]"; primals_107: "f32[128]"; primals_108: "f32[128]"; primals_109: "f32[256, 64, 3, 3]"; primals_110: "f32[256]"; primals_111: "f32[256]"; primals_112: "f32[64, 128, 1, 1]"; primals_113: "f32[64]"; primals_114: "f32[64]"; primals_115: "f32[64]"; primals_116: "f32[256, 64, 1, 1]"; primals_117: "f32[256]"; primals_118: "f32[512, 128, 1, 1]"; primals_119: "f32[512]"; primals_120: "f32[512]"; primals_121: "f32[256, 512, 1, 1]"; primals_122: "f32[256]"; primals_123: "f32[256]"; primals_124: "f32[512, 128, 3, 3]"; primals_125: "f32[512]"; primals_126: "f32[512]"; primals_127: "f32[128, 256, 1, 1]"; primals_128: "f32[128]"; primals_129: "f32[128]"; primals_130: "f32[128]"; primals_131: "f32[512, 128, 1, 1]"; primals_132: "f32[512]"; primals_133: "f32[1024, 256, 1, 1]"; primals_134: "f32[1024]"; primals_135: "f32[1024]"; primals_136: "f32[1024, 512, 1, 1]"; primals_137: "f32[1024]"; primals_138: "f32[1024]"; primals_139: "f32[256, 1024, 1, 1]"; primals_140: "f32[256]"; primals_141: "f32[256]"; primals_142: "f32[512, 128, 3, 3]"; primals_143: "f32[512]"; primals_144: "f32[512]"; primals_145: "f32[128, 256, 1, 1]"; primals_146: "f32[128]"; primals_147: "f32[128]"; primals_148: "f32[128]"; primals_149: "f32[512, 128, 1, 1]"; primals_150: "f32[512]"; primals_151: "f32[1024, 256, 1, 1]"; primals_152: "f32[1024]"; primals_153: "f32[1024]"; primals_154: "f32[256, 1024, 1, 1]"; primals_155: "f32[256]"; primals_156: "f32[256]"; primals_157: "f32[512, 128, 3, 3]"; primals_158: "f32[512]"; primals_159: "f32[512]"; primals_160: "f32[128, 256, 1, 1]"; primals_161: "f32[128]"; primals_162: "f32[128]"; primals_163: "f32[128]"; primals_164: "f32[512, 128, 1, 1]"; primals_165: "f32[512]"; primals_166: "f32[1024, 256, 1, 1]"; primals_167: "f32[1024]"; primals_168: "f32[1024]"; primals_169: "f32[256, 1024, 1, 1]"; primals_170: "f32[256]"; primals_171: "f32[256]"; primals_172: "f32[512, 128, 3, 3]"; primals_173: "f32[512]"; primals_174: "f32[512]"; primals_175: "f32[128, 256, 1, 1]"; primals_176: "f32[128]"; primals_177: "f32[128]"; primals_178: "f32[128]"; primals_179: "f32[512, 128, 1, 1]"; primals_180: "f32[512]"; primals_181: "f32[1024, 256, 1, 1]"; primals_182: "f32[1024]"; primals_183: "f32[1024]"; primals_184: "f32[256, 1024, 1, 1]"; primals_185: "f32[256]"; primals_186: "f32[256]"; primals_187: "f32[512, 128, 3, 3]"; primals_188: "f32[512]"; primals_189: "f32[512]"; primals_190: "f32[128, 256, 1, 1]"; primals_191: "f32[128]"; primals_192: "f32[128]"; primals_193: "f32[128]"; primals_194: "f32[512, 128, 1, 1]"; primals_195: "f32[512]"; primals_196: "f32[1024, 256, 1, 1]"; primals_197: "f32[1024]"; primals_198: "f32[1024]"; primals_199: "f32[256, 1024, 1, 1]"; primals_200: "f32[256]"; primals_201: "f32[256]"; primals_202: "f32[512, 128, 3, 3]"; primals_203: "f32[512]"; primals_204: "f32[512]"; primals_205: "f32[128, 256, 1, 1]"; primals_206: "f32[128]"; primals_207: "f32[128]"; primals_208: "f32[128]"; primals_209: "f32[512, 128, 1, 1]"; primals_210: "f32[512]"; primals_211: "f32[1024, 256, 1, 1]"; primals_212: "f32[1024]"; primals_213: "f32[1024]"; primals_214: "f32[256, 1024, 1, 1]"; primals_215: "f32[256]"; primals_216: "f32[256]"; primals_217: "f32[512, 128, 3, 3]"; primals_218: "f32[512]"; primals_219: "f32[512]"; primals_220: "f32[128, 256, 1, 1]"; primals_221: "f32[128]"; primals_222: "f32[128]"; primals_223: "f32[128]"; primals_224: "f32[512, 128, 1, 1]"; primals_225: "f32[512]"; primals_226: "f32[1024, 256, 1, 1]"; primals_227: "f32[1024]"; primals_228: "f32[1024]"; primals_229: "f32[256, 1024, 1, 1]"; primals_230: "f32[256]"; primals_231: "f32[256]"; primals_232: "f32[512, 128, 3, 3]"; primals_233: "f32[512]"; primals_234: "f32[512]"; primals_235: "f32[128, 256, 1, 1]"; primals_236: "f32[128]"; primals_237: "f32[128]"; primals_238: "f32[128]"; primals_239: "f32[512, 128, 1, 1]"; primals_240: "f32[512]"; primals_241: "f32[1024, 256, 1, 1]"; primals_242: "f32[1024]"; primals_243: "f32[1024]"; primals_244: "f32[256, 1024, 1, 1]"; primals_245: "f32[256]"; primals_246: "f32[256]"; primals_247: "f32[512, 128, 3, 3]"; primals_248: "f32[512]"; primals_249: "f32[512]"; primals_250: "f32[128, 256, 1, 1]"; primals_251: "f32[128]"; primals_252: "f32[128]"; primals_253: "f32[128]"; primals_254: "f32[512, 128, 1, 1]"; primals_255: "f32[512]"; primals_256: "f32[1024, 256, 1, 1]"; primals_257: "f32[1024]"; primals_258: "f32[1024]"; primals_259: "f32[256, 1024, 1, 1]"; primals_260: "f32[256]"; primals_261: "f32[256]"; primals_262: "f32[512, 128, 3, 3]"; primals_263: "f32[512]"; primals_264: "f32[512]"; primals_265: "f32[128, 256, 1, 1]"; primals_266: "f32[128]"; primals_267: "f32[128]"; primals_268: "f32[128]"; primals_269: "f32[512, 128, 1, 1]"; primals_270: "f32[512]"; primals_271: "f32[1024, 256, 1, 1]"; primals_272: "f32[1024]"; primals_273: "f32[1024]"; primals_274: "f32[256, 1024, 1, 1]"; primals_275: "f32[256]"; primals_276: "f32[256]"; primals_277: "f32[512, 128, 3, 3]"; primals_278: "f32[512]"; primals_279: "f32[512]"; primals_280: "f32[128, 256, 1, 1]"; primals_281: "f32[128]"; primals_282: "f32[128]"; primals_283: "f32[128]"; primals_284: "f32[512, 128, 1, 1]"; primals_285: "f32[512]"; primals_286: "f32[1024, 256, 1, 1]"; primals_287: "f32[1024]"; primals_288: "f32[1024]"; primals_289: "f32[256, 1024, 1, 1]"; primals_290: "f32[256]"; primals_291: "f32[256]"; primals_292: "f32[512, 128, 3, 3]"; primals_293: "f32[512]"; primals_294: "f32[512]"; primals_295: "f32[128, 256, 1, 1]"; primals_296: "f32[128]"; primals_297: "f32[128]"; primals_298: "f32[128]"; primals_299: "f32[512, 128, 1, 1]"; primals_300: "f32[512]"; primals_301: "f32[1024, 256, 1, 1]"; primals_302: "f32[1024]"; primals_303: "f32[1024]"; primals_304: "f32[256, 1024, 1, 1]"; primals_305: "f32[256]"; primals_306: "f32[256]"; primals_307: "f32[512, 128, 3, 3]"; primals_308: "f32[512]"; primals_309: "f32[512]"; primals_310: "f32[128, 256, 1, 1]"; primals_311: "f32[128]"; primals_312: "f32[128]"; primals_313: "f32[128]"; primals_314: "f32[512, 128, 1, 1]"; primals_315: "f32[512]"; primals_316: "f32[1024, 256, 1, 1]"; primals_317: "f32[1024]"; primals_318: "f32[1024]"; primals_319: "f32[256, 1024, 1, 1]"; primals_320: "f32[256]"; primals_321: "f32[256]"; primals_322: "f32[512, 128, 3, 3]"; primals_323: "f32[512]"; primals_324: "f32[512]"; primals_325: "f32[128, 256, 1, 1]"; primals_326: "f32[128]"; primals_327: "f32[128]"; primals_328: "f32[128]"; primals_329: "f32[512, 128, 1, 1]"; primals_330: "f32[512]"; primals_331: "f32[1024, 256, 1, 1]"; primals_332: "f32[1024]"; primals_333: "f32[1024]"; primals_334: "f32[256, 1024, 1, 1]"; primals_335: "f32[256]"; primals_336: "f32[256]"; primals_337: "f32[512, 128, 3, 3]"; primals_338: "f32[512]"; primals_339: "f32[512]"; primals_340: "f32[128, 256, 1, 1]"; primals_341: "f32[128]"; primals_342: "f32[128]"; primals_343: "f32[128]"; primals_344: "f32[512, 128, 1, 1]"; primals_345: "f32[512]"; primals_346: "f32[1024, 256, 1, 1]"; primals_347: "f32[1024]"; primals_348: "f32[1024]"; primals_349: "f32[256, 1024, 1, 1]"; primals_350: "f32[256]"; primals_351: "f32[256]"; primals_352: "f32[512, 128, 3, 3]"; primals_353: "f32[512]"; primals_354: "f32[512]"; primals_355: "f32[128, 256, 1, 1]"; primals_356: "f32[128]"; primals_357: "f32[128]"; primals_358: "f32[128]"; primals_359: "f32[512, 128, 1, 1]"; primals_360: "f32[512]"; primals_361: "f32[1024, 256, 1, 1]"; primals_362: "f32[1024]"; primals_363: "f32[1024]"; primals_364: "f32[256, 1024, 1, 1]"; primals_365: "f32[256]"; primals_366: "f32[256]"; primals_367: "f32[512, 128, 3, 3]"; primals_368: "f32[512]"; primals_369: "f32[512]"; primals_370: "f32[128, 256, 1, 1]"; primals_371: "f32[128]"; primals_372: "f32[128]"; primals_373: "f32[128]"; primals_374: "f32[512, 128, 1, 1]"; primals_375: "f32[512]"; primals_376: "f32[1024, 256, 1, 1]"; primals_377: "f32[1024]"; primals_378: "f32[1024]"; primals_379: "f32[256, 1024, 1, 1]"; primals_380: "f32[256]"; primals_381: "f32[256]"; primals_382: "f32[512, 128, 3, 3]"; primals_383: "f32[512]"; primals_384: "f32[512]"; primals_385: "f32[128, 256, 1, 1]"; primals_386: "f32[128]"; primals_387: "f32[128]"; primals_388: "f32[128]"; primals_389: "f32[512, 128, 1, 1]"; primals_390: "f32[512]"; primals_391: "f32[1024, 256, 1, 1]"; primals_392: "f32[1024]"; primals_393: "f32[1024]"; primals_394: "f32[256, 1024, 1, 1]"; primals_395: "f32[256]"; primals_396: "f32[256]"; primals_397: "f32[512, 128, 3, 3]"; primals_398: "f32[512]"; primals_399: "f32[512]"; primals_400: "f32[128, 256, 1, 1]"; primals_401: "f32[128]"; primals_402: "f32[128]"; primals_403: "f32[128]"; primals_404: "f32[512, 128, 1, 1]"; primals_405: "f32[512]"; primals_406: "f32[1024, 256, 1, 1]"; primals_407: "f32[1024]"; primals_408: "f32[1024]"; primals_409: "f32[256, 1024, 1, 1]"; primals_410: "f32[256]"; primals_411: "f32[256]"; primals_412: "f32[512, 128, 3, 3]"; primals_413: "f32[512]"; primals_414: "f32[512]"; primals_415: "f32[128, 256, 1, 1]"; primals_416: "f32[128]"; primals_417: "f32[128]"; primals_418: "f32[128]"; primals_419: "f32[512, 128, 1, 1]"; primals_420: "f32[512]"; primals_421: "f32[1024, 256, 1, 1]"; primals_422: "f32[1024]"; primals_423: "f32[1024]"; primals_424: "f32[256, 1024, 1, 1]"; primals_425: "f32[256]"; primals_426: "f32[256]"; primals_427: "f32[512, 128, 3, 3]"; primals_428: "f32[512]"; primals_429: "f32[512]"; primals_430: "f32[128, 256, 1, 1]"; primals_431: "f32[128]"; primals_432: "f32[128]"; primals_433: "f32[128]"; primals_434: "f32[512, 128, 1, 1]"; primals_435: "f32[512]"; primals_436: "f32[1024, 256, 1, 1]"; primals_437: "f32[1024]"; primals_438: "f32[1024]"; primals_439: "f32[256, 1024, 1, 1]"; primals_440: "f32[256]"; primals_441: "f32[256]"; primals_442: "f32[512, 128, 3, 3]"; primals_443: "f32[512]"; primals_444: "f32[512]"; primals_445: "f32[128, 256, 1, 1]"; primals_446: "f32[128]"; primals_447: "f32[128]"; primals_448: "f32[128]"; primals_449: "f32[512, 128, 1, 1]"; primals_450: "f32[512]"; primals_451: "f32[1024, 256, 1, 1]"; primals_452: "f32[1024]"; primals_453: "f32[1024]"; primals_454: "f32[256, 1024, 1, 1]"; primals_455: "f32[256]"; primals_456: "f32[256]"; primals_457: "f32[512, 128, 3, 3]"; primals_458: "f32[512]"; primals_459: "f32[512]"; primals_460: "f32[128, 256, 1, 1]"; primals_461: "f32[128]"; primals_462: "f32[128]"; primals_463: "f32[128]"; primals_464: "f32[512, 128, 1, 1]"; primals_465: "f32[512]"; primals_466: "f32[1024, 256, 1, 1]"; primals_467: "f32[1024]"; primals_468: "f32[1024]"; primals_469: "f32[512, 1024, 1, 1]"; primals_470: "f32[512]"; primals_471: "f32[512]"; primals_472: "f32[1024, 256, 3, 3]"; primals_473: "f32[1024]"; primals_474: "f32[1024]"; primals_475: "f32[256, 512, 1, 1]"; primals_476: "f32[256]"; primals_477: "f32[256]"; primals_478: "f32[256]"; primals_479: "f32[1024, 256, 1, 1]"; primals_480: "f32[1024]"; primals_481: "f32[2048, 512, 1, 1]"; primals_482: "f32[2048]"; primals_483: "f32[2048]"; primals_484: "f32[2048, 1024, 1, 1]"; primals_485: "f32[2048]"; primals_486: "f32[2048]"; primals_487: "f32[512, 2048, 1, 1]"; primals_488: "f32[512]"; primals_489: "f32[512]"; primals_490: "f32[1024, 256, 3, 3]"; primals_491: "f32[1024]"; primals_492: "f32[1024]"; primals_493: "f32[256, 512, 1, 1]"; primals_494: "f32[256]"; primals_495: "f32[256]"; primals_496: "f32[256]"; primals_497: "f32[1024, 256, 1, 1]"; primals_498: "f32[1024]"; primals_499: "f32[2048, 512, 1, 1]"; primals_500: "f32[2048]"; primals_501: "f32[2048]"; primals_502: "f32[512, 2048, 1, 1]"; primals_503: "f32[512]"; primals_504: "f32[512]"; primals_505: "f32[1024, 256, 3, 3]"; primals_506: "f32[1024]"; primals_507: "f32[1024]"; primals_508: "f32[256, 512, 1, 1]"; primals_509: "f32[256]"; primals_510: "f32[256]"; primals_511: "f32[256]"; primals_512: "f32[1024, 256, 1, 1]"; primals_513: "f32[1024]"; primals_514: "f32[2048, 512, 1, 1]"; primals_515: "f32[2048]"; primals_516: "f32[2048]"; primals_517: "f32[1000, 2048]"; primals_518: "f32[1000]"; primals_519: "f32[64]"; primals_520: "f32[64]"; primals_521: "i64[]"; primals_522: "f32[64]"; primals_523: "f32[64]"; primals_524: "i64[]"; primals_525: "f32[128]"; primals_526: "f32[128]"; primals_527: "i64[]"; primals_528: "f32[64]"; primals_529: "f32[64]"; primals_530: "i64[]"; primals_531: "f32[128]"; primals_532: "f32[128]"; primals_533: "i64[]"; primals_534: "f32[32]"; primals_535: "f32[32]"; primals_536: "i64[]"; primals_537: "f32[256]"; primals_538: "f32[256]"; primals_539: "i64[]"; primals_540: "f32[256]"; primals_541: "f32[256]"; primals_542: "i64[]"; primals_543: "f32[64]"; primals_544: "f32[64]"; primals_545: "i64[]"; primals_546: "f32[128]"; primals_547: "f32[128]"; primals_548: "i64[]"; primals_549: "f32[32]"; primals_550: "f32[32]"; primals_551: "i64[]"; primals_552: "f32[256]"; primals_553: "f32[256]"; primals_554: "i64[]"; primals_555: "f32[64]"; primals_556: "f32[64]"; primals_557: "i64[]"; primals_558: "f32[128]"; primals_559: "f32[128]"; primals_560: "i64[]"; primals_561: "f32[32]"; primals_562: "f32[32]"; primals_563: "i64[]"; primals_564: "f32[256]"; primals_565: "f32[256]"; primals_566: "i64[]"; primals_567: "f32[128]"; primals_568: "f32[128]"; primals_569: "i64[]"; primals_570: "f32[256]"; primals_571: "f32[256]"; primals_572: "i64[]"; primals_573: "f32[64]"; primals_574: "f32[64]"; primals_575: "i64[]"; primals_576: "f32[512]"; primals_577: "f32[512]"; primals_578: "i64[]"; primals_579: "f32[512]"; primals_580: "f32[512]"; primals_581: "i64[]"; primals_582: "f32[128]"; primals_583: "f32[128]"; primals_584: "i64[]"; primals_585: "f32[256]"; primals_586: "f32[256]"; primals_587: "i64[]"; primals_588: "f32[64]"; primals_589: "f32[64]"; primals_590: "i64[]"; primals_591: "f32[512]"; primals_592: "f32[512]"; primals_593: "i64[]"; primals_594: "f32[128]"; primals_595: "f32[128]"; primals_596: "i64[]"; primals_597: "f32[256]"; primals_598: "f32[256]"; primals_599: "i64[]"; primals_600: "f32[64]"; primals_601: "f32[64]"; primals_602: "i64[]"; primals_603: "f32[512]"; primals_604: "f32[512]"; primals_605: "i64[]"; primals_606: "f32[128]"; primals_607: "f32[128]"; primals_608: "i64[]"; primals_609: "f32[256]"; primals_610: "f32[256]"; primals_611: "i64[]"; primals_612: "f32[64]"; primals_613: "f32[64]"; primals_614: "i64[]"; primals_615: "f32[512]"; primals_616: "f32[512]"; primals_617: "i64[]"; primals_618: "f32[256]"; primals_619: "f32[256]"; primals_620: "i64[]"; primals_621: "f32[512]"; primals_622: "f32[512]"; primals_623: "i64[]"; primals_624: "f32[128]"; primals_625: "f32[128]"; primals_626: "i64[]"; primals_627: "f32[1024]"; primals_628: "f32[1024]"; primals_629: "i64[]"; primals_630: "f32[1024]"; primals_631: "f32[1024]"; primals_632: "i64[]"; primals_633: "f32[256]"; primals_634: "f32[256]"; primals_635: "i64[]"; primals_636: "f32[512]"; primals_637: "f32[512]"; primals_638: "i64[]"; primals_639: "f32[128]"; primals_640: "f32[128]"; primals_641: "i64[]"; primals_642: "f32[1024]"; primals_643: "f32[1024]"; primals_644: "i64[]"; primals_645: "f32[256]"; primals_646: "f32[256]"; primals_647: "i64[]"; primals_648: "f32[512]"; primals_649: "f32[512]"; primals_650: "i64[]"; primals_651: "f32[128]"; primals_652: "f32[128]"; primals_653: "i64[]"; primals_654: "f32[1024]"; primals_655: "f32[1024]"; primals_656: "i64[]"; primals_657: "f32[256]"; primals_658: "f32[256]"; primals_659: "i64[]"; primals_660: "f32[512]"; primals_661: "f32[512]"; primals_662: "i64[]"; primals_663: "f32[128]"; primals_664: "f32[128]"; primals_665: "i64[]"; primals_666: "f32[1024]"; primals_667: "f32[1024]"; primals_668: "i64[]"; primals_669: "f32[256]"; primals_670: "f32[256]"; primals_671: "i64[]"; primals_672: "f32[512]"; primals_673: "f32[512]"; primals_674: "i64[]"; primals_675: "f32[128]"; primals_676: "f32[128]"; primals_677: "i64[]"; primals_678: "f32[1024]"; primals_679: "f32[1024]"; primals_680: "i64[]"; primals_681: "f32[256]"; primals_682: "f32[256]"; primals_683: "i64[]"; primals_684: "f32[512]"; primals_685: "f32[512]"; primals_686: "i64[]"; primals_687: "f32[128]"; primals_688: "f32[128]"; primals_689: "i64[]"; primals_690: "f32[1024]"; primals_691: "f32[1024]"; primals_692: "i64[]"; primals_693: "f32[256]"; primals_694: "f32[256]"; primals_695: "i64[]"; primals_696: "f32[512]"; primals_697: "f32[512]"; primals_698: "i64[]"; primals_699: "f32[128]"; primals_700: "f32[128]"; primals_701: "i64[]"; primals_702: "f32[1024]"; primals_703: "f32[1024]"; primals_704: "i64[]"; primals_705: "f32[256]"; primals_706: "f32[256]"; primals_707: "i64[]"; primals_708: "f32[512]"; primals_709: "f32[512]"; primals_710: "i64[]"; primals_711: "f32[128]"; primals_712: "f32[128]"; primals_713: "i64[]"; primals_714: "f32[1024]"; primals_715: "f32[1024]"; primals_716: "i64[]"; primals_717: "f32[256]"; primals_718: "f32[256]"; primals_719: "i64[]"; primals_720: "f32[512]"; primals_721: "f32[512]"; primals_722: "i64[]"; primals_723: "f32[128]"; primals_724: "f32[128]"; primals_725: "i64[]"; primals_726: "f32[1024]"; primals_727: "f32[1024]"; primals_728: "i64[]"; primals_729: "f32[256]"; primals_730: "f32[256]"; primals_731: "i64[]"; primals_732: "f32[512]"; primals_733: "f32[512]"; primals_734: "i64[]"; primals_735: "f32[128]"; primals_736: "f32[128]"; primals_737: "i64[]"; primals_738: "f32[1024]"; primals_739: "f32[1024]"; primals_740: "i64[]"; primals_741: "f32[256]"; primals_742: "f32[256]"; primals_743: "i64[]"; primals_744: "f32[512]"; primals_745: "f32[512]"; primals_746: "i64[]"; primals_747: "f32[128]"; primals_748: "f32[128]"; primals_749: "i64[]"; primals_750: "f32[1024]"; primals_751: "f32[1024]"; primals_752: "i64[]"; primals_753: "f32[256]"; primals_754: "f32[256]"; primals_755: "i64[]"; primals_756: "f32[512]"; primals_757: "f32[512]"; primals_758: "i64[]"; primals_759: "f32[128]"; primals_760: "f32[128]"; primals_761: "i64[]"; primals_762: "f32[1024]"; primals_763: "f32[1024]"; primals_764: "i64[]"; primals_765: "f32[256]"; primals_766: "f32[256]"; primals_767: "i64[]"; primals_768: "f32[512]"; primals_769: "f32[512]"; primals_770: "i64[]"; primals_771: "f32[128]"; primals_772: "f32[128]"; primals_773: "i64[]"; primals_774: "f32[1024]"; primals_775: "f32[1024]"; primals_776: "i64[]"; primals_777: "f32[256]"; primals_778: "f32[256]"; primals_779: "i64[]"; primals_780: "f32[512]"; primals_781: "f32[512]"; primals_782: "i64[]"; primals_783: "f32[128]"; primals_784: "f32[128]"; primals_785: "i64[]"; primals_786: "f32[1024]"; primals_787: "f32[1024]"; primals_788: "i64[]"; primals_789: "f32[256]"; primals_790: "f32[256]"; primals_791: "i64[]"; primals_792: "f32[512]"; primals_793: "f32[512]"; primals_794: "i64[]"; primals_795: "f32[128]"; primals_796: "f32[128]"; primals_797: "i64[]"; primals_798: "f32[1024]"; primals_799: "f32[1024]"; primals_800: "i64[]"; primals_801: "f32[256]"; primals_802: "f32[256]"; primals_803: "i64[]"; primals_804: "f32[512]"; primals_805: "f32[512]"; primals_806: "i64[]"; primals_807: "f32[128]"; primals_808: "f32[128]"; primals_809: "i64[]"; primals_810: "f32[1024]"; primals_811: "f32[1024]"; primals_812: "i64[]"; primals_813: "f32[256]"; primals_814: "f32[256]"; primals_815: "i64[]"; primals_816: "f32[512]"; primals_817: "f32[512]"; primals_818: "i64[]"; primals_819: "f32[128]"; primals_820: "f32[128]"; primals_821: "i64[]"; primals_822: "f32[1024]"; primals_823: "f32[1024]"; primals_824: "i64[]"; primals_825: "f32[256]"; primals_826: "f32[256]"; primals_827: "i64[]"; primals_828: "f32[512]"; primals_829: "f32[512]"; primals_830: "i64[]"; primals_831: "f32[128]"; primals_832: "f32[128]"; primals_833: "i64[]"; primals_834: "f32[1024]"; primals_835: "f32[1024]"; primals_836: "i64[]"; primals_837: "f32[256]"; primals_838: "f32[256]"; primals_839: "i64[]"; primals_840: "f32[512]"; primals_841: "f32[512]"; primals_842: "i64[]"; primals_843: "f32[128]"; primals_844: "f32[128]"; primals_845: "i64[]"; primals_846: "f32[1024]"; primals_847: "f32[1024]"; primals_848: "i64[]"; primals_849: "f32[256]"; primals_850: "f32[256]"; primals_851: "i64[]"; primals_852: "f32[512]"; primals_853: "f32[512]"; primals_854: "i64[]"; primals_855: "f32[128]"; primals_856: "f32[128]"; primals_857: "i64[]"; primals_858: "f32[1024]"; primals_859: "f32[1024]"; primals_860: "i64[]"; primals_861: "f32[256]"; primals_862: "f32[256]"; primals_863: "i64[]"; primals_864: "f32[512]"; primals_865: "f32[512]"; primals_866: "i64[]"; primals_867: "f32[128]"; primals_868: "f32[128]"; primals_869: "i64[]"; primals_870: "f32[1024]"; primals_871: "f32[1024]"; primals_872: "i64[]"; primals_873: "f32[256]"; primals_874: "f32[256]"; primals_875: "i64[]"; primals_876: "f32[512]"; primals_877: "f32[512]"; primals_878: "i64[]"; primals_879: "f32[128]"; primals_880: "f32[128]"; primals_881: "i64[]"; primals_882: "f32[1024]"; primals_883: "f32[1024]"; primals_884: "i64[]"; primals_885: "f32[256]"; primals_886: "f32[256]"; primals_887: "i64[]"; primals_888: "f32[512]"; primals_889: "f32[512]"; primals_890: "i64[]"; primals_891: "f32[128]"; primals_892: "f32[128]"; primals_893: "i64[]"; primals_894: "f32[1024]"; primals_895: "f32[1024]"; primals_896: "i64[]"; primals_897: "f32[512]"; primals_898: "f32[512]"; primals_899: "i64[]"; primals_900: "f32[1024]"; primals_901: "f32[1024]"; primals_902: "i64[]"; primals_903: "f32[256]"; primals_904: "f32[256]"; primals_905: "i64[]"; primals_906: "f32[2048]"; primals_907: "f32[2048]"; primals_908: "i64[]"; primals_909: "f32[2048]"; primals_910: "f32[2048]"; primals_911: "i64[]"; primals_912: "f32[512]"; primals_913: "f32[512]"; primals_914: "i64[]"; primals_915: "f32[1024]"; primals_916: "f32[1024]"; primals_917: "i64[]"; primals_918: "f32[256]"; primals_919: "f32[256]"; primals_920: "i64[]"; primals_921: "f32[2048]"; primals_922: "f32[2048]"; primals_923: "i64[]"; primals_924: "f32[512]"; primals_925: "f32[512]"; primals_926: "i64[]"; primals_927: "f32[1024]"; primals_928: "f32[1024]"; primals_929: "i64[]"; primals_930: "f32[256]"; primals_931: "f32[256]"; primals_932: "i64[]"; primals_933: "f32[2048]"; primals_934: "f32[2048]"; primals_935: "i64[]"; primals_936: "f32[8, 3, 256, 256]"; tangents_1: "f32[8, 1000]"; 

    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, tangents_1, = fx_pytree.tree_flatten_spec([primals, tangents], self._in_spec)
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:520, code: x = self.conv1(x)
    convolution: "f32[8, 64, 128, 128]" = torch.ops.aten.convolution.default(primals_936, primals_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add: "i64[]" = torch.ops.aten.add.Tensor(primals_521, 1)
    var_mean = torch.ops.aten.var_mean.correction(convolution, [0, 2, 3], correction = 0, keepdim = True)
    getitem: "f32[1, 64, 1, 1]" = var_mean[0]
    getitem_1: "f32[1, 64, 1, 1]" = var_mean[1];  var_mean = None
    add_1: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem, 1e-05)
    rsqrt: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_1);  add_1 = None
    sub: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(convolution, getitem_1)
    mul: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(sub, rsqrt);  sub = None
    squeeze: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_1, [0, 2, 3]);  getitem_1 = None
    squeeze_1: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt, [0, 2, 3]);  rsqrt = None
    mul_1: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze, 0.1)
    mul_2: "f32[64]" = torch.ops.aten.mul.Tensor(primals_519, 0.9)
    add_2: "f32[64]" = torch.ops.aten.add.Tensor(mul_1, mul_2);  mul_1 = mul_2 = None
    squeeze_2: "f32[64]" = torch.ops.aten.squeeze.dims(getitem, [0, 2, 3]);  getitem = None
    mul_3: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_2, 1.0000076294527394);  squeeze_2 = None
    mul_4: "f32[64]" = torch.ops.aten.mul.Tensor(mul_3, 0.1);  mul_3 = None
    mul_5: "f32[64]" = torch.ops.aten.mul.Tensor(primals_520, 0.9)
    add_3: "f32[64]" = torch.ops.aten.add.Tensor(mul_4, mul_5);  mul_4 = mul_5 = None
    unsqueeze: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_2, -1)
    unsqueeze_1: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze, -1);  unsqueeze = None
    mul_6: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(mul, unsqueeze_1);  mul = unsqueeze_1 = None
    unsqueeze_2: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_3, -1);  primals_3 = None
    unsqueeze_3: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2, -1);  unsqueeze_2 = None
    add_4: "f32[8, 64, 128, 128]" = torch.ops.aten.add.Tensor(mul_6, unsqueeze_3);  mul_6 = unsqueeze_3 = None
    relu: "f32[8, 64, 128, 128]" = torch.ops.aten.relu.default(add_4);  add_4 = None
    convolution_1: "f32[8, 64, 128, 128]" = torch.ops.aten.convolution.default(relu, primals_4, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    add_5: "i64[]" = torch.ops.aten.add.Tensor(primals_524, 1)
    var_mean_1 = torch.ops.aten.var_mean.correction(convolution_1, [0, 2, 3], correction = 0, keepdim = True)
    getitem_2: "f32[1, 64, 1, 1]" = var_mean_1[0]
    getitem_3: "f32[1, 64, 1, 1]" = var_mean_1[1];  var_mean_1 = None
    add_6: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_2, 1e-05)
    rsqrt_1: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_6);  add_6 = None
    sub_1: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(convolution_1, getitem_3)
    mul_7: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(sub_1, rsqrt_1);  sub_1 = None
    squeeze_3: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_3, [0, 2, 3]);  getitem_3 = None
    squeeze_4: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_1, [0, 2, 3]);  rsqrt_1 = None
    mul_8: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_3, 0.1)
    mul_9: "f32[64]" = torch.ops.aten.mul.Tensor(primals_522, 0.9)
    add_7: "f32[64]" = torch.ops.aten.add.Tensor(mul_8, mul_9);  mul_8 = mul_9 = None
    squeeze_5: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_2, [0, 2, 3]);  getitem_2 = None
    mul_10: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_5, 1.0000076294527394);  squeeze_5 = None
    mul_11: "f32[64]" = torch.ops.aten.mul.Tensor(mul_10, 0.1);  mul_10 = None
    mul_12: "f32[64]" = torch.ops.aten.mul.Tensor(primals_523, 0.9)
    add_8: "f32[64]" = torch.ops.aten.add.Tensor(mul_11, mul_12);  mul_11 = mul_12 = None
    unsqueeze_4: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_5, -1)
    unsqueeze_5: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4, -1);  unsqueeze_4 = None
    mul_13: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(mul_7, unsqueeze_5);  mul_7 = unsqueeze_5 = None
    unsqueeze_6: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_6, -1);  primals_6 = None
    unsqueeze_7: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_6, -1);  unsqueeze_6 = None
    add_9: "f32[8, 64, 128, 128]" = torch.ops.aten.add.Tensor(mul_13, unsqueeze_7);  mul_13 = unsqueeze_7 = None
    relu_1: "f32[8, 64, 128, 128]" = torch.ops.aten.relu.default(add_9);  add_9 = None
    convolution_2: "f32[8, 128, 128, 128]" = torch.ops.aten.convolution.default(relu_1, primals_7, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:521, code: x = self.bn1(x)
    add_10: "i64[]" = torch.ops.aten.add.Tensor(primals_527, 1)
    var_mean_2 = torch.ops.aten.var_mean.correction(convolution_2, [0, 2, 3], correction = 0, keepdim = True)
    getitem_4: "f32[1, 128, 1, 1]" = var_mean_2[0]
    getitem_5: "f32[1, 128, 1, 1]" = var_mean_2[1];  var_mean_2 = None
    add_11: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_4, 1e-05)
    rsqrt_2: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_11);  add_11 = None
    sub_2: "f32[8, 128, 128, 128]" = torch.ops.aten.sub.Tensor(convolution_2, getitem_5)
    mul_14: "f32[8, 128, 128, 128]" = torch.ops.aten.mul.Tensor(sub_2, rsqrt_2);  sub_2 = None
    squeeze_6: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_5, [0, 2, 3]);  getitem_5 = None
    squeeze_7: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_2, [0, 2, 3]);  rsqrt_2 = None
    mul_15: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_6, 0.1)
    mul_16: "f32[128]" = torch.ops.aten.mul.Tensor(primals_525, 0.9)
    add_12: "f32[128]" = torch.ops.aten.add.Tensor(mul_15, mul_16);  mul_15 = mul_16 = None
    squeeze_8: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_4, [0, 2, 3]);  getitem_4 = None
    mul_17: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_8, 1.0000076294527394);  squeeze_8 = None
    mul_18: "f32[128]" = torch.ops.aten.mul.Tensor(mul_17, 0.1);  mul_17 = None
    mul_19: "f32[128]" = torch.ops.aten.mul.Tensor(primals_526, 0.9)
    add_13: "f32[128]" = torch.ops.aten.add.Tensor(mul_18, mul_19);  mul_18 = mul_19 = None
    unsqueeze_8: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_8, -1)
    unsqueeze_9: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_8, -1);  unsqueeze_8 = None
    mul_20: "f32[8, 128, 128, 128]" = torch.ops.aten.mul.Tensor(mul_14, unsqueeze_9);  mul_14 = unsqueeze_9 = None
    unsqueeze_10: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_9, -1);  primals_9 = None
    unsqueeze_11: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_10, -1);  unsqueeze_10 = None
    add_14: "f32[8, 128, 128, 128]" = torch.ops.aten.add.Tensor(mul_20, unsqueeze_11);  mul_20 = unsqueeze_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:522, code: x = self.act1(x)
    relu_2: "f32[8, 128, 128, 128]" = torch.ops.aten.relu.default(add_14);  add_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:523, code: x = self.maxpool(x)
    max_pool2d_with_indices = torch.ops.aten.max_pool2d_with_indices.default(relu_2, [3, 3], [2, 2], [1, 1])
    getitem_6: "f32[8, 128, 64, 64]" = max_pool2d_with_indices[0]
    getitem_7: "i64[8, 128, 64, 64]" = max_pool2d_with_indices[1];  max_pool2d_with_indices = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_3: "f32[8, 64, 64, 64]" = torch.ops.aten.convolution.default(getitem_6, primals_10, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_15: "i64[]" = torch.ops.aten.add.Tensor(primals_530, 1)
    var_mean_3 = torch.ops.aten.var_mean.correction(convolution_3, [0, 2, 3], correction = 0, keepdim = True)
    getitem_8: "f32[1, 64, 1, 1]" = var_mean_3[0]
    getitem_9: "f32[1, 64, 1, 1]" = var_mean_3[1];  var_mean_3 = None
    add_16: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_8, 1e-05)
    rsqrt_3: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_16);  add_16 = None
    sub_3: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_3, getitem_9)
    mul_21: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_3, rsqrt_3);  sub_3 = None
    squeeze_9: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_9, [0, 2, 3]);  getitem_9 = None
    squeeze_10: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_3, [0, 2, 3]);  rsqrt_3 = None
    mul_22: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_9, 0.1)
    mul_23: "f32[64]" = torch.ops.aten.mul.Tensor(primals_528, 0.9)
    add_17: "f32[64]" = torch.ops.aten.add.Tensor(mul_22, mul_23);  mul_22 = mul_23 = None
    squeeze_11: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_8, [0, 2, 3]);  getitem_8 = None
    mul_24: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_11, 1.000030518509476);  squeeze_11 = None
    mul_25: "f32[64]" = torch.ops.aten.mul.Tensor(mul_24, 0.1);  mul_24 = None
    mul_26: "f32[64]" = torch.ops.aten.mul.Tensor(primals_529, 0.9)
    add_18: "f32[64]" = torch.ops.aten.add.Tensor(mul_25, mul_26);  mul_25 = mul_26 = None
    unsqueeze_12: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_11, -1)
    unsqueeze_13: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_12, -1);  unsqueeze_12 = None
    mul_27: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(mul_21, unsqueeze_13);  mul_21 = unsqueeze_13 = None
    unsqueeze_14: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_12, -1);  primals_12 = None
    unsqueeze_15: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_14, -1);  unsqueeze_14 = None
    add_19: "f32[8, 64, 64, 64]" = torch.ops.aten.add.Tensor(mul_27, unsqueeze_15);  mul_27 = unsqueeze_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_3: "f32[8, 64, 64, 64]" = torch.ops.aten.relu.default(add_19);  add_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_4: "f32[8, 128, 64, 64]" = torch.ops.aten.convolution.default(relu_3, primals_13, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_20: "i64[]" = torch.ops.aten.add.Tensor(primals_533, 1)
    var_mean_4 = torch.ops.aten.var_mean.correction(convolution_4, [0, 2, 3], correction = 0, keepdim = True)
    getitem_10: "f32[1, 128, 1, 1]" = var_mean_4[0]
    getitem_11: "f32[1, 128, 1, 1]" = var_mean_4[1];  var_mean_4 = None
    add_21: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_10, 1e-05)
    rsqrt_4: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_21);  add_21 = None
    sub_4: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_4, getitem_11)
    mul_28: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_4, rsqrt_4);  sub_4 = None
    squeeze_12: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_11, [0, 2, 3]);  getitem_11 = None
    squeeze_13: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_4, [0, 2, 3]);  rsqrt_4 = None
    mul_29: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_12, 0.1)
    mul_30: "f32[128]" = torch.ops.aten.mul.Tensor(primals_531, 0.9)
    add_22: "f32[128]" = torch.ops.aten.add.Tensor(mul_29, mul_30);  mul_29 = mul_30 = None
    squeeze_14: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_10, [0, 2, 3]);  getitem_10 = None
    mul_31: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_14, 1.000030518509476);  squeeze_14 = None
    mul_32: "f32[128]" = torch.ops.aten.mul.Tensor(mul_31, 0.1);  mul_31 = None
    mul_33: "f32[128]" = torch.ops.aten.mul.Tensor(primals_532, 0.9)
    add_23: "f32[128]" = torch.ops.aten.add.Tensor(mul_32, mul_33);  mul_32 = mul_33 = None
    unsqueeze_16: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_14, -1)
    unsqueeze_17: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_16, -1);  unsqueeze_16 = None
    mul_34: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(mul_28, unsqueeze_17);  mul_28 = unsqueeze_17 = None
    unsqueeze_18: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_15, -1);  primals_15 = None
    unsqueeze_19: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_18, -1);  unsqueeze_18 = None
    add_24: "f32[8, 128, 64, 64]" = torch.ops.aten.add.Tensor(mul_34, unsqueeze_19);  mul_34 = unsqueeze_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_4: "f32[8, 128, 64, 64]" = torch.ops.aten.relu.default(add_24);  add_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_1: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.view.default(relu_4, [8, 2, 64, 64, 64])
    sum_1: "f32[8, 64, 64, 64]" = torch.ops.aten.sum.dim_IntList(view_1, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean: "f32[8, 64, 1, 1]" = torch.ops.aten.mean.dim(sum_1, [2, 3], True);  sum_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_5: "f32[8, 32, 1, 1]" = torch.ops.aten.convolution.default(mean, primals_16, primals_17, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_25: "i64[]" = torch.ops.aten.add.Tensor(primals_536, 1)
    var_mean_5 = torch.ops.aten.var_mean.correction(convolution_5, [0, 2, 3], correction = 0, keepdim = True)
    getitem_12: "f32[1, 32, 1, 1]" = var_mean_5[0]
    getitem_13: "f32[1, 32, 1, 1]" = var_mean_5[1];  var_mean_5 = None
    add_26: "f32[1, 32, 1, 1]" = torch.ops.aten.add.Tensor(getitem_12, 1e-05)
    rsqrt_5: "f32[1, 32, 1, 1]" = torch.ops.aten.rsqrt.default(add_26);  add_26 = None
    sub_5: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_5, getitem_13)
    mul_35: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_5, rsqrt_5);  sub_5 = None
    squeeze_15: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_13, [0, 2, 3]);  getitem_13 = None
    squeeze_16: "f32[32]" = torch.ops.aten.squeeze.dims(rsqrt_5, [0, 2, 3]);  rsqrt_5 = None
    mul_36: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_15, 0.1)
    mul_37: "f32[32]" = torch.ops.aten.mul.Tensor(primals_534, 0.9)
    add_27: "f32[32]" = torch.ops.aten.add.Tensor(mul_36, mul_37);  mul_36 = mul_37 = None
    squeeze_17: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_12, [0, 2, 3]);  getitem_12 = None
    mul_38: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_17, 1.1428571428571428);  squeeze_17 = None
    mul_39: "f32[32]" = torch.ops.aten.mul.Tensor(mul_38, 0.1);  mul_38 = None
    mul_40: "f32[32]" = torch.ops.aten.mul.Tensor(primals_535, 0.9)
    add_28: "f32[32]" = torch.ops.aten.add.Tensor(mul_39, mul_40);  mul_39 = mul_40 = None
    unsqueeze_20: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_18, -1)
    unsqueeze_21: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_20, -1);  unsqueeze_20 = None
    mul_41: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(mul_35, unsqueeze_21);  mul_35 = unsqueeze_21 = None
    unsqueeze_22: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_19, -1);  primals_19 = None
    unsqueeze_23: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_22, -1);  unsqueeze_22 = None
    add_29: "f32[8, 32, 1, 1]" = torch.ops.aten.add.Tensor(mul_41, unsqueeze_23);  mul_41 = unsqueeze_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_5: "f32[8, 32, 1, 1]" = torch.ops.aten.relu.default(add_29);  add_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_6: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(relu_5, primals_20, primals_21, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_2: "f32[8, 1, 2, 64]" = torch.ops.aten.view.default(convolution_6, [8, 1, 2, -1]);  convolution_6 = None
    permute: "f32[8, 2, 1, 64]" = torch.ops.aten.permute.default(view_2, [0, 2, 1, 3]);  view_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax: "f32[8, 1, 1, 64]" = torch.ops.aten.amax.default(permute, [1], True)
    sub_6: "f32[8, 2, 1, 64]" = torch.ops.aten.sub.Tensor(permute, amax);  permute = amax = None
    exp: "f32[8, 2, 1, 64]" = torch.ops.aten.exp.default(sub_6);  sub_6 = None
    sum_2: "f32[8, 1, 1, 64]" = torch.ops.aten.sum.dim_IntList(exp, [1], True)
    div: "f32[8, 2, 1, 64]" = torch.ops.aten.div.Tensor(exp, sum_2);  exp = sum_2 = None
    alias_6: "f32[8, 2, 1, 64]" = torch.ops.aten.alias.default(div)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_3: "f32[8, 128]" = torch.ops.aten.view.default(div, [8, -1]);  div = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_4: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(view_3, [8, -1, 1, 1]);  view_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_5: "f32[8, 2, 64, 1, 1]" = torch.ops.aten.view.default(view_4, [8, 2, 64, 1, 1]);  view_4 = None
    mul_42: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(view_1, view_5)
    sum_3: "f32[8, 64, 64, 64]" = torch.ops.aten.sum.dim_IntList(mul_42, [1]);  mul_42 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_7: "f32[8, 256, 64, 64]" = torch.ops.aten.convolution.default(sum_3, primals_22, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_30: "i64[]" = torch.ops.aten.add.Tensor(primals_539, 1)
    var_mean_6 = torch.ops.aten.var_mean.correction(convolution_7, [0, 2, 3], correction = 0, keepdim = True)
    getitem_14: "f32[1, 256, 1, 1]" = var_mean_6[0]
    getitem_15: "f32[1, 256, 1, 1]" = var_mean_6[1];  var_mean_6 = None
    add_31: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_14, 1e-05)
    rsqrt_6: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_31);  add_31 = None
    sub_7: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_7, getitem_15)
    mul_43: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_7, rsqrt_6);  sub_7 = None
    squeeze_18: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_15, [0, 2, 3]);  getitem_15 = None
    squeeze_19: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_6, [0, 2, 3]);  rsqrt_6 = None
    mul_44: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_18, 0.1)
    mul_45: "f32[256]" = torch.ops.aten.mul.Tensor(primals_537, 0.9)
    add_32: "f32[256]" = torch.ops.aten.add.Tensor(mul_44, mul_45);  mul_44 = mul_45 = None
    squeeze_20: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_14, [0, 2, 3]);  getitem_14 = None
    mul_46: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_20, 1.000030518509476);  squeeze_20 = None
    mul_47: "f32[256]" = torch.ops.aten.mul.Tensor(mul_46, 0.1);  mul_46 = None
    mul_48: "f32[256]" = torch.ops.aten.mul.Tensor(primals_538, 0.9)
    add_33: "f32[256]" = torch.ops.aten.add.Tensor(mul_47, mul_48);  mul_47 = mul_48 = None
    unsqueeze_24: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_23, -1)
    unsqueeze_25: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_24, -1);  unsqueeze_24 = None
    mul_49: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(mul_43, unsqueeze_25);  mul_43 = unsqueeze_25 = None
    unsqueeze_26: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_24, -1);  primals_24 = None
    unsqueeze_27: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_26, -1);  unsqueeze_26 = None
    add_34: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(mul_49, unsqueeze_27);  mul_49 = unsqueeze_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    convolution_8: "f32[8, 256, 64, 64]" = torch.ops.aten.convolution.default(getitem_6, primals_25, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_35: "i64[]" = torch.ops.aten.add.Tensor(primals_542, 1)
    var_mean_7 = torch.ops.aten.var_mean.correction(convolution_8, [0, 2, 3], correction = 0, keepdim = True)
    getitem_16: "f32[1, 256, 1, 1]" = var_mean_7[0]
    getitem_17: "f32[1, 256, 1, 1]" = var_mean_7[1];  var_mean_7 = None
    add_36: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_16, 1e-05)
    rsqrt_7: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_36);  add_36 = None
    sub_8: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_8, getitem_17)
    mul_50: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_8, rsqrt_7);  sub_8 = None
    squeeze_21: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_17, [0, 2, 3]);  getitem_17 = None
    squeeze_22: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_7, [0, 2, 3]);  rsqrt_7 = None
    mul_51: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_21, 0.1)
    mul_52: "f32[256]" = torch.ops.aten.mul.Tensor(primals_540, 0.9)
    add_37: "f32[256]" = torch.ops.aten.add.Tensor(mul_51, mul_52);  mul_51 = mul_52 = None
    squeeze_23: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_16, [0, 2, 3]);  getitem_16 = None
    mul_53: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_23, 1.000030518509476);  squeeze_23 = None
    mul_54: "f32[256]" = torch.ops.aten.mul.Tensor(mul_53, 0.1);  mul_53 = None
    mul_55: "f32[256]" = torch.ops.aten.mul.Tensor(primals_541, 0.9)
    add_38: "f32[256]" = torch.ops.aten.add.Tensor(mul_54, mul_55);  mul_54 = mul_55 = None
    unsqueeze_28: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_26, -1)
    unsqueeze_29: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_28, -1);  unsqueeze_28 = None
    mul_56: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(mul_50, unsqueeze_29);  mul_50 = unsqueeze_29 = None
    unsqueeze_30: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_27, -1);  primals_27 = None
    unsqueeze_31: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_30, -1);  unsqueeze_30 = None
    add_39: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(mul_56, unsqueeze_31);  mul_56 = unsqueeze_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_40: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(add_34, add_39);  add_34 = add_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_6: "f32[8, 256, 64, 64]" = torch.ops.aten.relu.default(add_40);  add_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_9: "f32[8, 64, 64, 64]" = torch.ops.aten.convolution.default(relu_6, primals_28, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_41: "i64[]" = torch.ops.aten.add.Tensor(primals_545, 1)
    var_mean_8 = torch.ops.aten.var_mean.correction(convolution_9, [0, 2, 3], correction = 0, keepdim = True)
    getitem_18: "f32[1, 64, 1, 1]" = var_mean_8[0]
    getitem_19: "f32[1, 64, 1, 1]" = var_mean_8[1];  var_mean_8 = None
    add_42: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_18, 1e-05)
    rsqrt_8: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_42);  add_42 = None
    sub_9: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_9, getitem_19)
    mul_57: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_9, rsqrt_8);  sub_9 = None
    squeeze_24: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_19, [0, 2, 3]);  getitem_19 = None
    squeeze_25: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_8, [0, 2, 3]);  rsqrt_8 = None
    mul_58: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_24, 0.1)
    mul_59: "f32[64]" = torch.ops.aten.mul.Tensor(primals_543, 0.9)
    add_43: "f32[64]" = torch.ops.aten.add.Tensor(mul_58, mul_59);  mul_58 = mul_59 = None
    squeeze_26: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_18, [0, 2, 3]);  getitem_18 = None
    mul_60: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_26, 1.000030518509476);  squeeze_26 = None
    mul_61: "f32[64]" = torch.ops.aten.mul.Tensor(mul_60, 0.1);  mul_60 = None
    mul_62: "f32[64]" = torch.ops.aten.mul.Tensor(primals_544, 0.9)
    add_44: "f32[64]" = torch.ops.aten.add.Tensor(mul_61, mul_62);  mul_61 = mul_62 = None
    unsqueeze_32: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_29, -1)
    unsqueeze_33: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_32, -1);  unsqueeze_32 = None
    mul_63: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(mul_57, unsqueeze_33);  mul_57 = unsqueeze_33 = None
    unsqueeze_34: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_30, -1);  primals_30 = None
    unsqueeze_35: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_34, -1);  unsqueeze_34 = None
    add_45: "f32[8, 64, 64, 64]" = torch.ops.aten.add.Tensor(mul_63, unsqueeze_35);  mul_63 = unsqueeze_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_7: "f32[8, 64, 64, 64]" = torch.ops.aten.relu.default(add_45);  add_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_10: "f32[8, 128, 64, 64]" = torch.ops.aten.convolution.default(relu_7, primals_31, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_46: "i64[]" = torch.ops.aten.add.Tensor(primals_548, 1)
    var_mean_9 = torch.ops.aten.var_mean.correction(convolution_10, [0, 2, 3], correction = 0, keepdim = True)
    getitem_20: "f32[1, 128, 1, 1]" = var_mean_9[0]
    getitem_21: "f32[1, 128, 1, 1]" = var_mean_9[1];  var_mean_9 = None
    add_47: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_20, 1e-05)
    rsqrt_9: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_47);  add_47 = None
    sub_10: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_10, getitem_21)
    mul_64: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_10, rsqrt_9);  sub_10 = None
    squeeze_27: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_21, [0, 2, 3]);  getitem_21 = None
    squeeze_28: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_9, [0, 2, 3]);  rsqrt_9 = None
    mul_65: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_27, 0.1)
    mul_66: "f32[128]" = torch.ops.aten.mul.Tensor(primals_546, 0.9)
    add_48: "f32[128]" = torch.ops.aten.add.Tensor(mul_65, mul_66);  mul_65 = mul_66 = None
    squeeze_29: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_20, [0, 2, 3]);  getitem_20 = None
    mul_67: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_29, 1.000030518509476);  squeeze_29 = None
    mul_68: "f32[128]" = torch.ops.aten.mul.Tensor(mul_67, 0.1);  mul_67 = None
    mul_69: "f32[128]" = torch.ops.aten.mul.Tensor(primals_547, 0.9)
    add_49: "f32[128]" = torch.ops.aten.add.Tensor(mul_68, mul_69);  mul_68 = mul_69 = None
    unsqueeze_36: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_32, -1)
    unsqueeze_37: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_36, -1);  unsqueeze_36 = None
    mul_70: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(mul_64, unsqueeze_37);  mul_64 = unsqueeze_37 = None
    unsqueeze_38: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_33, -1);  primals_33 = None
    unsqueeze_39: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_38, -1);  unsqueeze_38 = None
    add_50: "f32[8, 128, 64, 64]" = torch.ops.aten.add.Tensor(mul_70, unsqueeze_39);  mul_70 = unsqueeze_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_8: "f32[8, 128, 64, 64]" = torch.ops.aten.relu.default(add_50);  add_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_7: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.view.default(relu_8, [8, 2, 64, 64, 64])
    sum_4: "f32[8, 64, 64, 64]" = torch.ops.aten.sum.dim_IntList(view_7, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_1: "f32[8, 64, 1, 1]" = torch.ops.aten.mean.dim(sum_4, [2, 3], True);  sum_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_11: "f32[8, 32, 1, 1]" = torch.ops.aten.convolution.default(mean_1, primals_34, primals_35, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_51: "i64[]" = torch.ops.aten.add.Tensor(primals_551, 1)
    var_mean_10 = torch.ops.aten.var_mean.correction(convolution_11, [0, 2, 3], correction = 0, keepdim = True)
    getitem_22: "f32[1, 32, 1, 1]" = var_mean_10[0]
    getitem_23: "f32[1, 32, 1, 1]" = var_mean_10[1];  var_mean_10 = None
    add_52: "f32[1, 32, 1, 1]" = torch.ops.aten.add.Tensor(getitem_22, 1e-05)
    rsqrt_10: "f32[1, 32, 1, 1]" = torch.ops.aten.rsqrt.default(add_52);  add_52 = None
    sub_11: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_11, getitem_23)
    mul_71: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_11, rsqrt_10);  sub_11 = None
    squeeze_30: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_23, [0, 2, 3]);  getitem_23 = None
    squeeze_31: "f32[32]" = torch.ops.aten.squeeze.dims(rsqrt_10, [0, 2, 3]);  rsqrt_10 = None
    mul_72: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_30, 0.1)
    mul_73: "f32[32]" = torch.ops.aten.mul.Tensor(primals_549, 0.9)
    add_53: "f32[32]" = torch.ops.aten.add.Tensor(mul_72, mul_73);  mul_72 = mul_73 = None
    squeeze_32: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_22, [0, 2, 3]);  getitem_22 = None
    mul_74: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_32, 1.1428571428571428);  squeeze_32 = None
    mul_75: "f32[32]" = torch.ops.aten.mul.Tensor(mul_74, 0.1);  mul_74 = None
    mul_76: "f32[32]" = torch.ops.aten.mul.Tensor(primals_550, 0.9)
    add_54: "f32[32]" = torch.ops.aten.add.Tensor(mul_75, mul_76);  mul_75 = mul_76 = None
    unsqueeze_40: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_36, -1)
    unsqueeze_41: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_40, -1);  unsqueeze_40 = None
    mul_77: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(mul_71, unsqueeze_41);  mul_71 = unsqueeze_41 = None
    unsqueeze_42: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_37, -1);  primals_37 = None
    unsqueeze_43: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_42, -1);  unsqueeze_42 = None
    add_55: "f32[8, 32, 1, 1]" = torch.ops.aten.add.Tensor(mul_77, unsqueeze_43);  mul_77 = unsqueeze_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_9: "f32[8, 32, 1, 1]" = torch.ops.aten.relu.default(add_55);  add_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_12: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(relu_9, primals_38, primals_39, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_8: "f32[8, 1, 2, 64]" = torch.ops.aten.view.default(convolution_12, [8, 1, 2, -1]);  convolution_12 = None
    permute_1: "f32[8, 2, 1, 64]" = torch.ops.aten.permute.default(view_8, [0, 2, 1, 3]);  view_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_1: "f32[8, 1, 1, 64]" = torch.ops.aten.amax.default(permute_1, [1], True)
    sub_12: "f32[8, 2, 1, 64]" = torch.ops.aten.sub.Tensor(permute_1, amax_1);  permute_1 = amax_1 = None
    exp_1: "f32[8, 2, 1, 64]" = torch.ops.aten.exp.default(sub_12);  sub_12 = None
    sum_5: "f32[8, 1, 1, 64]" = torch.ops.aten.sum.dim_IntList(exp_1, [1], True)
    div_1: "f32[8, 2, 1, 64]" = torch.ops.aten.div.Tensor(exp_1, sum_5);  exp_1 = sum_5 = None
    alias_11: "f32[8, 2, 1, 64]" = torch.ops.aten.alias.default(div_1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_9: "f32[8, 128]" = torch.ops.aten.view.default(div_1, [8, -1]);  div_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_10: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(view_9, [8, -1, 1, 1]);  view_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_11: "f32[8, 2, 64, 1, 1]" = torch.ops.aten.view.default(view_10, [8, 2, 64, 1, 1]);  view_10 = None
    mul_78: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(view_7, view_11)
    sum_6: "f32[8, 64, 64, 64]" = torch.ops.aten.sum.dim_IntList(mul_78, [1]);  mul_78 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_13: "f32[8, 256, 64, 64]" = torch.ops.aten.convolution.default(sum_6, primals_40, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_56: "i64[]" = torch.ops.aten.add.Tensor(primals_554, 1)
    var_mean_11 = torch.ops.aten.var_mean.correction(convolution_13, [0, 2, 3], correction = 0, keepdim = True)
    getitem_24: "f32[1, 256, 1, 1]" = var_mean_11[0]
    getitem_25: "f32[1, 256, 1, 1]" = var_mean_11[1];  var_mean_11 = None
    add_57: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_24, 1e-05)
    rsqrt_11: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_57);  add_57 = None
    sub_13: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_13, getitem_25)
    mul_79: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_13, rsqrt_11);  sub_13 = None
    squeeze_33: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_25, [0, 2, 3]);  getitem_25 = None
    squeeze_34: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_11, [0, 2, 3]);  rsqrt_11 = None
    mul_80: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_33, 0.1)
    mul_81: "f32[256]" = torch.ops.aten.mul.Tensor(primals_552, 0.9)
    add_58: "f32[256]" = torch.ops.aten.add.Tensor(mul_80, mul_81);  mul_80 = mul_81 = None
    squeeze_35: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_24, [0, 2, 3]);  getitem_24 = None
    mul_82: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_35, 1.000030518509476);  squeeze_35 = None
    mul_83: "f32[256]" = torch.ops.aten.mul.Tensor(mul_82, 0.1);  mul_82 = None
    mul_84: "f32[256]" = torch.ops.aten.mul.Tensor(primals_553, 0.9)
    add_59: "f32[256]" = torch.ops.aten.add.Tensor(mul_83, mul_84);  mul_83 = mul_84 = None
    unsqueeze_44: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_41, -1)
    unsqueeze_45: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_44, -1);  unsqueeze_44 = None
    mul_85: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(mul_79, unsqueeze_45);  mul_79 = unsqueeze_45 = None
    unsqueeze_46: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_42, -1);  primals_42 = None
    unsqueeze_47: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_46, -1);  unsqueeze_46 = None
    add_60: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(mul_85, unsqueeze_47);  mul_85 = unsqueeze_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_61: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(add_60, relu_6);  add_60 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_10: "f32[8, 256, 64, 64]" = torch.ops.aten.relu.default(add_61);  add_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_14: "f32[8, 64, 64, 64]" = torch.ops.aten.convolution.default(relu_10, primals_43, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_62: "i64[]" = torch.ops.aten.add.Tensor(primals_557, 1)
    var_mean_12 = torch.ops.aten.var_mean.correction(convolution_14, [0, 2, 3], correction = 0, keepdim = True)
    getitem_26: "f32[1, 64, 1, 1]" = var_mean_12[0]
    getitem_27: "f32[1, 64, 1, 1]" = var_mean_12[1];  var_mean_12 = None
    add_63: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_26, 1e-05)
    rsqrt_12: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_63);  add_63 = None
    sub_14: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_14, getitem_27)
    mul_86: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_14, rsqrt_12);  sub_14 = None
    squeeze_36: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_27, [0, 2, 3]);  getitem_27 = None
    squeeze_37: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_12, [0, 2, 3]);  rsqrt_12 = None
    mul_87: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_36, 0.1)
    mul_88: "f32[64]" = torch.ops.aten.mul.Tensor(primals_555, 0.9)
    add_64: "f32[64]" = torch.ops.aten.add.Tensor(mul_87, mul_88);  mul_87 = mul_88 = None
    squeeze_38: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_26, [0, 2, 3]);  getitem_26 = None
    mul_89: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_38, 1.000030518509476);  squeeze_38 = None
    mul_90: "f32[64]" = torch.ops.aten.mul.Tensor(mul_89, 0.1);  mul_89 = None
    mul_91: "f32[64]" = torch.ops.aten.mul.Tensor(primals_556, 0.9)
    add_65: "f32[64]" = torch.ops.aten.add.Tensor(mul_90, mul_91);  mul_90 = mul_91 = None
    unsqueeze_48: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_44, -1)
    unsqueeze_49: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_48, -1);  unsqueeze_48 = None
    mul_92: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(mul_86, unsqueeze_49);  mul_86 = unsqueeze_49 = None
    unsqueeze_50: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_45, -1);  primals_45 = None
    unsqueeze_51: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_50, -1);  unsqueeze_50 = None
    add_66: "f32[8, 64, 64, 64]" = torch.ops.aten.add.Tensor(mul_92, unsqueeze_51);  mul_92 = unsqueeze_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_11: "f32[8, 64, 64, 64]" = torch.ops.aten.relu.default(add_66);  add_66 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_15: "f32[8, 128, 64, 64]" = torch.ops.aten.convolution.default(relu_11, primals_46, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_67: "i64[]" = torch.ops.aten.add.Tensor(primals_560, 1)
    var_mean_13 = torch.ops.aten.var_mean.correction(convolution_15, [0, 2, 3], correction = 0, keepdim = True)
    getitem_28: "f32[1, 128, 1, 1]" = var_mean_13[0]
    getitem_29: "f32[1, 128, 1, 1]" = var_mean_13[1];  var_mean_13 = None
    add_68: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_28, 1e-05)
    rsqrt_13: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_68);  add_68 = None
    sub_15: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_15, getitem_29)
    mul_93: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_15, rsqrt_13);  sub_15 = None
    squeeze_39: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_29, [0, 2, 3]);  getitem_29 = None
    squeeze_40: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_13, [0, 2, 3]);  rsqrt_13 = None
    mul_94: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_39, 0.1)
    mul_95: "f32[128]" = torch.ops.aten.mul.Tensor(primals_558, 0.9)
    add_69: "f32[128]" = torch.ops.aten.add.Tensor(mul_94, mul_95);  mul_94 = mul_95 = None
    squeeze_41: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_28, [0, 2, 3]);  getitem_28 = None
    mul_96: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_41, 1.000030518509476);  squeeze_41 = None
    mul_97: "f32[128]" = torch.ops.aten.mul.Tensor(mul_96, 0.1);  mul_96 = None
    mul_98: "f32[128]" = torch.ops.aten.mul.Tensor(primals_559, 0.9)
    add_70: "f32[128]" = torch.ops.aten.add.Tensor(mul_97, mul_98);  mul_97 = mul_98 = None
    unsqueeze_52: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_47, -1)
    unsqueeze_53: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_52, -1);  unsqueeze_52 = None
    mul_99: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(mul_93, unsqueeze_53);  mul_93 = unsqueeze_53 = None
    unsqueeze_54: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_48, -1);  primals_48 = None
    unsqueeze_55: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_54, -1);  unsqueeze_54 = None
    add_71: "f32[8, 128, 64, 64]" = torch.ops.aten.add.Tensor(mul_99, unsqueeze_55);  mul_99 = unsqueeze_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_12: "f32[8, 128, 64, 64]" = torch.ops.aten.relu.default(add_71);  add_71 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_13: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.view.default(relu_12, [8, 2, 64, 64, 64])
    sum_7: "f32[8, 64, 64, 64]" = torch.ops.aten.sum.dim_IntList(view_13, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_2: "f32[8, 64, 1, 1]" = torch.ops.aten.mean.dim(sum_7, [2, 3], True);  sum_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_16: "f32[8, 32, 1, 1]" = torch.ops.aten.convolution.default(mean_2, primals_49, primals_50, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_72: "i64[]" = torch.ops.aten.add.Tensor(primals_563, 1)
    var_mean_14 = torch.ops.aten.var_mean.correction(convolution_16, [0, 2, 3], correction = 0, keepdim = True)
    getitem_30: "f32[1, 32, 1, 1]" = var_mean_14[0]
    getitem_31: "f32[1, 32, 1, 1]" = var_mean_14[1];  var_mean_14 = None
    add_73: "f32[1, 32, 1, 1]" = torch.ops.aten.add.Tensor(getitem_30, 1e-05)
    rsqrt_14: "f32[1, 32, 1, 1]" = torch.ops.aten.rsqrt.default(add_73);  add_73 = None
    sub_16: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_16, getitem_31)
    mul_100: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_16, rsqrt_14);  sub_16 = None
    squeeze_42: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_31, [0, 2, 3]);  getitem_31 = None
    squeeze_43: "f32[32]" = torch.ops.aten.squeeze.dims(rsqrt_14, [0, 2, 3]);  rsqrt_14 = None
    mul_101: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_42, 0.1)
    mul_102: "f32[32]" = torch.ops.aten.mul.Tensor(primals_561, 0.9)
    add_74: "f32[32]" = torch.ops.aten.add.Tensor(mul_101, mul_102);  mul_101 = mul_102 = None
    squeeze_44: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_30, [0, 2, 3]);  getitem_30 = None
    mul_103: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_44, 1.1428571428571428);  squeeze_44 = None
    mul_104: "f32[32]" = torch.ops.aten.mul.Tensor(mul_103, 0.1);  mul_103 = None
    mul_105: "f32[32]" = torch.ops.aten.mul.Tensor(primals_562, 0.9)
    add_75: "f32[32]" = torch.ops.aten.add.Tensor(mul_104, mul_105);  mul_104 = mul_105 = None
    unsqueeze_56: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_51, -1)
    unsqueeze_57: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_56, -1);  unsqueeze_56 = None
    mul_106: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(mul_100, unsqueeze_57);  mul_100 = unsqueeze_57 = None
    unsqueeze_58: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_52, -1);  primals_52 = None
    unsqueeze_59: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_58, -1);  unsqueeze_58 = None
    add_76: "f32[8, 32, 1, 1]" = torch.ops.aten.add.Tensor(mul_106, unsqueeze_59);  mul_106 = unsqueeze_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_13: "f32[8, 32, 1, 1]" = torch.ops.aten.relu.default(add_76);  add_76 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_17: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(relu_13, primals_53, primals_54, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_14: "f32[8, 1, 2, 64]" = torch.ops.aten.view.default(convolution_17, [8, 1, 2, -1]);  convolution_17 = None
    permute_2: "f32[8, 2, 1, 64]" = torch.ops.aten.permute.default(view_14, [0, 2, 1, 3]);  view_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_2: "f32[8, 1, 1, 64]" = torch.ops.aten.amax.default(permute_2, [1], True)
    sub_17: "f32[8, 2, 1, 64]" = torch.ops.aten.sub.Tensor(permute_2, amax_2);  permute_2 = amax_2 = None
    exp_2: "f32[8, 2, 1, 64]" = torch.ops.aten.exp.default(sub_17);  sub_17 = None
    sum_8: "f32[8, 1, 1, 64]" = torch.ops.aten.sum.dim_IntList(exp_2, [1], True)
    div_2: "f32[8, 2, 1, 64]" = torch.ops.aten.div.Tensor(exp_2, sum_8);  exp_2 = sum_8 = None
    alias_16: "f32[8, 2, 1, 64]" = torch.ops.aten.alias.default(div_2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_15: "f32[8, 128]" = torch.ops.aten.view.default(div_2, [8, -1]);  div_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_16: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(view_15, [8, -1, 1, 1]);  view_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_17: "f32[8, 2, 64, 1, 1]" = torch.ops.aten.view.default(view_16, [8, 2, 64, 1, 1]);  view_16 = None
    mul_107: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(view_13, view_17)
    sum_9: "f32[8, 64, 64, 64]" = torch.ops.aten.sum.dim_IntList(mul_107, [1]);  mul_107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_18: "f32[8, 256, 64, 64]" = torch.ops.aten.convolution.default(sum_9, primals_55, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_77: "i64[]" = torch.ops.aten.add.Tensor(primals_566, 1)
    var_mean_15 = torch.ops.aten.var_mean.correction(convolution_18, [0, 2, 3], correction = 0, keepdim = True)
    getitem_32: "f32[1, 256, 1, 1]" = var_mean_15[0]
    getitem_33: "f32[1, 256, 1, 1]" = var_mean_15[1];  var_mean_15 = None
    add_78: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_32, 1e-05)
    rsqrt_15: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_78);  add_78 = None
    sub_18: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_18, getitem_33)
    mul_108: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_18, rsqrt_15);  sub_18 = None
    squeeze_45: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_33, [0, 2, 3]);  getitem_33 = None
    squeeze_46: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_15, [0, 2, 3]);  rsqrt_15 = None
    mul_109: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_45, 0.1)
    mul_110: "f32[256]" = torch.ops.aten.mul.Tensor(primals_564, 0.9)
    add_79: "f32[256]" = torch.ops.aten.add.Tensor(mul_109, mul_110);  mul_109 = mul_110 = None
    squeeze_47: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_32, [0, 2, 3]);  getitem_32 = None
    mul_111: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_47, 1.000030518509476);  squeeze_47 = None
    mul_112: "f32[256]" = torch.ops.aten.mul.Tensor(mul_111, 0.1);  mul_111 = None
    mul_113: "f32[256]" = torch.ops.aten.mul.Tensor(primals_565, 0.9)
    add_80: "f32[256]" = torch.ops.aten.add.Tensor(mul_112, mul_113);  mul_112 = mul_113 = None
    unsqueeze_60: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_56, -1)
    unsqueeze_61: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_60, -1);  unsqueeze_60 = None
    mul_114: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(mul_108, unsqueeze_61);  mul_108 = unsqueeze_61 = None
    unsqueeze_62: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_57, -1);  primals_57 = None
    unsqueeze_63: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_62, -1);  unsqueeze_62 = None
    add_81: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(mul_114, unsqueeze_63);  mul_114 = unsqueeze_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_82: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(add_81, relu_10);  add_81 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_14: "f32[8, 256, 64, 64]" = torch.ops.aten.relu.default(add_82);  add_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_19: "f32[8, 128, 64, 64]" = torch.ops.aten.convolution.default(relu_14, primals_58, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_83: "i64[]" = torch.ops.aten.add.Tensor(primals_569, 1)
    var_mean_16 = torch.ops.aten.var_mean.correction(convolution_19, [0, 2, 3], correction = 0, keepdim = True)
    getitem_34: "f32[1, 128, 1, 1]" = var_mean_16[0]
    getitem_35: "f32[1, 128, 1, 1]" = var_mean_16[1];  var_mean_16 = None
    add_84: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_34, 1e-05)
    rsqrt_16: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_84);  add_84 = None
    sub_19: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_19, getitem_35)
    mul_115: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_19, rsqrt_16);  sub_19 = None
    squeeze_48: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_35, [0, 2, 3]);  getitem_35 = None
    squeeze_49: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_16, [0, 2, 3]);  rsqrt_16 = None
    mul_116: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_48, 0.1)
    mul_117: "f32[128]" = torch.ops.aten.mul.Tensor(primals_567, 0.9)
    add_85: "f32[128]" = torch.ops.aten.add.Tensor(mul_116, mul_117);  mul_116 = mul_117 = None
    squeeze_50: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_34, [0, 2, 3]);  getitem_34 = None
    mul_118: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_50, 1.000030518509476);  squeeze_50 = None
    mul_119: "f32[128]" = torch.ops.aten.mul.Tensor(mul_118, 0.1);  mul_118 = None
    mul_120: "f32[128]" = torch.ops.aten.mul.Tensor(primals_568, 0.9)
    add_86: "f32[128]" = torch.ops.aten.add.Tensor(mul_119, mul_120);  mul_119 = mul_120 = None
    unsqueeze_64: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_59, -1)
    unsqueeze_65: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_64, -1);  unsqueeze_64 = None
    mul_121: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(mul_115, unsqueeze_65);  mul_115 = unsqueeze_65 = None
    unsqueeze_66: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_60, -1);  primals_60 = None
    unsqueeze_67: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_66, -1);  unsqueeze_66 = None
    add_87: "f32[8, 128, 64, 64]" = torch.ops.aten.add.Tensor(mul_121, unsqueeze_67);  mul_121 = unsqueeze_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_15: "f32[8, 128, 64, 64]" = torch.ops.aten.relu.default(add_87);  add_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_20: "f32[8, 256, 64, 64]" = torch.ops.aten.convolution.default(relu_15, primals_61, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_88: "i64[]" = torch.ops.aten.add.Tensor(primals_572, 1)
    var_mean_17 = torch.ops.aten.var_mean.correction(convolution_20, [0, 2, 3], correction = 0, keepdim = True)
    getitem_36: "f32[1, 256, 1, 1]" = var_mean_17[0]
    getitem_37: "f32[1, 256, 1, 1]" = var_mean_17[1];  var_mean_17 = None
    add_89: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_36, 1e-05)
    rsqrt_17: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_89);  add_89 = None
    sub_20: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_20, getitem_37)
    mul_122: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_20, rsqrt_17);  sub_20 = None
    squeeze_51: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_37, [0, 2, 3]);  getitem_37 = None
    squeeze_52: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_17, [0, 2, 3]);  rsqrt_17 = None
    mul_123: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_51, 0.1)
    mul_124: "f32[256]" = torch.ops.aten.mul.Tensor(primals_570, 0.9)
    add_90: "f32[256]" = torch.ops.aten.add.Tensor(mul_123, mul_124);  mul_123 = mul_124 = None
    squeeze_53: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_36, [0, 2, 3]);  getitem_36 = None
    mul_125: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_53, 1.000030518509476);  squeeze_53 = None
    mul_126: "f32[256]" = torch.ops.aten.mul.Tensor(mul_125, 0.1);  mul_125 = None
    mul_127: "f32[256]" = torch.ops.aten.mul.Tensor(primals_571, 0.9)
    add_91: "f32[256]" = torch.ops.aten.add.Tensor(mul_126, mul_127);  mul_126 = mul_127 = None
    unsqueeze_68: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_62, -1)
    unsqueeze_69: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_68, -1);  unsqueeze_68 = None
    mul_128: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(mul_122, unsqueeze_69);  mul_122 = unsqueeze_69 = None
    unsqueeze_70: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_63, -1);  primals_63 = None
    unsqueeze_71: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_70, -1);  unsqueeze_70 = None
    add_92: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(mul_128, unsqueeze_71);  mul_128 = unsqueeze_71 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_16: "f32[8, 256, 64, 64]" = torch.ops.aten.relu.default(add_92);  add_92 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_19: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.view.default(relu_16, [8, 2, 128, 64, 64])
    sum_10: "f32[8, 128, 64, 64]" = torch.ops.aten.sum.dim_IntList(view_19, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_3: "f32[8, 128, 1, 1]" = torch.ops.aten.mean.dim(sum_10, [2, 3], True);  sum_10 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_21: "f32[8, 64, 1, 1]" = torch.ops.aten.convolution.default(mean_3, primals_64, primals_65, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_65 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_93: "i64[]" = torch.ops.aten.add.Tensor(primals_575, 1)
    var_mean_18 = torch.ops.aten.var_mean.correction(convolution_21, [0, 2, 3], correction = 0, keepdim = True)
    getitem_38: "f32[1, 64, 1, 1]" = var_mean_18[0]
    getitem_39: "f32[1, 64, 1, 1]" = var_mean_18[1];  var_mean_18 = None
    add_94: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_38, 1e-05)
    rsqrt_18: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_94);  add_94 = None
    sub_21: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_21, getitem_39)
    mul_129: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_21, rsqrt_18);  sub_21 = None
    squeeze_54: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_39, [0, 2, 3]);  getitem_39 = None
    squeeze_55: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_18, [0, 2, 3]);  rsqrt_18 = None
    mul_130: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_54, 0.1)
    mul_131: "f32[64]" = torch.ops.aten.mul.Tensor(primals_573, 0.9)
    add_95: "f32[64]" = torch.ops.aten.add.Tensor(mul_130, mul_131);  mul_130 = mul_131 = None
    squeeze_56: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_38, [0, 2, 3]);  getitem_38 = None
    mul_132: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_56, 1.1428571428571428);  squeeze_56 = None
    mul_133: "f32[64]" = torch.ops.aten.mul.Tensor(mul_132, 0.1);  mul_132 = None
    mul_134: "f32[64]" = torch.ops.aten.mul.Tensor(primals_574, 0.9)
    add_96: "f32[64]" = torch.ops.aten.add.Tensor(mul_133, mul_134);  mul_133 = mul_134 = None
    unsqueeze_72: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_66, -1)
    unsqueeze_73: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_72, -1);  unsqueeze_72 = None
    mul_135: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(mul_129, unsqueeze_73);  mul_129 = unsqueeze_73 = None
    unsqueeze_74: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_67, -1);  primals_67 = None
    unsqueeze_75: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_74, -1);  unsqueeze_74 = None
    add_97: "f32[8, 64, 1, 1]" = torch.ops.aten.add.Tensor(mul_135, unsqueeze_75);  mul_135 = unsqueeze_75 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_17: "f32[8, 64, 1, 1]" = torch.ops.aten.relu.default(add_97);  add_97 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_22: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(relu_17, primals_68, primals_69, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_69 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_20: "f32[8, 1, 2, 128]" = torch.ops.aten.view.default(convolution_22, [8, 1, 2, -1]);  convolution_22 = None
    permute_3: "f32[8, 2, 1, 128]" = torch.ops.aten.permute.default(view_20, [0, 2, 1, 3]);  view_20 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_3: "f32[8, 1, 1, 128]" = torch.ops.aten.amax.default(permute_3, [1], True)
    sub_22: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(permute_3, amax_3);  permute_3 = amax_3 = None
    exp_3: "f32[8, 2, 1, 128]" = torch.ops.aten.exp.default(sub_22);  sub_22 = None
    sum_11: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(exp_3, [1], True)
    div_3: "f32[8, 2, 1, 128]" = torch.ops.aten.div.Tensor(exp_3, sum_11);  exp_3 = sum_11 = None
    alias_21: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(div_3)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_21: "f32[8, 256]" = torch.ops.aten.view.default(div_3, [8, -1]);  div_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_22: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(view_21, [8, -1, 1, 1]);  view_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_23: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.view.default(view_22, [8, 2, 128, 1, 1]);  view_22 = None
    mul_136: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.mul.Tensor(view_19, view_23)
    sum_12: "f32[8, 128, 64, 64]" = torch.ops.aten.sum.dim_IntList(mul_136, [1]);  mul_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:107, code: out = self.avd_last(out)
    avg_pool2d: "f32[8, 128, 32, 32]" = torch.ops.aten.avg_pool2d.default(sum_12, [3, 3], [2, 2], [1, 1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_23: "f32[8, 512, 32, 32]" = torch.ops.aten.convolution.default(avg_pool2d, primals_70, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_98: "i64[]" = torch.ops.aten.add.Tensor(primals_578, 1)
    var_mean_19 = torch.ops.aten.var_mean.correction(convolution_23, [0, 2, 3], correction = 0, keepdim = True)
    getitem_40: "f32[1, 512, 1, 1]" = var_mean_19[0]
    getitem_41: "f32[1, 512, 1, 1]" = var_mean_19[1];  var_mean_19 = None
    add_99: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_40, 1e-05)
    rsqrt_19: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_99);  add_99 = None
    sub_23: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_23, getitem_41)
    mul_137: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_23, rsqrt_19);  sub_23 = None
    squeeze_57: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_41, [0, 2, 3]);  getitem_41 = None
    squeeze_58: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_19, [0, 2, 3]);  rsqrt_19 = None
    mul_138: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_57, 0.1)
    mul_139: "f32[512]" = torch.ops.aten.mul.Tensor(primals_576, 0.9)
    add_100: "f32[512]" = torch.ops.aten.add.Tensor(mul_138, mul_139);  mul_138 = mul_139 = None
    squeeze_59: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_40, [0, 2, 3]);  getitem_40 = None
    mul_140: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_59, 1.0001220852154804);  squeeze_59 = None
    mul_141: "f32[512]" = torch.ops.aten.mul.Tensor(mul_140, 0.1);  mul_140 = None
    mul_142: "f32[512]" = torch.ops.aten.mul.Tensor(primals_577, 0.9)
    add_101: "f32[512]" = torch.ops.aten.add.Tensor(mul_141, mul_142);  mul_141 = mul_142 = None
    unsqueeze_76: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_71, -1)
    unsqueeze_77: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_76, -1);  unsqueeze_76 = None
    mul_143: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(mul_137, unsqueeze_77);  mul_137 = unsqueeze_77 = None
    unsqueeze_78: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_72, -1);  primals_72 = None
    unsqueeze_79: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_78, -1);  unsqueeze_78 = None
    add_102: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(mul_143, unsqueeze_79);  mul_143 = unsqueeze_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    avg_pool2d_1: "f32[8, 256, 32, 32]" = torch.ops.aten.avg_pool2d.default(relu_14, [2, 2], [2, 2], [0, 0], True, False)
    convolution_24: "f32[8, 512, 32, 32]" = torch.ops.aten.convolution.default(avg_pool2d_1, primals_73, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_103: "i64[]" = torch.ops.aten.add.Tensor(primals_581, 1)
    var_mean_20 = torch.ops.aten.var_mean.correction(convolution_24, [0, 2, 3], correction = 0, keepdim = True)
    getitem_42: "f32[1, 512, 1, 1]" = var_mean_20[0]
    getitem_43: "f32[1, 512, 1, 1]" = var_mean_20[1];  var_mean_20 = None
    add_104: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_42, 1e-05)
    rsqrt_20: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_104);  add_104 = None
    sub_24: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_24, getitem_43)
    mul_144: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_24, rsqrt_20);  sub_24 = None
    squeeze_60: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_43, [0, 2, 3]);  getitem_43 = None
    squeeze_61: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_20, [0, 2, 3]);  rsqrt_20 = None
    mul_145: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_60, 0.1)
    mul_146: "f32[512]" = torch.ops.aten.mul.Tensor(primals_579, 0.9)
    add_105: "f32[512]" = torch.ops.aten.add.Tensor(mul_145, mul_146);  mul_145 = mul_146 = None
    squeeze_62: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_42, [0, 2, 3]);  getitem_42 = None
    mul_147: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_62, 1.0001220852154804);  squeeze_62 = None
    mul_148: "f32[512]" = torch.ops.aten.mul.Tensor(mul_147, 0.1);  mul_147 = None
    mul_149: "f32[512]" = torch.ops.aten.mul.Tensor(primals_580, 0.9)
    add_106: "f32[512]" = torch.ops.aten.add.Tensor(mul_148, mul_149);  mul_148 = mul_149 = None
    unsqueeze_80: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_74, -1)
    unsqueeze_81: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_80, -1);  unsqueeze_80 = None
    mul_150: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(mul_144, unsqueeze_81);  mul_144 = unsqueeze_81 = None
    unsqueeze_82: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_75, -1);  primals_75 = None
    unsqueeze_83: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_82, -1);  unsqueeze_82 = None
    add_107: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(mul_150, unsqueeze_83);  mul_150 = unsqueeze_83 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_108: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(add_102, add_107);  add_102 = add_107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_18: "f32[8, 512, 32, 32]" = torch.ops.aten.relu.default(add_108);  add_108 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_25: "f32[8, 128, 32, 32]" = torch.ops.aten.convolution.default(relu_18, primals_76, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_109: "i64[]" = torch.ops.aten.add.Tensor(primals_584, 1)
    var_mean_21 = torch.ops.aten.var_mean.correction(convolution_25, [0, 2, 3], correction = 0, keepdim = True)
    getitem_44: "f32[1, 128, 1, 1]" = var_mean_21[0]
    getitem_45: "f32[1, 128, 1, 1]" = var_mean_21[1];  var_mean_21 = None
    add_110: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_44, 1e-05)
    rsqrt_21: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_110);  add_110 = None
    sub_25: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_25, getitem_45)
    mul_151: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_25, rsqrt_21);  sub_25 = None
    squeeze_63: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_45, [0, 2, 3]);  getitem_45 = None
    squeeze_64: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_21, [0, 2, 3]);  rsqrt_21 = None
    mul_152: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_63, 0.1)
    mul_153: "f32[128]" = torch.ops.aten.mul.Tensor(primals_582, 0.9)
    add_111: "f32[128]" = torch.ops.aten.add.Tensor(mul_152, mul_153);  mul_152 = mul_153 = None
    squeeze_65: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_44, [0, 2, 3]);  getitem_44 = None
    mul_154: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_65, 1.0001220852154804);  squeeze_65 = None
    mul_155: "f32[128]" = torch.ops.aten.mul.Tensor(mul_154, 0.1);  mul_154 = None
    mul_156: "f32[128]" = torch.ops.aten.mul.Tensor(primals_583, 0.9)
    add_112: "f32[128]" = torch.ops.aten.add.Tensor(mul_155, mul_156);  mul_155 = mul_156 = None
    unsqueeze_84: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_77, -1)
    unsqueeze_85: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_84, -1);  unsqueeze_84 = None
    mul_157: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(mul_151, unsqueeze_85);  mul_151 = unsqueeze_85 = None
    unsqueeze_86: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_78, -1);  primals_78 = None
    unsqueeze_87: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_86, -1);  unsqueeze_86 = None
    add_113: "f32[8, 128, 32, 32]" = torch.ops.aten.add.Tensor(mul_157, unsqueeze_87);  mul_157 = unsqueeze_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_19: "f32[8, 128, 32, 32]" = torch.ops.aten.relu.default(add_113);  add_113 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_26: "f32[8, 256, 32, 32]" = torch.ops.aten.convolution.default(relu_19, primals_79, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_114: "i64[]" = torch.ops.aten.add.Tensor(primals_587, 1)
    var_mean_22 = torch.ops.aten.var_mean.correction(convolution_26, [0, 2, 3], correction = 0, keepdim = True)
    getitem_46: "f32[1, 256, 1, 1]" = var_mean_22[0]
    getitem_47: "f32[1, 256, 1, 1]" = var_mean_22[1];  var_mean_22 = None
    add_115: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_46, 1e-05)
    rsqrt_22: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_115);  add_115 = None
    sub_26: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_26, getitem_47)
    mul_158: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_26, rsqrt_22);  sub_26 = None
    squeeze_66: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_47, [0, 2, 3]);  getitem_47 = None
    squeeze_67: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_22, [0, 2, 3]);  rsqrt_22 = None
    mul_159: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_66, 0.1)
    mul_160: "f32[256]" = torch.ops.aten.mul.Tensor(primals_585, 0.9)
    add_116: "f32[256]" = torch.ops.aten.add.Tensor(mul_159, mul_160);  mul_159 = mul_160 = None
    squeeze_68: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_46, [0, 2, 3]);  getitem_46 = None
    mul_161: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_68, 1.0001220852154804);  squeeze_68 = None
    mul_162: "f32[256]" = torch.ops.aten.mul.Tensor(mul_161, 0.1);  mul_161 = None
    mul_163: "f32[256]" = torch.ops.aten.mul.Tensor(primals_586, 0.9)
    add_117: "f32[256]" = torch.ops.aten.add.Tensor(mul_162, mul_163);  mul_162 = mul_163 = None
    unsqueeze_88: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_80, -1)
    unsqueeze_89: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_88, -1);  unsqueeze_88 = None
    mul_164: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(mul_158, unsqueeze_89);  mul_158 = unsqueeze_89 = None
    unsqueeze_90: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_81, -1);  primals_81 = None
    unsqueeze_91: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_90, -1);  unsqueeze_90 = None
    add_118: "f32[8, 256, 32, 32]" = torch.ops.aten.add.Tensor(mul_164, unsqueeze_91);  mul_164 = unsqueeze_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_20: "f32[8, 256, 32, 32]" = torch.ops.aten.relu.default(add_118);  add_118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_25: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.view.default(relu_20, [8, 2, 128, 32, 32])
    sum_13: "f32[8, 128, 32, 32]" = torch.ops.aten.sum.dim_IntList(view_25, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_4: "f32[8, 128, 1, 1]" = torch.ops.aten.mean.dim(sum_13, [2, 3], True);  sum_13 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_27: "f32[8, 64, 1, 1]" = torch.ops.aten.convolution.default(mean_4, primals_82, primals_83, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_83 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_119: "i64[]" = torch.ops.aten.add.Tensor(primals_590, 1)
    var_mean_23 = torch.ops.aten.var_mean.correction(convolution_27, [0, 2, 3], correction = 0, keepdim = True)
    getitem_48: "f32[1, 64, 1, 1]" = var_mean_23[0]
    getitem_49: "f32[1, 64, 1, 1]" = var_mean_23[1];  var_mean_23 = None
    add_120: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_48, 1e-05)
    rsqrt_23: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_120);  add_120 = None
    sub_27: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_27, getitem_49)
    mul_165: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_27, rsqrt_23);  sub_27 = None
    squeeze_69: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_49, [0, 2, 3]);  getitem_49 = None
    squeeze_70: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_23, [0, 2, 3]);  rsqrt_23 = None
    mul_166: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_69, 0.1)
    mul_167: "f32[64]" = torch.ops.aten.mul.Tensor(primals_588, 0.9)
    add_121: "f32[64]" = torch.ops.aten.add.Tensor(mul_166, mul_167);  mul_166 = mul_167 = None
    squeeze_71: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_48, [0, 2, 3]);  getitem_48 = None
    mul_168: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_71, 1.1428571428571428);  squeeze_71 = None
    mul_169: "f32[64]" = torch.ops.aten.mul.Tensor(mul_168, 0.1);  mul_168 = None
    mul_170: "f32[64]" = torch.ops.aten.mul.Tensor(primals_589, 0.9)
    add_122: "f32[64]" = torch.ops.aten.add.Tensor(mul_169, mul_170);  mul_169 = mul_170 = None
    unsqueeze_92: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_84, -1)
    unsqueeze_93: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_92, -1);  unsqueeze_92 = None
    mul_171: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(mul_165, unsqueeze_93);  mul_165 = unsqueeze_93 = None
    unsqueeze_94: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_85, -1);  primals_85 = None
    unsqueeze_95: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_94, -1);  unsqueeze_94 = None
    add_123: "f32[8, 64, 1, 1]" = torch.ops.aten.add.Tensor(mul_171, unsqueeze_95);  mul_171 = unsqueeze_95 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_21: "f32[8, 64, 1, 1]" = torch.ops.aten.relu.default(add_123);  add_123 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_28: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(relu_21, primals_86, primals_87, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_26: "f32[8, 1, 2, 128]" = torch.ops.aten.view.default(convolution_28, [8, 1, 2, -1]);  convolution_28 = None
    permute_4: "f32[8, 2, 1, 128]" = torch.ops.aten.permute.default(view_26, [0, 2, 1, 3]);  view_26 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_4: "f32[8, 1, 1, 128]" = torch.ops.aten.amax.default(permute_4, [1], True)
    sub_28: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(permute_4, amax_4);  permute_4 = amax_4 = None
    exp_4: "f32[8, 2, 1, 128]" = torch.ops.aten.exp.default(sub_28);  sub_28 = None
    sum_14: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(exp_4, [1], True)
    div_4: "f32[8, 2, 1, 128]" = torch.ops.aten.div.Tensor(exp_4, sum_14);  exp_4 = sum_14 = None
    alias_26: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(div_4)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_27: "f32[8, 256]" = torch.ops.aten.view.default(div_4, [8, -1]);  div_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_28: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(view_27, [8, -1, 1, 1]);  view_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_29: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.view.default(view_28, [8, 2, 128, 1, 1]);  view_28 = None
    mul_172: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(view_25, view_29)
    sum_15: "f32[8, 128, 32, 32]" = torch.ops.aten.sum.dim_IntList(mul_172, [1]);  mul_172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_29: "f32[8, 512, 32, 32]" = torch.ops.aten.convolution.default(sum_15, primals_88, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_124: "i64[]" = torch.ops.aten.add.Tensor(primals_593, 1)
    var_mean_24 = torch.ops.aten.var_mean.correction(convolution_29, [0, 2, 3], correction = 0, keepdim = True)
    getitem_50: "f32[1, 512, 1, 1]" = var_mean_24[0]
    getitem_51: "f32[1, 512, 1, 1]" = var_mean_24[1];  var_mean_24 = None
    add_125: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_50, 1e-05)
    rsqrt_24: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_125);  add_125 = None
    sub_29: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_29, getitem_51)
    mul_173: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_29, rsqrt_24);  sub_29 = None
    squeeze_72: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_51, [0, 2, 3]);  getitem_51 = None
    squeeze_73: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_24, [0, 2, 3]);  rsqrt_24 = None
    mul_174: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_72, 0.1)
    mul_175: "f32[512]" = torch.ops.aten.mul.Tensor(primals_591, 0.9)
    add_126: "f32[512]" = torch.ops.aten.add.Tensor(mul_174, mul_175);  mul_174 = mul_175 = None
    squeeze_74: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_50, [0, 2, 3]);  getitem_50 = None
    mul_176: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_74, 1.0001220852154804);  squeeze_74 = None
    mul_177: "f32[512]" = torch.ops.aten.mul.Tensor(mul_176, 0.1);  mul_176 = None
    mul_178: "f32[512]" = torch.ops.aten.mul.Tensor(primals_592, 0.9)
    add_127: "f32[512]" = torch.ops.aten.add.Tensor(mul_177, mul_178);  mul_177 = mul_178 = None
    unsqueeze_96: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_89, -1)
    unsqueeze_97: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_96, -1);  unsqueeze_96 = None
    mul_179: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(mul_173, unsqueeze_97);  mul_173 = unsqueeze_97 = None
    unsqueeze_98: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_90, -1);  primals_90 = None
    unsqueeze_99: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_98, -1);  unsqueeze_98 = None
    add_128: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(mul_179, unsqueeze_99);  mul_179 = unsqueeze_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_129: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(add_128, relu_18);  add_128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_22: "f32[8, 512, 32, 32]" = torch.ops.aten.relu.default(add_129);  add_129 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_30: "f32[8, 128, 32, 32]" = torch.ops.aten.convolution.default(relu_22, primals_91, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_130: "i64[]" = torch.ops.aten.add.Tensor(primals_596, 1)
    var_mean_25 = torch.ops.aten.var_mean.correction(convolution_30, [0, 2, 3], correction = 0, keepdim = True)
    getitem_52: "f32[1, 128, 1, 1]" = var_mean_25[0]
    getitem_53: "f32[1, 128, 1, 1]" = var_mean_25[1];  var_mean_25 = None
    add_131: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_52, 1e-05)
    rsqrt_25: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_131);  add_131 = None
    sub_30: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_30, getitem_53)
    mul_180: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_30, rsqrt_25);  sub_30 = None
    squeeze_75: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_53, [0, 2, 3]);  getitem_53 = None
    squeeze_76: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_25, [0, 2, 3]);  rsqrt_25 = None
    mul_181: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_75, 0.1)
    mul_182: "f32[128]" = torch.ops.aten.mul.Tensor(primals_594, 0.9)
    add_132: "f32[128]" = torch.ops.aten.add.Tensor(mul_181, mul_182);  mul_181 = mul_182 = None
    squeeze_77: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_52, [0, 2, 3]);  getitem_52 = None
    mul_183: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_77, 1.0001220852154804);  squeeze_77 = None
    mul_184: "f32[128]" = torch.ops.aten.mul.Tensor(mul_183, 0.1);  mul_183 = None
    mul_185: "f32[128]" = torch.ops.aten.mul.Tensor(primals_595, 0.9)
    add_133: "f32[128]" = torch.ops.aten.add.Tensor(mul_184, mul_185);  mul_184 = mul_185 = None
    unsqueeze_100: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_92, -1)
    unsqueeze_101: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_100, -1);  unsqueeze_100 = None
    mul_186: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(mul_180, unsqueeze_101);  mul_180 = unsqueeze_101 = None
    unsqueeze_102: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_93, -1);  primals_93 = None
    unsqueeze_103: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_102, -1);  unsqueeze_102 = None
    add_134: "f32[8, 128, 32, 32]" = torch.ops.aten.add.Tensor(mul_186, unsqueeze_103);  mul_186 = unsqueeze_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_23: "f32[8, 128, 32, 32]" = torch.ops.aten.relu.default(add_134);  add_134 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_31: "f32[8, 256, 32, 32]" = torch.ops.aten.convolution.default(relu_23, primals_94, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_135: "i64[]" = torch.ops.aten.add.Tensor(primals_599, 1)
    var_mean_26 = torch.ops.aten.var_mean.correction(convolution_31, [0, 2, 3], correction = 0, keepdim = True)
    getitem_54: "f32[1, 256, 1, 1]" = var_mean_26[0]
    getitem_55: "f32[1, 256, 1, 1]" = var_mean_26[1];  var_mean_26 = None
    add_136: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_54, 1e-05)
    rsqrt_26: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_136);  add_136 = None
    sub_31: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_31, getitem_55)
    mul_187: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_31, rsqrt_26);  sub_31 = None
    squeeze_78: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_55, [0, 2, 3]);  getitem_55 = None
    squeeze_79: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_26, [0, 2, 3]);  rsqrt_26 = None
    mul_188: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_78, 0.1)
    mul_189: "f32[256]" = torch.ops.aten.mul.Tensor(primals_597, 0.9)
    add_137: "f32[256]" = torch.ops.aten.add.Tensor(mul_188, mul_189);  mul_188 = mul_189 = None
    squeeze_80: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_54, [0, 2, 3]);  getitem_54 = None
    mul_190: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_80, 1.0001220852154804);  squeeze_80 = None
    mul_191: "f32[256]" = torch.ops.aten.mul.Tensor(mul_190, 0.1);  mul_190 = None
    mul_192: "f32[256]" = torch.ops.aten.mul.Tensor(primals_598, 0.9)
    add_138: "f32[256]" = torch.ops.aten.add.Tensor(mul_191, mul_192);  mul_191 = mul_192 = None
    unsqueeze_104: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_95, -1)
    unsqueeze_105: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_104, -1);  unsqueeze_104 = None
    mul_193: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(mul_187, unsqueeze_105);  mul_187 = unsqueeze_105 = None
    unsqueeze_106: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_96, -1);  primals_96 = None
    unsqueeze_107: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_106, -1);  unsqueeze_106 = None
    add_139: "f32[8, 256, 32, 32]" = torch.ops.aten.add.Tensor(mul_193, unsqueeze_107);  mul_193 = unsqueeze_107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_24: "f32[8, 256, 32, 32]" = torch.ops.aten.relu.default(add_139);  add_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_31: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.view.default(relu_24, [8, 2, 128, 32, 32])
    sum_16: "f32[8, 128, 32, 32]" = torch.ops.aten.sum.dim_IntList(view_31, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_5: "f32[8, 128, 1, 1]" = torch.ops.aten.mean.dim(sum_16, [2, 3], True);  sum_16 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_32: "f32[8, 64, 1, 1]" = torch.ops.aten.convolution.default(mean_5, primals_97, primals_98, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_98 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_140: "i64[]" = torch.ops.aten.add.Tensor(primals_602, 1)
    var_mean_27 = torch.ops.aten.var_mean.correction(convolution_32, [0, 2, 3], correction = 0, keepdim = True)
    getitem_56: "f32[1, 64, 1, 1]" = var_mean_27[0]
    getitem_57: "f32[1, 64, 1, 1]" = var_mean_27[1];  var_mean_27 = None
    add_141: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_56, 1e-05)
    rsqrt_27: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_141);  add_141 = None
    sub_32: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_32, getitem_57)
    mul_194: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_32, rsqrt_27);  sub_32 = None
    squeeze_81: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_57, [0, 2, 3]);  getitem_57 = None
    squeeze_82: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_27, [0, 2, 3]);  rsqrt_27 = None
    mul_195: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_81, 0.1)
    mul_196: "f32[64]" = torch.ops.aten.mul.Tensor(primals_600, 0.9)
    add_142: "f32[64]" = torch.ops.aten.add.Tensor(mul_195, mul_196);  mul_195 = mul_196 = None
    squeeze_83: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_56, [0, 2, 3]);  getitem_56 = None
    mul_197: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_83, 1.1428571428571428);  squeeze_83 = None
    mul_198: "f32[64]" = torch.ops.aten.mul.Tensor(mul_197, 0.1);  mul_197 = None
    mul_199: "f32[64]" = torch.ops.aten.mul.Tensor(primals_601, 0.9)
    add_143: "f32[64]" = torch.ops.aten.add.Tensor(mul_198, mul_199);  mul_198 = mul_199 = None
    unsqueeze_108: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_99, -1)
    unsqueeze_109: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_108, -1);  unsqueeze_108 = None
    mul_200: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(mul_194, unsqueeze_109);  mul_194 = unsqueeze_109 = None
    unsqueeze_110: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_100, -1);  primals_100 = None
    unsqueeze_111: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_110, -1);  unsqueeze_110 = None
    add_144: "f32[8, 64, 1, 1]" = torch.ops.aten.add.Tensor(mul_200, unsqueeze_111);  mul_200 = unsqueeze_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_25: "f32[8, 64, 1, 1]" = torch.ops.aten.relu.default(add_144);  add_144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_33: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(relu_25, primals_101, primals_102, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_102 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_32: "f32[8, 1, 2, 128]" = torch.ops.aten.view.default(convolution_33, [8, 1, 2, -1]);  convolution_33 = None
    permute_5: "f32[8, 2, 1, 128]" = torch.ops.aten.permute.default(view_32, [0, 2, 1, 3]);  view_32 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_5: "f32[8, 1, 1, 128]" = torch.ops.aten.amax.default(permute_5, [1], True)
    sub_33: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(permute_5, amax_5);  permute_5 = amax_5 = None
    exp_5: "f32[8, 2, 1, 128]" = torch.ops.aten.exp.default(sub_33);  sub_33 = None
    sum_17: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(exp_5, [1], True)
    div_5: "f32[8, 2, 1, 128]" = torch.ops.aten.div.Tensor(exp_5, sum_17);  exp_5 = sum_17 = None
    alias_31: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(div_5)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_33: "f32[8, 256]" = torch.ops.aten.view.default(div_5, [8, -1]);  div_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_34: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(view_33, [8, -1, 1, 1]);  view_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_35: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.view.default(view_34, [8, 2, 128, 1, 1]);  view_34 = None
    mul_201: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(view_31, view_35)
    sum_18: "f32[8, 128, 32, 32]" = torch.ops.aten.sum.dim_IntList(mul_201, [1]);  mul_201 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_34: "f32[8, 512, 32, 32]" = torch.ops.aten.convolution.default(sum_18, primals_103, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_145: "i64[]" = torch.ops.aten.add.Tensor(primals_605, 1)
    var_mean_28 = torch.ops.aten.var_mean.correction(convolution_34, [0, 2, 3], correction = 0, keepdim = True)
    getitem_58: "f32[1, 512, 1, 1]" = var_mean_28[0]
    getitem_59: "f32[1, 512, 1, 1]" = var_mean_28[1];  var_mean_28 = None
    add_146: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_58, 1e-05)
    rsqrt_28: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_146);  add_146 = None
    sub_34: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_34, getitem_59)
    mul_202: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_34, rsqrt_28);  sub_34 = None
    squeeze_84: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_59, [0, 2, 3]);  getitem_59 = None
    squeeze_85: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_28, [0, 2, 3]);  rsqrt_28 = None
    mul_203: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_84, 0.1)
    mul_204: "f32[512]" = torch.ops.aten.mul.Tensor(primals_603, 0.9)
    add_147: "f32[512]" = torch.ops.aten.add.Tensor(mul_203, mul_204);  mul_203 = mul_204 = None
    squeeze_86: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_58, [0, 2, 3]);  getitem_58 = None
    mul_205: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_86, 1.0001220852154804);  squeeze_86 = None
    mul_206: "f32[512]" = torch.ops.aten.mul.Tensor(mul_205, 0.1);  mul_205 = None
    mul_207: "f32[512]" = torch.ops.aten.mul.Tensor(primals_604, 0.9)
    add_148: "f32[512]" = torch.ops.aten.add.Tensor(mul_206, mul_207);  mul_206 = mul_207 = None
    unsqueeze_112: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_104, -1)
    unsqueeze_113: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_112, -1);  unsqueeze_112 = None
    mul_208: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(mul_202, unsqueeze_113);  mul_202 = unsqueeze_113 = None
    unsqueeze_114: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_105, -1);  primals_105 = None
    unsqueeze_115: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_114, -1);  unsqueeze_114 = None
    add_149: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(mul_208, unsqueeze_115);  mul_208 = unsqueeze_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_150: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(add_149, relu_22);  add_149 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_26: "f32[8, 512, 32, 32]" = torch.ops.aten.relu.default(add_150);  add_150 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_35: "f32[8, 128, 32, 32]" = torch.ops.aten.convolution.default(relu_26, primals_106, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_151: "i64[]" = torch.ops.aten.add.Tensor(primals_608, 1)
    var_mean_29 = torch.ops.aten.var_mean.correction(convolution_35, [0, 2, 3], correction = 0, keepdim = True)
    getitem_60: "f32[1, 128, 1, 1]" = var_mean_29[0]
    getitem_61: "f32[1, 128, 1, 1]" = var_mean_29[1];  var_mean_29 = None
    add_152: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_60, 1e-05)
    rsqrt_29: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_152);  add_152 = None
    sub_35: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_35, getitem_61)
    mul_209: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_35, rsqrt_29);  sub_35 = None
    squeeze_87: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_61, [0, 2, 3]);  getitem_61 = None
    squeeze_88: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_29, [0, 2, 3]);  rsqrt_29 = None
    mul_210: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_87, 0.1)
    mul_211: "f32[128]" = torch.ops.aten.mul.Tensor(primals_606, 0.9)
    add_153: "f32[128]" = torch.ops.aten.add.Tensor(mul_210, mul_211);  mul_210 = mul_211 = None
    squeeze_89: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_60, [0, 2, 3]);  getitem_60 = None
    mul_212: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_89, 1.0001220852154804);  squeeze_89 = None
    mul_213: "f32[128]" = torch.ops.aten.mul.Tensor(mul_212, 0.1);  mul_212 = None
    mul_214: "f32[128]" = torch.ops.aten.mul.Tensor(primals_607, 0.9)
    add_154: "f32[128]" = torch.ops.aten.add.Tensor(mul_213, mul_214);  mul_213 = mul_214 = None
    unsqueeze_116: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_107, -1)
    unsqueeze_117: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_116, -1);  unsqueeze_116 = None
    mul_215: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(mul_209, unsqueeze_117);  mul_209 = unsqueeze_117 = None
    unsqueeze_118: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_108, -1);  primals_108 = None
    unsqueeze_119: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_118, -1);  unsqueeze_118 = None
    add_155: "f32[8, 128, 32, 32]" = torch.ops.aten.add.Tensor(mul_215, unsqueeze_119);  mul_215 = unsqueeze_119 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_27: "f32[8, 128, 32, 32]" = torch.ops.aten.relu.default(add_155);  add_155 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_36: "f32[8, 256, 32, 32]" = torch.ops.aten.convolution.default(relu_27, primals_109, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_156: "i64[]" = torch.ops.aten.add.Tensor(primals_611, 1)
    var_mean_30 = torch.ops.aten.var_mean.correction(convolution_36, [0, 2, 3], correction = 0, keepdim = True)
    getitem_62: "f32[1, 256, 1, 1]" = var_mean_30[0]
    getitem_63: "f32[1, 256, 1, 1]" = var_mean_30[1];  var_mean_30 = None
    add_157: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_62, 1e-05)
    rsqrt_30: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_157);  add_157 = None
    sub_36: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_36, getitem_63)
    mul_216: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_36, rsqrt_30);  sub_36 = None
    squeeze_90: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_63, [0, 2, 3]);  getitem_63 = None
    squeeze_91: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_30, [0, 2, 3]);  rsqrt_30 = None
    mul_217: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_90, 0.1)
    mul_218: "f32[256]" = torch.ops.aten.mul.Tensor(primals_609, 0.9)
    add_158: "f32[256]" = torch.ops.aten.add.Tensor(mul_217, mul_218);  mul_217 = mul_218 = None
    squeeze_92: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_62, [0, 2, 3]);  getitem_62 = None
    mul_219: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_92, 1.0001220852154804);  squeeze_92 = None
    mul_220: "f32[256]" = torch.ops.aten.mul.Tensor(mul_219, 0.1);  mul_219 = None
    mul_221: "f32[256]" = torch.ops.aten.mul.Tensor(primals_610, 0.9)
    add_159: "f32[256]" = torch.ops.aten.add.Tensor(mul_220, mul_221);  mul_220 = mul_221 = None
    unsqueeze_120: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_110, -1)
    unsqueeze_121: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_120, -1);  unsqueeze_120 = None
    mul_222: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(mul_216, unsqueeze_121);  mul_216 = unsqueeze_121 = None
    unsqueeze_122: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_111, -1);  primals_111 = None
    unsqueeze_123: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_122, -1);  unsqueeze_122 = None
    add_160: "f32[8, 256, 32, 32]" = torch.ops.aten.add.Tensor(mul_222, unsqueeze_123);  mul_222 = unsqueeze_123 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_28: "f32[8, 256, 32, 32]" = torch.ops.aten.relu.default(add_160);  add_160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_37: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.view.default(relu_28, [8, 2, 128, 32, 32])
    sum_19: "f32[8, 128, 32, 32]" = torch.ops.aten.sum.dim_IntList(view_37, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_6: "f32[8, 128, 1, 1]" = torch.ops.aten.mean.dim(sum_19, [2, 3], True);  sum_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_37: "f32[8, 64, 1, 1]" = torch.ops.aten.convolution.default(mean_6, primals_112, primals_113, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_113 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_161: "i64[]" = torch.ops.aten.add.Tensor(primals_614, 1)
    var_mean_31 = torch.ops.aten.var_mean.correction(convolution_37, [0, 2, 3], correction = 0, keepdim = True)
    getitem_64: "f32[1, 64, 1, 1]" = var_mean_31[0]
    getitem_65: "f32[1, 64, 1, 1]" = var_mean_31[1];  var_mean_31 = None
    add_162: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_64, 1e-05)
    rsqrt_31: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_162);  add_162 = None
    sub_37: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_37, getitem_65)
    mul_223: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_37, rsqrt_31);  sub_37 = None
    squeeze_93: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_65, [0, 2, 3]);  getitem_65 = None
    squeeze_94: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_31, [0, 2, 3]);  rsqrt_31 = None
    mul_224: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_93, 0.1)
    mul_225: "f32[64]" = torch.ops.aten.mul.Tensor(primals_612, 0.9)
    add_163: "f32[64]" = torch.ops.aten.add.Tensor(mul_224, mul_225);  mul_224 = mul_225 = None
    squeeze_95: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_64, [0, 2, 3]);  getitem_64 = None
    mul_226: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_95, 1.1428571428571428);  squeeze_95 = None
    mul_227: "f32[64]" = torch.ops.aten.mul.Tensor(mul_226, 0.1);  mul_226 = None
    mul_228: "f32[64]" = torch.ops.aten.mul.Tensor(primals_613, 0.9)
    add_164: "f32[64]" = torch.ops.aten.add.Tensor(mul_227, mul_228);  mul_227 = mul_228 = None
    unsqueeze_124: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_114, -1)
    unsqueeze_125: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_124, -1);  unsqueeze_124 = None
    mul_229: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(mul_223, unsqueeze_125);  mul_223 = unsqueeze_125 = None
    unsqueeze_126: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_115, -1);  primals_115 = None
    unsqueeze_127: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_126, -1);  unsqueeze_126 = None
    add_165: "f32[8, 64, 1, 1]" = torch.ops.aten.add.Tensor(mul_229, unsqueeze_127);  mul_229 = unsqueeze_127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_29: "f32[8, 64, 1, 1]" = torch.ops.aten.relu.default(add_165);  add_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_38: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(relu_29, primals_116, primals_117, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_117 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_38: "f32[8, 1, 2, 128]" = torch.ops.aten.view.default(convolution_38, [8, 1, 2, -1]);  convolution_38 = None
    permute_6: "f32[8, 2, 1, 128]" = torch.ops.aten.permute.default(view_38, [0, 2, 1, 3]);  view_38 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_6: "f32[8, 1, 1, 128]" = torch.ops.aten.amax.default(permute_6, [1], True)
    sub_38: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(permute_6, amax_6);  permute_6 = amax_6 = None
    exp_6: "f32[8, 2, 1, 128]" = torch.ops.aten.exp.default(sub_38);  sub_38 = None
    sum_20: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(exp_6, [1], True)
    div_6: "f32[8, 2, 1, 128]" = torch.ops.aten.div.Tensor(exp_6, sum_20);  exp_6 = sum_20 = None
    alias_36: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(div_6)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_39: "f32[8, 256]" = torch.ops.aten.view.default(div_6, [8, -1]);  div_6 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_40: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(view_39, [8, -1, 1, 1]);  view_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_41: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.view.default(view_40, [8, 2, 128, 1, 1]);  view_40 = None
    mul_230: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(view_37, view_41)
    sum_21: "f32[8, 128, 32, 32]" = torch.ops.aten.sum.dim_IntList(mul_230, [1]);  mul_230 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_39: "f32[8, 512, 32, 32]" = torch.ops.aten.convolution.default(sum_21, primals_118, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_166: "i64[]" = torch.ops.aten.add.Tensor(primals_617, 1)
    var_mean_32 = torch.ops.aten.var_mean.correction(convolution_39, [0, 2, 3], correction = 0, keepdim = True)
    getitem_66: "f32[1, 512, 1, 1]" = var_mean_32[0]
    getitem_67: "f32[1, 512, 1, 1]" = var_mean_32[1];  var_mean_32 = None
    add_167: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_66, 1e-05)
    rsqrt_32: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_167);  add_167 = None
    sub_39: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_39, getitem_67)
    mul_231: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_39, rsqrt_32);  sub_39 = None
    squeeze_96: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_67, [0, 2, 3]);  getitem_67 = None
    squeeze_97: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_32, [0, 2, 3]);  rsqrt_32 = None
    mul_232: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_96, 0.1)
    mul_233: "f32[512]" = torch.ops.aten.mul.Tensor(primals_615, 0.9)
    add_168: "f32[512]" = torch.ops.aten.add.Tensor(mul_232, mul_233);  mul_232 = mul_233 = None
    squeeze_98: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_66, [0, 2, 3]);  getitem_66 = None
    mul_234: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_98, 1.0001220852154804);  squeeze_98 = None
    mul_235: "f32[512]" = torch.ops.aten.mul.Tensor(mul_234, 0.1);  mul_234 = None
    mul_236: "f32[512]" = torch.ops.aten.mul.Tensor(primals_616, 0.9)
    add_169: "f32[512]" = torch.ops.aten.add.Tensor(mul_235, mul_236);  mul_235 = mul_236 = None
    unsqueeze_128: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_119, -1)
    unsqueeze_129: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_128, -1);  unsqueeze_128 = None
    mul_237: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(mul_231, unsqueeze_129);  mul_231 = unsqueeze_129 = None
    unsqueeze_130: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_120, -1);  primals_120 = None
    unsqueeze_131: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_130, -1);  unsqueeze_130 = None
    add_170: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(mul_237, unsqueeze_131);  mul_237 = unsqueeze_131 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_171: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(add_170, relu_26);  add_170 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_30: "f32[8, 512, 32, 32]" = torch.ops.aten.relu.default(add_171);  add_171 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_40: "f32[8, 256, 32, 32]" = torch.ops.aten.convolution.default(relu_30, primals_121, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_172: "i64[]" = torch.ops.aten.add.Tensor(primals_620, 1)
    var_mean_33 = torch.ops.aten.var_mean.correction(convolution_40, [0, 2, 3], correction = 0, keepdim = True)
    getitem_68: "f32[1, 256, 1, 1]" = var_mean_33[0]
    getitem_69: "f32[1, 256, 1, 1]" = var_mean_33[1];  var_mean_33 = None
    add_173: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_68, 1e-05)
    rsqrt_33: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_173);  add_173 = None
    sub_40: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_40, getitem_69)
    mul_238: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_40, rsqrt_33);  sub_40 = None
    squeeze_99: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_69, [0, 2, 3]);  getitem_69 = None
    squeeze_100: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_33, [0, 2, 3]);  rsqrt_33 = None
    mul_239: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_99, 0.1)
    mul_240: "f32[256]" = torch.ops.aten.mul.Tensor(primals_618, 0.9)
    add_174: "f32[256]" = torch.ops.aten.add.Tensor(mul_239, mul_240);  mul_239 = mul_240 = None
    squeeze_101: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_68, [0, 2, 3]);  getitem_68 = None
    mul_241: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_101, 1.0001220852154804);  squeeze_101 = None
    mul_242: "f32[256]" = torch.ops.aten.mul.Tensor(mul_241, 0.1);  mul_241 = None
    mul_243: "f32[256]" = torch.ops.aten.mul.Tensor(primals_619, 0.9)
    add_175: "f32[256]" = torch.ops.aten.add.Tensor(mul_242, mul_243);  mul_242 = mul_243 = None
    unsqueeze_132: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_122, -1)
    unsqueeze_133: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_132, -1);  unsqueeze_132 = None
    mul_244: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(mul_238, unsqueeze_133);  mul_238 = unsqueeze_133 = None
    unsqueeze_134: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_123, -1);  primals_123 = None
    unsqueeze_135: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_134, -1);  unsqueeze_134 = None
    add_176: "f32[8, 256, 32, 32]" = torch.ops.aten.add.Tensor(mul_244, unsqueeze_135);  mul_244 = unsqueeze_135 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_31: "f32[8, 256, 32, 32]" = torch.ops.aten.relu.default(add_176);  add_176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_41: "f32[8, 512, 32, 32]" = torch.ops.aten.convolution.default(relu_31, primals_124, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_177: "i64[]" = torch.ops.aten.add.Tensor(primals_623, 1)
    var_mean_34 = torch.ops.aten.var_mean.correction(convolution_41, [0, 2, 3], correction = 0, keepdim = True)
    getitem_70: "f32[1, 512, 1, 1]" = var_mean_34[0]
    getitem_71: "f32[1, 512, 1, 1]" = var_mean_34[1];  var_mean_34 = None
    add_178: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_70, 1e-05)
    rsqrt_34: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_178);  add_178 = None
    sub_41: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_41, getitem_71)
    mul_245: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_41, rsqrt_34);  sub_41 = None
    squeeze_102: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_71, [0, 2, 3]);  getitem_71 = None
    squeeze_103: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_34, [0, 2, 3]);  rsqrt_34 = None
    mul_246: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_102, 0.1)
    mul_247: "f32[512]" = torch.ops.aten.mul.Tensor(primals_621, 0.9)
    add_179: "f32[512]" = torch.ops.aten.add.Tensor(mul_246, mul_247);  mul_246 = mul_247 = None
    squeeze_104: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_70, [0, 2, 3]);  getitem_70 = None
    mul_248: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_104, 1.0001220852154804);  squeeze_104 = None
    mul_249: "f32[512]" = torch.ops.aten.mul.Tensor(mul_248, 0.1);  mul_248 = None
    mul_250: "f32[512]" = torch.ops.aten.mul.Tensor(primals_622, 0.9)
    add_180: "f32[512]" = torch.ops.aten.add.Tensor(mul_249, mul_250);  mul_249 = mul_250 = None
    unsqueeze_136: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_125, -1)
    unsqueeze_137: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_136, -1);  unsqueeze_136 = None
    mul_251: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(mul_245, unsqueeze_137);  mul_245 = unsqueeze_137 = None
    unsqueeze_138: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_126, -1);  primals_126 = None
    unsqueeze_139: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_138, -1);  unsqueeze_138 = None
    add_181: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(mul_251, unsqueeze_139);  mul_251 = unsqueeze_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_32: "f32[8, 512, 32, 32]" = torch.ops.aten.relu.default(add_181);  add_181 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_43: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.view.default(relu_32, [8, 2, 256, 32, 32])
    sum_22: "f32[8, 256, 32, 32]" = torch.ops.aten.sum.dim_IntList(view_43, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_7: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_22, [2, 3], True);  sum_22 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_42: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_7, primals_127, primals_128, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_182: "i64[]" = torch.ops.aten.add.Tensor(primals_626, 1)
    var_mean_35 = torch.ops.aten.var_mean.correction(convolution_42, [0, 2, 3], correction = 0, keepdim = True)
    getitem_72: "f32[1, 128, 1, 1]" = var_mean_35[0]
    getitem_73: "f32[1, 128, 1, 1]" = var_mean_35[1];  var_mean_35 = None
    add_183: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_72, 1e-05)
    rsqrt_35: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_183);  add_183 = None
    sub_42: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_42, getitem_73)
    mul_252: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_42, rsqrt_35);  sub_42 = None
    squeeze_105: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_73, [0, 2, 3]);  getitem_73 = None
    squeeze_106: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_35, [0, 2, 3]);  rsqrt_35 = None
    mul_253: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_105, 0.1)
    mul_254: "f32[128]" = torch.ops.aten.mul.Tensor(primals_624, 0.9)
    add_184: "f32[128]" = torch.ops.aten.add.Tensor(mul_253, mul_254);  mul_253 = mul_254 = None
    squeeze_107: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_72, [0, 2, 3]);  getitem_72 = None
    mul_255: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_107, 1.1428571428571428);  squeeze_107 = None
    mul_256: "f32[128]" = torch.ops.aten.mul.Tensor(mul_255, 0.1);  mul_255 = None
    mul_257: "f32[128]" = torch.ops.aten.mul.Tensor(primals_625, 0.9)
    add_185: "f32[128]" = torch.ops.aten.add.Tensor(mul_256, mul_257);  mul_256 = mul_257 = None
    unsqueeze_140: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_129, -1)
    unsqueeze_141: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_140, -1);  unsqueeze_140 = None
    mul_258: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_252, unsqueeze_141);  mul_252 = unsqueeze_141 = None
    unsqueeze_142: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_130, -1);  primals_130 = None
    unsqueeze_143: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_142, -1);  unsqueeze_142 = None
    add_186: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_258, unsqueeze_143);  mul_258 = unsqueeze_143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_33: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_186);  add_186 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_43: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_33, primals_131, primals_132, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_132 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_44: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_43, [8, 1, 2, -1]);  convolution_43 = None
    permute_7: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_44, [0, 2, 1, 3]);  view_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_7: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_7, [1], True)
    sub_43: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_7, amax_7);  permute_7 = amax_7 = None
    exp_7: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_43);  sub_43 = None
    sum_23: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_7, [1], True)
    div_7: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_7, sum_23);  exp_7 = sum_23 = None
    alias_41: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_7)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_45: "f32[8, 512]" = torch.ops.aten.view.default(div_7, [8, -1]);  div_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_46: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_45, [8, -1, 1, 1]);  view_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_47: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_46, [8, 2, 256, 1, 1]);  view_46 = None
    mul_259: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.mul.Tensor(view_43, view_47)
    sum_24: "f32[8, 256, 32, 32]" = torch.ops.aten.sum.dim_IntList(mul_259, [1]);  mul_259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:107, code: out = self.avd_last(out)
    avg_pool2d_2: "f32[8, 256, 16, 16]" = torch.ops.aten.avg_pool2d.default(sum_24, [3, 3], [2, 2], [1, 1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_44: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(avg_pool2d_2, primals_133, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_187: "i64[]" = torch.ops.aten.add.Tensor(primals_629, 1)
    var_mean_36 = torch.ops.aten.var_mean.correction(convolution_44, [0, 2, 3], correction = 0, keepdim = True)
    getitem_74: "f32[1, 1024, 1, 1]" = var_mean_36[0]
    getitem_75: "f32[1, 1024, 1, 1]" = var_mean_36[1];  var_mean_36 = None
    add_188: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_74, 1e-05)
    rsqrt_36: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_188);  add_188 = None
    sub_44: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_44, getitem_75)
    mul_260: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_44, rsqrt_36);  sub_44 = None
    squeeze_108: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_75, [0, 2, 3]);  getitem_75 = None
    squeeze_109: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_36, [0, 2, 3]);  rsqrt_36 = None
    mul_261: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_108, 0.1)
    mul_262: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_627, 0.9)
    add_189: "f32[1024]" = torch.ops.aten.add.Tensor(mul_261, mul_262);  mul_261 = mul_262 = None
    squeeze_110: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_74, [0, 2, 3]);  getitem_74 = None
    mul_263: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_110, 1.0004885197850513);  squeeze_110 = None
    mul_264: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_263, 0.1);  mul_263 = None
    mul_265: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_628, 0.9)
    add_190: "f32[1024]" = torch.ops.aten.add.Tensor(mul_264, mul_265);  mul_264 = mul_265 = None
    unsqueeze_144: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_134, -1)
    unsqueeze_145: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_144, -1);  unsqueeze_144 = None
    mul_266: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_260, unsqueeze_145);  mul_260 = unsqueeze_145 = None
    unsqueeze_146: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_135, -1);  primals_135 = None
    unsqueeze_147: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_146, -1);  unsqueeze_146 = None
    add_191: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_266, unsqueeze_147);  mul_266 = unsqueeze_147 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    avg_pool2d_3: "f32[8, 512, 16, 16]" = torch.ops.aten.avg_pool2d.default(relu_30, [2, 2], [2, 2], [0, 0], True, False)
    convolution_45: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(avg_pool2d_3, primals_136, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_192: "i64[]" = torch.ops.aten.add.Tensor(primals_632, 1)
    var_mean_37 = torch.ops.aten.var_mean.correction(convolution_45, [0, 2, 3], correction = 0, keepdim = True)
    getitem_76: "f32[1, 1024, 1, 1]" = var_mean_37[0]
    getitem_77: "f32[1, 1024, 1, 1]" = var_mean_37[1];  var_mean_37 = None
    add_193: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_76, 1e-05)
    rsqrt_37: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_193);  add_193 = None
    sub_45: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_45, getitem_77)
    mul_267: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_45, rsqrt_37);  sub_45 = None
    squeeze_111: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_77, [0, 2, 3]);  getitem_77 = None
    squeeze_112: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_37, [0, 2, 3]);  rsqrt_37 = None
    mul_268: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_111, 0.1)
    mul_269: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_630, 0.9)
    add_194: "f32[1024]" = torch.ops.aten.add.Tensor(mul_268, mul_269);  mul_268 = mul_269 = None
    squeeze_113: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_76, [0, 2, 3]);  getitem_76 = None
    mul_270: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_113, 1.0004885197850513);  squeeze_113 = None
    mul_271: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_270, 0.1);  mul_270 = None
    mul_272: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_631, 0.9)
    add_195: "f32[1024]" = torch.ops.aten.add.Tensor(mul_271, mul_272);  mul_271 = mul_272 = None
    unsqueeze_148: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_137, -1)
    unsqueeze_149: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_148, -1);  unsqueeze_148 = None
    mul_273: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_267, unsqueeze_149);  mul_267 = unsqueeze_149 = None
    unsqueeze_150: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_138, -1);  primals_138 = None
    unsqueeze_151: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_150, -1);  unsqueeze_150 = None
    add_196: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_273, unsqueeze_151);  mul_273 = unsqueeze_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_197: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_191, add_196);  add_191 = add_196 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_34: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_197);  add_197 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_46: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_34, primals_139, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_198: "i64[]" = torch.ops.aten.add.Tensor(primals_635, 1)
    var_mean_38 = torch.ops.aten.var_mean.correction(convolution_46, [0, 2, 3], correction = 0, keepdim = True)
    getitem_78: "f32[1, 256, 1, 1]" = var_mean_38[0]
    getitem_79: "f32[1, 256, 1, 1]" = var_mean_38[1];  var_mean_38 = None
    add_199: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_78, 1e-05)
    rsqrt_38: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_199);  add_199 = None
    sub_46: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_46, getitem_79)
    mul_274: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_46, rsqrt_38);  sub_46 = None
    squeeze_114: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_79, [0, 2, 3]);  getitem_79 = None
    squeeze_115: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_38, [0, 2, 3]);  rsqrt_38 = None
    mul_275: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_114, 0.1)
    mul_276: "f32[256]" = torch.ops.aten.mul.Tensor(primals_633, 0.9)
    add_200: "f32[256]" = torch.ops.aten.add.Tensor(mul_275, mul_276);  mul_275 = mul_276 = None
    squeeze_116: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_78, [0, 2, 3]);  getitem_78 = None
    mul_277: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_116, 1.0004885197850513);  squeeze_116 = None
    mul_278: "f32[256]" = torch.ops.aten.mul.Tensor(mul_277, 0.1);  mul_277 = None
    mul_279: "f32[256]" = torch.ops.aten.mul.Tensor(primals_634, 0.9)
    add_201: "f32[256]" = torch.ops.aten.add.Tensor(mul_278, mul_279);  mul_278 = mul_279 = None
    unsqueeze_152: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_140, -1)
    unsqueeze_153: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_152, -1);  unsqueeze_152 = None
    mul_280: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_274, unsqueeze_153);  mul_274 = unsqueeze_153 = None
    unsqueeze_154: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_141, -1);  primals_141 = None
    unsqueeze_155: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_154, -1);  unsqueeze_154 = None
    add_202: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_280, unsqueeze_155);  mul_280 = unsqueeze_155 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_35: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_202);  add_202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_47: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_35, primals_142, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_203: "i64[]" = torch.ops.aten.add.Tensor(primals_638, 1)
    var_mean_39 = torch.ops.aten.var_mean.correction(convolution_47, [0, 2, 3], correction = 0, keepdim = True)
    getitem_80: "f32[1, 512, 1, 1]" = var_mean_39[0]
    getitem_81: "f32[1, 512, 1, 1]" = var_mean_39[1];  var_mean_39 = None
    add_204: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_80, 1e-05)
    rsqrt_39: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_204);  add_204 = None
    sub_47: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_47, getitem_81)
    mul_281: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_47, rsqrt_39);  sub_47 = None
    squeeze_117: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_81, [0, 2, 3]);  getitem_81 = None
    squeeze_118: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_39, [0, 2, 3]);  rsqrt_39 = None
    mul_282: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_117, 0.1)
    mul_283: "f32[512]" = torch.ops.aten.mul.Tensor(primals_636, 0.9)
    add_205: "f32[512]" = torch.ops.aten.add.Tensor(mul_282, mul_283);  mul_282 = mul_283 = None
    squeeze_119: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_80, [0, 2, 3]);  getitem_80 = None
    mul_284: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_119, 1.0004885197850513);  squeeze_119 = None
    mul_285: "f32[512]" = torch.ops.aten.mul.Tensor(mul_284, 0.1);  mul_284 = None
    mul_286: "f32[512]" = torch.ops.aten.mul.Tensor(primals_637, 0.9)
    add_206: "f32[512]" = torch.ops.aten.add.Tensor(mul_285, mul_286);  mul_285 = mul_286 = None
    unsqueeze_156: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_143, -1)
    unsqueeze_157: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_156, -1);  unsqueeze_156 = None
    mul_287: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_281, unsqueeze_157);  mul_281 = unsqueeze_157 = None
    unsqueeze_158: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_144, -1);  primals_144 = None
    unsqueeze_159: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_158, -1);  unsqueeze_158 = None
    add_207: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_287, unsqueeze_159);  mul_287 = unsqueeze_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_36: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_207);  add_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_49: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_36, [8, 2, 256, 16, 16])
    sum_25: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_49, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_8: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_25, [2, 3], True);  sum_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_48: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_8, primals_145, primals_146, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_146 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_208: "i64[]" = torch.ops.aten.add.Tensor(primals_641, 1)
    var_mean_40 = torch.ops.aten.var_mean.correction(convolution_48, [0, 2, 3], correction = 0, keepdim = True)
    getitem_82: "f32[1, 128, 1, 1]" = var_mean_40[0]
    getitem_83: "f32[1, 128, 1, 1]" = var_mean_40[1];  var_mean_40 = None
    add_209: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_82, 1e-05)
    rsqrt_40: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_209);  add_209 = None
    sub_48: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_48, getitem_83)
    mul_288: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_48, rsqrt_40);  sub_48 = None
    squeeze_120: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_83, [0, 2, 3]);  getitem_83 = None
    squeeze_121: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_40, [0, 2, 3]);  rsqrt_40 = None
    mul_289: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_120, 0.1)
    mul_290: "f32[128]" = torch.ops.aten.mul.Tensor(primals_639, 0.9)
    add_210: "f32[128]" = torch.ops.aten.add.Tensor(mul_289, mul_290);  mul_289 = mul_290 = None
    squeeze_122: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_82, [0, 2, 3]);  getitem_82 = None
    mul_291: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_122, 1.1428571428571428);  squeeze_122 = None
    mul_292: "f32[128]" = torch.ops.aten.mul.Tensor(mul_291, 0.1);  mul_291 = None
    mul_293: "f32[128]" = torch.ops.aten.mul.Tensor(primals_640, 0.9)
    add_211: "f32[128]" = torch.ops.aten.add.Tensor(mul_292, mul_293);  mul_292 = mul_293 = None
    unsqueeze_160: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_147, -1)
    unsqueeze_161: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_160, -1);  unsqueeze_160 = None
    mul_294: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_288, unsqueeze_161);  mul_288 = unsqueeze_161 = None
    unsqueeze_162: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_148, -1);  primals_148 = None
    unsqueeze_163: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_162, -1);  unsqueeze_162 = None
    add_212: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_294, unsqueeze_163);  mul_294 = unsqueeze_163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_37: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_212);  add_212 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_49: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_37, primals_149, primals_150, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_150 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_50: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_49, [8, 1, 2, -1]);  convolution_49 = None
    permute_8: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_50, [0, 2, 1, 3]);  view_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_8: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_8, [1], True)
    sub_49: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_8, amax_8);  permute_8 = amax_8 = None
    exp_8: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_49);  sub_49 = None
    sum_26: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_8, [1], True)
    div_8: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_8, sum_26);  exp_8 = sum_26 = None
    alias_46: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_8)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_51: "f32[8, 512]" = torch.ops.aten.view.default(div_8, [8, -1]);  div_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_52: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_51, [8, -1, 1, 1]);  view_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_53: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_52, [8, 2, 256, 1, 1]);  view_52 = None
    mul_295: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_49, view_53)
    sum_27: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_295, [1]);  mul_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_50: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_27, primals_151, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_213: "i64[]" = torch.ops.aten.add.Tensor(primals_644, 1)
    var_mean_41 = torch.ops.aten.var_mean.correction(convolution_50, [0, 2, 3], correction = 0, keepdim = True)
    getitem_84: "f32[1, 1024, 1, 1]" = var_mean_41[0]
    getitem_85: "f32[1, 1024, 1, 1]" = var_mean_41[1];  var_mean_41 = None
    add_214: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_84, 1e-05)
    rsqrt_41: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_214);  add_214 = None
    sub_50: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_50, getitem_85)
    mul_296: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_50, rsqrt_41);  sub_50 = None
    squeeze_123: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_85, [0, 2, 3]);  getitem_85 = None
    squeeze_124: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_41, [0, 2, 3]);  rsqrt_41 = None
    mul_297: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_123, 0.1)
    mul_298: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_642, 0.9)
    add_215: "f32[1024]" = torch.ops.aten.add.Tensor(mul_297, mul_298);  mul_297 = mul_298 = None
    squeeze_125: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_84, [0, 2, 3]);  getitem_84 = None
    mul_299: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_125, 1.0004885197850513);  squeeze_125 = None
    mul_300: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_299, 0.1);  mul_299 = None
    mul_301: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_643, 0.9)
    add_216: "f32[1024]" = torch.ops.aten.add.Tensor(mul_300, mul_301);  mul_300 = mul_301 = None
    unsqueeze_164: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_152, -1)
    unsqueeze_165: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_164, -1);  unsqueeze_164 = None
    mul_302: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_296, unsqueeze_165);  mul_296 = unsqueeze_165 = None
    unsqueeze_166: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_153, -1);  primals_153 = None
    unsqueeze_167: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_166, -1);  unsqueeze_166 = None
    add_217: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_302, unsqueeze_167);  mul_302 = unsqueeze_167 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_218: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_217, relu_34);  add_217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_38: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_218);  add_218 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_51: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_38, primals_154, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_219: "i64[]" = torch.ops.aten.add.Tensor(primals_647, 1)
    var_mean_42 = torch.ops.aten.var_mean.correction(convolution_51, [0, 2, 3], correction = 0, keepdim = True)
    getitem_86: "f32[1, 256, 1, 1]" = var_mean_42[0]
    getitem_87: "f32[1, 256, 1, 1]" = var_mean_42[1];  var_mean_42 = None
    add_220: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_86, 1e-05)
    rsqrt_42: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_220);  add_220 = None
    sub_51: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_51, getitem_87)
    mul_303: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_51, rsqrt_42);  sub_51 = None
    squeeze_126: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_87, [0, 2, 3]);  getitem_87 = None
    squeeze_127: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_42, [0, 2, 3]);  rsqrt_42 = None
    mul_304: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_126, 0.1)
    mul_305: "f32[256]" = torch.ops.aten.mul.Tensor(primals_645, 0.9)
    add_221: "f32[256]" = torch.ops.aten.add.Tensor(mul_304, mul_305);  mul_304 = mul_305 = None
    squeeze_128: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_86, [0, 2, 3]);  getitem_86 = None
    mul_306: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_128, 1.0004885197850513);  squeeze_128 = None
    mul_307: "f32[256]" = torch.ops.aten.mul.Tensor(mul_306, 0.1);  mul_306 = None
    mul_308: "f32[256]" = torch.ops.aten.mul.Tensor(primals_646, 0.9)
    add_222: "f32[256]" = torch.ops.aten.add.Tensor(mul_307, mul_308);  mul_307 = mul_308 = None
    unsqueeze_168: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_155, -1)
    unsqueeze_169: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_168, -1);  unsqueeze_168 = None
    mul_309: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_303, unsqueeze_169);  mul_303 = unsqueeze_169 = None
    unsqueeze_170: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_156, -1);  primals_156 = None
    unsqueeze_171: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_170, -1);  unsqueeze_170 = None
    add_223: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_309, unsqueeze_171);  mul_309 = unsqueeze_171 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_39: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_223);  add_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_52: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_39, primals_157, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_224: "i64[]" = torch.ops.aten.add.Tensor(primals_650, 1)
    var_mean_43 = torch.ops.aten.var_mean.correction(convolution_52, [0, 2, 3], correction = 0, keepdim = True)
    getitem_88: "f32[1, 512, 1, 1]" = var_mean_43[0]
    getitem_89: "f32[1, 512, 1, 1]" = var_mean_43[1];  var_mean_43 = None
    add_225: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_88, 1e-05)
    rsqrt_43: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_225);  add_225 = None
    sub_52: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_52, getitem_89)
    mul_310: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_52, rsqrt_43);  sub_52 = None
    squeeze_129: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_89, [0, 2, 3]);  getitem_89 = None
    squeeze_130: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_43, [0, 2, 3]);  rsqrt_43 = None
    mul_311: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_129, 0.1)
    mul_312: "f32[512]" = torch.ops.aten.mul.Tensor(primals_648, 0.9)
    add_226: "f32[512]" = torch.ops.aten.add.Tensor(mul_311, mul_312);  mul_311 = mul_312 = None
    squeeze_131: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_88, [0, 2, 3]);  getitem_88 = None
    mul_313: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_131, 1.0004885197850513);  squeeze_131 = None
    mul_314: "f32[512]" = torch.ops.aten.mul.Tensor(mul_313, 0.1);  mul_313 = None
    mul_315: "f32[512]" = torch.ops.aten.mul.Tensor(primals_649, 0.9)
    add_227: "f32[512]" = torch.ops.aten.add.Tensor(mul_314, mul_315);  mul_314 = mul_315 = None
    unsqueeze_172: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_158, -1)
    unsqueeze_173: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_172, -1);  unsqueeze_172 = None
    mul_316: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_310, unsqueeze_173);  mul_310 = unsqueeze_173 = None
    unsqueeze_174: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_159, -1);  primals_159 = None
    unsqueeze_175: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_174, -1);  unsqueeze_174 = None
    add_228: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_316, unsqueeze_175);  mul_316 = unsqueeze_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_40: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_228);  add_228 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_55: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_40, [8, 2, 256, 16, 16])
    sum_28: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_55, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_9: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_28, [2, 3], True);  sum_28 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_53: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_9, primals_160, primals_161, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_161 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_229: "i64[]" = torch.ops.aten.add.Tensor(primals_653, 1)
    var_mean_44 = torch.ops.aten.var_mean.correction(convolution_53, [0, 2, 3], correction = 0, keepdim = True)
    getitem_90: "f32[1, 128, 1, 1]" = var_mean_44[0]
    getitem_91: "f32[1, 128, 1, 1]" = var_mean_44[1];  var_mean_44 = None
    add_230: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_90, 1e-05)
    rsqrt_44: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_230);  add_230 = None
    sub_53: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_53, getitem_91)
    mul_317: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_53, rsqrt_44);  sub_53 = None
    squeeze_132: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_91, [0, 2, 3]);  getitem_91 = None
    squeeze_133: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_44, [0, 2, 3]);  rsqrt_44 = None
    mul_318: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_132, 0.1)
    mul_319: "f32[128]" = torch.ops.aten.mul.Tensor(primals_651, 0.9)
    add_231: "f32[128]" = torch.ops.aten.add.Tensor(mul_318, mul_319);  mul_318 = mul_319 = None
    squeeze_134: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_90, [0, 2, 3]);  getitem_90 = None
    mul_320: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_134, 1.1428571428571428);  squeeze_134 = None
    mul_321: "f32[128]" = torch.ops.aten.mul.Tensor(mul_320, 0.1);  mul_320 = None
    mul_322: "f32[128]" = torch.ops.aten.mul.Tensor(primals_652, 0.9)
    add_232: "f32[128]" = torch.ops.aten.add.Tensor(mul_321, mul_322);  mul_321 = mul_322 = None
    unsqueeze_176: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_162, -1)
    unsqueeze_177: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_176, -1);  unsqueeze_176 = None
    mul_323: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_317, unsqueeze_177);  mul_317 = unsqueeze_177 = None
    unsqueeze_178: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_163, -1);  primals_163 = None
    unsqueeze_179: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_178, -1);  unsqueeze_178 = None
    add_233: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_323, unsqueeze_179);  mul_323 = unsqueeze_179 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_41: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_233);  add_233 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_54: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_41, primals_164, primals_165, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_56: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_54, [8, 1, 2, -1]);  convolution_54 = None
    permute_9: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_56, [0, 2, 1, 3]);  view_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_9: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_9, [1], True)
    sub_54: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_9, amax_9);  permute_9 = amax_9 = None
    exp_9: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_54);  sub_54 = None
    sum_29: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_9, [1], True)
    div_9: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_9, sum_29);  exp_9 = sum_29 = None
    alias_51: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_9)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_57: "f32[8, 512]" = torch.ops.aten.view.default(div_9, [8, -1]);  div_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_58: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_57, [8, -1, 1, 1]);  view_57 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_59: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_58, [8, 2, 256, 1, 1]);  view_58 = None
    mul_324: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_55, view_59)
    sum_30: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_324, [1]);  mul_324 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_55: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_30, primals_166, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_234: "i64[]" = torch.ops.aten.add.Tensor(primals_656, 1)
    var_mean_45 = torch.ops.aten.var_mean.correction(convolution_55, [0, 2, 3], correction = 0, keepdim = True)
    getitem_92: "f32[1, 1024, 1, 1]" = var_mean_45[0]
    getitem_93: "f32[1, 1024, 1, 1]" = var_mean_45[1];  var_mean_45 = None
    add_235: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_92, 1e-05)
    rsqrt_45: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_235);  add_235 = None
    sub_55: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_55, getitem_93)
    mul_325: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_55, rsqrt_45);  sub_55 = None
    squeeze_135: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_93, [0, 2, 3]);  getitem_93 = None
    squeeze_136: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_45, [0, 2, 3]);  rsqrt_45 = None
    mul_326: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_135, 0.1)
    mul_327: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_654, 0.9)
    add_236: "f32[1024]" = torch.ops.aten.add.Tensor(mul_326, mul_327);  mul_326 = mul_327 = None
    squeeze_137: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_92, [0, 2, 3]);  getitem_92 = None
    mul_328: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_137, 1.0004885197850513);  squeeze_137 = None
    mul_329: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_328, 0.1);  mul_328 = None
    mul_330: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_655, 0.9)
    add_237: "f32[1024]" = torch.ops.aten.add.Tensor(mul_329, mul_330);  mul_329 = mul_330 = None
    unsqueeze_180: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_167, -1)
    unsqueeze_181: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_180, -1);  unsqueeze_180 = None
    mul_331: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_325, unsqueeze_181);  mul_325 = unsqueeze_181 = None
    unsqueeze_182: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_168, -1);  primals_168 = None
    unsqueeze_183: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_182, -1);  unsqueeze_182 = None
    add_238: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_331, unsqueeze_183);  mul_331 = unsqueeze_183 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_239: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_238, relu_38);  add_238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_42: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_239);  add_239 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_56: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_42, primals_169, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_240: "i64[]" = torch.ops.aten.add.Tensor(primals_659, 1)
    var_mean_46 = torch.ops.aten.var_mean.correction(convolution_56, [0, 2, 3], correction = 0, keepdim = True)
    getitem_94: "f32[1, 256, 1, 1]" = var_mean_46[0]
    getitem_95: "f32[1, 256, 1, 1]" = var_mean_46[1];  var_mean_46 = None
    add_241: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_94, 1e-05)
    rsqrt_46: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_241);  add_241 = None
    sub_56: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_56, getitem_95)
    mul_332: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_56, rsqrt_46);  sub_56 = None
    squeeze_138: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_95, [0, 2, 3]);  getitem_95 = None
    squeeze_139: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_46, [0, 2, 3]);  rsqrt_46 = None
    mul_333: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_138, 0.1)
    mul_334: "f32[256]" = torch.ops.aten.mul.Tensor(primals_657, 0.9)
    add_242: "f32[256]" = torch.ops.aten.add.Tensor(mul_333, mul_334);  mul_333 = mul_334 = None
    squeeze_140: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_94, [0, 2, 3]);  getitem_94 = None
    mul_335: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_140, 1.0004885197850513);  squeeze_140 = None
    mul_336: "f32[256]" = torch.ops.aten.mul.Tensor(mul_335, 0.1);  mul_335 = None
    mul_337: "f32[256]" = torch.ops.aten.mul.Tensor(primals_658, 0.9)
    add_243: "f32[256]" = torch.ops.aten.add.Tensor(mul_336, mul_337);  mul_336 = mul_337 = None
    unsqueeze_184: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_170, -1)
    unsqueeze_185: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_184, -1);  unsqueeze_184 = None
    mul_338: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_332, unsqueeze_185);  mul_332 = unsqueeze_185 = None
    unsqueeze_186: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_171, -1);  primals_171 = None
    unsqueeze_187: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_186, -1);  unsqueeze_186 = None
    add_244: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_338, unsqueeze_187);  mul_338 = unsqueeze_187 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_43: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_244);  add_244 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_57: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_43, primals_172, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_245: "i64[]" = torch.ops.aten.add.Tensor(primals_662, 1)
    var_mean_47 = torch.ops.aten.var_mean.correction(convolution_57, [0, 2, 3], correction = 0, keepdim = True)
    getitem_96: "f32[1, 512, 1, 1]" = var_mean_47[0]
    getitem_97: "f32[1, 512, 1, 1]" = var_mean_47[1];  var_mean_47 = None
    add_246: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_96, 1e-05)
    rsqrt_47: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_246);  add_246 = None
    sub_57: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_57, getitem_97)
    mul_339: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_57, rsqrt_47);  sub_57 = None
    squeeze_141: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_97, [0, 2, 3]);  getitem_97 = None
    squeeze_142: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_47, [0, 2, 3]);  rsqrt_47 = None
    mul_340: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_141, 0.1)
    mul_341: "f32[512]" = torch.ops.aten.mul.Tensor(primals_660, 0.9)
    add_247: "f32[512]" = torch.ops.aten.add.Tensor(mul_340, mul_341);  mul_340 = mul_341 = None
    squeeze_143: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_96, [0, 2, 3]);  getitem_96 = None
    mul_342: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_143, 1.0004885197850513);  squeeze_143 = None
    mul_343: "f32[512]" = torch.ops.aten.mul.Tensor(mul_342, 0.1);  mul_342 = None
    mul_344: "f32[512]" = torch.ops.aten.mul.Tensor(primals_661, 0.9)
    add_248: "f32[512]" = torch.ops.aten.add.Tensor(mul_343, mul_344);  mul_343 = mul_344 = None
    unsqueeze_188: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_173, -1)
    unsqueeze_189: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_188, -1);  unsqueeze_188 = None
    mul_345: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_339, unsqueeze_189);  mul_339 = unsqueeze_189 = None
    unsqueeze_190: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_174, -1);  primals_174 = None
    unsqueeze_191: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_190, -1);  unsqueeze_190 = None
    add_249: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_345, unsqueeze_191);  mul_345 = unsqueeze_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_44: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_249);  add_249 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_61: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_44, [8, 2, 256, 16, 16])
    sum_31: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_61, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_10: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_31, [2, 3], True);  sum_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_58: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_10, primals_175, primals_176, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_250: "i64[]" = torch.ops.aten.add.Tensor(primals_665, 1)
    var_mean_48 = torch.ops.aten.var_mean.correction(convolution_58, [0, 2, 3], correction = 0, keepdim = True)
    getitem_98: "f32[1, 128, 1, 1]" = var_mean_48[0]
    getitem_99: "f32[1, 128, 1, 1]" = var_mean_48[1];  var_mean_48 = None
    add_251: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_98, 1e-05)
    rsqrt_48: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_251);  add_251 = None
    sub_58: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_58, getitem_99)
    mul_346: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_58, rsqrt_48);  sub_58 = None
    squeeze_144: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_99, [0, 2, 3]);  getitem_99 = None
    squeeze_145: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_48, [0, 2, 3]);  rsqrt_48 = None
    mul_347: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_144, 0.1)
    mul_348: "f32[128]" = torch.ops.aten.mul.Tensor(primals_663, 0.9)
    add_252: "f32[128]" = torch.ops.aten.add.Tensor(mul_347, mul_348);  mul_347 = mul_348 = None
    squeeze_146: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_98, [0, 2, 3]);  getitem_98 = None
    mul_349: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_146, 1.1428571428571428);  squeeze_146 = None
    mul_350: "f32[128]" = torch.ops.aten.mul.Tensor(mul_349, 0.1);  mul_349 = None
    mul_351: "f32[128]" = torch.ops.aten.mul.Tensor(primals_664, 0.9)
    add_253: "f32[128]" = torch.ops.aten.add.Tensor(mul_350, mul_351);  mul_350 = mul_351 = None
    unsqueeze_192: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_177, -1)
    unsqueeze_193: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_192, -1);  unsqueeze_192 = None
    mul_352: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_346, unsqueeze_193);  mul_346 = unsqueeze_193 = None
    unsqueeze_194: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_178, -1);  primals_178 = None
    unsqueeze_195: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_194, -1);  unsqueeze_194 = None
    add_254: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_352, unsqueeze_195);  mul_352 = unsqueeze_195 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_45: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_254);  add_254 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_59: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_45, primals_179, primals_180, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_180 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_62: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_59, [8, 1, 2, -1]);  convolution_59 = None
    permute_10: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_62, [0, 2, 1, 3]);  view_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_10: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_10, [1], True)
    sub_59: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_10, amax_10);  permute_10 = amax_10 = None
    exp_10: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_59);  sub_59 = None
    sum_32: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_10, [1], True)
    div_10: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_10, sum_32);  exp_10 = sum_32 = None
    alias_56: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_10)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_63: "f32[8, 512]" = torch.ops.aten.view.default(div_10, [8, -1]);  div_10 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_64: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_63, [8, -1, 1, 1]);  view_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_65: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_64, [8, 2, 256, 1, 1]);  view_64 = None
    mul_353: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_61, view_65)
    sum_33: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_353, [1]);  mul_353 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_60: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_33, primals_181, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_255: "i64[]" = torch.ops.aten.add.Tensor(primals_668, 1)
    var_mean_49 = torch.ops.aten.var_mean.correction(convolution_60, [0, 2, 3], correction = 0, keepdim = True)
    getitem_100: "f32[1, 1024, 1, 1]" = var_mean_49[0]
    getitem_101: "f32[1, 1024, 1, 1]" = var_mean_49[1];  var_mean_49 = None
    add_256: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_100, 1e-05)
    rsqrt_49: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_256);  add_256 = None
    sub_60: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_60, getitem_101)
    mul_354: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_60, rsqrt_49);  sub_60 = None
    squeeze_147: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_101, [0, 2, 3]);  getitem_101 = None
    squeeze_148: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_49, [0, 2, 3]);  rsqrt_49 = None
    mul_355: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_147, 0.1)
    mul_356: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_666, 0.9)
    add_257: "f32[1024]" = torch.ops.aten.add.Tensor(mul_355, mul_356);  mul_355 = mul_356 = None
    squeeze_149: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_100, [0, 2, 3]);  getitem_100 = None
    mul_357: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_149, 1.0004885197850513);  squeeze_149 = None
    mul_358: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_357, 0.1);  mul_357 = None
    mul_359: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_667, 0.9)
    add_258: "f32[1024]" = torch.ops.aten.add.Tensor(mul_358, mul_359);  mul_358 = mul_359 = None
    unsqueeze_196: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_182, -1)
    unsqueeze_197: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_196, -1);  unsqueeze_196 = None
    mul_360: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_354, unsqueeze_197);  mul_354 = unsqueeze_197 = None
    unsqueeze_198: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_183, -1);  primals_183 = None
    unsqueeze_199: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_198, -1);  unsqueeze_198 = None
    add_259: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_360, unsqueeze_199);  mul_360 = unsqueeze_199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_260: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_259, relu_42);  add_259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_46: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_260);  add_260 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_61: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_46, primals_184, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_261: "i64[]" = torch.ops.aten.add.Tensor(primals_671, 1)
    var_mean_50 = torch.ops.aten.var_mean.correction(convolution_61, [0, 2, 3], correction = 0, keepdim = True)
    getitem_102: "f32[1, 256, 1, 1]" = var_mean_50[0]
    getitem_103: "f32[1, 256, 1, 1]" = var_mean_50[1];  var_mean_50 = None
    add_262: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_102, 1e-05)
    rsqrt_50: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_262);  add_262 = None
    sub_61: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_61, getitem_103)
    mul_361: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_61, rsqrt_50);  sub_61 = None
    squeeze_150: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_103, [0, 2, 3]);  getitem_103 = None
    squeeze_151: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_50, [0, 2, 3]);  rsqrt_50 = None
    mul_362: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_150, 0.1)
    mul_363: "f32[256]" = torch.ops.aten.mul.Tensor(primals_669, 0.9)
    add_263: "f32[256]" = torch.ops.aten.add.Tensor(mul_362, mul_363);  mul_362 = mul_363 = None
    squeeze_152: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_102, [0, 2, 3]);  getitem_102 = None
    mul_364: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_152, 1.0004885197850513);  squeeze_152 = None
    mul_365: "f32[256]" = torch.ops.aten.mul.Tensor(mul_364, 0.1);  mul_364 = None
    mul_366: "f32[256]" = torch.ops.aten.mul.Tensor(primals_670, 0.9)
    add_264: "f32[256]" = torch.ops.aten.add.Tensor(mul_365, mul_366);  mul_365 = mul_366 = None
    unsqueeze_200: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_185, -1)
    unsqueeze_201: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_200, -1);  unsqueeze_200 = None
    mul_367: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_361, unsqueeze_201);  mul_361 = unsqueeze_201 = None
    unsqueeze_202: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_186, -1);  primals_186 = None
    unsqueeze_203: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_202, -1);  unsqueeze_202 = None
    add_265: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_367, unsqueeze_203);  mul_367 = unsqueeze_203 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_47: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_265);  add_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_62: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_47, primals_187, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_266: "i64[]" = torch.ops.aten.add.Tensor(primals_674, 1)
    var_mean_51 = torch.ops.aten.var_mean.correction(convolution_62, [0, 2, 3], correction = 0, keepdim = True)
    getitem_104: "f32[1, 512, 1, 1]" = var_mean_51[0]
    getitem_105: "f32[1, 512, 1, 1]" = var_mean_51[1];  var_mean_51 = None
    add_267: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_104, 1e-05)
    rsqrt_51: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_267);  add_267 = None
    sub_62: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_62, getitem_105)
    mul_368: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_62, rsqrt_51);  sub_62 = None
    squeeze_153: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_105, [0, 2, 3]);  getitem_105 = None
    squeeze_154: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_51, [0, 2, 3]);  rsqrt_51 = None
    mul_369: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_153, 0.1)
    mul_370: "f32[512]" = torch.ops.aten.mul.Tensor(primals_672, 0.9)
    add_268: "f32[512]" = torch.ops.aten.add.Tensor(mul_369, mul_370);  mul_369 = mul_370 = None
    squeeze_155: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_104, [0, 2, 3]);  getitem_104 = None
    mul_371: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_155, 1.0004885197850513);  squeeze_155 = None
    mul_372: "f32[512]" = torch.ops.aten.mul.Tensor(mul_371, 0.1);  mul_371 = None
    mul_373: "f32[512]" = torch.ops.aten.mul.Tensor(primals_673, 0.9)
    add_269: "f32[512]" = torch.ops.aten.add.Tensor(mul_372, mul_373);  mul_372 = mul_373 = None
    unsqueeze_204: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_188, -1)
    unsqueeze_205: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_204, -1);  unsqueeze_204 = None
    mul_374: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_368, unsqueeze_205);  mul_368 = unsqueeze_205 = None
    unsqueeze_206: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_189, -1);  primals_189 = None
    unsqueeze_207: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_206, -1);  unsqueeze_206 = None
    add_270: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_374, unsqueeze_207);  mul_374 = unsqueeze_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_48: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_270);  add_270 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_67: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_48, [8, 2, 256, 16, 16])
    sum_34: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_67, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_11: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_34, [2, 3], True);  sum_34 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_63: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_11, primals_190, primals_191, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_271: "i64[]" = torch.ops.aten.add.Tensor(primals_677, 1)
    var_mean_52 = torch.ops.aten.var_mean.correction(convolution_63, [0, 2, 3], correction = 0, keepdim = True)
    getitem_106: "f32[1, 128, 1, 1]" = var_mean_52[0]
    getitem_107: "f32[1, 128, 1, 1]" = var_mean_52[1];  var_mean_52 = None
    add_272: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_106, 1e-05)
    rsqrt_52: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_272);  add_272 = None
    sub_63: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_63, getitem_107)
    mul_375: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_63, rsqrt_52);  sub_63 = None
    squeeze_156: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_107, [0, 2, 3]);  getitem_107 = None
    squeeze_157: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_52, [0, 2, 3]);  rsqrt_52 = None
    mul_376: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_156, 0.1)
    mul_377: "f32[128]" = torch.ops.aten.mul.Tensor(primals_675, 0.9)
    add_273: "f32[128]" = torch.ops.aten.add.Tensor(mul_376, mul_377);  mul_376 = mul_377 = None
    squeeze_158: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_106, [0, 2, 3]);  getitem_106 = None
    mul_378: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_158, 1.1428571428571428);  squeeze_158 = None
    mul_379: "f32[128]" = torch.ops.aten.mul.Tensor(mul_378, 0.1);  mul_378 = None
    mul_380: "f32[128]" = torch.ops.aten.mul.Tensor(primals_676, 0.9)
    add_274: "f32[128]" = torch.ops.aten.add.Tensor(mul_379, mul_380);  mul_379 = mul_380 = None
    unsqueeze_208: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_192, -1)
    unsqueeze_209: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_208, -1);  unsqueeze_208 = None
    mul_381: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_375, unsqueeze_209);  mul_375 = unsqueeze_209 = None
    unsqueeze_210: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_193, -1);  primals_193 = None
    unsqueeze_211: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_210, -1);  unsqueeze_210 = None
    add_275: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_381, unsqueeze_211);  mul_381 = unsqueeze_211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_49: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_275);  add_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_64: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_49, primals_194, primals_195, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_195 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_68: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_64, [8, 1, 2, -1]);  convolution_64 = None
    permute_11: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_68, [0, 2, 1, 3]);  view_68 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_11: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_11, [1], True)
    sub_64: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_11, amax_11);  permute_11 = amax_11 = None
    exp_11: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_64);  sub_64 = None
    sum_35: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_11, [1], True)
    div_11: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_11, sum_35);  exp_11 = sum_35 = None
    alias_61: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_11)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_69: "f32[8, 512]" = torch.ops.aten.view.default(div_11, [8, -1]);  div_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_70: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_69, [8, -1, 1, 1]);  view_69 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_71: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_70, [8, 2, 256, 1, 1]);  view_70 = None
    mul_382: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_67, view_71)
    sum_36: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_382, [1]);  mul_382 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_65: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_36, primals_196, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_276: "i64[]" = torch.ops.aten.add.Tensor(primals_680, 1)
    var_mean_53 = torch.ops.aten.var_mean.correction(convolution_65, [0, 2, 3], correction = 0, keepdim = True)
    getitem_108: "f32[1, 1024, 1, 1]" = var_mean_53[0]
    getitem_109: "f32[1, 1024, 1, 1]" = var_mean_53[1];  var_mean_53 = None
    add_277: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_108, 1e-05)
    rsqrt_53: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_277);  add_277 = None
    sub_65: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_65, getitem_109)
    mul_383: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_65, rsqrt_53);  sub_65 = None
    squeeze_159: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_109, [0, 2, 3]);  getitem_109 = None
    squeeze_160: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_53, [0, 2, 3]);  rsqrt_53 = None
    mul_384: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_159, 0.1)
    mul_385: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_678, 0.9)
    add_278: "f32[1024]" = torch.ops.aten.add.Tensor(mul_384, mul_385);  mul_384 = mul_385 = None
    squeeze_161: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_108, [0, 2, 3]);  getitem_108 = None
    mul_386: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_161, 1.0004885197850513);  squeeze_161 = None
    mul_387: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_386, 0.1);  mul_386 = None
    mul_388: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_679, 0.9)
    add_279: "f32[1024]" = torch.ops.aten.add.Tensor(mul_387, mul_388);  mul_387 = mul_388 = None
    unsqueeze_212: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_197, -1)
    unsqueeze_213: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_212, -1);  unsqueeze_212 = None
    mul_389: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_383, unsqueeze_213);  mul_383 = unsqueeze_213 = None
    unsqueeze_214: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_198, -1);  primals_198 = None
    unsqueeze_215: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_214, -1);  unsqueeze_214 = None
    add_280: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_389, unsqueeze_215);  mul_389 = unsqueeze_215 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_281: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_280, relu_46);  add_280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_50: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_281);  add_281 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_66: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_50, primals_199, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_282: "i64[]" = torch.ops.aten.add.Tensor(primals_683, 1)
    var_mean_54 = torch.ops.aten.var_mean.correction(convolution_66, [0, 2, 3], correction = 0, keepdim = True)
    getitem_110: "f32[1, 256, 1, 1]" = var_mean_54[0]
    getitem_111: "f32[1, 256, 1, 1]" = var_mean_54[1];  var_mean_54 = None
    add_283: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_110, 1e-05)
    rsqrt_54: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_283);  add_283 = None
    sub_66: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_66, getitem_111)
    mul_390: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_66, rsqrt_54);  sub_66 = None
    squeeze_162: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_111, [0, 2, 3]);  getitem_111 = None
    squeeze_163: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_54, [0, 2, 3]);  rsqrt_54 = None
    mul_391: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_162, 0.1)
    mul_392: "f32[256]" = torch.ops.aten.mul.Tensor(primals_681, 0.9)
    add_284: "f32[256]" = torch.ops.aten.add.Tensor(mul_391, mul_392);  mul_391 = mul_392 = None
    squeeze_164: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_110, [0, 2, 3]);  getitem_110 = None
    mul_393: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_164, 1.0004885197850513);  squeeze_164 = None
    mul_394: "f32[256]" = torch.ops.aten.mul.Tensor(mul_393, 0.1);  mul_393 = None
    mul_395: "f32[256]" = torch.ops.aten.mul.Tensor(primals_682, 0.9)
    add_285: "f32[256]" = torch.ops.aten.add.Tensor(mul_394, mul_395);  mul_394 = mul_395 = None
    unsqueeze_216: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_200, -1)
    unsqueeze_217: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_216, -1);  unsqueeze_216 = None
    mul_396: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_390, unsqueeze_217);  mul_390 = unsqueeze_217 = None
    unsqueeze_218: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_201, -1);  primals_201 = None
    unsqueeze_219: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_218, -1);  unsqueeze_218 = None
    add_286: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_396, unsqueeze_219);  mul_396 = unsqueeze_219 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_51: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_286);  add_286 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_67: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_51, primals_202, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_287: "i64[]" = torch.ops.aten.add.Tensor(primals_686, 1)
    var_mean_55 = torch.ops.aten.var_mean.correction(convolution_67, [0, 2, 3], correction = 0, keepdim = True)
    getitem_112: "f32[1, 512, 1, 1]" = var_mean_55[0]
    getitem_113: "f32[1, 512, 1, 1]" = var_mean_55[1];  var_mean_55 = None
    add_288: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_112, 1e-05)
    rsqrt_55: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_288);  add_288 = None
    sub_67: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_67, getitem_113)
    mul_397: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_67, rsqrt_55);  sub_67 = None
    squeeze_165: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_113, [0, 2, 3]);  getitem_113 = None
    squeeze_166: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_55, [0, 2, 3]);  rsqrt_55 = None
    mul_398: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_165, 0.1)
    mul_399: "f32[512]" = torch.ops.aten.mul.Tensor(primals_684, 0.9)
    add_289: "f32[512]" = torch.ops.aten.add.Tensor(mul_398, mul_399);  mul_398 = mul_399 = None
    squeeze_167: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_112, [0, 2, 3]);  getitem_112 = None
    mul_400: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_167, 1.0004885197850513);  squeeze_167 = None
    mul_401: "f32[512]" = torch.ops.aten.mul.Tensor(mul_400, 0.1);  mul_400 = None
    mul_402: "f32[512]" = torch.ops.aten.mul.Tensor(primals_685, 0.9)
    add_290: "f32[512]" = torch.ops.aten.add.Tensor(mul_401, mul_402);  mul_401 = mul_402 = None
    unsqueeze_220: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_203, -1)
    unsqueeze_221: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_220, -1);  unsqueeze_220 = None
    mul_403: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_397, unsqueeze_221);  mul_397 = unsqueeze_221 = None
    unsqueeze_222: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_204, -1);  primals_204 = None
    unsqueeze_223: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_222, -1);  unsqueeze_222 = None
    add_291: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_403, unsqueeze_223);  mul_403 = unsqueeze_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_52: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_291);  add_291 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_73: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_52, [8, 2, 256, 16, 16])
    sum_37: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_73, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_12: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_37, [2, 3], True);  sum_37 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_68: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_12, primals_205, primals_206, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_206 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_292: "i64[]" = torch.ops.aten.add.Tensor(primals_689, 1)
    var_mean_56 = torch.ops.aten.var_mean.correction(convolution_68, [0, 2, 3], correction = 0, keepdim = True)
    getitem_114: "f32[1, 128, 1, 1]" = var_mean_56[0]
    getitem_115: "f32[1, 128, 1, 1]" = var_mean_56[1];  var_mean_56 = None
    add_293: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_114, 1e-05)
    rsqrt_56: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_293);  add_293 = None
    sub_68: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_68, getitem_115)
    mul_404: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_68, rsqrt_56);  sub_68 = None
    squeeze_168: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_115, [0, 2, 3]);  getitem_115 = None
    squeeze_169: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_56, [0, 2, 3]);  rsqrt_56 = None
    mul_405: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_168, 0.1)
    mul_406: "f32[128]" = torch.ops.aten.mul.Tensor(primals_687, 0.9)
    add_294: "f32[128]" = torch.ops.aten.add.Tensor(mul_405, mul_406);  mul_405 = mul_406 = None
    squeeze_170: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_114, [0, 2, 3]);  getitem_114 = None
    mul_407: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_170, 1.1428571428571428);  squeeze_170 = None
    mul_408: "f32[128]" = torch.ops.aten.mul.Tensor(mul_407, 0.1);  mul_407 = None
    mul_409: "f32[128]" = torch.ops.aten.mul.Tensor(primals_688, 0.9)
    add_295: "f32[128]" = torch.ops.aten.add.Tensor(mul_408, mul_409);  mul_408 = mul_409 = None
    unsqueeze_224: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_207, -1)
    unsqueeze_225: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_224, -1);  unsqueeze_224 = None
    mul_410: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_404, unsqueeze_225);  mul_404 = unsqueeze_225 = None
    unsqueeze_226: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_208, -1);  primals_208 = None
    unsqueeze_227: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_226, -1);  unsqueeze_226 = None
    add_296: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_410, unsqueeze_227);  mul_410 = unsqueeze_227 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_53: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_296);  add_296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_69: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_53, primals_209, primals_210, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_210 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_74: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_69, [8, 1, 2, -1]);  convolution_69 = None
    permute_12: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_74, [0, 2, 1, 3]);  view_74 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_12: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_12, [1], True)
    sub_69: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_12, amax_12);  permute_12 = amax_12 = None
    exp_12: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_69);  sub_69 = None
    sum_38: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_12, [1], True)
    div_12: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_12, sum_38);  exp_12 = sum_38 = None
    alias_66: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_12)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_75: "f32[8, 512]" = torch.ops.aten.view.default(div_12, [8, -1]);  div_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_76: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_75, [8, -1, 1, 1]);  view_75 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_77: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_76, [8, 2, 256, 1, 1]);  view_76 = None
    mul_411: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_73, view_77)
    sum_39: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_411, [1]);  mul_411 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_70: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_39, primals_211, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_297: "i64[]" = torch.ops.aten.add.Tensor(primals_692, 1)
    var_mean_57 = torch.ops.aten.var_mean.correction(convolution_70, [0, 2, 3], correction = 0, keepdim = True)
    getitem_116: "f32[1, 1024, 1, 1]" = var_mean_57[0]
    getitem_117: "f32[1, 1024, 1, 1]" = var_mean_57[1];  var_mean_57 = None
    add_298: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_116, 1e-05)
    rsqrt_57: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_298);  add_298 = None
    sub_70: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_70, getitem_117)
    mul_412: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_70, rsqrt_57);  sub_70 = None
    squeeze_171: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_117, [0, 2, 3]);  getitem_117 = None
    squeeze_172: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_57, [0, 2, 3]);  rsqrt_57 = None
    mul_413: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_171, 0.1)
    mul_414: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_690, 0.9)
    add_299: "f32[1024]" = torch.ops.aten.add.Tensor(mul_413, mul_414);  mul_413 = mul_414 = None
    squeeze_173: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_116, [0, 2, 3]);  getitem_116 = None
    mul_415: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_173, 1.0004885197850513);  squeeze_173 = None
    mul_416: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_415, 0.1);  mul_415 = None
    mul_417: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_691, 0.9)
    add_300: "f32[1024]" = torch.ops.aten.add.Tensor(mul_416, mul_417);  mul_416 = mul_417 = None
    unsqueeze_228: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_212, -1)
    unsqueeze_229: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_228, -1);  unsqueeze_228 = None
    mul_418: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_412, unsqueeze_229);  mul_412 = unsqueeze_229 = None
    unsqueeze_230: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_213, -1);  primals_213 = None
    unsqueeze_231: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_230, -1);  unsqueeze_230 = None
    add_301: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_418, unsqueeze_231);  mul_418 = unsqueeze_231 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_302: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_301, relu_50);  add_301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_54: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_302);  add_302 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_71: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_54, primals_214, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_303: "i64[]" = torch.ops.aten.add.Tensor(primals_695, 1)
    var_mean_58 = torch.ops.aten.var_mean.correction(convolution_71, [0, 2, 3], correction = 0, keepdim = True)
    getitem_118: "f32[1, 256, 1, 1]" = var_mean_58[0]
    getitem_119: "f32[1, 256, 1, 1]" = var_mean_58[1];  var_mean_58 = None
    add_304: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_118, 1e-05)
    rsqrt_58: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_304);  add_304 = None
    sub_71: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_71, getitem_119)
    mul_419: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_71, rsqrt_58);  sub_71 = None
    squeeze_174: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_119, [0, 2, 3]);  getitem_119 = None
    squeeze_175: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_58, [0, 2, 3]);  rsqrt_58 = None
    mul_420: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_174, 0.1)
    mul_421: "f32[256]" = torch.ops.aten.mul.Tensor(primals_693, 0.9)
    add_305: "f32[256]" = torch.ops.aten.add.Tensor(mul_420, mul_421);  mul_420 = mul_421 = None
    squeeze_176: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_118, [0, 2, 3]);  getitem_118 = None
    mul_422: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_176, 1.0004885197850513);  squeeze_176 = None
    mul_423: "f32[256]" = torch.ops.aten.mul.Tensor(mul_422, 0.1);  mul_422 = None
    mul_424: "f32[256]" = torch.ops.aten.mul.Tensor(primals_694, 0.9)
    add_306: "f32[256]" = torch.ops.aten.add.Tensor(mul_423, mul_424);  mul_423 = mul_424 = None
    unsqueeze_232: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_215, -1)
    unsqueeze_233: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_232, -1);  unsqueeze_232 = None
    mul_425: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_419, unsqueeze_233);  mul_419 = unsqueeze_233 = None
    unsqueeze_234: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_216, -1);  primals_216 = None
    unsqueeze_235: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_234, -1);  unsqueeze_234 = None
    add_307: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_425, unsqueeze_235);  mul_425 = unsqueeze_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_55: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_307);  add_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_72: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_55, primals_217, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_308: "i64[]" = torch.ops.aten.add.Tensor(primals_698, 1)
    var_mean_59 = torch.ops.aten.var_mean.correction(convolution_72, [0, 2, 3], correction = 0, keepdim = True)
    getitem_120: "f32[1, 512, 1, 1]" = var_mean_59[0]
    getitem_121: "f32[1, 512, 1, 1]" = var_mean_59[1];  var_mean_59 = None
    add_309: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_120, 1e-05)
    rsqrt_59: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_309);  add_309 = None
    sub_72: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_72, getitem_121)
    mul_426: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_72, rsqrt_59);  sub_72 = None
    squeeze_177: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_121, [0, 2, 3]);  getitem_121 = None
    squeeze_178: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_59, [0, 2, 3]);  rsqrt_59 = None
    mul_427: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_177, 0.1)
    mul_428: "f32[512]" = torch.ops.aten.mul.Tensor(primals_696, 0.9)
    add_310: "f32[512]" = torch.ops.aten.add.Tensor(mul_427, mul_428);  mul_427 = mul_428 = None
    squeeze_179: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_120, [0, 2, 3]);  getitem_120 = None
    mul_429: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_179, 1.0004885197850513);  squeeze_179 = None
    mul_430: "f32[512]" = torch.ops.aten.mul.Tensor(mul_429, 0.1);  mul_429 = None
    mul_431: "f32[512]" = torch.ops.aten.mul.Tensor(primals_697, 0.9)
    add_311: "f32[512]" = torch.ops.aten.add.Tensor(mul_430, mul_431);  mul_430 = mul_431 = None
    unsqueeze_236: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_218, -1)
    unsqueeze_237: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_236, -1);  unsqueeze_236 = None
    mul_432: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_426, unsqueeze_237);  mul_426 = unsqueeze_237 = None
    unsqueeze_238: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_219, -1);  primals_219 = None
    unsqueeze_239: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_238, -1);  unsqueeze_238 = None
    add_312: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_432, unsqueeze_239);  mul_432 = unsqueeze_239 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_56: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_312);  add_312 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_79: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_56, [8, 2, 256, 16, 16])
    sum_40: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_79, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_13: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_40, [2, 3], True);  sum_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_73: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_13, primals_220, primals_221, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_221 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_313: "i64[]" = torch.ops.aten.add.Tensor(primals_701, 1)
    var_mean_60 = torch.ops.aten.var_mean.correction(convolution_73, [0, 2, 3], correction = 0, keepdim = True)
    getitem_122: "f32[1, 128, 1, 1]" = var_mean_60[0]
    getitem_123: "f32[1, 128, 1, 1]" = var_mean_60[1];  var_mean_60 = None
    add_314: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_122, 1e-05)
    rsqrt_60: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_314);  add_314 = None
    sub_73: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_73, getitem_123)
    mul_433: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_73, rsqrt_60);  sub_73 = None
    squeeze_180: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_123, [0, 2, 3]);  getitem_123 = None
    squeeze_181: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_60, [0, 2, 3]);  rsqrt_60 = None
    mul_434: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_180, 0.1)
    mul_435: "f32[128]" = torch.ops.aten.mul.Tensor(primals_699, 0.9)
    add_315: "f32[128]" = torch.ops.aten.add.Tensor(mul_434, mul_435);  mul_434 = mul_435 = None
    squeeze_182: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_122, [0, 2, 3]);  getitem_122 = None
    mul_436: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_182, 1.1428571428571428);  squeeze_182 = None
    mul_437: "f32[128]" = torch.ops.aten.mul.Tensor(mul_436, 0.1);  mul_436 = None
    mul_438: "f32[128]" = torch.ops.aten.mul.Tensor(primals_700, 0.9)
    add_316: "f32[128]" = torch.ops.aten.add.Tensor(mul_437, mul_438);  mul_437 = mul_438 = None
    unsqueeze_240: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_222, -1)
    unsqueeze_241: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_240, -1);  unsqueeze_240 = None
    mul_439: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_433, unsqueeze_241);  mul_433 = unsqueeze_241 = None
    unsqueeze_242: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_223, -1);  primals_223 = None
    unsqueeze_243: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_242, -1);  unsqueeze_242 = None
    add_317: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_439, unsqueeze_243);  mul_439 = unsqueeze_243 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_57: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_317);  add_317 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_74: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_57, primals_224, primals_225, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_225 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_80: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_74, [8, 1, 2, -1]);  convolution_74 = None
    permute_13: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_80, [0, 2, 1, 3]);  view_80 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_13: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_13, [1], True)
    sub_74: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_13, amax_13);  permute_13 = amax_13 = None
    exp_13: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_74);  sub_74 = None
    sum_41: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_13, [1], True)
    div_13: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_13, sum_41);  exp_13 = sum_41 = None
    alias_71: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_13)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_81: "f32[8, 512]" = torch.ops.aten.view.default(div_13, [8, -1]);  div_13 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_82: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_81, [8, -1, 1, 1]);  view_81 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_83: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_82, [8, 2, 256, 1, 1]);  view_82 = None
    mul_440: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_79, view_83)
    sum_42: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_440, [1]);  mul_440 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_75: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_42, primals_226, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_318: "i64[]" = torch.ops.aten.add.Tensor(primals_704, 1)
    var_mean_61 = torch.ops.aten.var_mean.correction(convolution_75, [0, 2, 3], correction = 0, keepdim = True)
    getitem_124: "f32[1, 1024, 1, 1]" = var_mean_61[0]
    getitem_125: "f32[1, 1024, 1, 1]" = var_mean_61[1];  var_mean_61 = None
    add_319: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_124, 1e-05)
    rsqrt_61: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_319);  add_319 = None
    sub_75: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_75, getitem_125)
    mul_441: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_75, rsqrt_61);  sub_75 = None
    squeeze_183: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_125, [0, 2, 3]);  getitem_125 = None
    squeeze_184: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_61, [0, 2, 3]);  rsqrt_61 = None
    mul_442: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_183, 0.1)
    mul_443: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_702, 0.9)
    add_320: "f32[1024]" = torch.ops.aten.add.Tensor(mul_442, mul_443);  mul_442 = mul_443 = None
    squeeze_185: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_124, [0, 2, 3]);  getitem_124 = None
    mul_444: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_185, 1.0004885197850513);  squeeze_185 = None
    mul_445: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_444, 0.1);  mul_444 = None
    mul_446: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_703, 0.9)
    add_321: "f32[1024]" = torch.ops.aten.add.Tensor(mul_445, mul_446);  mul_445 = mul_446 = None
    unsqueeze_244: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_227, -1)
    unsqueeze_245: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_244, -1);  unsqueeze_244 = None
    mul_447: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_441, unsqueeze_245);  mul_441 = unsqueeze_245 = None
    unsqueeze_246: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_228, -1);  primals_228 = None
    unsqueeze_247: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_246, -1);  unsqueeze_246 = None
    add_322: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_447, unsqueeze_247);  mul_447 = unsqueeze_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_323: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_322, relu_54);  add_322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_58: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_323);  add_323 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_76: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_58, primals_229, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_324: "i64[]" = torch.ops.aten.add.Tensor(primals_707, 1)
    var_mean_62 = torch.ops.aten.var_mean.correction(convolution_76, [0, 2, 3], correction = 0, keepdim = True)
    getitem_126: "f32[1, 256, 1, 1]" = var_mean_62[0]
    getitem_127: "f32[1, 256, 1, 1]" = var_mean_62[1];  var_mean_62 = None
    add_325: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_126, 1e-05)
    rsqrt_62: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_325);  add_325 = None
    sub_76: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_76, getitem_127)
    mul_448: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_76, rsqrt_62);  sub_76 = None
    squeeze_186: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_127, [0, 2, 3]);  getitem_127 = None
    squeeze_187: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_62, [0, 2, 3]);  rsqrt_62 = None
    mul_449: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_186, 0.1)
    mul_450: "f32[256]" = torch.ops.aten.mul.Tensor(primals_705, 0.9)
    add_326: "f32[256]" = torch.ops.aten.add.Tensor(mul_449, mul_450);  mul_449 = mul_450 = None
    squeeze_188: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_126, [0, 2, 3]);  getitem_126 = None
    mul_451: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_188, 1.0004885197850513);  squeeze_188 = None
    mul_452: "f32[256]" = torch.ops.aten.mul.Tensor(mul_451, 0.1);  mul_451 = None
    mul_453: "f32[256]" = torch.ops.aten.mul.Tensor(primals_706, 0.9)
    add_327: "f32[256]" = torch.ops.aten.add.Tensor(mul_452, mul_453);  mul_452 = mul_453 = None
    unsqueeze_248: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_230, -1)
    unsqueeze_249: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_248, -1);  unsqueeze_248 = None
    mul_454: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_448, unsqueeze_249);  mul_448 = unsqueeze_249 = None
    unsqueeze_250: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_231, -1);  primals_231 = None
    unsqueeze_251: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_250, -1);  unsqueeze_250 = None
    add_328: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_454, unsqueeze_251);  mul_454 = unsqueeze_251 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_59: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_328);  add_328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_77: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_59, primals_232, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_329: "i64[]" = torch.ops.aten.add.Tensor(primals_710, 1)
    var_mean_63 = torch.ops.aten.var_mean.correction(convolution_77, [0, 2, 3], correction = 0, keepdim = True)
    getitem_128: "f32[1, 512, 1, 1]" = var_mean_63[0]
    getitem_129: "f32[1, 512, 1, 1]" = var_mean_63[1];  var_mean_63 = None
    add_330: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_128, 1e-05)
    rsqrt_63: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_330);  add_330 = None
    sub_77: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_77, getitem_129)
    mul_455: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_77, rsqrt_63);  sub_77 = None
    squeeze_189: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_129, [0, 2, 3]);  getitem_129 = None
    squeeze_190: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_63, [0, 2, 3]);  rsqrt_63 = None
    mul_456: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_189, 0.1)
    mul_457: "f32[512]" = torch.ops.aten.mul.Tensor(primals_708, 0.9)
    add_331: "f32[512]" = torch.ops.aten.add.Tensor(mul_456, mul_457);  mul_456 = mul_457 = None
    squeeze_191: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_128, [0, 2, 3]);  getitem_128 = None
    mul_458: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_191, 1.0004885197850513);  squeeze_191 = None
    mul_459: "f32[512]" = torch.ops.aten.mul.Tensor(mul_458, 0.1);  mul_458 = None
    mul_460: "f32[512]" = torch.ops.aten.mul.Tensor(primals_709, 0.9)
    add_332: "f32[512]" = torch.ops.aten.add.Tensor(mul_459, mul_460);  mul_459 = mul_460 = None
    unsqueeze_252: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_233, -1)
    unsqueeze_253: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_252, -1);  unsqueeze_252 = None
    mul_461: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_455, unsqueeze_253);  mul_455 = unsqueeze_253 = None
    unsqueeze_254: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_234, -1);  primals_234 = None
    unsqueeze_255: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_254, -1);  unsqueeze_254 = None
    add_333: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_461, unsqueeze_255);  mul_461 = unsqueeze_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_60: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_333);  add_333 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_85: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_60, [8, 2, 256, 16, 16])
    sum_43: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_85, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_14: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_43, [2, 3], True);  sum_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_78: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_14, primals_235, primals_236, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_236 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_334: "i64[]" = torch.ops.aten.add.Tensor(primals_713, 1)
    var_mean_64 = torch.ops.aten.var_mean.correction(convolution_78, [0, 2, 3], correction = 0, keepdim = True)
    getitem_130: "f32[1, 128, 1, 1]" = var_mean_64[0]
    getitem_131: "f32[1, 128, 1, 1]" = var_mean_64[1];  var_mean_64 = None
    add_335: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_130, 1e-05)
    rsqrt_64: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_335);  add_335 = None
    sub_78: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_78, getitem_131)
    mul_462: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_78, rsqrt_64);  sub_78 = None
    squeeze_192: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_131, [0, 2, 3]);  getitem_131 = None
    squeeze_193: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_64, [0, 2, 3]);  rsqrt_64 = None
    mul_463: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_192, 0.1)
    mul_464: "f32[128]" = torch.ops.aten.mul.Tensor(primals_711, 0.9)
    add_336: "f32[128]" = torch.ops.aten.add.Tensor(mul_463, mul_464);  mul_463 = mul_464 = None
    squeeze_194: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_130, [0, 2, 3]);  getitem_130 = None
    mul_465: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_194, 1.1428571428571428);  squeeze_194 = None
    mul_466: "f32[128]" = torch.ops.aten.mul.Tensor(mul_465, 0.1);  mul_465 = None
    mul_467: "f32[128]" = torch.ops.aten.mul.Tensor(primals_712, 0.9)
    add_337: "f32[128]" = torch.ops.aten.add.Tensor(mul_466, mul_467);  mul_466 = mul_467 = None
    unsqueeze_256: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_237, -1)
    unsqueeze_257: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_256, -1);  unsqueeze_256 = None
    mul_468: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_462, unsqueeze_257);  mul_462 = unsqueeze_257 = None
    unsqueeze_258: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_238, -1);  primals_238 = None
    unsqueeze_259: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_258, -1);  unsqueeze_258 = None
    add_338: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_468, unsqueeze_259);  mul_468 = unsqueeze_259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_61: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_338);  add_338 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_79: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_61, primals_239, primals_240, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_240 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_86: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_79, [8, 1, 2, -1]);  convolution_79 = None
    permute_14: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_86, [0, 2, 1, 3]);  view_86 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_14: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_14, [1], True)
    sub_79: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_14, amax_14);  permute_14 = amax_14 = None
    exp_14: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_79);  sub_79 = None
    sum_44: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_14, [1], True)
    div_14: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_14, sum_44);  exp_14 = sum_44 = None
    alias_76: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_14)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_87: "f32[8, 512]" = torch.ops.aten.view.default(div_14, [8, -1]);  div_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_88: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_87, [8, -1, 1, 1]);  view_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_89: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_88, [8, 2, 256, 1, 1]);  view_88 = None
    mul_469: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_85, view_89)
    sum_45: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_469, [1]);  mul_469 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_80: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_45, primals_241, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_339: "i64[]" = torch.ops.aten.add.Tensor(primals_716, 1)
    var_mean_65 = torch.ops.aten.var_mean.correction(convolution_80, [0, 2, 3], correction = 0, keepdim = True)
    getitem_132: "f32[1, 1024, 1, 1]" = var_mean_65[0]
    getitem_133: "f32[1, 1024, 1, 1]" = var_mean_65[1];  var_mean_65 = None
    add_340: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_132, 1e-05)
    rsqrt_65: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_340);  add_340 = None
    sub_80: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_80, getitem_133)
    mul_470: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_80, rsqrt_65);  sub_80 = None
    squeeze_195: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_133, [0, 2, 3]);  getitem_133 = None
    squeeze_196: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_65, [0, 2, 3]);  rsqrt_65 = None
    mul_471: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_195, 0.1)
    mul_472: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_714, 0.9)
    add_341: "f32[1024]" = torch.ops.aten.add.Tensor(mul_471, mul_472);  mul_471 = mul_472 = None
    squeeze_197: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_132, [0, 2, 3]);  getitem_132 = None
    mul_473: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_197, 1.0004885197850513);  squeeze_197 = None
    mul_474: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_473, 0.1);  mul_473 = None
    mul_475: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_715, 0.9)
    add_342: "f32[1024]" = torch.ops.aten.add.Tensor(mul_474, mul_475);  mul_474 = mul_475 = None
    unsqueeze_260: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_242, -1)
    unsqueeze_261: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_260, -1);  unsqueeze_260 = None
    mul_476: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_470, unsqueeze_261);  mul_470 = unsqueeze_261 = None
    unsqueeze_262: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_243, -1);  primals_243 = None
    unsqueeze_263: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_262, -1);  unsqueeze_262 = None
    add_343: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_476, unsqueeze_263);  mul_476 = unsqueeze_263 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_344: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_343, relu_58);  add_343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_62: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_344);  add_344 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_81: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_62, primals_244, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_345: "i64[]" = torch.ops.aten.add.Tensor(primals_719, 1)
    var_mean_66 = torch.ops.aten.var_mean.correction(convolution_81, [0, 2, 3], correction = 0, keepdim = True)
    getitem_134: "f32[1, 256, 1, 1]" = var_mean_66[0]
    getitem_135: "f32[1, 256, 1, 1]" = var_mean_66[1];  var_mean_66 = None
    add_346: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_134, 1e-05)
    rsqrt_66: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_346);  add_346 = None
    sub_81: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_81, getitem_135)
    mul_477: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_81, rsqrt_66);  sub_81 = None
    squeeze_198: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_135, [0, 2, 3]);  getitem_135 = None
    squeeze_199: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_66, [0, 2, 3]);  rsqrt_66 = None
    mul_478: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_198, 0.1)
    mul_479: "f32[256]" = torch.ops.aten.mul.Tensor(primals_717, 0.9)
    add_347: "f32[256]" = torch.ops.aten.add.Tensor(mul_478, mul_479);  mul_478 = mul_479 = None
    squeeze_200: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_134, [0, 2, 3]);  getitem_134 = None
    mul_480: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_200, 1.0004885197850513);  squeeze_200 = None
    mul_481: "f32[256]" = torch.ops.aten.mul.Tensor(mul_480, 0.1);  mul_480 = None
    mul_482: "f32[256]" = torch.ops.aten.mul.Tensor(primals_718, 0.9)
    add_348: "f32[256]" = torch.ops.aten.add.Tensor(mul_481, mul_482);  mul_481 = mul_482 = None
    unsqueeze_264: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_245, -1)
    unsqueeze_265: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_264, -1);  unsqueeze_264 = None
    mul_483: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_477, unsqueeze_265);  mul_477 = unsqueeze_265 = None
    unsqueeze_266: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_246, -1);  primals_246 = None
    unsqueeze_267: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_266, -1);  unsqueeze_266 = None
    add_349: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_483, unsqueeze_267);  mul_483 = unsqueeze_267 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_63: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_349);  add_349 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_82: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_63, primals_247, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_350: "i64[]" = torch.ops.aten.add.Tensor(primals_722, 1)
    var_mean_67 = torch.ops.aten.var_mean.correction(convolution_82, [0, 2, 3], correction = 0, keepdim = True)
    getitem_136: "f32[1, 512, 1, 1]" = var_mean_67[0]
    getitem_137: "f32[1, 512, 1, 1]" = var_mean_67[1];  var_mean_67 = None
    add_351: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_136, 1e-05)
    rsqrt_67: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_351);  add_351 = None
    sub_82: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_82, getitem_137)
    mul_484: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_82, rsqrt_67);  sub_82 = None
    squeeze_201: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_137, [0, 2, 3]);  getitem_137 = None
    squeeze_202: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_67, [0, 2, 3]);  rsqrt_67 = None
    mul_485: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_201, 0.1)
    mul_486: "f32[512]" = torch.ops.aten.mul.Tensor(primals_720, 0.9)
    add_352: "f32[512]" = torch.ops.aten.add.Tensor(mul_485, mul_486);  mul_485 = mul_486 = None
    squeeze_203: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_136, [0, 2, 3]);  getitem_136 = None
    mul_487: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_203, 1.0004885197850513);  squeeze_203 = None
    mul_488: "f32[512]" = torch.ops.aten.mul.Tensor(mul_487, 0.1);  mul_487 = None
    mul_489: "f32[512]" = torch.ops.aten.mul.Tensor(primals_721, 0.9)
    add_353: "f32[512]" = torch.ops.aten.add.Tensor(mul_488, mul_489);  mul_488 = mul_489 = None
    unsqueeze_268: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_248, -1)
    unsqueeze_269: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_268, -1);  unsqueeze_268 = None
    mul_490: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_484, unsqueeze_269);  mul_484 = unsqueeze_269 = None
    unsqueeze_270: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_249, -1);  primals_249 = None
    unsqueeze_271: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_270, -1);  unsqueeze_270 = None
    add_354: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_490, unsqueeze_271);  mul_490 = unsqueeze_271 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_64: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_354);  add_354 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_91: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_64, [8, 2, 256, 16, 16])
    sum_46: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_91, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_15: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_46, [2, 3], True);  sum_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_83: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_15, primals_250, primals_251, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_251 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_355: "i64[]" = torch.ops.aten.add.Tensor(primals_725, 1)
    var_mean_68 = torch.ops.aten.var_mean.correction(convolution_83, [0, 2, 3], correction = 0, keepdim = True)
    getitem_138: "f32[1, 128, 1, 1]" = var_mean_68[0]
    getitem_139: "f32[1, 128, 1, 1]" = var_mean_68[1];  var_mean_68 = None
    add_356: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_138, 1e-05)
    rsqrt_68: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_356);  add_356 = None
    sub_83: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_83, getitem_139)
    mul_491: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_83, rsqrt_68);  sub_83 = None
    squeeze_204: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_139, [0, 2, 3]);  getitem_139 = None
    squeeze_205: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_68, [0, 2, 3]);  rsqrt_68 = None
    mul_492: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_204, 0.1)
    mul_493: "f32[128]" = torch.ops.aten.mul.Tensor(primals_723, 0.9)
    add_357: "f32[128]" = torch.ops.aten.add.Tensor(mul_492, mul_493);  mul_492 = mul_493 = None
    squeeze_206: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_138, [0, 2, 3]);  getitem_138 = None
    mul_494: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_206, 1.1428571428571428);  squeeze_206 = None
    mul_495: "f32[128]" = torch.ops.aten.mul.Tensor(mul_494, 0.1);  mul_494 = None
    mul_496: "f32[128]" = torch.ops.aten.mul.Tensor(primals_724, 0.9)
    add_358: "f32[128]" = torch.ops.aten.add.Tensor(mul_495, mul_496);  mul_495 = mul_496 = None
    unsqueeze_272: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_252, -1)
    unsqueeze_273: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_272, -1);  unsqueeze_272 = None
    mul_497: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_491, unsqueeze_273);  mul_491 = unsqueeze_273 = None
    unsqueeze_274: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_253, -1);  primals_253 = None
    unsqueeze_275: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_274, -1);  unsqueeze_274 = None
    add_359: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_497, unsqueeze_275);  mul_497 = unsqueeze_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_65: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_359);  add_359 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_84: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_65, primals_254, primals_255, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_92: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_84, [8, 1, 2, -1]);  convolution_84 = None
    permute_15: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_92, [0, 2, 1, 3]);  view_92 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_15: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_15, [1], True)
    sub_84: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_15, amax_15);  permute_15 = amax_15 = None
    exp_15: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_84);  sub_84 = None
    sum_47: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_15, [1], True)
    div_15: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_15, sum_47);  exp_15 = sum_47 = None
    alias_81: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_15)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_93: "f32[8, 512]" = torch.ops.aten.view.default(div_15, [8, -1]);  div_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_94: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_93, [8, -1, 1, 1]);  view_93 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_95: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_94, [8, 2, 256, 1, 1]);  view_94 = None
    mul_498: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_91, view_95)
    sum_48: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_498, [1]);  mul_498 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_85: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_48, primals_256, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_360: "i64[]" = torch.ops.aten.add.Tensor(primals_728, 1)
    var_mean_69 = torch.ops.aten.var_mean.correction(convolution_85, [0, 2, 3], correction = 0, keepdim = True)
    getitem_140: "f32[1, 1024, 1, 1]" = var_mean_69[0]
    getitem_141: "f32[1, 1024, 1, 1]" = var_mean_69[1];  var_mean_69 = None
    add_361: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_140, 1e-05)
    rsqrt_69: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_361);  add_361 = None
    sub_85: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_85, getitem_141)
    mul_499: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_85, rsqrt_69);  sub_85 = None
    squeeze_207: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_141, [0, 2, 3]);  getitem_141 = None
    squeeze_208: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_69, [0, 2, 3]);  rsqrt_69 = None
    mul_500: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_207, 0.1)
    mul_501: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_726, 0.9)
    add_362: "f32[1024]" = torch.ops.aten.add.Tensor(mul_500, mul_501);  mul_500 = mul_501 = None
    squeeze_209: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_140, [0, 2, 3]);  getitem_140 = None
    mul_502: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_209, 1.0004885197850513);  squeeze_209 = None
    mul_503: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_502, 0.1);  mul_502 = None
    mul_504: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_727, 0.9)
    add_363: "f32[1024]" = torch.ops.aten.add.Tensor(mul_503, mul_504);  mul_503 = mul_504 = None
    unsqueeze_276: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_257, -1)
    unsqueeze_277: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_276, -1);  unsqueeze_276 = None
    mul_505: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_499, unsqueeze_277);  mul_499 = unsqueeze_277 = None
    unsqueeze_278: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_258, -1);  primals_258 = None
    unsqueeze_279: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_278, -1);  unsqueeze_278 = None
    add_364: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_505, unsqueeze_279);  mul_505 = unsqueeze_279 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_365: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_364, relu_62);  add_364 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_66: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_365);  add_365 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_86: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_66, primals_259, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_366: "i64[]" = torch.ops.aten.add.Tensor(primals_731, 1)
    var_mean_70 = torch.ops.aten.var_mean.correction(convolution_86, [0, 2, 3], correction = 0, keepdim = True)
    getitem_142: "f32[1, 256, 1, 1]" = var_mean_70[0]
    getitem_143: "f32[1, 256, 1, 1]" = var_mean_70[1];  var_mean_70 = None
    add_367: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_142, 1e-05)
    rsqrt_70: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_367);  add_367 = None
    sub_86: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_86, getitem_143)
    mul_506: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_86, rsqrt_70);  sub_86 = None
    squeeze_210: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_143, [0, 2, 3]);  getitem_143 = None
    squeeze_211: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_70, [0, 2, 3]);  rsqrt_70 = None
    mul_507: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_210, 0.1)
    mul_508: "f32[256]" = torch.ops.aten.mul.Tensor(primals_729, 0.9)
    add_368: "f32[256]" = torch.ops.aten.add.Tensor(mul_507, mul_508);  mul_507 = mul_508 = None
    squeeze_212: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_142, [0, 2, 3]);  getitem_142 = None
    mul_509: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_212, 1.0004885197850513);  squeeze_212 = None
    mul_510: "f32[256]" = torch.ops.aten.mul.Tensor(mul_509, 0.1);  mul_509 = None
    mul_511: "f32[256]" = torch.ops.aten.mul.Tensor(primals_730, 0.9)
    add_369: "f32[256]" = torch.ops.aten.add.Tensor(mul_510, mul_511);  mul_510 = mul_511 = None
    unsqueeze_280: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_260, -1)
    unsqueeze_281: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_280, -1);  unsqueeze_280 = None
    mul_512: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_506, unsqueeze_281);  mul_506 = unsqueeze_281 = None
    unsqueeze_282: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_261, -1);  primals_261 = None
    unsqueeze_283: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_282, -1);  unsqueeze_282 = None
    add_370: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_512, unsqueeze_283);  mul_512 = unsqueeze_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_67: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_370);  add_370 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_87: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_67, primals_262, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_371: "i64[]" = torch.ops.aten.add.Tensor(primals_734, 1)
    var_mean_71 = torch.ops.aten.var_mean.correction(convolution_87, [0, 2, 3], correction = 0, keepdim = True)
    getitem_144: "f32[1, 512, 1, 1]" = var_mean_71[0]
    getitem_145: "f32[1, 512, 1, 1]" = var_mean_71[1];  var_mean_71 = None
    add_372: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_144, 1e-05)
    rsqrt_71: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_372);  add_372 = None
    sub_87: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_87, getitem_145)
    mul_513: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_87, rsqrt_71);  sub_87 = None
    squeeze_213: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_145, [0, 2, 3]);  getitem_145 = None
    squeeze_214: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_71, [0, 2, 3]);  rsqrt_71 = None
    mul_514: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_213, 0.1)
    mul_515: "f32[512]" = torch.ops.aten.mul.Tensor(primals_732, 0.9)
    add_373: "f32[512]" = torch.ops.aten.add.Tensor(mul_514, mul_515);  mul_514 = mul_515 = None
    squeeze_215: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_144, [0, 2, 3]);  getitem_144 = None
    mul_516: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_215, 1.0004885197850513);  squeeze_215 = None
    mul_517: "f32[512]" = torch.ops.aten.mul.Tensor(mul_516, 0.1);  mul_516 = None
    mul_518: "f32[512]" = torch.ops.aten.mul.Tensor(primals_733, 0.9)
    add_374: "f32[512]" = torch.ops.aten.add.Tensor(mul_517, mul_518);  mul_517 = mul_518 = None
    unsqueeze_284: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_263, -1)
    unsqueeze_285: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_284, -1);  unsqueeze_284 = None
    mul_519: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_513, unsqueeze_285);  mul_513 = unsqueeze_285 = None
    unsqueeze_286: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_264, -1);  primals_264 = None
    unsqueeze_287: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_286, -1);  unsqueeze_286 = None
    add_375: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_519, unsqueeze_287);  mul_519 = unsqueeze_287 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_68: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_375);  add_375 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_97: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_68, [8, 2, 256, 16, 16])
    sum_49: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_97, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_16: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_49, [2, 3], True);  sum_49 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_88: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_16, primals_265, primals_266, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_266 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_376: "i64[]" = torch.ops.aten.add.Tensor(primals_737, 1)
    var_mean_72 = torch.ops.aten.var_mean.correction(convolution_88, [0, 2, 3], correction = 0, keepdim = True)
    getitem_146: "f32[1, 128, 1, 1]" = var_mean_72[0]
    getitem_147: "f32[1, 128, 1, 1]" = var_mean_72[1];  var_mean_72 = None
    add_377: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_146, 1e-05)
    rsqrt_72: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_377);  add_377 = None
    sub_88: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_88, getitem_147)
    mul_520: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_88, rsqrt_72);  sub_88 = None
    squeeze_216: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_147, [0, 2, 3]);  getitem_147 = None
    squeeze_217: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_72, [0, 2, 3]);  rsqrt_72 = None
    mul_521: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_216, 0.1)
    mul_522: "f32[128]" = torch.ops.aten.mul.Tensor(primals_735, 0.9)
    add_378: "f32[128]" = torch.ops.aten.add.Tensor(mul_521, mul_522);  mul_521 = mul_522 = None
    squeeze_218: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_146, [0, 2, 3]);  getitem_146 = None
    mul_523: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_218, 1.1428571428571428);  squeeze_218 = None
    mul_524: "f32[128]" = torch.ops.aten.mul.Tensor(mul_523, 0.1);  mul_523 = None
    mul_525: "f32[128]" = torch.ops.aten.mul.Tensor(primals_736, 0.9)
    add_379: "f32[128]" = torch.ops.aten.add.Tensor(mul_524, mul_525);  mul_524 = mul_525 = None
    unsqueeze_288: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_267, -1)
    unsqueeze_289: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_288, -1);  unsqueeze_288 = None
    mul_526: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_520, unsqueeze_289);  mul_520 = unsqueeze_289 = None
    unsqueeze_290: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_268, -1);  primals_268 = None
    unsqueeze_291: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_290, -1);  unsqueeze_290 = None
    add_380: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_526, unsqueeze_291);  mul_526 = unsqueeze_291 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_69: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_380);  add_380 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_89: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_69, primals_269, primals_270, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_270 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_98: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_89, [8, 1, 2, -1]);  convolution_89 = None
    permute_16: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_98, [0, 2, 1, 3]);  view_98 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_16: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_16, [1], True)
    sub_89: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_16, amax_16);  permute_16 = amax_16 = None
    exp_16: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_89);  sub_89 = None
    sum_50: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_16, [1], True)
    div_16: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_16, sum_50);  exp_16 = sum_50 = None
    alias_86: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_16)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_99: "f32[8, 512]" = torch.ops.aten.view.default(div_16, [8, -1]);  div_16 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_100: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_99, [8, -1, 1, 1]);  view_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_101: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_100, [8, 2, 256, 1, 1]);  view_100 = None
    mul_527: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_97, view_101)
    sum_51: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_527, [1]);  mul_527 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_90: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_51, primals_271, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_381: "i64[]" = torch.ops.aten.add.Tensor(primals_740, 1)
    var_mean_73 = torch.ops.aten.var_mean.correction(convolution_90, [0, 2, 3], correction = 0, keepdim = True)
    getitem_148: "f32[1, 1024, 1, 1]" = var_mean_73[0]
    getitem_149: "f32[1, 1024, 1, 1]" = var_mean_73[1];  var_mean_73 = None
    add_382: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_148, 1e-05)
    rsqrt_73: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_382);  add_382 = None
    sub_90: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_90, getitem_149)
    mul_528: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_90, rsqrt_73);  sub_90 = None
    squeeze_219: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_149, [0, 2, 3]);  getitem_149 = None
    squeeze_220: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_73, [0, 2, 3]);  rsqrt_73 = None
    mul_529: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_219, 0.1)
    mul_530: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_738, 0.9)
    add_383: "f32[1024]" = torch.ops.aten.add.Tensor(mul_529, mul_530);  mul_529 = mul_530 = None
    squeeze_221: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_148, [0, 2, 3]);  getitem_148 = None
    mul_531: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_221, 1.0004885197850513);  squeeze_221 = None
    mul_532: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_531, 0.1);  mul_531 = None
    mul_533: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_739, 0.9)
    add_384: "f32[1024]" = torch.ops.aten.add.Tensor(mul_532, mul_533);  mul_532 = mul_533 = None
    unsqueeze_292: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_272, -1)
    unsqueeze_293: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_292, -1);  unsqueeze_292 = None
    mul_534: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_528, unsqueeze_293);  mul_528 = unsqueeze_293 = None
    unsqueeze_294: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_273, -1);  primals_273 = None
    unsqueeze_295: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_294, -1);  unsqueeze_294 = None
    add_385: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_534, unsqueeze_295);  mul_534 = unsqueeze_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_386: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_385, relu_66);  add_385 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_70: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_386);  add_386 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_91: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_70, primals_274, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_387: "i64[]" = torch.ops.aten.add.Tensor(primals_743, 1)
    var_mean_74 = torch.ops.aten.var_mean.correction(convolution_91, [0, 2, 3], correction = 0, keepdim = True)
    getitem_150: "f32[1, 256, 1, 1]" = var_mean_74[0]
    getitem_151: "f32[1, 256, 1, 1]" = var_mean_74[1];  var_mean_74 = None
    add_388: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_150, 1e-05)
    rsqrt_74: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_388);  add_388 = None
    sub_91: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_91, getitem_151)
    mul_535: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_91, rsqrt_74);  sub_91 = None
    squeeze_222: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_151, [0, 2, 3]);  getitem_151 = None
    squeeze_223: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_74, [0, 2, 3]);  rsqrt_74 = None
    mul_536: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_222, 0.1)
    mul_537: "f32[256]" = torch.ops.aten.mul.Tensor(primals_741, 0.9)
    add_389: "f32[256]" = torch.ops.aten.add.Tensor(mul_536, mul_537);  mul_536 = mul_537 = None
    squeeze_224: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_150, [0, 2, 3]);  getitem_150 = None
    mul_538: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_224, 1.0004885197850513);  squeeze_224 = None
    mul_539: "f32[256]" = torch.ops.aten.mul.Tensor(mul_538, 0.1);  mul_538 = None
    mul_540: "f32[256]" = torch.ops.aten.mul.Tensor(primals_742, 0.9)
    add_390: "f32[256]" = torch.ops.aten.add.Tensor(mul_539, mul_540);  mul_539 = mul_540 = None
    unsqueeze_296: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_275, -1)
    unsqueeze_297: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_296, -1);  unsqueeze_296 = None
    mul_541: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_535, unsqueeze_297);  mul_535 = unsqueeze_297 = None
    unsqueeze_298: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_276, -1);  primals_276 = None
    unsqueeze_299: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_298, -1);  unsqueeze_298 = None
    add_391: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_541, unsqueeze_299);  mul_541 = unsqueeze_299 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_71: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_391);  add_391 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_92: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_71, primals_277, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_392: "i64[]" = torch.ops.aten.add.Tensor(primals_746, 1)
    var_mean_75 = torch.ops.aten.var_mean.correction(convolution_92, [0, 2, 3], correction = 0, keepdim = True)
    getitem_152: "f32[1, 512, 1, 1]" = var_mean_75[0]
    getitem_153: "f32[1, 512, 1, 1]" = var_mean_75[1];  var_mean_75 = None
    add_393: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_152, 1e-05)
    rsqrt_75: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_393);  add_393 = None
    sub_92: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_92, getitem_153)
    mul_542: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_92, rsqrt_75);  sub_92 = None
    squeeze_225: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_153, [0, 2, 3]);  getitem_153 = None
    squeeze_226: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_75, [0, 2, 3]);  rsqrt_75 = None
    mul_543: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_225, 0.1)
    mul_544: "f32[512]" = torch.ops.aten.mul.Tensor(primals_744, 0.9)
    add_394: "f32[512]" = torch.ops.aten.add.Tensor(mul_543, mul_544);  mul_543 = mul_544 = None
    squeeze_227: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_152, [0, 2, 3]);  getitem_152 = None
    mul_545: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_227, 1.0004885197850513);  squeeze_227 = None
    mul_546: "f32[512]" = torch.ops.aten.mul.Tensor(mul_545, 0.1);  mul_545 = None
    mul_547: "f32[512]" = torch.ops.aten.mul.Tensor(primals_745, 0.9)
    add_395: "f32[512]" = torch.ops.aten.add.Tensor(mul_546, mul_547);  mul_546 = mul_547 = None
    unsqueeze_300: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_278, -1)
    unsqueeze_301: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_300, -1);  unsqueeze_300 = None
    mul_548: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_542, unsqueeze_301);  mul_542 = unsqueeze_301 = None
    unsqueeze_302: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_279, -1);  primals_279 = None
    unsqueeze_303: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_302, -1);  unsqueeze_302 = None
    add_396: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_548, unsqueeze_303);  mul_548 = unsqueeze_303 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_72: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_396);  add_396 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_103: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_72, [8, 2, 256, 16, 16])
    sum_52: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_103, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_17: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_52, [2, 3], True);  sum_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_93: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_17, primals_280, primals_281, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_281 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_397: "i64[]" = torch.ops.aten.add.Tensor(primals_749, 1)
    var_mean_76 = torch.ops.aten.var_mean.correction(convolution_93, [0, 2, 3], correction = 0, keepdim = True)
    getitem_154: "f32[1, 128, 1, 1]" = var_mean_76[0]
    getitem_155: "f32[1, 128, 1, 1]" = var_mean_76[1];  var_mean_76 = None
    add_398: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_154, 1e-05)
    rsqrt_76: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_398);  add_398 = None
    sub_93: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_93, getitem_155)
    mul_549: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_93, rsqrt_76);  sub_93 = None
    squeeze_228: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_155, [0, 2, 3]);  getitem_155 = None
    squeeze_229: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_76, [0, 2, 3]);  rsqrt_76 = None
    mul_550: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_228, 0.1)
    mul_551: "f32[128]" = torch.ops.aten.mul.Tensor(primals_747, 0.9)
    add_399: "f32[128]" = torch.ops.aten.add.Tensor(mul_550, mul_551);  mul_550 = mul_551 = None
    squeeze_230: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_154, [0, 2, 3]);  getitem_154 = None
    mul_552: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_230, 1.1428571428571428);  squeeze_230 = None
    mul_553: "f32[128]" = torch.ops.aten.mul.Tensor(mul_552, 0.1);  mul_552 = None
    mul_554: "f32[128]" = torch.ops.aten.mul.Tensor(primals_748, 0.9)
    add_400: "f32[128]" = torch.ops.aten.add.Tensor(mul_553, mul_554);  mul_553 = mul_554 = None
    unsqueeze_304: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_282, -1)
    unsqueeze_305: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_304, -1);  unsqueeze_304 = None
    mul_555: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_549, unsqueeze_305);  mul_549 = unsqueeze_305 = None
    unsqueeze_306: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_283, -1);  primals_283 = None
    unsqueeze_307: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_306, -1);  unsqueeze_306 = None
    add_401: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_555, unsqueeze_307);  mul_555 = unsqueeze_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_73: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_401);  add_401 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_94: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_73, primals_284, primals_285, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_104: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_94, [8, 1, 2, -1]);  convolution_94 = None
    permute_17: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_104, [0, 2, 1, 3]);  view_104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_17: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_17, [1], True)
    sub_94: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_17, amax_17);  permute_17 = amax_17 = None
    exp_17: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_94);  sub_94 = None
    sum_53: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_17, [1], True)
    div_17: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_17, sum_53);  exp_17 = sum_53 = None
    alias_91: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_17)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_105: "f32[8, 512]" = torch.ops.aten.view.default(div_17, [8, -1]);  div_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_106: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_105, [8, -1, 1, 1]);  view_105 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_107: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_106, [8, 2, 256, 1, 1]);  view_106 = None
    mul_556: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_103, view_107)
    sum_54: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_556, [1]);  mul_556 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_95: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_54, primals_286, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_402: "i64[]" = torch.ops.aten.add.Tensor(primals_752, 1)
    var_mean_77 = torch.ops.aten.var_mean.correction(convolution_95, [0, 2, 3], correction = 0, keepdim = True)
    getitem_156: "f32[1, 1024, 1, 1]" = var_mean_77[0]
    getitem_157: "f32[1, 1024, 1, 1]" = var_mean_77[1];  var_mean_77 = None
    add_403: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_156, 1e-05)
    rsqrt_77: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_403);  add_403 = None
    sub_95: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_95, getitem_157)
    mul_557: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_95, rsqrt_77);  sub_95 = None
    squeeze_231: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_157, [0, 2, 3]);  getitem_157 = None
    squeeze_232: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_77, [0, 2, 3]);  rsqrt_77 = None
    mul_558: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_231, 0.1)
    mul_559: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_750, 0.9)
    add_404: "f32[1024]" = torch.ops.aten.add.Tensor(mul_558, mul_559);  mul_558 = mul_559 = None
    squeeze_233: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_156, [0, 2, 3]);  getitem_156 = None
    mul_560: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_233, 1.0004885197850513);  squeeze_233 = None
    mul_561: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_560, 0.1);  mul_560 = None
    mul_562: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_751, 0.9)
    add_405: "f32[1024]" = torch.ops.aten.add.Tensor(mul_561, mul_562);  mul_561 = mul_562 = None
    unsqueeze_308: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_287, -1)
    unsqueeze_309: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_308, -1);  unsqueeze_308 = None
    mul_563: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_557, unsqueeze_309);  mul_557 = unsqueeze_309 = None
    unsqueeze_310: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_288, -1);  primals_288 = None
    unsqueeze_311: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_310, -1);  unsqueeze_310 = None
    add_406: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_563, unsqueeze_311);  mul_563 = unsqueeze_311 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_407: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_406, relu_70);  add_406 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_74: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_407);  add_407 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_96: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_74, primals_289, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_408: "i64[]" = torch.ops.aten.add.Tensor(primals_755, 1)
    var_mean_78 = torch.ops.aten.var_mean.correction(convolution_96, [0, 2, 3], correction = 0, keepdim = True)
    getitem_158: "f32[1, 256, 1, 1]" = var_mean_78[0]
    getitem_159: "f32[1, 256, 1, 1]" = var_mean_78[1];  var_mean_78 = None
    add_409: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_158, 1e-05)
    rsqrt_78: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_409);  add_409 = None
    sub_96: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_96, getitem_159)
    mul_564: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_96, rsqrt_78);  sub_96 = None
    squeeze_234: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_159, [0, 2, 3]);  getitem_159 = None
    squeeze_235: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_78, [0, 2, 3]);  rsqrt_78 = None
    mul_565: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_234, 0.1)
    mul_566: "f32[256]" = torch.ops.aten.mul.Tensor(primals_753, 0.9)
    add_410: "f32[256]" = torch.ops.aten.add.Tensor(mul_565, mul_566);  mul_565 = mul_566 = None
    squeeze_236: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_158, [0, 2, 3]);  getitem_158 = None
    mul_567: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_236, 1.0004885197850513);  squeeze_236 = None
    mul_568: "f32[256]" = torch.ops.aten.mul.Tensor(mul_567, 0.1);  mul_567 = None
    mul_569: "f32[256]" = torch.ops.aten.mul.Tensor(primals_754, 0.9)
    add_411: "f32[256]" = torch.ops.aten.add.Tensor(mul_568, mul_569);  mul_568 = mul_569 = None
    unsqueeze_312: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_290, -1)
    unsqueeze_313: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_312, -1);  unsqueeze_312 = None
    mul_570: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_564, unsqueeze_313);  mul_564 = unsqueeze_313 = None
    unsqueeze_314: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_291, -1);  primals_291 = None
    unsqueeze_315: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_314, -1);  unsqueeze_314 = None
    add_412: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_570, unsqueeze_315);  mul_570 = unsqueeze_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_75: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_412);  add_412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_97: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_75, primals_292, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_413: "i64[]" = torch.ops.aten.add.Tensor(primals_758, 1)
    var_mean_79 = torch.ops.aten.var_mean.correction(convolution_97, [0, 2, 3], correction = 0, keepdim = True)
    getitem_160: "f32[1, 512, 1, 1]" = var_mean_79[0]
    getitem_161: "f32[1, 512, 1, 1]" = var_mean_79[1];  var_mean_79 = None
    add_414: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_160, 1e-05)
    rsqrt_79: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_414);  add_414 = None
    sub_97: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_97, getitem_161)
    mul_571: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_97, rsqrt_79);  sub_97 = None
    squeeze_237: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_161, [0, 2, 3]);  getitem_161 = None
    squeeze_238: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_79, [0, 2, 3]);  rsqrt_79 = None
    mul_572: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_237, 0.1)
    mul_573: "f32[512]" = torch.ops.aten.mul.Tensor(primals_756, 0.9)
    add_415: "f32[512]" = torch.ops.aten.add.Tensor(mul_572, mul_573);  mul_572 = mul_573 = None
    squeeze_239: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_160, [0, 2, 3]);  getitem_160 = None
    mul_574: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_239, 1.0004885197850513);  squeeze_239 = None
    mul_575: "f32[512]" = torch.ops.aten.mul.Tensor(mul_574, 0.1);  mul_574 = None
    mul_576: "f32[512]" = torch.ops.aten.mul.Tensor(primals_757, 0.9)
    add_416: "f32[512]" = torch.ops.aten.add.Tensor(mul_575, mul_576);  mul_575 = mul_576 = None
    unsqueeze_316: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_293, -1)
    unsqueeze_317: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_316, -1);  unsqueeze_316 = None
    mul_577: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_571, unsqueeze_317);  mul_571 = unsqueeze_317 = None
    unsqueeze_318: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_294, -1);  primals_294 = None
    unsqueeze_319: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_318, -1);  unsqueeze_318 = None
    add_417: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_577, unsqueeze_319);  mul_577 = unsqueeze_319 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_76: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_417);  add_417 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_109: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_76, [8, 2, 256, 16, 16])
    sum_55: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_109, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_18: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_55, [2, 3], True);  sum_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_98: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_18, primals_295, primals_296, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_418: "i64[]" = torch.ops.aten.add.Tensor(primals_761, 1)
    var_mean_80 = torch.ops.aten.var_mean.correction(convolution_98, [0, 2, 3], correction = 0, keepdim = True)
    getitem_162: "f32[1, 128, 1, 1]" = var_mean_80[0]
    getitem_163: "f32[1, 128, 1, 1]" = var_mean_80[1];  var_mean_80 = None
    add_419: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_162, 1e-05)
    rsqrt_80: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_419);  add_419 = None
    sub_98: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_98, getitem_163)
    mul_578: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_98, rsqrt_80);  sub_98 = None
    squeeze_240: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_163, [0, 2, 3]);  getitem_163 = None
    squeeze_241: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_80, [0, 2, 3]);  rsqrt_80 = None
    mul_579: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_240, 0.1)
    mul_580: "f32[128]" = torch.ops.aten.mul.Tensor(primals_759, 0.9)
    add_420: "f32[128]" = torch.ops.aten.add.Tensor(mul_579, mul_580);  mul_579 = mul_580 = None
    squeeze_242: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_162, [0, 2, 3]);  getitem_162 = None
    mul_581: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_242, 1.1428571428571428);  squeeze_242 = None
    mul_582: "f32[128]" = torch.ops.aten.mul.Tensor(mul_581, 0.1);  mul_581 = None
    mul_583: "f32[128]" = torch.ops.aten.mul.Tensor(primals_760, 0.9)
    add_421: "f32[128]" = torch.ops.aten.add.Tensor(mul_582, mul_583);  mul_582 = mul_583 = None
    unsqueeze_320: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_297, -1)
    unsqueeze_321: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_320, -1);  unsqueeze_320 = None
    mul_584: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_578, unsqueeze_321);  mul_578 = unsqueeze_321 = None
    unsqueeze_322: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_298, -1);  primals_298 = None
    unsqueeze_323: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_322, -1);  unsqueeze_322 = None
    add_422: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_584, unsqueeze_323);  mul_584 = unsqueeze_323 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_77: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_422);  add_422 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_99: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_77, primals_299, primals_300, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_300 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_110: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_99, [8, 1, 2, -1]);  convolution_99 = None
    permute_18: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_110, [0, 2, 1, 3]);  view_110 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_18: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_18, [1], True)
    sub_99: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_18, amax_18);  permute_18 = amax_18 = None
    exp_18: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_99);  sub_99 = None
    sum_56: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_18, [1], True)
    div_18: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_18, sum_56);  exp_18 = sum_56 = None
    alias_96: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_18)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_111: "f32[8, 512]" = torch.ops.aten.view.default(div_18, [8, -1]);  div_18 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_112: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_111, [8, -1, 1, 1]);  view_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_113: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_112, [8, 2, 256, 1, 1]);  view_112 = None
    mul_585: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_109, view_113)
    sum_57: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_585, [1]);  mul_585 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_100: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_57, primals_301, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_423: "i64[]" = torch.ops.aten.add.Tensor(primals_764, 1)
    var_mean_81 = torch.ops.aten.var_mean.correction(convolution_100, [0, 2, 3], correction = 0, keepdim = True)
    getitem_164: "f32[1, 1024, 1, 1]" = var_mean_81[0]
    getitem_165: "f32[1, 1024, 1, 1]" = var_mean_81[1];  var_mean_81 = None
    add_424: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_164, 1e-05)
    rsqrt_81: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_424);  add_424 = None
    sub_100: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_100, getitem_165)
    mul_586: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_100, rsqrt_81);  sub_100 = None
    squeeze_243: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_165, [0, 2, 3]);  getitem_165 = None
    squeeze_244: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_81, [0, 2, 3]);  rsqrt_81 = None
    mul_587: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_243, 0.1)
    mul_588: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_762, 0.9)
    add_425: "f32[1024]" = torch.ops.aten.add.Tensor(mul_587, mul_588);  mul_587 = mul_588 = None
    squeeze_245: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_164, [0, 2, 3]);  getitem_164 = None
    mul_589: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_245, 1.0004885197850513);  squeeze_245 = None
    mul_590: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_589, 0.1);  mul_589 = None
    mul_591: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_763, 0.9)
    add_426: "f32[1024]" = torch.ops.aten.add.Tensor(mul_590, mul_591);  mul_590 = mul_591 = None
    unsqueeze_324: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_302, -1)
    unsqueeze_325: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_324, -1);  unsqueeze_324 = None
    mul_592: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_586, unsqueeze_325);  mul_586 = unsqueeze_325 = None
    unsqueeze_326: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_303, -1);  primals_303 = None
    unsqueeze_327: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_326, -1);  unsqueeze_326 = None
    add_427: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_592, unsqueeze_327);  mul_592 = unsqueeze_327 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_428: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_427, relu_74);  add_427 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_78: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_428);  add_428 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_101: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_78, primals_304, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_429: "i64[]" = torch.ops.aten.add.Tensor(primals_767, 1)
    var_mean_82 = torch.ops.aten.var_mean.correction(convolution_101, [0, 2, 3], correction = 0, keepdim = True)
    getitem_166: "f32[1, 256, 1, 1]" = var_mean_82[0]
    getitem_167: "f32[1, 256, 1, 1]" = var_mean_82[1];  var_mean_82 = None
    add_430: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_166, 1e-05)
    rsqrt_82: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_430);  add_430 = None
    sub_101: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_101, getitem_167)
    mul_593: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_101, rsqrt_82);  sub_101 = None
    squeeze_246: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_167, [0, 2, 3]);  getitem_167 = None
    squeeze_247: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_82, [0, 2, 3]);  rsqrt_82 = None
    mul_594: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_246, 0.1)
    mul_595: "f32[256]" = torch.ops.aten.mul.Tensor(primals_765, 0.9)
    add_431: "f32[256]" = torch.ops.aten.add.Tensor(mul_594, mul_595);  mul_594 = mul_595 = None
    squeeze_248: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_166, [0, 2, 3]);  getitem_166 = None
    mul_596: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_248, 1.0004885197850513);  squeeze_248 = None
    mul_597: "f32[256]" = torch.ops.aten.mul.Tensor(mul_596, 0.1);  mul_596 = None
    mul_598: "f32[256]" = torch.ops.aten.mul.Tensor(primals_766, 0.9)
    add_432: "f32[256]" = torch.ops.aten.add.Tensor(mul_597, mul_598);  mul_597 = mul_598 = None
    unsqueeze_328: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_305, -1)
    unsqueeze_329: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_328, -1);  unsqueeze_328 = None
    mul_599: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_593, unsqueeze_329);  mul_593 = unsqueeze_329 = None
    unsqueeze_330: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_306, -1);  primals_306 = None
    unsqueeze_331: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_330, -1);  unsqueeze_330 = None
    add_433: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_599, unsqueeze_331);  mul_599 = unsqueeze_331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_79: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_433);  add_433 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_102: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_79, primals_307, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_434: "i64[]" = torch.ops.aten.add.Tensor(primals_770, 1)
    var_mean_83 = torch.ops.aten.var_mean.correction(convolution_102, [0, 2, 3], correction = 0, keepdim = True)
    getitem_168: "f32[1, 512, 1, 1]" = var_mean_83[0]
    getitem_169: "f32[1, 512, 1, 1]" = var_mean_83[1];  var_mean_83 = None
    add_435: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_168, 1e-05)
    rsqrt_83: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_435);  add_435 = None
    sub_102: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_102, getitem_169)
    mul_600: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_102, rsqrt_83);  sub_102 = None
    squeeze_249: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_169, [0, 2, 3]);  getitem_169 = None
    squeeze_250: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_83, [0, 2, 3]);  rsqrt_83 = None
    mul_601: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_249, 0.1)
    mul_602: "f32[512]" = torch.ops.aten.mul.Tensor(primals_768, 0.9)
    add_436: "f32[512]" = torch.ops.aten.add.Tensor(mul_601, mul_602);  mul_601 = mul_602 = None
    squeeze_251: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_168, [0, 2, 3]);  getitem_168 = None
    mul_603: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_251, 1.0004885197850513);  squeeze_251 = None
    mul_604: "f32[512]" = torch.ops.aten.mul.Tensor(mul_603, 0.1);  mul_603 = None
    mul_605: "f32[512]" = torch.ops.aten.mul.Tensor(primals_769, 0.9)
    add_437: "f32[512]" = torch.ops.aten.add.Tensor(mul_604, mul_605);  mul_604 = mul_605 = None
    unsqueeze_332: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_308, -1)
    unsqueeze_333: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_332, -1);  unsqueeze_332 = None
    mul_606: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_600, unsqueeze_333);  mul_600 = unsqueeze_333 = None
    unsqueeze_334: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_309, -1);  primals_309 = None
    unsqueeze_335: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_334, -1);  unsqueeze_334 = None
    add_438: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_606, unsqueeze_335);  mul_606 = unsqueeze_335 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_80: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_438);  add_438 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_115: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_80, [8, 2, 256, 16, 16])
    sum_58: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_115, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_19: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_58, [2, 3], True);  sum_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_103: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_19, primals_310, primals_311, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_311 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_439: "i64[]" = torch.ops.aten.add.Tensor(primals_773, 1)
    var_mean_84 = torch.ops.aten.var_mean.correction(convolution_103, [0, 2, 3], correction = 0, keepdim = True)
    getitem_170: "f32[1, 128, 1, 1]" = var_mean_84[0]
    getitem_171: "f32[1, 128, 1, 1]" = var_mean_84[1];  var_mean_84 = None
    add_440: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_170, 1e-05)
    rsqrt_84: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_440);  add_440 = None
    sub_103: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_103, getitem_171)
    mul_607: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_103, rsqrt_84);  sub_103 = None
    squeeze_252: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_171, [0, 2, 3]);  getitem_171 = None
    squeeze_253: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_84, [0, 2, 3]);  rsqrt_84 = None
    mul_608: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_252, 0.1)
    mul_609: "f32[128]" = torch.ops.aten.mul.Tensor(primals_771, 0.9)
    add_441: "f32[128]" = torch.ops.aten.add.Tensor(mul_608, mul_609);  mul_608 = mul_609 = None
    squeeze_254: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_170, [0, 2, 3]);  getitem_170 = None
    mul_610: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_254, 1.1428571428571428);  squeeze_254 = None
    mul_611: "f32[128]" = torch.ops.aten.mul.Tensor(mul_610, 0.1);  mul_610 = None
    mul_612: "f32[128]" = torch.ops.aten.mul.Tensor(primals_772, 0.9)
    add_442: "f32[128]" = torch.ops.aten.add.Tensor(mul_611, mul_612);  mul_611 = mul_612 = None
    unsqueeze_336: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_312, -1)
    unsqueeze_337: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_336, -1);  unsqueeze_336 = None
    mul_613: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_607, unsqueeze_337);  mul_607 = unsqueeze_337 = None
    unsqueeze_338: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_313, -1);  primals_313 = None
    unsqueeze_339: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_338, -1);  unsqueeze_338 = None
    add_443: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_613, unsqueeze_339);  mul_613 = unsqueeze_339 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_81: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_443);  add_443 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_104: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_81, primals_314, primals_315, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_116: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_104, [8, 1, 2, -1]);  convolution_104 = None
    permute_19: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_116, [0, 2, 1, 3]);  view_116 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_19: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_19, [1], True)
    sub_104: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_19, amax_19);  permute_19 = amax_19 = None
    exp_19: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_104);  sub_104 = None
    sum_59: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_19, [1], True)
    div_19: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_19, sum_59);  exp_19 = sum_59 = None
    alias_101: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_19)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_117: "f32[8, 512]" = torch.ops.aten.view.default(div_19, [8, -1]);  div_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_118: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_117, [8, -1, 1, 1]);  view_117 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_119: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_118, [8, 2, 256, 1, 1]);  view_118 = None
    mul_614: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_115, view_119)
    sum_60: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_614, [1]);  mul_614 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_105: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_60, primals_316, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_444: "i64[]" = torch.ops.aten.add.Tensor(primals_776, 1)
    var_mean_85 = torch.ops.aten.var_mean.correction(convolution_105, [0, 2, 3], correction = 0, keepdim = True)
    getitem_172: "f32[1, 1024, 1, 1]" = var_mean_85[0]
    getitem_173: "f32[1, 1024, 1, 1]" = var_mean_85[1];  var_mean_85 = None
    add_445: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_172, 1e-05)
    rsqrt_85: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_445);  add_445 = None
    sub_105: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_105, getitem_173)
    mul_615: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_105, rsqrt_85);  sub_105 = None
    squeeze_255: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_173, [0, 2, 3]);  getitem_173 = None
    squeeze_256: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_85, [0, 2, 3]);  rsqrt_85 = None
    mul_616: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_255, 0.1)
    mul_617: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_774, 0.9)
    add_446: "f32[1024]" = torch.ops.aten.add.Tensor(mul_616, mul_617);  mul_616 = mul_617 = None
    squeeze_257: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_172, [0, 2, 3]);  getitem_172 = None
    mul_618: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_257, 1.0004885197850513);  squeeze_257 = None
    mul_619: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_618, 0.1);  mul_618 = None
    mul_620: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_775, 0.9)
    add_447: "f32[1024]" = torch.ops.aten.add.Tensor(mul_619, mul_620);  mul_619 = mul_620 = None
    unsqueeze_340: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_317, -1)
    unsqueeze_341: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_340, -1);  unsqueeze_340 = None
    mul_621: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_615, unsqueeze_341);  mul_615 = unsqueeze_341 = None
    unsqueeze_342: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_318, -1);  primals_318 = None
    unsqueeze_343: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_342, -1);  unsqueeze_342 = None
    add_448: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_621, unsqueeze_343);  mul_621 = unsqueeze_343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_449: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_448, relu_78);  add_448 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_82: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_449);  add_449 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_106: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_82, primals_319, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_450: "i64[]" = torch.ops.aten.add.Tensor(primals_779, 1)
    var_mean_86 = torch.ops.aten.var_mean.correction(convolution_106, [0, 2, 3], correction = 0, keepdim = True)
    getitem_174: "f32[1, 256, 1, 1]" = var_mean_86[0]
    getitem_175: "f32[1, 256, 1, 1]" = var_mean_86[1];  var_mean_86 = None
    add_451: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_174, 1e-05)
    rsqrt_86: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_451);  add_451 = None
    sub_106: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_106, getitem_175)
    mul_622: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_106, rsqrt_86);  sub_106 = None
    squeeze_258: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_175, [0, 2, 3]);  getitem_175 = None
    squeeze_259: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_86, [0, 2, 3]);  rsqrt_86 = None
    mul_623: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_258, 0.1)
    mul_624: "f32[256]" = torch.ops.aten.mul.Tensor(primals_777, 0.9)
    add_452: "f32[256]" = torch.ops.aten.add.Tensor(mul_623, mul_624);  mul_623 = mul_624 = None
    squeeze_260: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_174, [0, 2, 3]);  getitem_174 = None
    mul_625: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_260, 1.0004885197850513);  squeeze_260 = None
    mul_626: "f32[256]" = torch.ops.aten.mul.Tensor(mul_625, 0.1);  mul_625 = None
    mul_627: "f32[256]" = torch.ops.aten.mul.Tensor(primals_778, 0.9)
    add_453: "f32[256]" = torch.ops.aten.add.Tensor(mul_626, mul_627);  mul_626 = mul_627 = None
    unsqueeze_344: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_320, -1)
    unsqueeze_345: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_344, -1);  unsqueeze_344 = None
    mul_628: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_622, unsqueeze_345);  mul_622 = unsqueeze_345 = None
    unsqueeze_346: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_321, -1);  primals_321 = None
    unsqueeze_347: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_346, -1);  unsqueeze_346 = None
    add_454: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_628, unsqueeze_347);  mul_628 = unsqueeze_347 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_83: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_454);  add_454 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_107: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_83, primals_322, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_455: "i64[]" = torch.ops.aten.add.Tensor(primals_782, 1)
    var_mean_87 = torch.ops.aten.var_mean.correction(convolution_107, [0, 2, 3], correction = 0, keepdim = True)
    getitem_176: "f32[1, 512, 1, 1]" = var_mean_87[0]
    getitem_177: "f32[1, 512, 1, 1]" = var_mean_87[1];  var_mean_87 = None
    add_456: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_176, 1e-05)
    rsqrt_87: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_456);  add_456 = None
    sub_107: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_107, getitem_177)
    mul_629: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_107, rsqrt_87);  sub_107 = None
    squeeze_261: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_177, [0, 2, 3]);  getitem_177 = None
    squeeze_262: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_87, [0, 2, 3]);  rsqrt_87 = None
    mul_630: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_261, 0.1)
    mul_631: "f32[512]" = torch.ops.aten.mul.Tensor(primals_780, 0.9)
    add_457: "f32[512]" = torch.ops.aten.add.Tensor(mul_630, mul_631);  mul_630 = mul_631 = None
    squeeze_263: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_176, [0, 2, 3]);  getitem_176 = None
    mul_632: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_263, 1.0004885197850513);  squeeze_263 = None
    mul_633: "f32[512]" = torch.ops.aten.mul.Tensor(mul_632, 0.1);  mul_632 = None
    mul_634: "f32[512]" = torch.ops.aten.mul.Tensor(primals_781, 0.9)
    add_458: "f32[512]" = torch.ops.aten.add.Tensor(mul_633, mul_634);  mul_633 = mul_634 = None
    unsqueeze_348: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_323, -1)
    unsqueeze_349: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_348, -1);  unsqueeze_348 = None
    mul_635: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_629, unsqueeze_349);  mul_629 = unsqueeze_349 = None
    unsqueeze_350: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_324, -1);  primals_324 = None
    unsqueeze_351: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_350, -1);  unsqueeze_350 = None
    add_459: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_635, unsqueeze_351);  mul_635 = unsqueeze_351 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_84: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_459);  add_459 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_121: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_84, [8, 2, 256, 16, 16])
    sum_61: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_121, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_20: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_61, [2, 3], True);  sum_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_108: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_20, primals_325, primals_326, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_326 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_460: "i64[]" = torch.ops.aten.add.Tensor(primals_785, 1)
    var_mean_88 = torch.ops.aten.var_mean.correction(convolution_108, [0, 2, 3], correction = 0, keepdim = True)
    getitem_178: "f32[1, 128, 1, 1]" = var_mean_88[0]
    getitem_179: "f32[1, 128, 1, 1]" = var_mean_88[1];  var_mean_88 = None
    add_461: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_178, 1e-05)
    rsqrt_88: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_461);  add_461 = None
    sub_108: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_108, getitem_179)
    mul_636: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_108, rsqrt_88);  sub_108 = None
    squeeze_264: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_179, [0, 2, 3]);  getitem_179 = None
    squeeze_265: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_88, [0, 2, 3]);  rsqrt_88 = None
    mul_637: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_264, 0.1)
    mul_638: "f32[128]" = torch.ops.aten.mul.Tensor(primals_783, 0.9)
    add_462: "f32[128]" = torch.ops.aten.add.Tensor(mul_637, mul_638);  mul_637 = mul_638 = None
    squeeze_266: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_178, [0, 2, 3]);  getitem_178 = None
    mul_639: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_266, 1.1428571428571428);  squeeze_266 = None
    mul_640: "f32[128]" = torch.ops.aten.mul.Tensor(mul_639, 0.1);  mul_639 = None
    mul_641: "f32[128]" = torch.ops.aten.mul.Tensor(primals_784, 0.9)
    add_463: "f32[128]" = torch.ops.aten.add.Tensor(mul_640, mul_641);  mul_640 = mul_641 = None
    unsqueeze_352: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_327, -1)
    unsqueeze_353: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_352, -1);  unsqueeze_352 = None
    mul_642: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_636, unsqueeze_353);  mul_636 = unsqueeze_353 = None
    unsqueeze_354: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_328, -1);  primals_328 = None
    unsqueeze_355: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_354, -1);  unsqueeze_354 = None
    add_464: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_642, unsqueeze_355);  mul_642 = unsqueeze_355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_85: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_464);  add_464 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_109: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_85, primals_329, primals_330, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_330 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_122: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_109, [8, 1, 2, -1]);  convolution_109 = None
    permute_20: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_122, [0, 2, 1, 3]);  view_122 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_20: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_20, [1], True)
    sub_109: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_20, amax_20);  permute_20 = amax_20 = None
    exp_20: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_109);  sub_109 = None
    sum_62: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_20, [1], True)
    div_20: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_20, sum_62);  exp_20 = sum_62 = None
    alias_106: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_20)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_123: "f32[8, 512]" = torch.ops.aten.view.default(div_20, [8, -1]);  div_20 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_124: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_123, [8, -1, 1, 1]);  view_123 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_125: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_124, [8, 2, 256, 1, 1]);  view_124 = None
    mul_643: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_121, view_125)
    sum_63: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_643, [1]);  mul_643 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_110: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_63, primals_331, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_465: "i64[]" = torch.ops.aten.add.Tensor(primals_788, 1)
    var_mean_89 = torch.ops.aten.var_mean.correction(convolution_110, [0, 2, 3], correction = 0, keepdim = True)
    getitem_180: "f32[1, 1024, 1, 1]" = var_mean_89[0]
    getitem_181: "f32[1, 1024, 1, 1]" = var_mean_89[1];  var_mean_89 = None
    add_466: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_180, 1e-05)
    rsqrt_89: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_466);  add_466 = None
    sub_110: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_110, getitem_181)
    mul_644: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_110, rsqrt_89);  sub_110 = None
    squeeze_267: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_181, [0, 2, 3]);  getitem_181 = None
    squeeze_268: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_89, [0, 2, 3]);  rsqrt_89 = None
    mul_645: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_267, 0.1)
    mul_646: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_786, 0.9)
    add_467: "f32[1024]" = torch.ops.aten.add.Tensor(mul_645, mul_646);  mul_645 = mul_646 = None
    squeeze_269: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_180, [0, 2, 3]);  getitem_180 = None
    mul_647: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_269, 1.0004885197850513);  squeeze_269 = None
    mul_648: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_647, 0.1);  mul_647 = None
    mul_649: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_787, 0.9)
    add_468: "f32[1024]" = torch.ops.aten.add.Tensor(mul_648, mul_649);  mul_648 = mul_649 = None
    unsqueeze_356: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_332, -1)
    unsqueeze_357: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_356, -1);  unsqueeze_356 = None
    mul_650: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_644, unsqueeze_357);  mul_644 = unsqueeze_357 = None
    unsqueeze_358: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_333, -1);  primals_333 = None
    unsqueeze_359: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_358, -1);  unsqueeze_358 = None
    add_469: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_650, unsqueeze_359);  mul_650 = unsqueeze_359 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_470: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_469, relu_82);  add_469 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_86: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_470);  add_470 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_111: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_86, primals_334, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_471: "i64[]" = torch.ops.aten.add.Tensor(primals_791, 1)
    var_mean_90 = torch.ops.aten.var_mean.correction(convolution_111, [0, 2, 3], correction = 0, keepdim = True)
    getitem_182: "f32[1, 256, 1, 1]" = var_mean_90[0]
    getitem_183: "f32[1, 256, 1, 1]" = var_mean_90[1];  var_mean_90 = None
    add_472: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_182, 1e-05)
    rsqrt_90: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_472);  add_472 = None
    sub_111: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_111, getitem_183)
    mul_651: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_111, rsqrt_90);  sub_111 = None
    squeeze_270: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_183, [0, 2, 3]);  getitem_183 = None
    squeeze_271: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_90, [0, 2, 3]);  rsqrt_90 = None
    mul_652: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_270, 0.1)
    mul_653: "f32[256]" = torch.ops.aten.mul.Tensor(primals_789, 0.9)
    add_473: "f32[256]" = torch.ops.aten.add.Tensor(mul_652, mul_653);  mul_652 = mul_653 = None
    squeeze_272: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_182, [0, 2, 3]);  getitem_182 = None
    mul_654: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_272, 1.0004885197850513);  squeeze_272 = None
    mul_655: "f32[256]" = torch.ops.aten.mul.Tensor(mul_654, 0.1);  mul_654 = None
    mul_656: "f32[256]" = torch.ops.aten.mul.Tensor(primals_790, 0.9)
    add_474: "f32[256]" = torch.ops.aten.add.Tensor(mul_655, mul_656);  mul_655 = mul_656 = None
    unsqueeze_360: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_335, -1)
    unsqueeze_361: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_360, -1);  unsqueeze_360 = None
    mul_657: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_651, unsqueeze_361);  mul_651 = unsqueeze_361 = None
    unsqueeze_362: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_336, -1);  primals_336 = None
    unsqueeze_363: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_362, -1);  unsqueeze_362 = None
    add_475: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_657, unsqueeze_363);  mul_657 = unsqueeze_363 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_87: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_475);  add_475 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_112: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_87, primals_337, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_476: "i64[]" = torch.ops.aten.add.Tensor(primals_794, 1)
    var_mean_91 = torch.ops.aten.var_mean.correction(convolution_112, [0, 2, 3], correction = 0, keepdim = True)
    getitem_184: "f32[1, 512, 1, 1]" = var_mean_91[0]
    getitem_185: "f32[1, 512, 1, 1]" = var_mean_91[1];  var_mean_91 = None
    add_477: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_184, 1e-05)
    rsqrt_91: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_477);  add_477 = None
    sub_112: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_112, getitem_185)
    mul_658: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_112, rsqrt_91);  sub_112 = None
    squeeze_273: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_185, [0, 2, 3]);  getitem_185 = None
    squeeze_274: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_91, [0, 2, 3]);  rsqrt_91 = None
    mul_659: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_273, 0.1)
    mul_660: "f32[512]" = torch.ops.aten.mul.Tensor(primals_792, 0.9)
    add_478: "f32[512]" = torch.ops.aten.add.Tensor(mul_659, mul_660);  mul_659 = mul_660 = None
    squeeze_275: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_184, [0, 2, 3]);  getitem_184 = None
    mul_661: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_275, 1.0004885197850513);  squeeze_275 = None
    mul_662: "f32[512]" = torch.ops.aten.mul.Tensor(mul_661, 0.1);  mul_661 = None
    mul_663: "f32[512]" = torch.ops.aten.mul.Tensor(primals_793, 0.9)
    add_479: "f32[512]" = torch.ops.aten.add.Tensor(mul_662, mul_663);  mul_662 = mul_663 = None
    unsqueeze_364: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_338, -1)
    unsqueeze_365: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_364, -1);  unsqueeze_364 = None
    mul_664: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_658, unsqueeze_365);  mul_658 = unsqueeze_365 = None
    unsqueeze_366: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_339, -1);  primals_339 = None
    unsqueeze_367: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_366, -1);  unsqueeze_366 = None
    add_480: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_664, unsqueeze_367);  mul_664 = unsqueeze_367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_88: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_480);  add_480 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_127: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_88, [8, 2, 256, 16, 16])
    sum_64: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_127, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_21: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_64, [2, 3], True);  sum_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_113: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_21, primals_340, primals_341, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_341 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_481: "i64[]" = torch.ops.aten.add.Tensor(primals_797, 1)
    var_mean_92 = torch.ops.aten.var_mean.correction(convolution_113, [0, 2, 3], correction = 0, keepdim = True)
    getitem_186: "f32[1, 128, 1, 1]" = var_mean_92[0]
    getitem_187: "f32[1, 128, 1, 1]" = var_mean_92[1];  var_mean_92 = None
    add_482: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_186, 1e-05)
    rsqrt_92: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_482);  add_482 = None
    sub_113: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_113, getitem_187)
    mul_665: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_113, rsqrt_92);  sub_113 = None
    squeeze_276: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_187, [0, 2, 3]);  getitem_187 = None
    squeeze_277: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_92, [0, 2, 3]);  rsqrt_92 = None
    mul_666: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_276, 0.1)
    mul_667: "f32[128]" = torch.ops.aten.mul.Tensor(primals_795, 0.9)
    add_483: "f32[128]" = torch.ops.aten.add.Tensor(mul_666, mul_667);  mul_666 = mul_667 = None
    squeeze_278: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_186, [0, 2, 3]);  getitem_186 = None
    mul_668: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_278, 1.1428571428571428);  squeeze_278 = None
    mul_669: "f32[128]" = torch.ops.aten.mul.Tensor(mul_668, 0.1);  mul_668 = None
    mul_670: "f32[128]" = torch.ops.aten.mul.Tensor(primals_796, 0.9)
    add_484: "f32[128]" = torch.ops.aten.add.Tensor(mul_669, mul_670);  mul_669 = mul_670 = None
    unsqueeze_368: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_342, -1)
    unsqueeze_369: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_368, -1);  unsqueeze_368 = None
    mul_671: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_665, unsqueeze_369);  mul_665 = unsqueeze_369 = None
    unsqueeze_370: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_343, -1);  primals_343 = None
    unsqueeze_371: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_370, -1);  unsqueeze_370 = None
    add_485: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_671, unsqueeze_371);  mul_671 = unsqueeze_371 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_89: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_485);  add_485 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_114: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_89, primals_344, primals_345, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_345 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_128: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_114, [8, 1, 2, -1]);  convolution_114 = None
    permute_21: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_128, [0, 2, 1, 3]);  view_128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_21: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_21, [1], True)
    sub_114: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_21, amax_21);  permute_21 = amax_21 = None
    exp_21: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_114);  sub_114 = None
    sum_65: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_21, [1], True)
    div_21: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_21, sum_65);  exp_21 = sum_65 = None
    alias_111: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_21)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_129: "f32[8, 512]" = torch.ops.aten.view.default(div_21, [8, -1]);  div_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_130: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_129, [8, -1, 1, 1]);  view_129 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_131: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_130, [8, 2, 256, 1, 1]);  view_130 = None
    mul_672: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_127, view_131)
    sum_66: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_672, [1]);  mul_672 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_115: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_66, primals_346, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_486: "i64[]" = torch.ops.aten.add.Tensor(primals_800, 1)
    var_mean_93 = torch.ops.aten.var_mean.correction(convolution_115, [0, 2, 3], correction = 0, keepdim = True)
    getitem_188: "f32[1, 1024, 1, 1]" = var_mean_93[0]
    getitem_189: "f32[1, 1024, 1, 1]" = var_mean_93[1];  var_mean_93 = None
    add_487: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_188, 1e-05)
    rsqrt_93: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_487);  add_487 = None
    sub_115: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_115, getitem_189)
    mul_673: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_115, rsqrt_93);  sub_115 = None
    squeeze_279: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_189, [0, 2, 3]);  getitem_189 = None
    squeeze_280: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_93, [0, 2, 3]);  rsqrt_93 = None
    mul_674: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_279, 0.1)
    mul_675: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_798, 0.9)
    add_488: "f32[1024]" = torch.ops.aten.add.Tensor(mul_674, mul_675);  mul_674 = mul_675 = None
    squeeze_281: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_188, [0, 2, 3]);  getitem_188 = None
    mul_676: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_281, 1.0004885197850513);  squeeze_281 = None
    mul_677: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_676, 0.1);  mul_676 = None
    mul_678: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_799, 0.9)
    add_489: "f32[1024]" = torch.ops.aten.add.Tensor(mul_677, mul_678);  mul_677 = mul_678 = None
    unsqueeze_372: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_347, -1)
    unsqueeze_373: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_372, -1);  unsqueeze_372 = None
    mul_679: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_673, unsqueeze_373);  mul_673 = unsqueeze_373 = None
    unsqueeze_374: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_348, -1);  primals_348 = None
    unsqueeze_375: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_374, -1);  unsqueeze_374 = None
    add_490: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_679, unsqueeze_375);  mul_679 = unsqueeze_375 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_491: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_490, relu_86);  add_490 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_90: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_491);  add_491 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_116: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_90, primals_349, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_492: "i64[]" = torch.ops.aten.add.Tensor(primals_803, 1)
    var_mean_94 = torch.ops.aten.var_mean.correction(convolution_116, [0, 2, 3], correction = 0, keepdim = True)
    getitem_190: "f32[1, 256, 1, 1]" = var_mean_94[0]
    getitem_191: "f32[1, 256, 1, 1]" = var_mean_94[1];  var_mean_94 = None
    add_493: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_190, 1e-05)
    rsqrt_94: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_493);  add_493 = None
    sub_116: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_116, getitem_191)
    mul_680: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_116, rsqrt_94);  sub_116 = None
    squeeze_282: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_191, [0, 2, 3]);  getitem_191 = None
    squeeze_283: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_94, [0, 2, 3]);  rsqrt_94 = None
    mul_681: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_282, 0.1)
    mul_682: "f32[256]" = torch.ops.aten.mul.Tensor(primals_801, 0.9)
    add_494: "f32[256]" = torch.ops.aten.add.Tensor(mul_681, mul_682);  mul_681 = mul_682 = None
    squeeze_284: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_190, [0, 2, 3]);  getitem_190 = None
    mul_683: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_284, 1.0004885197850513);  squeeze_284 = None
    mul_684: "f32[256]" = torch.ops.aten.mul.Tensor(mul_683, 0.1);  mul_683 = None
    mul_685: "f32[256]" = torch.ops.aten.mul.Tensor(primals_802, 0.9)
    add_495: "f32[256]" = torch.ops.aten.add.Tensor(mul_684, mul_685);  mul_684 = mul_685 = None
    unsqueeze_376: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_350, -1)
    unsqueeze_377: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_376, -1);  unsqueeze_376 = None
    mul_686: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_680, unsqueeze_377);  mul_680 = unsqueeze_377 = None
    unsqueeze_378: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_351, -1);  primals_351 = None
    unsqueeze_379: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_378, -1);  unsqueeze_378 = None
    add_496: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_686, unsqueeze_379);  mul_686 = unsqueeze_379 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_91: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_496);  add_496 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_117: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_91, primals_352, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_497: "i64[]" = torch.ops.aten.add.Tensor(primals_806, 1)
    var_mean_95 = torch.ops.aten.var_mean.correction(convolution_117, [0, 2, 3], correction = 0, keepdim = True)
    getitem_192: "f32[1, 512, 1, 1]" = var_mean_95[0]
    getitem_193: "f32[1, 512, 1, 1]" = var_mean_95[1];  var_mean_95 = None
    add_498: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_192, 1e-05)
    rsqrt_95: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_498);  add_498 = None
    sub_117: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_117, getitem_193)
    mul_687: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_117, rsqrt_95);  sub_117 = None
    squeeze_285: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_193, [0, 2, 3]);  getitem_193 = None
    squeeze_286: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_95, [0, 2, 3]);  rsqrt_95 = None
    mul_688: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_285, 0.1)
    mul_689: "f32[512]" = torch.ops.aten.mul.Tensor(primals_804, 0.9)
    add_499: "f32[512]" = torch.ops.aten.add.Tensor(mul_688, mul_689);  mul_688 = mul_689 = None
    squeeze_287: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_192, [0, 2, 3]);  getitem_192 = None
    mul_690: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_287, 1.0004885197850513);  squeeze_287 = None
    mul_691: "f32[512]" = torch.ops.aten.mul.Tensor(mul_690, 0.1);  mul_690 = None
    mul_692: "f32[512]" = torch.ops.aten.mul.Tensor(primals_805, 0.9)
    add_500: "f32[512]" = torch.ops.aten.add.Tensor(mul_691, mul_692);  mul_691 = mul_692 = None
    unsqueeze_380: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_353, -1)
    unsqueeze_381: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_380, -1);  unsqueeze_380 = None
    mul_693: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_687, unsqueeze_381);  mul_687 = unsqueeze_381 = None
    unsqueeze_382: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_354, -1);  primals_354 = None
    unsqueeze_383: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_382, -1);  unsqueeze_382 = None
    add_501: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_693, unsqueeze_383);  mul_693 = unsqueeze_383 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_92: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_501);  add_501 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_133: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_92, [8, 2, 256, 16, 16])
    sum_67: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_133, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_22: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_67, [2, 3], True);  sum_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_118: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_22, primals_355, primals_356, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_356 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_502: "i64[]" = torch.ops.aten.add.Tensor(primals_809, 1)
    var_mean_96 = torch.ops.aten.var_mean.correction(convolution_118, [0, 2, 3], correction = 0, keepdim = True)
    getitem_194: "f32[1, 128, 1, 1]" = var_mean_96[0]
    getitem_195: "f32[1, 128, 1, 1]" = var_mean_96[1];  var_mean_96 = None
    add_503: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_194, 1e-05)
    rsqrt_96: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_503);  add_503 = None
    sub_118: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_118, getitem_195)
    mul_694: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_118, rsqrt_96);  sub_118 = None
    squeeze_288: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_195, [0, 2, 3]);  getitem_195 = None
    squeeze_289: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_96, [0, 2, 3]);  rsqrt_96 = None
    mul_695: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_288, 0.1)
    mul_696: "f32[128]" = torch.ops.aten.mul.Tensor(primals_807, 0.9)
    add_504: "f32[128]" = torch.ops.aten.add.Tensor(mul_695, mul_696);  mul_695 = mul_696 = None
    squeeze_290: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_194, [0, 2, 3]);  getitem_194 = None
    mul_697: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_290, 1.1428571428571428);  squeeze_290 = None
    mul_698: "f32[128]" = torch.ops.aten.mul.Tensor(mul_697, 0.1);  mul_697 = None
    mul_699: "f32[128]" = torch.ops.aten.mul.Tensor(primals_808, 0.9)
    add_505: "f32[128]" = torch.ops.aten.add.Tensor(mul_698, mul_699);  mul_698 = mul_699 = None
    unsqueeze_384: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_357, -1)
    unsqueeze_385: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_384, -1);  unsqueeze_384 = None
    mul_700: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_694, unsqueeze_385);  mul_694 = unsqueeze_385 = None
    unsqueeze_386: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_358, -1);  primals_358 = None
    unsqueeze_387: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_386, -1);  unsqueeze_386 = None
    add_506: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_700, unsqueeze_387);  mul_700 = unsqueeze_387 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_93: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_506);  add_506 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_119: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_93, primals_359, primals_360, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_360 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_134: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_119, [8, 1, 2, -1]);  convolution_119 = None
    permute_22: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_134, [0, 2, 1, 3]);  view_134 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_22: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_22, [1], True)
    sub_119: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_22, amax_22);  permute_22 = amax_22 = None
    exp_22: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_119);  sub_119 = None
    sum_68: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_22, [1], True)
    div_22: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_22, sum_68);  exp_22 = sum_68 = None
    alias_116: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_22)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_135: "f32[8, 512]" = torch.ops.aten.view.default(div_22, [8, -1]);  div_22 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_136: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_135, [8, -1, 1, 1]);  view_135 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_137: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_136, [8, 2, 256, 1, 1]);  view_136 = None
    mul_701: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_133, view_137)
    sum_69: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_701, [1]);  mul_701 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_120: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_69, primals_361, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_507: "i64[]" = torch.ops.aten.add.Tensor(primals_812, 1)
    var_mean_97 = torch.ops.aten.var_mean.correction(convolution_120, [0, 2, 3], correction = 0, keepdim = True)
    getitem_196: "f32[1, 1024, 1, 1]" = var_mean_97[0]
    getitem_197: "f32[1, 1024, 1, 1]" = var_mean_97[1];  var_mean_97 = None
    add_508: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_196, 1e-05)
    rsqrt_97: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_508);  add_508 = None
    sub_120: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_120, getitem_197)
    mul_702: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_120, rsqrt_97);  sub_120 = None
    squeeze_291: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_197, [0, 2, 3]);  getitem_197 = None
    squeeze_292: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_97, [0, 2, 3]);  rsqrt_97 = None
    mul_703: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_291, 0.1)
    mul_704: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_810, 0.9)
    add_509: "f32[1024]" = torch.ops.aten.add.Tensor(mul_703, mul_704);  mul_703 = mul_704 = None
    squeeze_293: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_196, [0, 2, 3]);  getitem_196 = None
    mul_705: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_293, 1.0004885197850513);  squeeze_293 = None
    mul_706: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_705, 0.1);  mul_705 = None
    mul_707: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_811, 0.9)
    add_510: "f32[1024]" = torch.ops.aten.add.Tensor(mul_706, mul_707);  mul_706 = mul_707 = None
    unsqueeze_388: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_362, -1)
    unsqueeze_389: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_388, -1);  unsqueeze_388 = None
    mul_708: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_702, unsqueeze_389);  mul_702 = unsqueeze_389 = None
    unsqueeze_390: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_363, -1);  primals_363 = None
    unsqueeze_391: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_390, -1);  unsqueeze_390 = None
    add_511: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_708, unsqueeze_391);  mul_708 = unsqueeze_391 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_512: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_511, relu_90);  add_511 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_94: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_512);  add_512 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_121: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_94, primals_364, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_513: "i64[]" = torch.ops.aten.add.Tensor(primals_815, 1)
    var_mean_98 = torch.ops.aten.var_mean.correction(convolution_121, [0, 2, 3], correction = 0, keepdim = True)
    getitem_198: "f32[1, 256, 1, 1]" = var_mean_98[0]
    getitem_199: "f32[1, 256, 1, 1]" = var_mean_98[1];  var_mean_98 = None
    add_514: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_198, 1e-05)
    rsqrt_98: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_514);  add_514 = None
    sub_121: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_121, getitem_199)
    mul_709: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_121, rsqrt_98);  sub_121 = None
    squeeze_294: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_199, [0, 2, 3]);  getitem_199 = None
    squeeze_295: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_98, [0, 2, 3]);  rsqrt_98 = None
    mul_710: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_294, 0.1)
    mul_711: "f32[256]" = torch.ops.aten.mul.Tensor(primals_813, 0.9)
    add_515: "f32[256]" = torch.ops.aten.add.Tensor(mul_710, mul_711);  mul_710 = mul_711 = None
    squeeze_296: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_198, [0, 2, 3]);  getitem_198 = None
    mul_712: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_296, 1.0004885197850513);  squeeze_296 = None
    mul_713: "f32[256]" = torch.ops.aten.mul.Tensor(mul_712, 0.1);  mul_712 = None
    mul_714: "f32[256]" = torch.ops.aten.mul.Tensor(primals_814, 0.9)
    add_516: "f32[256]" = torch.ops.aten.add.Tensor(mul_713, mul_714);  mul_713 = mul_714 = None
    unsqueeze_392: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_365, -1)
    unsqueeze_393: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_392, -1);  unsqueeze_392 = None
    mul_715: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_709, unsqueeze_393);  mul_709 = unsqueeze_393 = None
    unsqueeze_394: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_366, -1);  primals_366 = None
    unsqueeze_395: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_394, -1);  unsqueeze_394 = None
    add_517: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_715, unsqueeze_395);  mul_715 = unsqueeze_395 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_95: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_517);  add_517 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_122: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_95, primals_367, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_518: "i64[]" = torch.ops.aten.add.Tensor(primals_818, 1)
    var_mean_99 = torch.ops.aten.var_mean.correction(convolution_122, [0, 2, 3], correction = 0, keepdim = True)
    getitem_200: "f32[1, 512, 1, 1]" = var_mean_99[0]
    getitem_201: "f32[1, 512, 1, 1]" = var_mean_99[1];  var_mean_99 = None
    add_519: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_200, 1e-05)
    rsqrt_99: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_519);  add_519 = None
    sub_122: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_122, getitem_201)
    mul_716: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_122, rsqrt_99);  sub_122 = None
    squeeze_297: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_201, [0, 2, 3]);  getitem_201 = None
    squeeze_298: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_99, [0, 2, 3]);  rsqrt_99 = None
    mul_717: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_297, 0.1)
    mul_718: "f32[512]" = torch.ops.aten.mul.Tensor(primals_816, 0.9)
    add_520: "f32[512]" = torch.ops.aten.add.Tensor(mul_717, mul_718);  mul_717 = mul_718 = None
    squeeze_299: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_200, [0, 2, 3]);  getitem_200 = None
    mul_719: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_299, 1.0004885197850513);  squeeze_299 = None
    mul_720: "f32[512]" = torch.ops.aten.mul.Tensor(mul_719, 0.1);  mul_719 = None
    mul_721: "f32[512]" = torch.ops.aten.mul.Tensor(primals_817, 0.9)
    add_521: "f32[512]" = torch.ops.aten.add.Tensor(mul_720, mul_721);  mul_720 = mul_721 = None
    unsqueeze_396: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_368, -1)
    unsqueeze_397: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_396, -1);  unsqueeze_396 = None
    mul_722: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_716, unsqueeze_397);  mul_716 = unsqueeze_397 = None
    unsqueeze_398: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_369, -1);  primals_369 = None
    unsqueeze_399: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_398, -1);  unsqueeze_398 = None
    add_522: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_722, unsqueeze_399);  mul_722 = unsqueeze_399 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_96: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_522);  add_522 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_139: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_96, [8, 2, 256, 16, 16])
    sum_70: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_139, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_23: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_70, [2, 3], True);  sum_70 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_123: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_23, primals_370, primals_371, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_371 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_523: "i64[]" = torch.ops.aten.add.Tensor(primals_821, 1)
    var_mean_100 = torch.ops.aten.var_mean.correction(convolution_123, [0, 2, 3], correction = 0, keepdim = True)
    getitem_202: "f32[1, 128, 1, 1]" = var_mean_100[0]
    getitem_203: "f32[1, 128, 1, 1]" = var_mean_100[1];  var_mean_100 = None
    add_524: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_202, 1e-05)
    rsqrt_100: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_524);  add_524 = None
    sub_123: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_123, getitem_203)
    mul_723: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_123, rsqrt_100);  sub_123 = None
    squeeze_300: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_203, [0, 2, 3]);  getitem_203 = None
    squeeze_301: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_100, [0, 2, 3]);  rsqrt_100 = None
    mul_724: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_300, 0.1)
    mul_725: "f32[128]" = torch.ops.aten.mul.Tensor(primals_819, 0.9)
    add_525: "f32[128]" = torch.ops.aten.add.Tensor(mul_724, mul_725);  mul_724 = mul_725 = None
    squeeze_302: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_202, [0, 2, 3]);  getitem_202 = None
    mul_726: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_302, 1.1428571428571428);  squeeze_302 = None
    mul_727: "f32[128]" = torch.ops.aten.mul.Tensor(mul_726, 0.1);  mul_726 = None
    mul_728: "f32[128]" = torch.ops.aten.mul.Tensor(primals_820, 0.9)
    add_526: "f32[128]" = torch.ops.aten.add.Tensor(mul_727, mul_728);  mul_727 = mul_728 = None
    unsqueeze_400: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_372, -1)
    unsqueeze_401: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_400, -1);  unsqueeze_400 = None
    mul_729: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_723, unsqueeze_401);  mul_723 = unsqueeze_401 = None
    unsqueeze_402: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_373, -1);  primals_373 = None
    unsqueeze_403: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_402, -1);  unsqueeze_402 = None
    add_527: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_729, unsqueeze_403);  mul_729 = unsqueeze_403 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_97: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_527);  add_527 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_124: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_97, primals_374, primals_375, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_375 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_140: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_124, [8, 1, 2, -1]);  convolution_124 = None
    permute_23: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_140, [0, 2, 1, 3]);  view_140 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_23: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_23, [1], True)
    sub_124: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_23, amax_23);  permute_23 = amax_23 = None
    exp_23: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_124);  sub_124 = None
    sum_71: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_23, [1], True)
    div_23: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_23, sum_71);  exp_23 = sum_71 = None
    alias_121: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_23)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_141: "f32[8, 512]" = torch.ops.aten.view.default(div_23, [8, -1]);  div_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_142: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_141, [8, -1, 1, 1]);  view_141 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_143: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_142, [8, 2, 256, 1, 1]);  view_142 = None
    mul_730: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_139, view_143)
    sum_72: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_730, [1]);  mul_730 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_125: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_72, primals_376, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_528: "i64[]" = torch.ops.aten.add.Tensor(primals_824, 1)
    var_mean_101 = torch.ops.aten.var_mean.correction(convolution_125, [0, 2, 3], correction = 0, keepdim = True)
    getitem_204: "f32[1, 1024, 1, 1]" = var_mean_101[0]
    getitem_205: "f32[1, 1024, 1, 1]" = var_mean_101[1];  var_mean_101 = None
    add_529: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_204, 1e-05)
    rsqrt_101: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_529);  add_529 = None
    sub_125: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_125, getitem_205)
    mul_731: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_125, rsqrt_101);  sub_125 = None
    squeeze_303: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_205, [0, 2, 3]);  getitem_205 = None
    squeeze_304: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_101, [0, 2, 3]);  rsqrt_101 = None
    mul_732: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_303, 0.1)
    mul_733: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_822, 0.9)
    add_530: "f32[1024]" = torch.ops.aten.add.Tensor(mul_732, mul_733);  mul_732 = mul_733 = None
    squeeze_305: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_204, [0, 2, 3]);  getitem_204 = None
    mul_734: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_305, 1.0004885197850513);  squeeze_305 = None
    mul_735: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_734, 0.1);  mul_734 = None
    mul_736: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_823, 0.9)
    add_531: "f32[1024]" = torch.ops.aten.add.Tensor(mul_735, mul_736);  mul_735 = mul_736 = None
    unsqueeze_404: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_377, -1)
    unsqueeze_405: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_404, -1);  unsqueeze_404 = None
    mul_737: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_731, unsqueeze_405);  mul_731 = unsqueeze_405 = None
    unsqueeze_406: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_378, -1);  primals_378 = None
    unsqueeze_407: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_406, -1);  unsqueeze_406 = None
    add_532: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_737, unsqueeze_407);  mul_737 = unsqueeze_407 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_533: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_532, relu_94);  add_532 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_98: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_533);  add_533 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_126: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_98, primals_379, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_534: "i64[]" = torch.ops.aten.add.Tensor(primals_827, 1)
    var_mean_102 = torch.ops.aten.var_mean.correction(convolution_126, [0, 2, 3], correction = 0, keepdim = True)
    getitem_206: "f32[1, 256, 1, 1]" = var_mean_102[0]
    getitem_207: "f32[1, 256, 1, 1]" = var_mean_102[1];  var_mean_102 = None
    add_535: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_206, 1e-05)
    rsqrt_102: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_535);  add_535 = None
    sub_126: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_126, getitem_207)
    mul_738: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_126, rsqrt_102);  sub_126 = None
    squeeze_306: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_207, [0, 2, 3]);  getitem_207 = None
    squeeze_307: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_102, [0, 2, 3]);  rsqrt_102 = None
    mul_739: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_306, 0.1)
    mul_740: "f32[256]" = torch.ops.aten.mul.Tensor(primals_825, 0.9)
    add_536: "f32[256]" = torch.ops.aten.add.Tensor(mul_739, mul_740);  mul_739 = mul_740 = None
    squeeze_308: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_206, [0, 2, 3]);  getitem_206 = None
    mul_741: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_308, 1.0004885197850513);  squeeze_308 = None
    mul_742: "f32[256]" = torch.ops.aten.mul.Tensor(mul_741, 0.1);  mul_741 = None
    mul_743: "f32[256]" = torch.ops.aten.mul.Tensor(primals_826, 0.9)
    add_537: "f32[256]" = torch.ops.aten.add.Tensor(mul_742, mul_743);  mul_742 = mul_743 = None
    unsqueeze_408: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_380, -1)
    unsqueeze_409: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_408, -1);  unsqueeze_408 = None
    mul_744: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_738, unsqueeze_409);  mul_738 = unsqueeze_409 = None
    unsqueeze_410: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_381, -1);  primals_381 = None
    unsqueeze_411: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_410, -1);  unsqueeze_410 = None
    add_538: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_744, unsqueeze_411);  mul_744 = unsqueeze_411 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_99: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_538);  add_538 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_127: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_99, primals_382, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_539: "i64[]" = torch.ops.aten.add.Tensor(primals_830, 1)
    var_mean_103 = torch.ops.aten.var_mean.correction(convolution_127, [0, 2, 3], correction = 0, keepdim = True)
    getitem_208: "f32[1, 512, 1, 1]" = var_mean_103[0]
    getitem_209: "f32[1, 512, 1, 1]" = var_mean_103[1];  var_mean_103 = None
    add_540: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_208, 1e-05)
    rsqrt_103: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_540);  add_540 = None
    sub_127: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_127, getitem_209)
    mul_745: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_127, rsqrt_103);  sub_127 = None
    squeeze_309: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_209, [0, 2, 3]);  getitem_209 = None
    squeeze_310: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_103, [0, 2, 3]);  rsqrt_103 = None
    mul_746: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_309, 0.1)
    mul_747: "f32[512]" = torch.ops.aten.mul.Tensor(primals_828, 0.9)
    add_541: "f32[512]" = torch.ops.aten.add.Tensor(mul_746, mul_747);  mul_746 = mul_747 = None
    squeeze_311: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_208, [0, 2, 3]);  getitem_208 = None
    mul_748: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_311, 1.0004885197850513);  squeeze_311 = None
    mul_749: "f32[512]" = torch.ops.aten.mul.Tensor(mul_748, 0.1);  mul_748 = None
    mul_750: "f32[512]" = torch.ops.aten.mul.Tensor(primals_829, 0.9)
    add_542: "f32[512]" = torch.ops.aten.add.Tensor(mul_749, mul_750);  mul_749 = mul_750 = None
    unsqueeze_412: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_383, -1)
    unsqueeze_413: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_412, -1);  unsqueeze_412 = None
    mul_751: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_745, unsqueeze_413);  mul_745 = unsqueeze_413 = None
    unsqueeze_414: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_384, -1);  primals_384 = None
    unsqueeze_415: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_414, -1);  unsqueeze_414 = None
    add_543: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_751, unsqueeze_415);  mul_751 = unsqueeze_415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_100: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_543);  add_543 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_145: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_100, [8, 2, 256, 16, 16])
    sum_73: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_145, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_24: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_73, [2, 3], True);  sum_73 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_128: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_24, primals_385, primals_386, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_386 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_544: "i64[]" = torch.ops.aten.add.Tensor(primals_833, 1)
    var_mean_104 = torch.ops.aten.var_mean.correction(convolution_128, [0, 2, 3], correction = 0, keepdim = True)
    getitem_210: "f32[1, 128, 1, 1]" = var_mean_104[0]
    getitem_211: "f32[1, 128, 1, 1]" = var_mean_104[1];  var_mean_104 = None
    add_545: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_210, 1e-05)
    rsqrt_104: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_545);  add_545 = None
    sub_128: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_128, getitem_211)
    mul_752: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_128, rsqrt_104);  sub_128 = None
    squeeze_312: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_211, [0, 2, 3]);  getitem_211 = None
    squeeze_313: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_104, [0, 2, 3]);  rsqrt_104 = None
    mul_753: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_312, 0.1)
    mul_754: "f32[128]" = torch.ops.aten.mul.Tensor(primals_831, 0.9)
    add_546: "f32[128]" = torch.ops.aten.add.Tensor(mul_753, mul_754);  mul_753 = mul_754 = None
    squeeze_314: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_210, [0, 2, 3]);  getitem_210 = None
    mul_755: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_314, 1.1428571428571428);  squeeze_314 = None
    mul_756: "f32[128]" = torch.ops.aten.mul.Tensor(mul_755, 0.1);  mul_755 = None
    mul_757: "f32[128]" = torch.ops.aten.mul.Tensor(primals_832, 0.9)
    add_547: "f32[128]" = torch.ops.aten.add.Tensor(mul_756, mul_757);  mul_756 = mul_757 = None
    unsqueeze_416: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_387, -1)
    unsqueeze_417: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_416, -1);  unsqueeze_416 = None
    mul_758: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_752, unsqueeze_417);  mul_752 = unsqueeze_417 = None
    unsqueeze_418: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_388, -1);  primals_388 = None
    unsqueeze_419: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_418, -1);  unsqueeze_418 = None
    add_548: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_758, unsqueeze_419);  mul_758 = unsqueeze_419 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_101: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_548);  add_548 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_129: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_101, primals_389, primals_390, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_390 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_146: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_129, [8, 1, 2, -1]);  convolution_129 = None
    permute_24: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_146, [0, 2, 1, 3]);  view_146 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_24: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_24, [1], True)
    sub_129: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_24, amax_24);  permute_24 = amax_24 = None
    exp_24: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_129);  sub_129 = None
    sum_74: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_24, [1], True)
    div_24: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_24, sum_74);  exp_24 = sum_74 = None
    alias_126: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_24)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_147: "f32[8, 512]" = torch.ops.aten.view.default(div_24, [8, -1]);  div_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_148: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_147, [8, -1, 1, 1]);  view_147 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_149: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_148, [8, 2, 256, 1, 1]);  view_148 = None
    mul_759: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_145, view_149)
    sum_75: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_759, [1]);  mul_759 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_130: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_75, primals_391, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_549: "i64[]" = torch.ops.aten.add.Tensor(primals_836, 1)
    var_mean_105 = torch.ops.aten.var_mean.correction(convolution_130, [0, 2, 3], correction = 0, keepdim = True)
    getitem_212: "f32[1, 1024, 1, 1]" = var_mean_105[0]
    getitem_213: "f32[1, 1024, 1, 1]" = var_mean_105[1];  var_mean_105 = None
    add_550: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_212, 1e-05)
    rsqrt_105: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_550);  add_550 = None
    sub_130: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_130, getitem_213)
    mul_760: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_130, rsqrt_105);  sub_130 = None
    squeeze_315: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_213, [0, 2, 3]);  getitem_213 = None
    squeeze_316: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_105, [0, 2, 3]);  rsqrt_105 = None
    mul_761: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_315, 0.1)
    mul_762: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_834, 0.9)
    add_551: "f32[1024]" = torch.ops.aten.add.Tensor(mul_761, mul_762);  mul_761 = mul_762 = None
    squeeze_317: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_212, [0, 2, 3]);  getitem_212 = None
    mul_763: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_317, 1.0004885197850513);  squeeze_317 = None
    mul_764: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_763, 0.1);  mul_763 = None
    mul_765: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_835, 0.9)
    add_552: "f32[1024]" = torch.ops.aten.add.Tensor(mul_764, mul_765);  mul_764 = mul_765 = None
    unsqueeze_420: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_392, -1)
    unsqueeze_421: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_420, -1);  unsqueeze_420 = None
    mul_766: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_760, unsqueeze_421);  mul_760 = unsqueeze_421 = None
    unsqueeze_422: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_393, -1);  primals_393 = None
    unsqueeze_423: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_422, -1);  unsqueeze_422 = None
    add_553: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_766, unsqueeze_423);  mul_766 = unsqueeze_423 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_554: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_553, relu_98);  add_553 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_102: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_554);  add_554 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_131: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_102, primals_394, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_555: "i64[]" = torch.ops.aten.add.Tensor(primals_839, 1)
    var_mean_106 = torch.ops.aten.var_mean.correction(convolution_131, [0, 2, 3], correction = 0, keepdim = True)
    getitem_214: "f32[1, 256, 1, 1]" = var_mean_106[0]
    getitem_215: "f32[1, 256, 1, 1]" = var_mean_106[1];  var_mean_106 = None
    add_556: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_214, 1e-05)
    rsqrt_106: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_556);  add_556 = None
    sub_131: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_131, getitem_215)
    mul_767: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_131, rsqrt_106);  sub_131 = None
    squeeze_318: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_215, [0, 2, 3]);  getitem_215 = None
    squeeze_319: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_106, [0, 2, 3]);  rsqrt_106 = None
    mul_768: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_318, 0.1)
    mul_769: "f32[256]" = torch.ops.aten.mul.Tensor(primals_837, 0.9)
    add_557: "f32[256]" = torch.ops.aten.add.Tensor(mul_768, mul_769);  mul_768 = mul_769 = None
    squeeze_320: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_214, [0, 2, 3]);  getitem_214 = None
    mul_770: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_320, 1.0004885197850513);  squeeze_320 = None
    mul_771: "f32[256]" = torch.ops.aten.mul.Tensor(mul_770, 0.1);  mul_770 = None
    mul_772: "f32[256]" = torch.ops.aten.mul.Tensor(primals_838, 0.9)
    add_558: "f32[256]" = torch.ops.aten.add.Tensor(mul_771, mul_772);  mul_771 = mul_772 = None
    unsqueeze_424: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_395, -1)
    unsqueeze_425: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_424, -1);  unsqueeze_424 = None
    mul_773: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_767, unsqueeze_425);  mul_767 = unsqueeze_425 = None
    unsqueeze_426: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_396, -1);  primals_396 = None
    unsqueeze_427: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_426, -1);  unsqueeze_426 = None
    add_559: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_773, unsqueeze_427);  mul_773 = unsqueeze_427 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_103: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_559);  add_559 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_132: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_103, primals_397, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_560: "i64[]" = torch.ops.aten.add.Tensor(primals_842, 1)
    var_mean_107 = torch.ops.aten.var_mean.correction(convolution_132, [0, 2, 3], correction = 0, keepdim = True)
    getitem_216: "f32[1, 512, 1, 1]" = var_mean_107[0]
    getitem_217: "f32[1, 512, 1, 1]" = var_mean_107[1];  var_mean_107 = None
    add_561: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_216, 1e-05)
    rsqrt_107: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_561);  add_561 = None
    sub_132: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_132, getitem_217)
    mul_774: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_132, rsqrt_107);  sub_132 = None
    squeeze_321: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_217, [0, 2, 3]);  getitem_217 = None
    squeeze_322: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_107, [0, 2, 3]);  rsqrt_107 = None
    mul_775: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_321, 0.1)
    mul_776: "f32[512]" = torch.ops.aten.mul.Tensor(primals_840, 0.9)
    add_562: "f32[512]" = torch.ops.aten.add.Tensor(mul_775, mul_776);  mul_775 = mul_776 = None
    squeeze_323: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_216, [0, 2, 3]);  getitem_216 = None
    mul_777: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_323, 1.0004885197850513);  squeeze_323 = None
    mul_778: "f32[512]" = torch.ops.aten.mul.Tensor(mul_777, 0.1);  mul_777 = None
    mul_779: "f32[512]" = torch.ops.aten.mul.Tensor(primals_841, 0.9)
    add_563: "f32[512]" = torch.ops.aten.add.Tensor(mul_778, mul_779);  mul_778 = mul_779 = None
    unsqueeze_428: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_398, -1)
    unsqueeze_429: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_428, -1);  unsqueeze_428 = None
    mul_780: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_774, unsqueeze_429);  mul_774 = unsqueeze_429 = None
    unsqueeze_430: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_399, -1);  primals_399 = None
    unsqueeze_431: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_430, -1);  unsqueeze_430 = None
    add_564: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_780, unsqueeze_431);  mul_780 = unsqueeze_431 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_104: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_564);  add_564 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_151: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_104, [8, 2, 256, 16, 16])
    sum_76: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_151, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_25: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_76, [2, 3], True);  sum_76 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_133: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_25, primals_400, primals_401, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_401 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_565: "i64[]" = torch.ops.aten.add.Tensor(primals_845, 1)
    var_mean_108 = torch.ops.aten.var_mean.correction(convolution_133, [0, 2, 3], correction = 0, keepdim = True)
    getitem_218: "f32[1, 128, 1, 1]" = var_mean_108[0]
    getitem_219: "f32[1, 128, 1, 1]" = var_mean_108[1];  var_mean_108 = None
    add_566: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_218, 1e-05)
    rsqrt_108: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_566);  add_566 = None
    sub_133: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_133, getitem_219)
    mul_781: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_133, rsqrt_108);  sub_133 = None
    squeeze_324: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_219, [0, 2, 3]);  getitem_219 = None
    squeeze_325: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_108, [0, 2, 3]);  rsqrt_108 = None
    mul_782: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_324, 0.1)
    mul_783: "f32[128]" = torch.ops.aten.mul.Tensor(primals_843, 0.9)
    add_567: "f32[128]" = torch.ops.aten.add.Tensor(mul_782, mul_783);  mul_782 = mul_783 = None
    squeeze_326: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_218, [0, 2, 3]);  getitem_218 = None
    mul_784: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_326, 1.1428571428571428);  squeeze_326 = None
    mul_785: "f32[128]" = torch.ops.aten.mul.Tensor(mul_784, 0.1);  mul_784 = None
    mul_786: "f32[128]" = torch.ops.aten.mul.Tensor(primals_844, 0.9)
    add_568: "f32[128]" = torch.ops.aten.add.Tensor(mul_785, mul_786);  mul_785 = mul_786 = None
    unsqueeze_432: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_402, -1)
    unsqueeze_433: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_432, -1);  unsqueeze_432 = None
    mul_787: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_781, unsqueeze_433);  mul_781 = unsqueeze_433 = None
    unsqueeze_434: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_403, -1);  primals_403 = None
    unsqueeze_435: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_434, -1);  unsqueeze_434 = None
    add_569: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_787, unsqueeze_435);  mul_787 = unsqueeze_435 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_105: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_569);  add_569 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_134: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_105, primals_404, primals_405, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_405 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_152: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_134, [8, 1, 2, -1]);  convolution_134 = None
    permute_25: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_152, [0, 2, 1, 3]);  view_152 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_25: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_25, [1], True)
    sub_134: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_25, amax_25);  permute_25 = amax_25 = None
    exp_25: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_134);  sub_134 = None
    sum_77: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_25, [1], True)
    div_25: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_25, sum_77);  exp_25 = sum_77 = None
    alias_131: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_25)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_153: "f32[8, 512]" = torch.ops.aten.view.default(div_25, [8, -1]);  div_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_154: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_153, [8, -1, 1, 1]);  view_153 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_155: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_154, [8, 2, 256, 1, 1]);  view_154 = None
    mul_788: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_151, view_155)
    sum_78: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_788, [1]);  mul_788 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_135: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_78, primals_406, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_570: "i64[]" = torch.ops.aten.add.Tensor(primals_848, 1)
    var_mean_109 = torch.ops.aten.var_mean.correction(convolution_135, [0, 2, 3], correction = 0, keepdim = True)
    getitem_220: "f32[1, 1024, 1, 1]" = var_mean_109[0]
    getitem_221: "f32[1, 1024, 1, 1]" = var_mean_109[1];  var_mean_109 = None
    add_571: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_220, 1e-05)
    rsqrt_109: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_571);  add_571 = None
    sub_135: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_135, getitem_221)
    mul_789: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_135, rsqrt_109);  sub_135 = None
    squeeze_327: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_221, [0, 2, 3]);  getitem_221 = None
    squeeze_328: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_109, [0, 2, 3]);  rsqrt_109 = None
    mul_790: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_327, 0.1)
    mul_791: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_846, 0.9)
    add_572: "f32[1024]" = torch.ops.aten.add.Tensor(mul_790, mul_791);  mul_790 = mul_791 = None
    squeeze_329: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_220, [0, 2, 3]);  getitem_220 = None
    mul_792: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_329, 1.0004885197850513);  squeeze_329 = None
    mul_793: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_792, 0.1);  mul_792 = None
    mul_794: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_847, 0.9)
    add_573: "f32[1024]" = torch.ops.aten.add.Tensor(mul_793, mul_794);  mul_793 = mul_794 = None
    unsqueeze_436: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_407, -1)
    unsqueeze_437: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_436, -1);  unsqueeze_436 = None
    mul_795: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_789, unsqueeze_437);  mul_789 = unsqueeze_437 = None
    unsqueeze_438: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_408, -1);  primals_408 = None
    unsqueeze_439: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_438, -1);  unsqueeze_438 = None
    add_574: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_795, unsqueeze_439);  mul_795 = unsqueeze_439 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_575: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_574, relu_102);  add_574 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_106: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_575);  add_575 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_136: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_106, primals_409, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_576: "i64[]" = torch.ops.aten.add.Tensor(primals_851, 1)
    var_mean_110 = torch.ops.aten.var_mean.correction(convolution_136, [0, 2, 3], correction = 0, keepdim = True)
    getitem_222: "f32[1, 256, 1, 1]" = var_mean_110[0]
    getitem_223: "f32[1, 256, 1, 1]" = var_mean_110[1];  var_mean_110 = None
    add_577: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_222, 1e-05)
    rsqrt_110: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_577);  add_577 = None
    sub_136: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_136, getitem_223)
    mul_796: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_136, rsqrt_110);  sub_136 = None
    squeeze_330: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_223, [0, 2, 3]);  getitem_223 = None
    squeeze_331: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_110, [0, 2, 3]);  rsqrt_110 = None
    mul_797: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_330, 0.1)
    mul_798: "f32[256]" = torch.ops.aten.mul.Tensor(primals_849, 0.9)
    add_578: "f32[256]" = torch.ops.aten.add.Tensor(mul_797, mul_798);  mul_797 = mul_798 = None
    squeeze_332: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_222, [0, 2, 3]);  getitem_222 = None
    mul_799: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_332, 1.0004885197850513);  squeeze_332 = None
    mul_800: "f32[256]" = torch.ops.aten.mul.Tensor(mul_799, 0.1);  mul_799 = None
    mul_801: "f32[256]" = torch.ops.aten.mul.Tensor(primals_850, 0.9)
    add_579: "f32[256]" = torch.ops.aten.add.Tensor(mul_800, mul_801);  mul_800 = mul_801 = None
    unsqueeze_440: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_410, -1)
    unsqueeze_441: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_440, -1);  unsqueeze_440 = None
    mul_802: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_796, unsqueeze_441);  mul_796 = unsqueeze_441 = None
    unsqueeze_442: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_411, -1);  primals_411 = None
    unsqueeze_443: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_442, -1);  unsqueeze_442 = None
    add_580: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_802, unsqueeze_443);  mul_802 = unsqueeze_443 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_107: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_580);  add_580 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_137: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_107, primals_412, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_581: "i64[]" = torch.ops.aten.add.Tensor(primals_854, 1)
    var_mean_111 = torch.ops.aten.var_mean.correction(convolution_137, [0, 2, 3], correction = 0, keepdim = True)
    getitem_224: "f32[1, 512, 1, 1]" = var_mean_111[0]
    getitem_225: "f32[1, 512, 1, 1]" = var_mean_111[1];  var_mean_111 = None
    add_582: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_224, 1e-05)
    rsqrt_111: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_582);  add_582 = None
    sub_137: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_137, getitem_225)
    mul_803: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_137, rsqrt_111);  sub_137 = None
    squeeze_333: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_225, [0, 2, 3]);  getitem_225 = None
    squeeze_334: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_111, [0, 2, 3]);  rsqrt_111 = None
    mul_804: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_333, 0.1)
    mul_805: "f32[512]" = torch.ops.aten.mul.Tensor(primals_852, 0.9)
    add_583: "f32[512]" = torch.ops.aten.add.Tensor(mul_804, mul_805);  mul_804 = mul_805 = None
    squeeze_335: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_224, [0, 2, 3]);  getitem_224 = None
    mul_806: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_335, 1.0004885197850513);  squeeze_335 = None
    mul_807: "f32[512]" = torch.ops.aten.mul.Tensor(mul_806, 0.1);  mul_806 = None
    mul_808: "f32[512]" = torch.ops.aten.mul.Tensor(primals_853, 0.9)
    add_584: "f32[512]" = torch.ops.aten.add.Tensor(mul_807, mul_808);  mul_807 = mul_808 = None
    unsqueeze_444: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_413, -1)
    unsqueeze_445: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_444, -1);  unsqueeze_444 = None
    mul_809: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_803, unsqueeze_445);  mul_803 = unsqueeze_445 = None
    unsqueeze_446: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_414, -1);  primals_414 = None
    unsqueeze_447: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_446, -1);  unsqueeze_446 = None
    add_585: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_809, unsqueeze_447);  mul_809 = unsqueeze_447 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_108: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_585);  add_585 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_157: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_108, [8, 2, 256, 16, 16])
    sum_79: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_157, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_26: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_79, [2, 3], True);  sum_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_138: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_26, primals_415, primals_416, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_416 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_586: "i64[]" = torch.ops.aten.add.Tensor(primals_857, 1)
    var_mean_112 = torch.ops.aten.var_mean.correction(convolution_138, [0, 2, 3], correction = 0, keepdim = True)
    getitem_226: "f32[1, 128, 1, 1]" = var_mean_112[0]
    getitem_227: "f32[1, 128, 1, 1]" = var_mean_112[1];  var_mean_112 = None
    add_587: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_226, 1e-05)
    rsqrt_112: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_587);  add_587 = None
    sub_138: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_138, getitem_227)
    mul_810: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_138, rsqrt_112);  sub_138 = None
    squeeze_336: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_227, [0, 2, 3]);  getitem_227 = None
    squeeze_337: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_112, [0, 2, 3]);  rsqrt_112 = None
    mul_811: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_336, 0.1)
    mul_812: "f32[128]" = torch.ops.aten.mul.Tensor(primals_855, 0.9)
    add_588: "f32[128]" = torch.ops.aten.add.Tensor(mul_811, mul_812);  mul_811 = mul_812 = None
    squeeze_338: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_226, [0, 2, 3]);  getitem_226 = None
    mul_813: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_338, 1.1428571428571428);  squeeze_338 = None
    mul_814: "f32[128]" = torch.ops.aten.mul.Tensor(mul_813, 0.1);  mul_813 = None
    mul_815: "f32[128]" = torch.ops.aten.mul.Tensor(primals_856, 0.9)
    add_589: "f32[128]" = torch.ops.aten.add.Tensor(mul_814, mul_815);  mul_814 = mul_815 = None
    unsqueeze_448: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_417, -1)
    unsqueeze_449: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_448, -1);  unsqueeze_448 = None
    mul_816: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_810, unsqueeze_449);  mul_810 = unsqueeze_449 = None
    unsqueeze_450: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_418, -1);  primals_418 = None
    unsqueeze_451: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_450, -1);  unsqueeze_450 = None
    add_590: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_816, unsqueeze_451);  mul_816 = unsqueeze_451 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_109: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_590);  add_590 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_139: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_109, primals_419, primals_420, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_420 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_158: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_139, [8, 1, 2, -1]);  convolution_139 = None
    permute_26: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_158, [0, 2, 1, 3]);  view_158 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_26: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_26, [1], True)
    sub_139: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_26, amax_26);  permute_26 = amax_26 = None
    exp_26: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_139);  sub_139 = None
    sum_80: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_26, [1], True)
    div_26: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_26, sum_80);  exp_26 = sum_80 = None
    alias_136: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_26)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_159: "f32[8, 512]" = torch.ops.aten.view.default(div_26, [8, -1]);  div_26 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_160: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_159, [8, -1, 1, 1]);  view_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_161: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_160, [8, 2, 256, 1, 1]);  view_160 = None
    mul_817: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_157, view_161)
    sum_81: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_817, [1]);  mul_817 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_140: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_81, primals_421, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_591: "i64[]" = torch.ops.aten.add.Tensor(primals_860, 1)
    var_mean_113 = torch.ops.aten.var_mean.correction(convolution_140, [0, 2, 3], correction = 0, keepdim = True)
    getitem_228: "f32[1, 1024, 1, 1]" = var_mean_113[0]
    getitem_229: "f32[1, 1024, 1, 1]" = var_mean_113[1];  var_mean_113 = None
    add_592: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_228, 1e-05)
    rsqrt_113: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_592);  add_592 = None
    sub_140: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_140, getitem_229)
    mul_818: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_140, rsqrt_113);  sub_140 = None
    squeeze_339: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_229, [0, 2, 3]);  getitem_229 = None
    squeeze_340: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_113, [0, 2, 3]);  rsqrt_113 = None
    mul_819: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_339, 0.1)
    mul_820: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_858, 0.9)
    add_593: "f32[1024]" = torch.ops.aten.add.Tensor(mul_819, mul_820);  mul_819 = mul_820 = None
    squeeze_341: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_228, [0, 2, 3]);  getitem_228 = None
    mul_821: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_341, 1.0004885197850513);  squeeze_341 = None
    mul_822: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_821, 0.1);  mul_821 = None
    mul_823: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_859, 0.9)
    add_594: "f32[1024]" = torch.ops.aten.add.Tensor(mul_822, mul_823);  mul_822 = mul_823 = None
    unsqueeze_452: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_422, -1)
    unsqueeze_453: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_452, -1);  unsqueeze_452 = None
    mul_824: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_818, unsqueeze_453);  mul_818 = unsqueeze_453 = None
    unsqueeze_454: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_423, -1);  primals_423 = None
    unsqueeze_455: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_454, -1);  unsqueeze_454 = None
    add_595: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_824, unsqueeze_455);  mul_824 = unsqueeze_455 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_596: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_595, relu_106);  add_595 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_110: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_596);  add_596 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_141: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_110, primals_424, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_597: "i64[]" = torch.ops.aten.add.Tensor(primals_863, 1)
    var_mean_114 = torch.ops.aten.var_mean.correction(convolution_141, [0, 2, 3], correction = 0, keepdim = True)
    getitem_230: "f32[1, 256, 1, 1]" = var_mean_114[0]
    getitem_231: "f32[1, 256, 1, 1]" = var_mean_114[1];  var_mean_114 = None
    add_598: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_230, 1e-05)
    rsqrt_114: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_598);  add_598 = None
    sub_141: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_141, getitem_231)
    mul_825: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_141, rsqrt_114);  sub_141 = None
    squeeze_342: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_231, [0, 2, 3]);  getitem_231 = None
    squeeze_343: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_114, [0, 2, 3]);  rsqrt_114 = None
    mul_826: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_342, 0.1)
    mul_827: "f32[256]" = torch.ops.aten.mul.Tensor(primals_861, 0.9)
    add_599: "f32[256]" = torch.ops.aten.add.Tensor(mul_826, mul_827);  mul_826 = mul_827 = None
    squeeze_344: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_230, [0, 2, 3]);  getitem_230 = None
    mul_828: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_344, 1.0004885197850513);  squeeze_344 = None
    mul_829: "f32[256]" = torch.ops.aten.mul.Tensor(mul_828, 0.1);  mul_828 = None
    mul_830: "f32[256]" = torch.ops.aten.mul.Tensor(primals_862, 0.9)
    add_600: "f32[256]" = torch.ops.aten.add.Tensor(mul_829, mul_830);  mul_829 = mul_830 = None
    unsqueeze_456: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_425, -1)
    unsqueeze_457: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_456, -1);  unsqueeze_456 = None
    mul_831: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_825, unsqueeze_457);  mul_825 = unsqueeze_457 = None
    unsqueeze_458: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_426, -1);  primals_426 = None
    unsqueeze_459: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_458, -1);  unsqueeze_458 = None
    add_601: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_831, unsqueeze_459);  mul_831 = unsqueeze_459 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_111: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_601);  add_601 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_142: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_111, primals_427, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_602: "i64[]" = torch.ops.aten.add.Tensor(primals_866, 1)
    var_mean_115 = torch.ops.aten.var_mean.correction(convolution_142, [0, 2, 3], correction = 0, keepdim = True)
    getitem_232: "f32[1, 512, 1, 1]" = var_mean_115[0]
    getitem_233: "f32[1, 512, 1, 1]" = var_mean_115[1];  var_mean_115 = None
    add_603: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_232, 1e-05)
    rsqrt_115: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_603);  add_603 = None
    sub_142: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_142, getitem_233)
    mul_832: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_142, rsqrt_115);  sub_142 = None
    squeeze_345: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_233, [0, 2, 3]);  getitem_233 = None
    squeeze_346: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_115, [0, 2, 3]);  rsqrt_115 = None
    mul_833: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_345, 0.1)
    mul_834: "f32[512]" = torch.ops.aten.mul.Tensor(primals_864, 0.9)
    add_604: "f32[512]" = torch.ops.aten.add.Tensor(mul_833, mul_834);  mul_833 = mul_834 = None
    squeeze_347: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_232, [0, 2, 3]);  getitem_232 = None
    mul_835: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_347, 1.0004885197850513);  squeeze_347 = None
    mul_836: "f32[512]" = torch.ops.aten.mul.Tensor(mul_835, 0.1);  mul_835 = None
    mul_837: "f32[512]" = torch.ops.aten.mul.Tensor(primals_865, 0.9)
    add_605: "f32[512]" = torch.ops.aten.add.Tensor(mul_836, mul_837);  mul_836 = mul_837 = None
    unsqueeze_460: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_428, -1)
    unsqueeze_461: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_460, -1);  unsqueeze_460 = None
    mul_838: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_832, unsqueeze_461);  mul_832 = unsqueeze_461 = None
    unsqueeze_462: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_429, -1);  primals_429 = None
    unsqueeze_463: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_462, -1);  unsqueeze_462 = None
    add_606: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_838, unsqueeze_463);  mul_838 = unsqueeze_463 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_112: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_606);  add_606 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_163: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_112, [8, 2, 256, 16, 16])
    sum_82: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_163, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_27: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_82, [2, 3], True);  sum_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_143: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_27, primals_430, primals_431, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_431 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_607: "i64[]" = torch.ops.aten.add.Tensor(primals_869, 1)
    var_mean_116 = torch.ops.aten.var_mean.correction(convolution_143, [0, 2, 3], correction = 0, keepdim = True)
    getitem_234: "f32[1, 128, 1, 1]" = var_mean_116[0]
    getitem_235: "f32[1, 128, 1, 1]" = var_mean_116[1];  var_mean_116 = None
    add_608: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_234, 1e-05)
    rsqrt_116: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_608);  add_608 = None
    sub_143: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_143, getitem_235)
    mul_839: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_143, rsqrt_116);  sub_143 = None
    squeeze_348: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_235, [0, 2, 3]);  getitem_235 = None
    squeeze_349: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_116, [0, 2, 3]);  rsqrt_116 = None
    mul_840: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_348, 0.1)
    mul_841: "f32[128]" = torch.ops.aten.mul.Tensor(primals_867, 0.9)
    add_609: "f32[128]" = torch.ops.aten.add.Tensor(mul_840, mul_841);  mul_840 = mul_841 = None
    squeeze_350: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_234, [0, 2, 3]);  getitem_234 = None
    mul_842: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_350, 1.1428571428571428);  squeeze_350 = None
    mul_843: "f32[128]" = torch.ops.aten.mul.Tensor(mul_842, 0.1);  mul_842 = None
    mul_844: "f32[128]" = torch.ops.aten.mul.Tensor(primals_868, 0.9)
    add_610: "f32[128]" = torch.ops.aten.add.Tensor(mul_843, mul_844);  mul_843 = mul_844 = None
    unsqueeze_464: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_432, -1)
    unsqueeze_465: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_464, -1);  unsqueeze_464 = None
    mul_845: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_839, unsqueeze_465);  mul_839 = unsqueeze_465 = None
    unsqueeze_466: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_433, -1);  primals_433 = None
    unsqueeze_467: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_466, -1);  unsqueeze_466 = None
    add_611: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_845, unsqueeze_467);  mul_845 = unsqueeze_467 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_113: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_611);  add_611 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_144: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_113, primals_434, primals_435, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_435 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_164: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_144, [8, 1, 2, -1]);  convolution_144 = None
    permute_27: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_164, [0, 2, 1, 3]);  view_164 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_27: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_27, [1], True)
    sub_144: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_27, amax_27);  permute_27 = amax_27 = None
    exp_27: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_144);  sub_144 = None
    sum_83: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_27, [1], True)
    div_27: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_27, sum_83);  exp_27 = sum_83 = None
    alias_141: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_27)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_165: "f32[8, 512]" = torch.ops.aten.view.default(div_27, [8, -1]);  div_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_166: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_165, [8, -1, 1, 1]);  view_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_167: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_166, [8, 2, 256, 1, 1]);  view_166 = None
    mul_846: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_163, view_167)
    sum_84: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_846, [1]);  mul_846 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_145: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_84, primals_436, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_612: "i64[]" = torch.ops.aten.add.Tensor(primals_872, 1)
    var_mean_117 = torch.ops.aten.var_mean.correction(convolution_145, [0, 2, 3], correction = 0, keepdim = True)
    getitem_236: "f32[1, 1024, 1, 1]" = var_mean_117[0]
    getitem_237: "f32[1, 1024, 1, 1]" = var_mean_117[1];  var_mean_117 = None
    add_613: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_236, 1e-05)
    rsqrt_117: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_613);  add_613 = None
    sub_145: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_145, getitem_237)
    mul_847: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_145, rsqrt_117);  sub_145 = None
    squeeze_351: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_237, [0, 2, 3]);  getitem_237 = None
    squeeze_352: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_117, [0, 2, 3]);  rsqrt_117 = None
    mul_848: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_351, 0.1)
    mul_849: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_870, 0.9)
    add_614: "f32[1024]" = torch.ops.aten.add.Tensor(mul_848, mul_849);  mul_848 = mul_849 = None
    squeeze_353: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_236, [0, 2, 3]);  getitem_236 = None
    mul_850: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_353, 1.0004885197850513);  squeeze_353 = None
    mul_851: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_850, 0.1);  mul_850 = None
    mul_852: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_871, 0.9)
    add_615: "f32[1024]" = torch.ops.aten.add.Tensor(mul_851, mul_852);  mul_851 = mul_852 = None
    unsqueeze_468: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_437, -1)
    unsqueeze_469: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_468, -1);  unsqueeze_468 = None
    mul_853: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_847, unsqueeze_469);  mul_847 = unsqueeze_469 = None
    unsqueeze_470: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_438, -1);  primals_438 = None
    unsqueeze_471: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_470, -1);  unsqueeze_470 = None
    add_616: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_853, unsqueeze_471);  mul_853 = unsqueeze_471 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_617: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_616, relu_110);  add_616 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_114: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_617);  add_617 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_146: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_114, primals_439, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_618: "i64[]" = torch.ops.aten.add.Tensor(primals_875, 1)
    var_mean_118 = torch.ops.aten.var_mean.correction(convolution_146, [0, 2, 3], correction = 0, keepdim = True)
    getitem_238: "f32[1, 256, 1, 1]" = var_mean_118[0]
    getitem_239: "f32[1, 256, 1, 1]" = var_mean_118[1];  var_mean_118 = None
    add_619: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_238, 1e-05)
    rsqrt_118: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_619);  add_619 = None
    sub_146: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_146, getitem_239)
    mul_854: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_146, rsqrt_118);  sub_146 = None
    squeeze_354: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_239, [0, 2, 3]);  getitem_239 = None
    squeeze_355: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_118, [0, 2, 3]);  rsqrt_118 = None
    mul_855: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_354, 0.1)
    mul_856: "f32[256]" = torch.ops.aten.mul.Tensor(primals_873, 0.9)
    add_620: "f32[256]" = torch.ops.aten.add.Tensor(mul_855, mul_856);  mul_855 = mul_856 = None
    squeeze_356: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_238, [0, 2, 3]);  getitem_238 = None
    mul_857: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_356, 1.0004885197850513);  squeeze_356 = None
    mul_858: "f32[256]" = torch.ops.aten.mul.Tensor(mul_857, 0.1);  mul_857 = None
    mul_859: "f32[256]" = torch.ops.aten.mul.Tensor(primals_874, 0.9)
    add_621: "f32[256]" = torch.ops.aten.add.Tensor(mul_858, mul_859);  mul_858 = mul_859 = None
    unsqueeze_472: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_440, -1)
    unsqueeze_473: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_472, -1);  unsqueeze_472 = None
    mul_860: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_854, unsqueeze_473);  mul_854 = unsqueeze_473 = None
    unsqueeze_474: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_441, -1);  primals_441 = None
    unsqueeze_475: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_474, -1);  unsqueeze_474 = None
    add_622: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_860, unsqueeze_475);  mul_860 = unsqueeze_475 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_115: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_622);  add_622 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_147: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_115, primals_442, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_623: "i64[]" = torch.ops.aten.add.Tensor(primals_878, 1)
    var_mean_119 = torch.ops.aten.var_mean.correction(convolution_147, [0, 2, 3], correction = 0, keepdim = True)
    getitem_240: "f32[1, 512, 1, 1]" = var_mean_119[0]
    getitem_241: "f32[1, 512, 1, 1]" = var_mean_119[1];  var_mean_119 = None
    add_624: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_240, 1e-05)
    rsqrt_119: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_624);  add_624 = None
    sub_147: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_147, getitem_241)
    mul_861: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_147, rsqrt_119);  sub_147 = None
    squeeze_357: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_241, [0, 2, 3]);  getitem_241 = None
    squeeze_358: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_119, [0, 2, 3]);  rsqrt_119 = None
    mul_862: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_357, 0.1)
    mul_863: "f32[512]" = torch.ops.aten.mul.Tensor(primals_876, 0.9)
    add_625: "f32[512]" = torch.ops.aten.add.Tensor(mul_862, mul_863);  mul_862 = mul_863 = None
    squeeze_359: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_240, [0, 2, 3]);  getitem_240 = None
    mul_864: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_359, 1.0004885197850513);  squeeze_359 = None
    mul_865: "f32[512]" = torch.ops.aten.mul.Tensor(mul_864, 0.1);  mul_864 = None
    mul_866: "f32[512]" = torch.ops.aten.mul.Tensor(primals_877, 0.9)
    add_626: "f32[512]" = torch.ops.aten.add.Tensor(mul_865, mul_866);  mul_865 = mul_866 = None
    unsqueeze_476: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_443, -1)
    unsqueeze_477: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_476, -1);  unsqueeze_476 = None
    mul_867: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_861, unsqueeze_477);  mul_861 = unsqueeze_477 = None
    unsqueeze_478: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_444, -1);  primals_444 = None
    unsqueeze_479: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_478, -1);  unsqueeze_478 = None
    add_627: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_867, unsqueeze_479);  mul_867 = unsqueeze_479 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_116: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_627);  add_627 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_169: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_116, [8, 2, 256, 16, 16])
    sum_85: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_169, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_28: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_85, [2, 3], True);  sum_85 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_148: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_28, primals_445, primals_446, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_446 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_628: "i64[]" = torch.ops.aten.add.Tensor(primals_881, 1)
    var_mean_120 = torch.ops.aten.var_mean.correction(convolution_148, [0, 2, 3], correction = 0, keepdim = True)
    getitem_242: "f32[1, 128, 1, 1]" = var_mean_120[0]
    getitem_243: "f32[1, 128, 1, 1]" = var_mean_120[1];  var_mean_120 = None
    add_629: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_242, 1e-05)
    rsqrt_120: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_629);  add_629 = None
    sub_148: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_148, getitem_243)
    mul_868: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_148, rsqrt_120);  sub_148 = None
    squeeze_360: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_243, [0, 2, 3]);  getitem_243 = None
    squeeze_361: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_120, [0, 2, 3]);  rsqrt_120 = None
    mul_869: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_360, 0.1)
    mul_870: "f32[128]" = torch.ops.aten.mul.Tensor(primals_879, 0.9)
    add_630: "f32[128]" = torch.ops.aten.add.Tensor(mul_869, mul_870);  mul_869 = mul_870 = None
    squeeze_362: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_242, [0, 2, 3]);  getitem_242 = None
    mul_871: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_362, 1.1428571428571428);  squeeze_362 = None
    mul_872: "f32[128]" = torch.ops.aten.mul.Tensor(mul_871, 0.1);  mul_871 = None
    mul_873: "f32[128]" = torch.ops.aten.mul.Tensor(primals_880, 0.9)
    add_631: "f32[128]" = torch.ops.aten.add.Tensor(mul_872, mul_873);  mul_872 = mul_873 = None
    unsqueeze_480: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_447, -1)
    unsqueeze_481: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_480, -1);  unsqueeze_480 = None
    mul_874: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_868, unsqueeze_481);  mul_868 = unsqueeze_481 = None
    unsqueeze_482: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_448, -1);  primals_448 = None
    unsqueeze_483: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_482, -1);  unsqueeze_482 = None
    add_632: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_874, unsqueeze_483);  mul_874 = unsqueeze_483 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_117: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_632);  add_632 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_149: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_117, primals_449, primals_450, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_450 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_170: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_149, [8, 1, 2, -1]);  convolution_149 = None
    permute_28: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_170, [0, 2, 1, 3]);  view_170 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_28: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_28, [1], True)
    sub_149: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_28, amax_28);  permute_28 = amax_28 = None
    exp_28: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_149);  sub_149 = None
    sum_86: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_28, [1], True)
    div_28: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_28, sum_86);  exp_28 = sum_86 = None
    alias_146: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_28)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_171: "f32[8, 512]" = torch.ops.aten.view.default(div_28, [8, -1]);  div_28 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_172: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_171, [8, -1, 1, 1]);  view_171 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_173: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_172, [8, 2, 256, 1, 1]);  view_172 = None
    mul_875: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_169, view_173)
    sum_87: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_875, [1]);  mul_875 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_150: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_87, primals_451, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_633: "i64[]" = torch.ops.aten.add.Tensor(primals_884, 1)
    var_mean_121 = torch.ops.aten.var_mean.correction(convolution_150, [0, 2, 3], correction = 0, keepdim = True)
    getitem_244: "f32[1, 1024, 1, 1]" = var_mean_121[0]
    getitem_245: "f32[1, 1024, 1, 1]" = var_mean_121[1];  var_mean_121 = None
    add_634: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_244, 1e-05)
    rsqrt_121: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_634);  add_634 = None
    sub_150: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_150, getitem_245)
    mul_876: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_150, rsqrt_121);  sub_150 = None
    squeeze_363: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_245, [0, 2, 3]);  getitem_245 = None
    squeeze_364: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_121, [0, 2, 3]);  rsqrt_121 = None
    mul_877: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_363, 0.1)
    mul_878: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_882, 0.9)
    add_635: "f32[1024]" = torch.ops.aten.add.Tensor(mul_877, mul_878);  mul_877 = mul_878 = None
    squeeze_365: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_244, [0, 2, 3]);  getitem_244 = None
    mul_879: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_365, 1.0004885197850513);  squeeze_365 = None
    mul_880: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_879, 0.1);  mul_879 = None
    mul_881: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_883, 0.9)
    add_636: "f32[1024]" = torch.ops.aten.add.Tensor(mul_880, mul_881);  mul_880 = mul_881 = None
    unsqueeze_484: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_452, -1)
    unsqueeze_485: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_484, -1);  unsqueeze_484 = None
    mul_882: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_876, unsqueeze_485);  mul_876 = unsqueeze_485 = None
    unsqueeze_486: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_453, -1);  primals_453 = None
    unsqueeze_487: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_486, -1);  unsqueeze_486 = None
    add_637: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_882, unsqueeze_487);  mul_882 = unsqueeze_487 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_638: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_637, relu_114);  add_637 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_118: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_638);  add_638 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_151: "f32[8, 256, 16, 16]" = torch.ops.aten.convolution.default(relu_118, primals_454, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_639: "i64[]" = torch.ops.aten.add.Tensor(primals_887, 1)
    var_mean_122 = torch.ops.aten.var_mean.correction(convolution_151, [0, 2, 3], correction = 0, keepdim = True)
    getitem_246: "f32[1, 256, 1, 1]" = var_mean_122[0]
    getitem_247: "f32[1, 256, 1, 1]" = var_mean_122[1];  var_mean_122 = None
    add_640: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_246, 1e-05)
    rsqrt_122: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_640);  add_640 = None
    sub_151: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_151, getitem_247)
    mul_883: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_151, rsqrt_122);  sub_151 = None
    squeeze_366: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_247, [0, 2, 3]);  getitem_247 = None
    squeeze_367: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_122, [0, 2, 3]);  rsqrt_122 = None
    mul_884: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_366, 0.1)
    mul_885: "f32[256]" = torch.ops.aten.mul.Tensor(primals_885, 0.9)
    add_641: "f32[256]" = torch.ops.aten.add.Tensor(mul_884, mul_885);  mul_884 = mul_885 = None
    squeeze_368: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_246, [0, 2, 3]);  getitem_246 = None
    mul_886: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_368, 1.0004885197850513);  squeeze_368 = None
    mul_887: "f32[256]" = torch.ops.aten.mul.Tensor(mul_886, 0.1);  mul_886 = None
    mul_888: "f32[256]" = torch.ops.aten.mul.Tensor(primals_886, 0.9)
    add_642: "f32[256]" = torch.ops.aten.add.Tensor(mul_887, mul_888);  mul_887 = mul_888 = None
    unsqueeze_488: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_455, -1)
    unsqueeze_489: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_488, -1);  unsqueeze_488 = None
    mul_889: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(mul_883, unsqueeze_489);  mul_883 = unsqueeze_489 = None
    unsqueeze_490: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_456, -1);  primals_456 = None
    unsqueeze_491: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_490, -1);  unsqueeze_490 = None
    add_643: "f32[8, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_889, unsqueeze_491);  mul_889 = unsqueeze_491 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_119: "f32[8, 256, 16, 16]" = torch.ops.aten.relu.default(add_643);  add_643 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_152: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_119, primals_457, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_644: "i64[]" = torch.ops.aten.add.Tensor(primals_890, 1)
    var_mean_123 = torch.ops.aten.var_mean.correction(convolution_152, [0, 2, 3], correction = 0, keepdim = True)
    getitem_248: "f32[1, 512, 1, 1]" = var_mean_123[0]
    getitem_249: "f32[1, 512, 1, 1]" = var_mean_123[1];  var_mean_123 = None
    add_645: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_248, 1e-05)
    rsqrt_123: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_645);  add_645 = None
    sub_152: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_152, getitem_249)
    mul_890: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_152, rsqrt_123);  sub_152 = None
    squeeze_369: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_249, [0, 2, 3]);  getitem_249 = None
    squeeze_370: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_123, [0, 2, 3]);  rsqrt_123 = None
    mul_891: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_369, 0.1)
    mul_892: "f32[512]" = torch.ops.aten.mul.Tensor(primals_888, 0.9)
    add_646: "f32[512]" = torch.ops.aten.add.Tensor(mul_891, mul_892);  mul_891 = mul_892 = None
    squeeze_371: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_248, [0, 2, 3]);  getitem_248 = None
    mul_893: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_371, 1.0004885197850513);  squeeze_371 = None
    mul_894: "f32[512]" = torch.ops.aten.mul.Tensor(mul_893, 0.1);  mul_893 = None
    mul_895: "f32[512]" = torch.ops.aten.mul.Tensor(primals_889, 0.9)
    add_647: "f32[512]" = torch.ops.aten.add.Tensor(mul_894, mul_895);  mul_894 = mul_895 = None
    unsqueeze_492: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_458, -1)
    unsqueeze_493: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_492, -1);  unsqueeze_492 = None
    mul_896: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_890, unsqueeze_493);  mul_890 = unsqueeze_493 = None
    unsqueeze_494: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_459, -1);  primals_459 = None
    unsqueeze_495: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_494, -1);  unsqueeze_494 = None
    add_648: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_896, unsqueeze_495);  mul_896 = unsqueeze_495 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_120: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_648);  add_648 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_175: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.view.default(relu_120, [8, 2, 256, 16, 16])
    sum_88: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_175, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_29: "f32[8, 256, 1, 1]" = torch.ops.aten.mean.dim(sum_88, [2, 3], True);  sum_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_153: "f32[8, 128, 1, 1]" = torch.ops.aten.convolution.default(mean_29, primals_460, primals_461, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_461 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_649: "i64[]" = torch.ops.aten.add.Tensor(primals_893, 1)
    var_mean_124 = torch.ops.aten.var_mean.correction(convolution_153, [0, 2, 3], correction = 0, keepdim = True)
    getitem_250: "f32[1, 128, 1, 1]" = var_mean_124[0]
    getitem_251: "f32[1, 128, 1, 1]" = var_mean_124[1];  var_mean_124 = None
    add_650: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_250, 1e-05)
    rsqrt_124: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_650);  add_650 = None
    sub_153: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_153, getitem_251)
    mul_897: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_153, rsqrt_124);  sub_153 = None
    squeeze_372: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_251, [0, 2, 3]);  getitem_251 = None
    squeeze_373: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_124, [0, 2, 3]);  rsqrt_124 = None
    mul_898: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_372, 0.1)
    mul_899: "f32[128]" = torch.ops.aten.mul.Tensor(primals_891, 0.9)
    add_651: "f32[128]" = torch.ops.aten.add.Tensor(mul_898, mul_899);  mul_898 = mul_899 = None
    squeeze_374: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_250, [0, 2, 3]);  getitem_250 = None
    mul_900: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_374, 1.1428571428571428);  squeeze_374 = None
    mul_901: "f32[128]" = torch.ops.aten.mul.Tensor(mul_900, 0.1);  mul_900 = None
    mul_902: "f32[128]" = torch.ops.aten.mul.Tensor(primals_892, 0.9)
    add_652: "f32[128]" = torch.ops.aten.add.Tensor(mul_901, mul_902);  mul_901 = mul_902 = None
    unsqueeze_496: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_462, -1)
    unsqueeze_497: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_496, -1);  unsqueeze_496 = None
    mul_903: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(mul_897, unsqueeze_497);  mul_897 = unsqueeze_497 = None
    unsqueeze_498: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_463, -1);  primals_463 = None
    unsqueeze_499: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_498, -1);  unsqueeze_498 = None
    add_653: "f32[8, 128, 1, 1]" = torch.ops.aten.add.Tensor(mul_903, unsqueeze_499);  mul_903 = unsqueeze_499 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_121: "f32[8, 128, 1, 1]" = torch.ops.aten.relu.default(add_653);  add_653 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_154: "f32[8, 512, 1, 1]" = torch.ops.aten.convolution.default(relu_121, primals_464, primals_465, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_465 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_176: "f32[8, 1, 2, 256]" = torch.ops.aten.view.default(convolution_154, [8, 1, 2, -1]);  convolution_154 = None
    permute_29: "f32[8, 2, 1, 256]" = torch.ops.aten.permute.default(view_176, [0, 2, 1, 3]);  view_176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_29: "f32[8, 1, 1, 256]" = torch.ops.aten.amax.default(permute_29, [1], True)
    sub_154: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(permute_29, amax_29);  permute_29 = amax_29 = None
    exp_29: "f32[8, 2, 1, 256]" = torch.ops.aten.exp.default(sub_154);  sub_154 = None
    sum_89: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(exp_29, [1], True)
    div_29: "f32[8, 2, 1, 256]" = torch.ops.aten.div.Tensor(exp_29, sum_89);  exp_29 = sum_89 = None
    alias_151: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(div_29)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_177: "f32[8, 512]" = torch.ops.aten.view.default(div_29, [8, -1]);  div_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_178: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(view_177, [8, -1, 1, 1]);  view_177 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_179: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.view.default(view_178, [8, 2, 256, 1, 1]);  view_178 = None
    mul_904: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(view_175, view_179)
    sum_90: "f32[8, 256, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_904, [1]);  mul_904 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_155: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(sum_90, primals_466, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_654: "i64[]" = torch.ops.aten.add.Tensor(primals_896, 1)
    var_mean_125 = torch.ops.aten.var_mean.correction(convolution_155, [0, 2, 3], correction = 0, keepdim = True)
    getitem_252: "f32[1, 1024, 1, 1]" = var_mean_125[0]
    getitem_253: "f32[1, 1024, 1, 1]" = var_mean_125[1];  var_mean_125 = None
    add_655: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_252, 1e-05)
    rsqrt_125: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_655);  add_655 = None
    sub_155: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_155, getitem_253)
    mul_905: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_155, rsqrt_125);  sub_155 = None
    squeeze_375: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_253, [0, 2, 3]);  getitem_253 = None
    squeeze_376: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_125, [0, 2, 3]);  rsqrt_125 = None
    mul_906: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_375, 0.1)
    mul_907: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_894, 0.9)
    add_656: "f32[1024]" = torch.ops.aten.add.Tensor(mul_906, mul_907);  mul_906 = mul_907 = None
    squeeze_377: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_252, [0, 2, 3]);  getitem_252 = None
    mul_908: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_377, 1.0004885197850513);  squeeze_377 = None
    mul_909: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_908, 0.1);  mul_908 = None
    mul_910: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_895, 0.9)
    add_657: "f32[1024]" = torch.ops.aten.add.Tensor(mul_909, mul_910);  mul_909 = mul_910 = None
    unsqueeze_500: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_467, -1)
    unsqueeze_501: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_500, -1);  unsqueeze_500 = None
    mul_911: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_905, unsqueeze_501);  mul_905 = unsqueeze_501 = None
    unsqueeze_502: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_468, -1);  primals_468 = None
    unsqueeze_503: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_502, -1);  unsqueeze_502 = None
    add_658: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_911, unsqueeze_503);  mul_911 = unsqueeze_503 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_659: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(add_658, relu_118);  add_658 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_122: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_659);  add_659 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_156: "f32[8, 512, 16, 16]" = torch.ops.aten.convolution.default(relu_122, primals_469, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_660: "i64[]" = torch.ops.aten.add.Tensor(primals_899, 1)
    var_mean_126 = torch.ops.aten.var_mean.correction(convolution_156, [0, 2, 3], correction = 0, keepdim = True)
    getitem_254: "f32[1, 512, 1, 1]" = var_mean_126[0]
    getitem_255: "f32[1, 512, 1, 1]" = var_mean_126[1];  var_mean_126 = None
    add_661: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_254, 1e-05)
    rsqrt_126: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_661);  add_661 = None
    sub_156: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_156, getitem_255)
    mul_912: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_156, rsqrt_126);  sub_156 = None
    squeeze_378: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_255, [0, 2, 3]);  getitem_255 = None
    squeeze_379: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_126, [0, 2, 3]);  rsqrt_126 = None
    mul_913: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_378, 0.1)
    mul_914: "f32[512]" = torch.ops.aten.mul.Tensor(primals_897, 0.9)
    add_662: "f32[512]" = torch.ops.aten.add.Tensor(mul_913, mul_914);  mul_913 = mul_914 = None
    squeeze_380: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_254, [0, 2, 3]);  getitem_254 = None
    mul_915: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_380, 1.0004885197850513);  squeeze_380 = None
    mul_916: "f32[512]" = torch.ops.aten.mul.Tensor(mul_915, 0.1);  mul_915 = None
    mul_917: "f32[512]" = torch.ops.aten.mul.Tensor(primals_898, 0.9)
    add_663: "f32[512]" = torch.ops.aten.add.Tensor(mul_916, mul_917);  mul_916 = mul_917 = None
    unsqueeze_504: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_470, -1)
    unsqueeze_505: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_504, -1);  unsqueeze_504 = None
    mul_918: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(mul_912, unsqueeze_505);  mul_912 = unsqueeze_505 = None
    unsqueeze_506: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_471, -1);  primals_471 = None
    unsqueeze_507: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_506, -1);  unsqueeze_506 = None
    add_664: "f32[8, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_918, unsqueeze_507);  mul_918 = unsqueeze_507 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_123: "f32[8, 512, 16, 16]" = torch.ops.aten.relu.default(add_664);  add_664 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_157: "f32[8, 1024, 16, 16]" = torch.ops.aten.convolution.default(relu_123, primals_472, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_665: "i64[]" = torch.ops.aten.add.Tensor(primals_902, 1)
    var_mean_127 = torch.ops.aten.var_mean.correction(convolution_157, [0, 2, 3], correction = 0, keepdim = True)
    getitem_256: "f32[1, 1024, 1, 1]" = var_mean_127[0]
    getitem_257: "f32[1, 1024, 1, 1]" = var_mean_127[1];  var_mean_127 = None
    add_666: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_256, 1e-05)
    rsqrt_127: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_666);  add_666 = None
    sub_157: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_157, getitem_257)
    mul_919: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_157, rsqrt_127);  sub_157 = None
    squeeze_381: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_257, [0, 2, 3]);  getitem_257 = None
    squeeze_382: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_127, [0, 2, 3]);  rsqrt_127 = None
    mul_920: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_381, 0.1)
    mul_921: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_900, 0.9)
    add_667: "f32[1024]" = torch.ops.aten.add.Tensor(mul_920, mul_921);  mul_920 = mul_921 = None
    squeeze_383: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_256, [0, 2, 3]);  getitem_256 = None
    mul_922: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_383, 1.0004885197850513);  squeeze_383 = None
    mul_923: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_922, 0.1);  mul_922 = None
    mul_924: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_901, 0.9)
    add_668: "f32[1024]" = torch.ops.aten.add.Tensor(mul_923, mul_924);  mul_923 = mul_924 = None
    unsqueeze_508: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_473, -1)
    unsqueeze_509: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_508, -1);  unsqueeze_508 = None
    mul_925: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(mul_919, unsqueeze_509);  mul_919 = unsqueeze_509 = None
    unsqueeze_510: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_474, -1);  primals_474 = None
    unsqueeze_511: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_510, -1);  unsqueeze_510 = None
    add_669: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(mul_925, unsqueeze_511);  mul_925 = unsqueeze_511 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_124: "f32[8, 1024, 16, 16]" = torch.ops.aten.relu.default(add_669);  add_669 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_181: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.view.default(relu_124, [8, 2, 512, 16, 16])
    sum_91: "f32[8, 512, 16, 16]" = torch.ops.aten.sum.dim_IntList(view_181, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_30: "f32[8, 512, 1, 1]" = torch.ops.aten.mean.dim(sum_91, [2, 3], True);  sum_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_158: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(mean_30, primals_475, primals_476, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_476 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_670: "i64[]" = torch.ops.aten.add.Tensor(primals_905, 1)
    var_mean_128 = torch.ops.aten.var_mean.correction(convolution_158, [0, 2, 3], correction = 0, keepdim = True)
    getitem_258: "f32[1, 256, 1, 1]" = var_mean_128[0]
    getitem_259: "f32[1, 256, 1, 1]" = var_mean_128[1];  var_mean_128 = None
    add_671: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_258, 1e-05)
    rsqrt_128: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_671);  add_671 = None
    sub_158: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_158, getitem_259)
    mul_926: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_158, rsqrt_128);  sub_158 = None
    squeeze_384: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_259, [0, 2, 3]);  getitem_259 = None
    squeeze_385: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_128, [0, 2, 3]);  rsqrt_128 = None
    mul_927: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_384, 0.1)
    mul_928: "f32[256]" = torch.ops.aten.mul.Tensor(primals_903, 0.9)
    add_672: "f32[256]" = torch.ops.aten.add.Tensor(mul_927, mul_928);  mul_927 = mul_928 = None
    squeeze_386: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_258, [0, 2, 3]);  getitem_258 = None
    mul_929: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_386, 1.1428571428571428);  squeeze_386 = None
    mul_930: "f32[256]" = torch.ops.aten.mul.Tensor(mul_929, 0.1);  mul_929 = None
    mul_931: "f32[256]" = torch.ops.aten.mul.Tensor(primals_904, 0.9)
    add_673: "f32[256]" = torch.ops.aten.add.Tensor(mul_930, mul_931);  mul_930 = mul_931 = None
    unsqueeze_512: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_477, -1)
    unsqueeze_513: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_512, -1);  unsqueeze_512 = None
    mul_932: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(mul_926, unsqueeze_513);  mul_926 = unsqueeze_513 = None
    unsqueeze_514: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_478, -1);  primals_478 = None
    unsqueeze_515: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_514, -1);  unsqueeze_514 = None
    add_674: "f32[8, 256, 1, 1]" = torch.ops.aten.add.Tensor(mul_932, unsqueeze_515);  mul_932 = unsqueeze_515 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_125: "f32[8, 256, 1, 1]" = torch.ops.aten.relu.default(add_674);  add_674 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_159: "f32[8, 1024, 1, 1]" = torch.ops.aten.convolution.default(relu_125, primals_479, primals_480, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_480 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_182: "f32[8, 1, 2, 512]" = torch.ops.aten.view.default(convolution_159, [8, 1, 2, -1]);  convolution_159 = None
    permute_30: "f32[8, 2, 1, 512]" = torch.ops.aten.permute.default(view_182, [0, 2, 1, 3]);  view_182 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_30: "f32[8, 1, 1, 512]" = torch.ops.aten.amax.default(permute_30, [1], True)
    sub_159: "f32[8, 2, 1, 512]" = torch.ops.aten.sub.Tensor(permute_30, amax_30);  permute_30 = amax_30 = None
    exp_30: "f32[8, 2, 1, 512]" = torch.ops.aten.exp.default(sub_159);  sub_159 = None
    sum_92: "f32[8, 1, 1, 512]" = torch.ops.aten.sum.dim_IntList(exp_30, [1], True)
    div_30: "f32[8, 2, 1, 512]" = torch.ops.aten.div.Tensor(exp_30, sum_92);  exp_30 = sum_92 = None
    alias_156: "f32[8, 2, 1, 512]" = torch.ops.aten.alias.default(div_30)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_183: "f32[8, 1024]" = torch.ops.aten.view.default(div_30, [8, -1]);  div_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_184: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(view_183, [8, -1, 1, 1]);  view_183 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_185: "f32[8, 2, 512, 1, 1]" = torch.ops.aten.view.default(view_184, [8, 2, 512, 1, 1]);  view_184 = None
    mul_933: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.mul.Tensor(view_181, view_185)
    sum_93: "f32[8, 512, 16, 16]" = torch.ops.aten.sum.dim_IntList(mul_933, [1]);  mul_933 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:107, code: out = self.avd_last(out)
    avg_pool2d_4: "f32[8, 512, 8, 8]" = torch.ops.aten.avg_pool2d.default(sum_93, [3, 3], [2, 2], [1, 1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_160: "f32[8, 2048, 8, 8]" = torch.ops.aten.convolution.default(avg_pool2d_4, primals_481, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_675: "i64[]" = torch.ops.aten.add.Tensor(primals_908, 1)
    var_mean_129 = torch.ops.aten.var_mean.correction(convolution_160, [0, 2, 3], correction = 0, keepdim = True)
    getitem_260: "f32[1, 2048, 1, 1]" = var_mean_129[0]
    getitem_261: "f32[1, 2048, 1, 1]" = var_mean_129[1];  var_mean_129 = None
    add_676: "f32[1, 2048, 1, 1]" = torch.ops.aten.add.Tensor(getitem_260, 1e-05)
    rsqrt_129: "f32[1, 2048, 1, 1]" = torch.ops.aten.rsqrt.default(add_676);  add_676 = None
    sub_160: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_160, getitem_261)
    mul_934: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_160, rsqrt_129);  sub_160 = None
    squeeze_387: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_261, [0, 2, 3]);  getitem_261 = None
    squeeze_388: "f32[2048]" = torch.ops.aten.squeeze.dims(rsqrt_129, [0, 2, 3]);  rsqrt_129 = None
    mul_935: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_387, 0.1)
    mul_936: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_906, 0.9)
    add_677: "f32[2048]" = torch.ops.aten.add.Tensor(mul_935, mul_936);  mul_935 = mul_936 = None
    squeeze_389: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_260, [0, 2, 3]);  getitem_260 = None
    mul_937: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_389, 1.0019569471624266);  squeeze_389 = None
    mul_938: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_937, 0.1);  mul_937 = None
    mul_939: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_907, 0.9)
    add_678: "f32[2048]" = torch.ops.aten.add.Tensor(mul_938, mul_939);  mul_938 = mul_939 = None
    unsqueeze_516: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_482, -1)
    unsqueeze_517: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_516, -1);  unsqueeze_516 = None
    mul_940: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(mul_934, unsqueeze_517);  mul_934 = unsqueeze_517 = None
    unsqueeze_518: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_483, -1);  primals_483 = None
    unsqueeze_519: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_518, -1);  unsqueeze_518 = None
    add_679: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(mul_940, unsqueeze_519);  mul_940 = unsqueeze_519 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    avg_pool2d_5: "f32[8, 1024, 8, 8]" = torch.ops.aten.avg_pool2d.default(relu_122, [2, 2], [2, 2], [0, 0], True, False)
    convolution_161: "f32[8, 2048, 8, 8]" = torch.ops.aten.convolution.default(avg_pool2d_5, primals_484, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_680: "i64[]" = torch.ops.aten.add.Tensor(primals_911, 1)
    var_mean_130 = torch.ops.aten.var_mean.correction(convolution_161, [0, 2, 3], correction = 0, keepdim = True)
    getitem_262: "f32[1, 2048, 1, 1]" = var_mean_130[0]
    getitem_263: "f32[1, 2048, 1, 1]" = var_mean_130[1];  var_mean_130 = None
    add_681: "f32[1, 2048, 1, 1]" = torch.ops.aten.add.Tensor(getitem_262, 1e-05)
    rsqrt_130: "f32[1, 2048, 1, 1]" = torch.ops.aten.rsqrt.default(add_681);  add_681 = None
    sub_161: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_161, getitem_263)
    mul_941: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_161, rsqrt_130);  sub_161 = None
    squeeze_390: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_263, [0, 2, 3]);  getitem_263 = None
    squeeze_391: "f32[2048]" = torch.ops.aten.squeeze.dims(rsqrt_130, [0, 2, 3]);  rsqrt_130 = None
    mul_942: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_390, 0.1)
    mul_943: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_909, 0.9)
    add_682: "f32[2048]" = torch.ops.aten.add.Tensor(mul_942, mul_943);  mul_942 = mul_943 = None
    squeeze_392: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_262, [0, 2, 3]);  getitem_262 = None
    mul_944: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_392, 1.0019569471624266);  squeeze_392 = None
    mul_945: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_944, 0.1);  mul_944 = None
    mul_946: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_910, 0.9)
    add_683: "f32[2048]" = torch.ops.aten.add.Tensor(mul_945, mul_946);  mul_945 = mul_946 = None
    unsqueeze_520: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_485, -1)
    unsqueeze_521: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_520, -1);  unsqueeze_520 = None
    mul_947: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(mul_941, unsqueeze_521);  mul_941 = unsqueeze_521 = None
    unsqueeze_522: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_486, -1);  primals_486 = None
    unsqueeze_523: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_522, -1);  unsqueeze_522 = None
    add_684: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(mul_947, unsqueeze_523);  mul_947 = unsqueeze_523 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_685: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(add_679, add_684);  add_679 = add_684 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_126: "f32[8, 2048, 8, 8]" = torch.ops.aten.relu.default(add_685);  add_685 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_162: "f32[8, 512, 8, 8]" = torch.ops.aten.convolution.default(relu_126, primals_487, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_686: "i64[]" = torch.ops.aten.add.Tensor(primals_914, 1)
    var_mean_131 = torch.ops.aten.var_mean.correction(convolution_162, [0, 2, 3], correction = 0, keepdim = True)
    getitem_264: "f32[1, 512, 1, 1]" = var_mean_131[0]
    getitem_265: "f32[1, 512, 1, 1]" = var_mean_131[1];  var_mean_131 = None
    add_687: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_264, 1e-05)
    rsqrt_131: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_687);  add_687 = None
    sub_162: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_162, getitem_265)
    mul_948: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(sub_162, rsqrt_131);  sub_162 = None
    squeeze_393: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_265, [0, 2, 3]);  getitem_265 = None
    squeeze_394: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_131, [0, 2, 3]);  rsqrt_131 = None
    mul_949: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_393, 0.1)
    mul_950: "f32[512]" = torch.ops.aten.mul.Tensor(primals_912, 0.9)
    add_688: "f32[512]" = torch.ops.aten.add.Tensor(mul_949, mul_950);  mul_949 = mul_950 = None
    squeeze_395: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_264, [0, 2, 3]);  getitem_264 = None
    mul_951: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_395, 1.0019569471624266);  squeeze_395 = None
    mul_952: "f32[512]" = torch.ops.aten.mul.Tensor(mul_951, 0.1);  mul_951 = None
    mul_953: "f32[512]" = torch.ops.aten.mul.Tensor(primals_913, 0.9)
    add_689: "f32[512]" = torch.ops.aten.add.Tensor(mul_952, mul_953);  mul_952 = mul_953 = None
    unsqueeze_524: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_488, -1)
    unsqueeze_525: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_524, -1);  unsqueeze_524 = None
    mul_954: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(mul_948, unsqueeze_525);  mul_948 = unsqueeze_525 = None
    unsqueeze_526: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_489, -1);  primals_489 = None
    unsqueeze_527: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_526, -1);  unsqueeze_526 = None
    add_690: "f32[8, 512, 8, 8]" = torch.ops.aten.add.Tensor(mul_954, unsqueeze_527);  mul_954 = unsqueeze_527 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_127: "f32[8, 512, 8, 8]" = torch.ops.aten.relu.default(add_690);  add_690 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_163: "f32[8, 1024, 8, 8]" = torch.ops.aten.convolution.default(relu_127, primals_490, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_691: "i64[]" = torch.ops.aten.add.Tensor(primals_917, 1)
    var_mean_132 = torch.ops.aten.var_mean.correction(convolution_163, [0, 2, 3], correction = 0, keepdim = True)
    getitem_266: "f32[1, 1024, 1, 1]" = var_mean_132[0]
    getitem_267: "f32[1, 1024, 1, 1]" = var_mean_132[1];  var_mean_132 = None
    add_692: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_266, 1e-05)
    rsqrt_132: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_692);  add_692 = None
    sub_163: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_163, getitem_267)
    mul_955: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(sub_163, rsqrt_132);  sub_163 = None
    squeeze_396: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_267, [0, 2, 3]);  getitem_267 = None
    squeeze_397: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_132, [0, 2, 3]);  rsqrt_132 = None
    mul_956: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_396, 0.1)
    mul_957: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_915, 0.9)
    add_693: "f32[1024]" = torch.ops.aten.add.Tensor(mul_956, mul_957);  mul_956 = mul_957 = None
    squeeze_398: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_266, [0, 2, 3]);  getitem_266 = None
    mul_958: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_398, 1.0019569471624266);  squeeze_398 = None
    mul_959: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_958, 0.1);  mul_958 = None
    mul_960: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_916, 0.9)
    add_694: "f32[1024]" = torch.ops.aten.add.Tensor(mul_959, mul_960);  mul_959 = mul_960 = None
    unsqueeze_528: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_491, -1)
    unsqueeze_529: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_528, -1);  unsqueeze_528 = None
    mul_961: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(mul_955, unsqueeze_529);  mul_955 = unsqueeze_529 = None
    unsqueeze_530: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_492, -1);  primals_492 = None
    unsqueeze_531: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_530, -1);  unsqueeze_530 = None
    add_695: "f32[8, 1024, 8, 8]" = torch.ops.aten.add.Tensor(mul_961, unsqueeze_531);  mul_961 = unsqueeze_531 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_128: "f32[8, 1024, 8, 8]" = torch.ops.aten.relu.default(add_695);  add_695 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_187: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.view.default(relu_128, [8, 2, 512, 8, 8])
    sum_94: "f32[8, 512, 8, 8]" = torch.ops.aten.sum.dim_IntList(view_187, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_31: "f32[8, 512, 1, 1]" = torch.ops.aten.mean.dim(sum_94, [2, 3], True);  sum_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_164: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(mean_31, primals_493, primals_494, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_494 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_696: "i64[]" = torch.ops.aten.add.Tensor(primals_920, 1)
    var_mean_133 = torch.ops.aten.var_mean.correction(convolution_164, [0, 2, 3], correction = 0, keepdim = True)
    getitem_268: "f32[1, 256, 1, 1]" = var_mean_133[0]
    getitem_269: "f32[1, 256, 1, 1]" = var_mean_133[1];  var_mean_133 = None
    add_697: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_268, 1e-05)
    rsqrt_133: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_697);  add_697 = None
    sub_164: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_164, getitem_269)
    mul_962: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_164, rsqrt_133);  sub_164 = None
    squeeze_399: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_269, [0, 2, 3]);  getitem_269 = None
    squeeze_400: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_133, [0, 2, 3]);  rsqrt_133 = None
    mul_963: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_399, 0.1)
    mul_964: "f32[256]" = torch.ops.aten.mul.Tensor(primals_918, 0.9)
    add_698: "f32[256]" = torch.ops.aten.add.Tensor(mul_963, mul_964);  mul_963 = mul_964 = None
    squeeze_401: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_268, [0, 2, 3]);  getitem_268 = None
    mul_965: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_401, 1.1428571428571428);  squeeze_401 = None
    mul_966: "f32[256]" = torch.ops.aten.mul.Tensor(mul_965, 0.1);  mul_965 = None
    mul_967: "f32[256]" = torch.ops.aten.mul.Tensor(primals_919, 0.9)
    add_699: "f32[256]" = torch.ops.aten.add.Tensor(mul_966, mul_967);  mul_966 = mul_967 = None
    unsqueeze_532: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_495, -1)
    unsqueeze_533: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_532, -1);  unsqueeze_532 = None
    mul_968: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(mul_962, unsqueeze_533);  mul_962 = unsqueeze_533 = None
    unsqueeze_534: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_496, -1);  primals_496 = None
    unsqueeze_535: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_534, -1);  unsqueeze_534 = None
    add_700: "f32[8, 256, 1, 1]" = torch.ops.aten.add.Tensor(mul_968, unsqueeze_535);  mul_968 = unsqueeze_535 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_129: "f32[8, 256, 1, 1]" = torch.ops.aten.relu.default(add_700);  add_700 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_165: "f32[8, 1024, 1, 1]" = torch.ops.aten.convolution.default(relu_129, primals_497, primals_498, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_498 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_188: "f32[8, 1, 2, 512]" = torch.ops.aten.view.default(convolution_165, [8, 1, 2, -1]);  convolution_165 = None
    permute_31: "f32[8, 2, 1, 512]" = torch.ops.aten.permute.default(view_188, [0, 2, 1, 3]);  view_188 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_31: "f32[8, 1, 1, 512]" = torch.ops.aten.amax.default(permute_31, [1], True)
    sub_165: "f32[8, 2, 1, 512]" = torch.ops.aten.sub.Tensor(permute_31, amax_31);  permute_31 = amax_31 = None
    exp_31: "f32[8, 2, 1, 512]" = torch.ops.aten.exp.default(sub_165);  sub_165 = None
    sum_95: "f32[8, 1, 1, 512]" = torch.ops.aten.sum.dim_IntList(exp_31, [1], True)
    div_31: "f32[8, 2, 1, 512]" = torch.ops.aten.div.Tensor(exp_31, sum_95);  exp_31 = sum_95 = None
    alias_161: "f32[8, 2, 1, 512]" = torch.ops.aten.alias.default(div_31)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_189: "f32[8, 1024]" = torch.ops.aten.view.default(div_31, [8, -1]);  div_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_190: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(view_189, [8, -1, 1, 1]);  view_189 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_191: "f32[8, 2, 512, 1, 1]" = torch.ops.aten.view.default(view_190, [8, 2, 512, 1, 1]);  view_190 = None
    mul_969: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.mul.Tensor(view_187, view_191)
    sum_96: "f32[8, 512, 8, 8]" = torch.ops.aten.sum.dim_IntList(mul_969, [1]);  mul_969 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_166: "f32[8, 2048, 8, 8]" = torch.ops.aten.convolution.default(sum_96, primals_499, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_701: "i64[]" = torch.ops.aten.add.Tensor(primals_923, 1)
    var_mean_134 = torch.ops.aten.var_mean.correction(convolution_166, [0, 2, 3], correction = 0, keepdim = True)
    getitem_270: "f32[1, 2048, 1, 1]" = var_mean_134[0]
    getitem_271: "f32[1, 2048, 1, 1]" = var_mean_134[1];  var_mean_134 = None
    add_702: "f32[1, 2048, 1, 1]" = torch.ops.aten.add.Tensor(getitem_270, 1e-05)
    rsqrt_134: "f32[1, 2048, 1, 1]" = torch.ops.aten.rsqrt.default(add_702);  add_702 = None
    sub_166: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_166, getitem_271)
    mul_970: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_166, rsqrt_134);  sub_166 = None
    squeeze_402: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_271, [0, 2, 3]);  getitem_271 = None
    squeeze_403: "f32[2048]" = torch.ops.aten.squeeze.dims(rsqrt_134, [0, 2, 3]);  rsqrt_134 = None
    mul_971: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_402, 0.1)
    mul_972: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_921, 0.9)
    add_703: "f32[2048]" = torch.ops.aten.add.Tensor(mul_971, mul_972);  mul_971 = mul_972 = None
    squeeze_404: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_270, [0, 2, 3]);  getitem_270 = None
    mul_973: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_404, 1.0019569471624266);  squeeze_404 = None
    mul_974: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_973, 0.1);  mul_973 = None
    mul_975: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_922, 0.9)
    add_704: "f32[2048]" = torch.ops.aten.add.Tensor(mul_974, mul_975);  mul_974 = mul_975 = None
    unsqueeze_536: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_500, -1)
    unsqueeze_537: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_536, -1);  unsqueeze_536 = None
    mul_976: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(mul_970, unsqueeze_537);  mul_970 = unsqueeze_537 = None
    unsqueeze_538: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_501, -1);  primals_501 = None
    unsqueeze_539: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_538, -1);  unsqueeze_538 = None
    add_705: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(mul_976, unsqueeze_539);  mul_976 = unsqueeze_539 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_706: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(add_705, relu_126);  add_705 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_130: "f32[8, 2048, 8, 8]" = torch.ops.aten.relu.default(add_706);  add_706 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_167: "f32[8, 512, 8, 8]" = torch.ops.aten.convolution.default(relu_130, primals_502, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    add_707: "i64[]" = torch.ops.aten.add.Tensor(primals_926, 1)
    var_mean_135 = torch.ops.aten.var_mean.correction(convolution_167, [0, 2, 3], correction = 0, keepdim = True)
    getitem_272: "f32[1, 512, 1, 1]" = var_mean_135[0]
    getitem_273: "f32[1, 512, 1, 1]" = var_mean_135[1];  var_mean_135 = None
    add_708: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_272, 1e-05)
    rsqrt_135: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_708);  add_708 = None
    sub_167: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_167, getitem_273)
    mul_977: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(sub_167, rsqrt_135);  sub_167 = None
    squeeze_405: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_273, [0, 2, 3]);  getitem_273 = None
    squeeze_406: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_135, [0, 2, 3]);  rsqrt_135 = None
    mul_978: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_405, 0.1)
    mul_979: "f32[512]" = torch.ops.aten.mul.Tensor(primals_924, 0.9)
    add_709: "f32[512]" = torch.ops.aten.add.Tensor(mul_978, mul_979);  mul_978 = mul_979 = None
    squeeze_407: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_272, [0, 2, 3]);  getitem_272 = None
    mul_980: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_407, 1.0019569471624266);  squeeze_407 = None
    mul_981: "f32[512]" = torch.ops.aten.mul.Tensor(mul_980, 0.1);  mul_980 = None
    mul_982: "f32[512]" = torch.ops.aten.mul.Tensor(primals_925, 0.9)
    add_710: "f32[512]" = torch.ops.aten.add.Tensor(mul_981, mul_982);  mul_981 = mul_982 = None
    unsqueeze_540: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_503, -1)
    unsqueeze_541: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_540, -1);  unsqueeze_540 = None
    mul_983: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(mul_977, unsqueeze_541);  mul_977 = unsqueeze_541 = None
    unsqueeze_542: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_504, -1);  primals_504 = None
    unsqueeze_543: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_542, -1);  unsqueeze_542 = None
    add_711: "f32[8, 512, 8, 8]" = torch.ops.aten.add.Tensor(mul_983, unsqueeze_543);  mul_983 = unsqueeze_543 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    relu_131: "f32[8, 512, 8, 8]" = torch.ops.aten.relu.default(add_711);  add_711 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_168: "f32[8, 1024, 8, 8]" = torch.ops.aten.convolution.default(relu_131, primals_505, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 2)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    add_712: "i64[]" = torch.ops.aten.add.Tensor(primals_929, 1)
    var_mean_136 = torch.ops.aten.var_mean.correction(convolution_168, [0, 2, 3], correction = 0, keepdim = True)
    getitem_274: "f32[1, 1024, 1, 1]" = var_mean_136[0]
    getitem_275: "f32[1, 1024, 1, 1]" = var_mean_136[1];  var_mean_136 = None
    add_713: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_274, 1e-05)
    rsqrt_136: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_713);  add_713 = None
    sub_168: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_168, getitem_275)
    mul_984: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(sub_168, rsqrt_136);  sub_168 = None
    squeeze_408: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_275, [0, 2, 3]);  getitem_275 = None
    squeeze_409: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_136, [0, 2, 3]);  rsqrt_136 = None
    mul_985: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_408, 0.1)
    mul_986: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_927, 0.9)
    add_714: "f32[1024]" = torch.ops.aten.add.Tensor(mul_985, mul_986);  mul_985 = mul_986 = None
    squeeze_410: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_274, [0, 2, 3]);  getitem_274 = None
    mul_987: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_410, 1.0019569471624266);  squeeze_410 = None
    mul_988: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_987, 0.1);  mul_987 = None
    mul_989: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_928, 0.9)
    add_715: "f32[1024]" = torch.ops.aten.add.Tensor(mul_988, mul_989);  mul_988 = mul_989 = None
    unsqueeze_544: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_506, -1)
    unsqueeze_545: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_544, -1);  unsqueeze_544 = None
    mul_990: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(mul_984, unsqueeze_545);  mul_984 = unsqueeze_545 = None
    unsqueeze_546: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_507, -1);  primals_507 = None
    unsqueeze_547: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_546, -1);  unsqueeze_546 = None
    add_716: "f32[8, 1024, 8, 8]" = torch.ops.aten.add.Tensor(mul_990, unsqueeze_547);  mul_990 = unsqueeze_547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    relu_132: "f32[8, 1024, 8, 8]" = torch.ops.aten.relu.default(add_716);  add_716 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    view_193: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.view.default(relu_132, [8, 2, 512, 8, 8])
    sum_97: "f32[8, 512, 8, 8]" = torch.ops.aten.sum.dim_IntList(view_193, [1])
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    mean_32: "f32[8, 512, 1, 1]" = torch.ops.aten.mean.dim(sum_97, [2, 3], True);  sum_97 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_169: "f32[8, 256, 1, 1]" = torch.ops.aten.convolution.default(mean_32, primals_508, primals_509, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_509 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    add_717: "i64[]" = torch.ops.aten.add.Tensor(primals_932, 1)
    var_mean_137 = torch.ops.aten.var_mean.correction(convolution_169, [0, 2, 3], correction = 0, keepdim = True)
    getitem_276: "f32[1, 256, 1, 1]" = var_mean_137[0]
    getitem_277: "f32[1, 256, 1, 1]" = var_mean_137[1];  var_mean_137 = None
    add_718: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_276, 1e-05)
    rsqrt_137: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_718);  add_718 = None
    sub_169: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_169, getitem_277)
    mul_991: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_169, rsqrt_137);  sub_169 = None
    squeeze_411: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_277, [0, 2, 3]);  getitem_277 = None
    squeeze_412: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_137, [0, 2, 3]);  rsqrt_137 = None
    mul_992: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_411, 0.1)
    mul_993: "f32[256]" = torch.ops.aten.mul.Tensor(primals_930, 0.9)
    add_719: "f32[256]" = torch.ops.aten.add.Tensor(mul_992, mul_993);  mul_992 = mul_993 = None
    squeeze_413: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_276, [0, 2, 3]);  getitem_276 = None
    mul_994: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_413, 1.1428571428571428);  squeeze_413 = None
    mul_995: "f32[256]" = torch.ops.aten.mul.Tensor(mul_994, 0.1);  mul_994 = None
    mul_996: "f32[256]" = torch.ops.aten.mul.Tensor(primals_931, 0.9)
    add_720: "f32[256]" = torch.ops.aten.add.Tensor(mul_995, mul_996);  mul_995 = mul_996 = None
    unsqueeze_548: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_510, -1)
    unsqueeze_549: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_548, -1);  unsqueeze_548 = None
    mul_997: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(mul_991, unsqueeze_549);  mul_991 = unsqueeze_549 = None
    unsqueeze_550: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_511, -1);  primals_511 = None
    unsqueeze_551: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_550, -1);  unsqueeze_550 = None
    add_721: "f32[8, 256, 1, 1]" = torch.ops.aten.add.Tensor(mul_997, unsqueeze_551);  mul_997 = unsqueeze_551 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    relu_133: "f32[8, 256, 1, 1]" = torch.ops.aten.relu.default(add_721);  add_721 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_170: "f32[8, 1024, 1, 1]" = torch.ops.aten.convolution.default(relu_133, primals_512, primals_513, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_513 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    view_194: "f32[8, 1, 2, 512]" = torch.ops.aten.view.default(convolution_170, [8, 1, 2, -1]);  convolution_170 = None
    permute_32: "f32[8, 2, 1, 512]" = torch.ops.aten.permute.default(view_194, [0, 2, 1, 3]);  view_194 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    amax_32: "f32[8, 1, 1, 512]" = torch.ops.aten.amax.default(permute_32, [1], True)
    sub_170: "f32[8, 2, 1, 512]" = torch.ops.aten.sub.Tensor(permute_32, amax_32);  permute_32 = amax_32 = None
    exp_32: "f32[8, 2, 1, 512]" = torch.ops.aten.exp.default(sub_170);  sub_170 = None
    sum_98: "f32[8, 1, 1, 512]" = torch.ops.aten.sum.dim_IntList(exp_32, [1], True)
    div_32: "f32[8, 2, 1, 512]" = torch.ops.aten.div.Tensor(exp_32, sum_98);  exp_32 = sum_98 = None
    alias_166: "f32[8, 2, 1, 512]" = torch.ops.aten.alias.default(div_32)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_195: "f32[8, 1024]" = torch.ops.aten.view.default(div_32, [8, -1]);  div_32 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_196: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(view_195, [8, -1, 1, 1]);  view_195 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    view_197: "f32[8, 2, 512, 1, 1]" = torch.ops.aten.view.default(view_196, [8, 2, 512, 1, 1]);  view_196 = None
    mul_998: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.mul.Tensor(view_193, view_197)
    sum_99: "f32[8, 512, 8, 8]" = torch.ops.aten.sum.dim_IntList(mul_998, [1]);  mul_998 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_171: "f32[8, 2048, 8, 8]" = torch.ops.aten.convolution.default(sum_99, primals_514, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    add_722: "i64[]" = torch.ops.aten.add.Tensor(primals_935, 1)
    var_mean_138 = torch.ops.aten.var_mean.correction(convolution_171, [0, 2, 3], correction = 0, keepdim = True)
    getitem_278: "f32[1, 2048, 1, 1]" = var_mean_138[0]
    getitem_279: "f32[1, 2048, 1, 1]" = var_mean_138[1];  var_mean_138 = None
    add_723: "f32[1, 2048, 1, 1]" = torch.ops.aten.add.Tensor(getitem_278, 1e-05)
    rsqrt_138: "f32[1, 2048, 1, 1]" = torch.ops.aten.rsqrt.default(add_723);  add_723 = None
    sub_171: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_171, getitem_279)
    mul_999: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_171, rsqrt_138);  sub_171 = None
    squeeze_414: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_279, [0, 2, 3]);  getitem_279 = None
    squeeze_415: "f32[2048]" = torch.ops.aten.squeeze.dims(rsqrt_138, [0, 2, 3]);  rsqrt_138 = None
    mul_1000: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_414, 0.1)
    mul_1001: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_933, 0.9)
    add_724: "f32[2048]" = torch.ops.aten.add.Tensor(mul_1000, mul_1001);  mul_1000 = mul_1001 = None
    squeeze_416: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_278, [0, 2, 3]);  getitem_278 = None
    mul_1002: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_416, 1.0019569471624266);  squeeze_416 = None
    mul_1003: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_1002, 0.1);  mul_1002 = None
    mul_1004: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_934, 0.9)
    add_725: "f32[2048]" = torch.ops.aten.add.Tensor(mul_1003, mul_1004);  mul_1003 = mul_1004 = None
    unsqueeze_552: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_515, -1)
    unsqueeze_553: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_552, -1);  unsqueeze_552 = None
    mul_1005: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(mul_999, unsqueeze_553);  mul_999 = unsqueeze_553 = None
    unsqueeze_554: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_516, -1);  primals_516 = None
    unsqueeze_555: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_554, -1);  unsqueeze_554 = None
    add_726: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(mul_1005, unsqueeze_555);  mul_1005 = unsqueeze_555 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:115, code: out += shortcut
    add_727: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(add_726, relu_130);  add_726 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    relu_134: "f32[8, 2048, 8, 8]" = torch.ops.aten.relu.default(add_727);  add_727 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:167, code: x = self.pool(x)
    mean_33: "f32[8, 2048, 1, 1]" = torch.ops.aten.mean.dim(relu_134, [-1, -2], True)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:168, code: x = self.flatten(x)
    view_198: "f32[8, 2048]" = torch.ops.aten.view.default(mean_33, [8, 2048]);  mean_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:538, code: return x if pre_logits else self.fc(x)
    permute_33: "f32[2048, 1000]" = torch.ops.aten.permute.default(primals_517, [1, 0]);  primals_517 = None
    addmm: "f32[8, 1000]" = torch.ops.aten.addmm.default(primals_518, view_198, permute_33);  primals_518 = None
    permute_34: "f32[1000, 2048]" = torch.ops.aten.permute.default(permute_33, [1, 0]);  permute_33 = None
    mm: "f32[8, 2048]" = torch.ops.aten.mm.default(tangents_1, permute_34);  permute_34 = None
    permute_35: "f32[1000, 8]" = torch.ops.aten.permute.default(tangents_1, [1, 0])
    mm_1: "f32[1000, 2048]" = torch.ops.aten.mm.default(permute_35, view_198);  permute_35 = view_198 = None
    permute_36: "f32[2048, 1000]" = torch.ops.aten.permute.default(mm_1, [1, 0]);  mm_1 = None
    sum_100: "f32[1, 1000]" = torch.ops.aten.sum.dim_IntList(tangents_1, [0], True);  tangents_1 = None
    view_199: "f32[1000]" = torch.ops.aten.view.default(sum_100, [1000]);  sum_100 = None
    permute_37: "f32[1000, 2048]" = torch.ops.aten.permute.default(permute_36, [1, 0]);  permute_36 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:168, code: x = self.flatten(x)
    view_200: "f32[8, 2048, 1, 1]" = torch.ops.aten.view.default(mm, [8, 2048, 1, 1]);  mm = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:167, code: x = self.pool(x)
    expand: "f32[8, 2048, 8, 8]" = torch.ops.aten.expand.default(view_200, [8, 2048, 8, 8]);  view_200 = None
    div_33: "f32[8, 2048, 8, 8]" = torch.ops.aten.div.Scalar(expand, 64);  expand = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_169: "f32[8, 2048, 8, 8]" = torch.ops.aten.alias.default(relu_134);  relu_134 = None
    alias_170: "f32[8, 2048, 8, 8]" = torch.ops.aten.alias.default(alias_169);  alias_169 = None
    le: "b8[8, 2048, 8, 8]" = torch.ops.aten.le.Scalar(alias_170, 0);  alias_170 = None
    scalar_tensor: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where: "f32[8, 2048, 8, 8]" = torch.ops.aten.where.self(le, scalar_tensor, div_33);  le = scalar_tensor = div_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_556: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(squeeze_414, 0);  squeeze_414 = None
    unsqueeze_557: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_556, 2);  unsqueeze_556 = None
    unsqueeze_558: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_557, 3);  unsqueeze_557 = None
    sum_101: "f32[2048]" = torch.ops.aten.sum.dim_IntList(where, [0, 2, 3])
    sub_172: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_171, unsqueeze_558)
    mul_1006: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(where, sub_172);  sub_172 = None
    sum_102: "f32[2048]" = torch.ops.aten.sum.dim_IntList(mul_1006, [0, 2, 3]);  mul_1006 = None
    mul_1007: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_101, 0.001953125)
    unsqueeze_559: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1007, 0);  mul_1007 = None
    unsqueeze_560: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_559, 2);  unsqueeze_559 = None
    unsqueeze_561: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_560, 3);  unsqueeze_560 = None
    mul_1008: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_102, 0.001953125)
    mul_1009: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_415, squeeze_415)
    mul_1010: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_1008, mul_1009);  mul_1008 = mul_1009 = None
    unsqueeze_562: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1010, 0);  mul_1010 = None
    unsqueeze_563: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_562, 2);  unsqueeze_562 = None
    unsqueeze_564: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_563, 3);  unsqueeze_563 = None
    mul_1011: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_415, primals_515);  primals_515 = None
    unsqueeze_565: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1011, 0);  mul_1011 = None
    unsqueeze_566: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_565, 2);  unsqueeze_565 = None
    unsqueeze_567: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_566, 3);  unsqueeze_566 = None
    sub_173: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_171, unsqueeze_558);  convolution_171 = unsqueeze_558 = None
    mul_1012: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_173, unsqueeze_564);  sub_173 = unsqueeze_564 = None
    sub_174: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(where, mul_1012);  mul_1012 = None
    sub_175: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(sub_174, unsqueeze_561);  sub_174 = unsqueeze_561 = None
    mul_1013: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_175, unsqueeze_567);  sub_175 = unsqueeze_567 = None
    mul_1014: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_102, squeeze_415);  sum_102 = squeeze_415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward = torch.ops.aten.convolution_backward.default(mul_1013, sum_99, primals_514, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1013 = sum_99 = primals_514 = None
    getitem_280: "f32[8, 512, 8, 8]" = convolution_backward[0]
    getitem_281: "f32[2048, 512, 1, 1]" = convolution_backward[1];  convolution_backward = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_568: "f32[8, 1, 512, 8, 8]" = torch.ops.aten.unsqueeze.default(getitem_280, 1);  getitem_280 = None
    expand_1: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.expand.default(unsqueeze_568, [8, 2, 512, 8, 8]);  unsqueeze_568 = None
    mul_1015: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.mul.Tensor(expand_1, view_193);  view_193 = None
    mul_1016: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.mul.Tensor(expand_1, view_197);  expand_1 = view_197 = None
    sum_103: "f32[8, 2, 512, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1015, [3, 4], True);  mul_1015 = None
    view_201: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(sum_103, [8, 1024, 1, 1]);  sum_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_202: "f32[8, 1024]" = torch.ops.aten.view.default(view_201, [8, 1024]);  view_201 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_203: "f32[8, 2, 1, 512]" = torch.ops.aten.view.default(view_202, [8, 2, 1, 512]);  view_202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_171: "f32[8, 2, 1, 512]" = torch.ops.aten.alias.default(alias_166);  alias_166 = None
    mul_1017: "f32[8, 2, 1, 512]" = torch.ops.aten.mul.Tensor(view_203, alias_171);  view_203 = None
    sum_104: "f32[8, 1, 1, 512]" = torch.ops.aten.sum.dim_IntList(mul_1017, [1], True)
    mul_1018: "f32[8, 2, 1, 512]" = torch.ops.aten.mul.Tensor(alias_171, sum_104);  alias_171 = sum_104 = None
    sub_176: "f32[8, 2, 1, 512]" = torch.ops.aten.sub.Tensor(mul_1017, mul_1018);  mul_1017 = mul_1018 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_38: "f32[8, 1, 2, 512]" = torch.ops.aten.permute.default(sub_176, [0, 2, 1, 3]);  sub_176 = None
    view_204: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(permute_38, [8, 1024, 1, 1]);  permute_38 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_1 = torch.ops.aten.convolution_backward.default(view_204, relu_133, primals_512, [1024], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_204 = primals_512 = None
    getitem_283: "f32[8, 256, 1, 1]" = convolution_backward_1[0]
    getitem_284: "f32[1024, 256, 1, 1]" = convolution_backward_1[1]
    getitem_285: "f32[1024]" = convolution_backward_1[2];  convolution_backward_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_173: "f32[8, 256, 1, 1]" = torch.ops.aten.alias.default(relu_133);  relu_133 = None
    alias_174: "f32[8, 256, 1, 1]" = torch.ops.aten.alias.default(alias_173);  alias_173 = None
    le_1: "b8[8, 256, 1, 1]" = torch.ops.aten.le.Scalar(alias_174, 0);  alias_174 = None
    scalar_tensor_1: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_1: "f32[8, 256, 1, 1]" = torch.ops.aten.where.self(le_1, scalar_tensor_1, getitem_283);  le_1 = scalar_tensor_1 = getitem_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_569: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_411, 0);  squeeze_411 = None
    unsqueeze_570: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_569, 2);  unsqueeze_569 = None
    unsqueeze_571: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_570, 3);  unsqueeze_570 = None
    sum_105: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_1, [0, 2, 3])
    sub_177: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_169, unsqueeze_571)
    mul_1019: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(where_1, sub_177);  sub_177 = None
    sum_106: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1019, [0, 2, 3]);  mul_1019 = None
    mul_1020: "f32[256]" = torch.ops.aten.mul.Tensor(sum_105, 0.125)
    unsqueeze_572: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1020, 0);  mul_1020 = None
    unsqueeze_573: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_572, 2);  unsqueeze_572 = None
    unsqueeze_574: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_573, 3);  unsqueeze_573 = None
    mul_1021: "f32[256]" = torch.ops.aten.mul.Tensor(sum_106, 0.125)
    mul_1022: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_412, squeeze_412)
    mul_1023: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1021, mul_1022);  mul_1021 = mul_1022 = None
    unsqueeze_575: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1023, 0);  mul_1023 = None
    unsqueeze_576: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_575, 2);  unsqueeze_575 = None
    unsqueeze_577: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_576, 3);  unsqueeze_576 = None
    mul_1024: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_412, primals_510);  primals_510 = None
    unsqueeze_578: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1024, 0);  mul_1024 = None
    unsqueeze_579: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_578, 2);  unsqueeze_578 = None
    unsqueeze_580: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_579, 3);  unsqueeze_579 = None
    sub_178: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_169, unsqueeze_571);  convolution_169 = unsqueeze_571 = None
    mul_1025: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_178, unsqueeze_577);  sub_178 = unsqueeze_577 = None
    sub_179: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(where_1, mul_1025);  where_1 = mul_1025 = None
    sub_180: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(sub_179, unsqueeze_574);  sub_179 = unsqueeze_574 = None
    mul_1026: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_180, unsqueeze_580);  sub_180 = unsqueeze_580 = None
    mul_1027: "f32[256]" = torch.ops.aten.mul.Tensor(sum_106, squeeze_412);  sum_106 = squeeze_412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_2 = torch.ops.aten.convolution_backward.default(mul_1026, mean_32, primals_508, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1026 = mean_32 = primals_508 = None
    getitem_286: "f32[8, 512, 1, 1]" = convolution_backward_2[0]
    getitem_287: "f32[256, 512, 1, 1]" = convolution_backward_2[1]
    getitem_288: "f32[256]" = convolution_backward_2[2];  convolution_backward_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_2: "f32[8, 512, 8, 8]" = torch.ops.aten.expand.default(getitem_286, [8, 512, 8, 8]);  getitem_286 = None
    div_34: "f32[8, 512, 8, 8]" = torch.ops.aten.div.Scalar(expand_2, 64);  expand_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_581: "f32[8, 1, 512, 8, 8]" = torch.ops.aten.unsqueeze.default(div_34, 1);  div_34 = None
    expand_3: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.expand.default(unsqueeze_581, [8, 2, 512, 8, 8]);  unsqueeze_581 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_728: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.add.Tensor(mul_1016, expand_3);  mul_1016 = expand_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_205: "f32[8, 1024, 8, 8]" = torch.ops.aten.view.default(add_728, [8, 1024, 8, 8]);  add_728 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_176: "f32[8, 1024, 8, 8]" = torch.ops.aten.alias.default(relu_132);  relu_132 = None
    alias_177: "f32[8, 1024, 8, 8]" = torch.ops.aten.alias.default(alias_176);  alias_176 = None
    le_2: "b8[8, 1024, 8, 8]" = torch.ops.aten.le.Scalar(alias_177, 0);  alias_177 = None
    scalar_tensor_2: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_2: "f32[8, 1024, 8, 8]" = torch.ops.aten.where.self(le_2, scalar_tensor_2, view_205);  le_2 = scalar_tensor_2 = view_205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_582: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_408, 0);  squeeze_408 = None
    unsqueeze_583: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_582, 2);  unsqueeze_582 = None
    unsqueeze_584: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_583, 3);  unsqueeze_583 = None
    sum_107: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_2, [0, 2, 3])
    sub_181: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_168, unsqueeze_584)
    mul_1028: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(where_2, sub_181);  sub_181 = None
    sum_108: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1028, [0, 2, 3]);  mul_1028 = None
    mul_1029: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_107, 0.001953125)
    unsqueeze_585: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1029, 0);  mul_1029 = None
    unsqueeze_586: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_585, 2);  unsqueeze_585 = None
    unsqueeze_587: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_586, 3);  unsqueeze_586 = None
    mul_1030: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_108, 0.001953125)
    mul_1031: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_409, squeeze_409)
    mul_1032: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1030, mul_1031);  mul_1030 = mul_1031 = None
    unsqueeze_588: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1032, 0);  mul_1032 = None
    unsqueeze_589: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_588, 2);  unsqueeze_588 = None
    unsqueeze_590: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_589, 3);  unsqueeze_589 = None
    mul_1033: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_409, primals_506);  primals_506 = None
    unsqueeze_591: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1033, 0);  mul_1033 = None
    unsqueeze_592: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_591, 2);  unsqueeze_591 = None
    unsqueeze_593: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_592, 3);  unsqueeze_592 = None
    sub_182: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_168, unsqueeze_584);  convolution_168 = unsqueeze_584 = None
    mul_1034: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(sub_182, unsqueeze_590);  sub_182 = unsqueeze_590 = None
    sub_183: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(where_2, mul_1034);  where_2 = mul_1034 = None
    sub_184: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(sub_183, unsqueeze_587);  sub_183 = unsqueeze_587 = None
    mul_1035: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(sub_184, unsqueeze_593);  sub_184 = unsqueeze_593 = None
    mul_1036: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_108, squeeze_409);  sum_108 = squeeze_409 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_3 = torch.ops.aten.convolution_backward.default(mul_1035, relu_131, primals_505, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1035 = primals_505 = None
    getitem_289: "f32[8, 512, 8, 8]" = convolution_backward_3[0]
    getitem_290: "f32[1024, 256, 3, 3]" = convolution_backward_3[1];  convolution_backward_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_179: "f32[8, 512, 8, 8]" = torch.ops.aten.alias.default(relu_131);  relu_131 = None
    alias_180: "f32[8, 512, 8, 8]" = torch.ops.aten.alias.default(alias_179);  alias_179 = None
    le_3: "b8[8, 512, 8, 8]" = torch.ops.aten.le.Scalar(alias_180, 0);  alias_180 = None
    scalar_tensor_3: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_3: "f32[8, 512, 8, 8]" = torch.ops.aten.where.self(le_3, scalar_tensor_3, getitem_289);  le_3 = scalar_tensor_3 = getitem_289 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_594: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_405, 0);  squeeze_405 = None
    unsqueeze_595: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_594, 2);  unsqueeze_594 = None
    unsqueeze_596: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_595, 3);  unsqueeze_595 = None
    sum_109: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_3, [0, 2, 3])
    sub_185: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_167, unsqueeze_596)
    mul_1037: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(where_3, sub_185);  sub_185 = None
    sum_110: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1037, [0, 2, 3]);  mul_1037 = None
    mul_1038: "f32[512]" = torch.ops.aten.mul.Tensor(sum_109, 0.001953125)
    unsqueeze_597: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1038, 0);  mul_1038 = None
    unsqueeze_598: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_597, 2);  unsqueeze_597 = None
    unsqueeze_599: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_598, 3);  unsqueeze_598 = None
    mul_1039: "f32[512]" = torch.ops.aten.mul.Tensor(sum_110, 0.001953125)
    mul_1040: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_406, squeeze_406)
    mul_1041: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1039, mul_1040);  mul_1039 = mul_1040 = None
    unsqueeze_600: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1041, 0);  mul_1041 = None
    unsqueeze_601: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_600, 2);  unsqueeze_600 = None
    unsqueeze_602: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_601, 3);  unsqueeze_601 = None
    mul_1042: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_406, primals_503);  primals_503 = None
    unsqueeze_603: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1042, 0);  mul_1042 = None
    unsqueeze_604: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_603, 2);  unsqueeze_603 = None
    unsqueeze_605: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_604, 3);  unsqueeze_604 = None
    sub_186: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_167, unsqueeze_596);  convolution_167 = unsqueeze_596 = None
    mul_1043: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(sub_186, unsqueeze_602);  sub_186 = unsqueeze_602 = None
    sub_187: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(where_3, mul_1043);  where_3 = mul_1043 = None
    sub_188: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(sub_187, unsqueeze_599);  sub_187 = unsqueeze_599 = None
    mul_1044: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(sub_188, unsqueeze_605);  sub_188 = unsqueeze_605 = None
    mul_1045: "f32[512]" = torch.ops.aten.mul.Tensor(sum_110, squeeze_406);  sum_110 = squeeze_406 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_4 = torch.ops.aten.convolution_backward.default(mul_1044, relu_130, primals_502, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1044 = primals_502 = None
    getitem_292: "f32[8, 2048, 8, 8]" = convolution_backward_4[0]
    getitem_293: "f32[512, 2048, 1, 1]" = convolution_backward_4[1];  convolution_backward_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_729: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(where, getitem_292);  where = getitem_292 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_182: "f32[8, 2048, 8, 8]" = torch.ops.aten.alias.default(relu_130);  relu_130 = None
    alias_183: "f32[8, 2048, 8, 8]" = torch.ops.aten.alias.default(alias_182);  alias_182 = None
    le_4: "b8[8, 2048, 8, 8]" = torch.ops.aten.le.Scalar(alias_183, 0);  alias_183 = None
    scalar_tensor_4: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_4: "f32[8, 2048, 8, 8]" = torch.ops.aten.where.self(le_4, scalar_tensor_4, add_729);  le_4 = scalar_tensor_4 = add_729 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_606: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(squeeze_402, 0);  squeeze_402 = None
    unsqueeze_607: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_606, 2);  unsqueeze_606 = None
    unsqueeze_608: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_607, 3);  unsqueeze_607 = None
    sum_111: "f32[2048]" = torch.ops.aten.sum.dim_IntList(where_4, [0, 2, 3])
    sub_189: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_166, unsqueeze_608)
    mul_1046: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(where_4, sub_189);  sub_189 = None
    sum_112: "f32[2048]" = torch.ops.aten.sum.dim_IntList(mul_1046, [0, 2, 3]);  mul_1046 = None
    mul_1047: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_111, 0.001953125)
    unsqueeze_609: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1047, 0);  mul_1047 = None
    unsqueeze_610: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_609, 2);  unsqueeze_609 = None
    unsqueeze_611: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_610, 3);  unsqueeze_610 = None
    mul_1048: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_112, 0.001953125)
    mul_1049: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_403, squeeze_403)
    mul_1050: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_1048, mul_1049);  mul_1048 = mul_1049 = None
    unsqueeze_612: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1050, 0);  mul_1050 = None
    unsqueeze_613: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_612, 2);  unsqueeze_612 = None
    unsqueeze_614: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_613, 3);  unsqueeze_613 = None
    mul_1051: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_403, primals_500);  primals_500 = None
    unsqueeze_615: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1051, 0);  mul_1051 = None
    unsqueeze_616: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_615, 2);  unsqueeze_615 = None
    unsqueeze_617: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_616, 3);  unsqueeze_616 = None
    sub_190: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_166, unsqueeze_608);  convolution_166 = unsqueeze_608 = None
    mul_1052: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_190, unsqueeze_614);  sub_190 = unsqueeze_614 = None
    sub_191: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(where_4, mul_1052);  mul_1052 = None
    sub_192: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(sub_191, unsqueeze_611);  sub_191 = unsqueeze_611 = None
    mul_1053: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_192, unsqueeze_617);  sub_192 = unsqueeze_617 = None
    mul_1054: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_112, squeeze_403);  sum_112 = squeeze_403 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_5 = torch.ops.aten.convolution_backward.default(mul_1053, sum_96, primals_499, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1053 = sum_96 = primals_499 = None
    getitem_295: "f32[8, 512, 8, 8]" = convolution_backward_5[0]
    getitem_296: "f32[2048, 512, 1, 1]" = convolution_backward_5[1];  convolution_backward_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_618: "f32[8, 1, 512, 8, 8]" = torch.ops.aten.unsqueeze.default(getitem_295, 1);  getitem_295 = None
    expand_4: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.expand.default(unsqueeze_618, [8, 2, 512, 8, 8]);  unsqueeze_618 = None
    mul_1055: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.mul.Tensor(expand_4, view_187);  view_187 = None
    mul_1056: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.mul.Tensor(expand_4, view_191);  expand_4 = view_191 = None
    sum_113: "f32[8, 2, 512, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1055, [3, 4], True);  mul_1055 = None
    view_206: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(sum_113, [8, 1024, 1, 1]);  sum_113 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_207: "f32[8, 1024]" = torch.ops.aten.view.default(view_206, [8, 1024]);  view_206 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_208: "f32[8, 2, 1, 512]" = torch.ops.aten.view.default(view_207, [8, 2, 1, 512]);  view_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_184: "f32[8, 2, 1, 512]" = torch.ops.aten.alias.default(alias_161);  alias_161 = None
    mul_1057: "f32[8, 2, 1, 512]" = torch.ops.aten.mul.Tensor(view_208, alias_184);  view_208 = None
    sum_114: "f32[8, 1, 1, 512]" = torch.ops.aten.sum.dim_IntList(mul_1057, [1], True)
    mul_1058: "f32[8, 2, 1, 512]" = torch.ops.aten.mul.Tensor(alias_184, sum_114);  alias_184 = sum_114 = None
    sub_193: "f32[8, 2, 1, 512]" = torch.ops.aten.sub.Tensor(mul_1057, mul_1058);  mul_1057 = mul_1058 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_39: "f32[8, 1, 2, 512]" = torch.ops.aten.permute.default(sub_193, [0, 2, 1, 3]);  sub_193 = None
    view_209: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(permute_39, [8, 1024, 1, 1]);  permute_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_6 = torch.ops.aten.convolution_backward.default(view_209, relu_129, primals_497, [1024], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_209 = primals_497 = None
    getitem_298: "f32[8, 256, 1, 1]" = convolution_backward_6[0]
    getitem_299: "f32[1024, 256, 1, 1]" = convolution_backward_6[1]
    getitem_300: "f32[1024]" = convolution_backward_6[2];  convolution_backward_6 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_186: "f32[8, 256, 1, 1]" = torch.ops.aten.alias.default(relu_129);  relu_129 = None
    alias_187: "f32[8, 256, 1, 1]" = torch.ops.aten.alias.default(alias_186);  alias_186 = None
    le_5: "b8[8, 256, 1, 1]" = torch.ops.aten.le.Scalar(alias_187, 0);  alias_187 = None
    scalar_tensor_5: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_5: "f32[8, 256, 1, 1]" = torch.ops.aten.where.self(le_5, scalar_tensor_5, getitem_298);  le_5 = scalar_tensor_5 = getitem_298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_619: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_399, 0);  squeeze_399 = None
    unsqueeze_620: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_619, 2);  unsqueeze_619 = None
    unsqueeze_621: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_620, 3);  unsqueeze_620 = None
    sum_115: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_5, [0, 2, 3])
    sub_194: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_164, unsqueeze_621)
    mul_1059: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(where_5, sub_194);  sub_194 = None
    sum_116: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1059, [0, 2, 3]);  mul_1059 = None
    mul_1060: "f32[256]" = torch.ops.aten.mul.Tensor(sum_115, 0.125)
    unsqueeze_622: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1060, 0);  mul_1060 = None
    unsqueeze_623: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_622, 2);  unsqueeze_622 = None
    unsqueeze_624: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_623, 3);  unsqueeze_623 = None
    mul_1061: "f32[256]" = torch.ops.aten.mul.Tensor(sum_116, 0.125)
    mul_1062: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_400, squeeze_400)
    mul_1063: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1061, mul_1062);  mul_1061 = mul_1062 = None
    unsqueeze_625: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1063, 0);  mul_1063 = None
    unsqueeze_626: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_625, 2);  unsqueeze_625 = None
    unsqueeze_627: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_626, 3);  unsqueeze_626 = None
    mul_1064: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_400, primals_495);  primals_495 = None
    unsqueeze_628: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1064, 0);  mul_1064 = None
    unsqueeze_629: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_628, 2);  unsqueeze_628 = None
    unsqueeze_630: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_629, 3);  unsqueeze_629 = None
    sub_195: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_164, unsqueeze_621);  convolution_164 = unsqueeze_621 = None
    mul_1065: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_195, unsqueeze_627);  sub_195 = unsqueeze_627 = None
    sub_196: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(where_5, mul_1065);  where_5 = mul_1065 = None
    sub_197: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(sub_196, unsqueeze_624);  sub_196 = unsqueeze_624 = None
    mul_1066: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_197, unsqueeze_630);  sub_197 = unsqueeze_630 = None
    mul_1067: "f32[256]" = torch.ops.aten.mul.Tensor(sum_116, squeeze_400);  sum_116 = squeeze_400 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_7 = torch.ops.aten.convolution_backward.default(mul_1066, mean_31, primals_493, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1066 = mean_31 = primals_493 = None
    getitem_301: "f32[8, 512, 1, 1]" = convolution_backward_7[0]
    getitem_302: "f32[256, 512, 1, 1]" = convolution_backward_7[1]
    getitem_303: "f32[256]" = convolution_backward_7[2];  convolution_backward_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_5: "f32[8, 512, 8, 8]" = torch.ops.aten.expand.default(getitem_301, [8, 512, 8, 8]);  getitem_301 = None
    div_35: "f32[8, 512, 8, 8]" = torch.ops.aten.div.Scalar(expand_5, 64);  expand_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_631: "f32[8, 1, 512, 8, 8]" = torch.ops.aten.unsqueeze.default(div_35, 1);  div_35 = None
    expand_6: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.expand.default(unsqueeze_631, [8, 2, 512, 8, 8]);  unsqueeze_631 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_730: "f32[8, 2, 512, 8, 8]" = torch.ops.aten.add.Tensor(mul_1056, expand_6);  mul_1056 = expand_6 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_210: "f32[8, 1024, 8, 8]" = torch.ops.aten.view.default(add_730, [8, 1024, 8, 8]);  add_730 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_189: "f32[8, 1024, 8, 8]" = torch.ops.aten.alias.default(relu_128);  relu_128 = None
    alias_190: "f32[8, 1024, 8, 8]" = torch.ops.aten.alias.default(alias_189);  alias_189 = None
    le_6: "b8[8, 1024, 8, 8]" = torch.ops.aten.le.Scalar(alias_190, 0);  alias_190 = None
    scalar_tensor_6: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_6: "f32[8, 1024, 8, 8]" = torch.ops.aten.where.self(le_6, scalar_tensor_6, view_210);  le_6 = scalar_tensor_6 = view_210 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_632: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_396, 0);  squeeze_396 = None
    unsqueeze_633: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_632, 2);  unsqueeze_632 = None
    unsqueeze_634: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_633, 3);  unsqueeze_633 = None
    sum_117: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_6, [0, 2, 3])
    sub_198: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_163, unsqueeze_634)
    mul_1068: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(where_6, sub_198);  sub_198 = None
    sum_118: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1068, [0, 2, 3]);  mul_1068 = None
    mul_1069: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_117, 0.001953125)
    unsqueeze_635: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1069, 0);  mul_1069 = None
    unsqueeze_636: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_635, 2);  unsqueeze_635 = None
    unsqueeze_637: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_636, 3);  unsqueeze_636 = None
    mul_1070: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_118, 0.001953125)
    mul_1071: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_397, squeeze_397)
    mul_1072: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1070, mul_1071);  mul_1070 = mul_1071 = None
    unsqueeze_638: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1072, 0);  mul_1072 = None
    unsqueeze_639: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_638, 2);  unsqueeze_638 = None
    unsqueeze_640: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_639, 3);  unsqueeze_639 = None
    mul_1073: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_397, primals_491);  primals_491 = None
    unsqueeze_641: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1073, 0);  mul_1073 = None
    unsqueeze_642: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_641, 2);  unsqueeze_641 = None
    unsqueeze_643: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_642, 3);  unsqueeze_642 = None
    sub_199: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_163, unsqueeze_634);  convolution_163 = unsqueeze_634 = None
    mul_1074: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(sub_199, unsqueeze_640);  sub_199 = unsqueeze_640 = None
    sub_200: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(where_6, mul_1074);  where_6 = mul_1074 = None
    sub_201: "f32[8, 1024, 8, 8]" = torch.ops.aten.sub.Tensor(sub_200, unsqueeze_637);  sub_200 = unsqueeze_637 = None
    mul_1075: "f32[8, 1024, 8, 8]" = torch.ops.aten.mul.Tensor(sub_201, unsqueeze_643);  sub_201 = unsqueeze_643 = None
    mul_1076: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_118, squeeze_397);  sum_118 = squeeze_397 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_8 = torch.ops.aten.convolution_backward.default(mul_1075, relu_127, primals_490, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1075 = primals_490 = None
    getitem_304: "f32[8, 512, 8, 8]" = convolution_backward_8[0]
    getitem_305: "f32[1024, 256, 3, 3]" = convolution_backward_8[1];  convolution_backward_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_192: "f32[8, 512, 8, 8]" = torch.ops.aten.alias.default(relu_127);  relu_127 = None
    alias_193: "f32[8, 512, 8, 8]" = torch.ops.aten.alias.default(alias_192);  alias_192 = None
    le_7: "b8[8, 512, 8, 8]" = torch.ops.aten.le.Scalar(alias_193, 0);  alias_193 = None
    scalar_tensor_7: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_7: "f32[8, 512, 8, 8]" = torch.ops.aten.where.self(le_7, scalar_tensor_7, getitem_304);  le_7 = scalar_tensor_7 = getitem_304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_644: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_393, 0);  squeeze_393 = None
    unsqueeze_645: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_644, 2);  unsqueeze_644 = None
    unsqueeze_646: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_645, 3);  unsqueeze_645 = None
    sum_119: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_7, [0, 2, 3])
    sub_202: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_162, unsqueeze_646)
    mul_1077: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(where_7, sub_202);  sub_202 = None
    sum_120: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1077, [0, 2, 3]);  mul_1077 = None
    mul_1078: "f32[512]" = torch.ops.aten.mul.Tensor(sum_119, 0.001953125)
    unsqueeze_647: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1078, 0);  mul_1078 = None
    unsqueeze_648: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_647, 2);  unsqueeze_647 = None
    unsqueeze_649: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_648, 3);  unsqueeze_648 = None
    mul_1079: "f32[512]" = torch.ops.aten.mul.Tensor(sum_120, 0.001953125)
    mul_1080: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_394, squeeze_394)
    mul_1081: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1079, mul_1080);  mul_1079 = mul_1080 = None
    unsqueeze_650: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1081, 0);  mul_1081 = None
    unsqueeze_651: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_650, 2);  unsqueeze_650 = None
    unsqueeze_652: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_651, 3);  unsqueeze_651 = None
    mul_1082: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_394, primals_488);  primals_488 = None
    unsqueeze_653: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1082, 0);  mul_1082 = None
    unsqueeze_654: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_653, 2);  unsqueeze_653 = None
    unsqueeze_655: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_654, 3);  unsqueeze_654 = None
    sub_203: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_162, unsqueeze_646);  convolution_162 = unsqueeze_646 = None
    mul_1083: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(sub_203, unsqueeze_652);  sub_203 = unsqueeze_652 = None
    sub_204: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(where_7, mul_1083);  where_7 = mul_1083 = None
    sub_205: "f32[8, 512, 8, 8]" = torch.ops.aten.sub.Tensor(sub_204, unsqueeze_649);  sub_204 = unsqueeze_649 = None
    mul_1084: "f32[8, 512, 8, 8]" = torch.ops.aten.mul.Tensor(sub_205, unsqueeze_655);  sub_205 = unsqueeze_655 = None
    mul_1085: "f32[512]" = torch.ops.aten.mul.Tensor(sum_120, squeeze_394);  sum_120 = squeeze_394 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_9 = torch.ops.aten.convolution_backward.default(mul_1084, relu_126, primals_487, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1084 = primals_487 = None
    getitem_307: "f32[8, 2048, 8, 8]" = convolution_backward_9[0]
    getitem_308: "f32[512, 2048, 1, 1]" = convolution_backward_9[1];  convolution_backward_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_731: "f32[8, 2048, 8, 8]" = torch.ops.aten.add.Tensor(where_4, getitem_307);  where_4 = getitem_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_195: "f32[8, 2048, 8, 8]" = torch.ops.aten.alias.default(relu_126);  relu_126 = None
    alias_196: "f32[8, 2048, 8, 8]" = torch.ops.aten.alias.default(alias_195);  alias_195 = None
    le_8: "b8[8, 2048, 8, 8]" = torch.ops.aten.le.Scalar(alias_196, 0);  alias_196 = None
    scalar_tensor_8: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_8: "f32[8, 2048, 8, 8]" = torch.ops.aten.where.self(le_8, scalar_tensor_8, add_731);  le_8 = scalar_tensor_8 = add_731 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    unsqueeze_656: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(squeeze_390, 0);  squeeze_390 = None
    unsqueeze_657: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_656, 2);  unsqueeze_656 = None
    unsqueeze_658: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_657, 3);  unsqueeze_657 = None
    sum_121: "f32[2048]" = torch.ops.aten.sum.dim_IntList(where_8, [0, 2, 3])
    sub_206: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_161, unsqueeze_658)
    mul_1086: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(where_8, sub_206);  sub_206 = None
    sum_122: "f32[2048]" = torch.ops.aten.sum.dim_IntList(mul_1086, [0, 2, 3]);  mul_1086 = None
    mul_1087: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_121, 0.001953125)
    unsqueeze_659: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1087, 0);  mul_1087 = None
    unsqueeze_660: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_659, 2);  unsqueeze_659 = None
    unsqueeze_661: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_660, 3);  unsqueeze_660 = None
    mul_1088: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_122, 0.001953125)
    mul_1089: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_391, squeeze_391)
    mul_1090: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_1088, mul_1089);  mul_1088 = mul_1089 = None
    unsqueeze_662: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1090, 0);  mul_1090 = None
    unsqueeze_663: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_662, 2);  unsqueeze_662 = None
    unsqueeze_664: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_663, 3);  unsqueeze_663 = None
    mul_1091: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_391, primals_485);  primals_485 = None
    unsqueeze_665: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1091, 0);  mul_1091 = None
    unsqueeze_666: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_665, 2);  unsqueeze_665 = None
    unsqueeze_667: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_666, 3);  unsqueeze_666 = None
    sub_207: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_161, unsqueeze_658);  convolution_161 = unsqueeze_658 = None
    mul_1092: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_207, unsqueeze_664);  sub_207 = unsqueeze_664 = None
    sub_208: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(where_8, mul_1092);  mul_1092 = None
    sub_209: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(sub_208, unsqueeze_661);  sub_208 = unsqueeze_661 = None
    mul_1093: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_209, unsqueeze_667);  sub_209 = unsqueeze_667 = None
    mul_1094: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_122, squeeze_391);  sum_122 = squeeze_391 = None
    convolution_backward_10 = torch.ops.aten.convolution_backward.default(mul_1093, avg_pool2d_5, primals_484, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1093 = avg_pool2d_5 = primals_484 = None
    getitem_310: "f32[8, 1024, 8, 8]" = convolution_backward_10[0]
    getitem_311: "f32[2048, 1024, 1, 1]" = convolution_backward_10[1];  convolution_backward_10 = None
    avg_pool2d_backward: "f32[8, 1024, 16, 16]" = torch.ops.aten.avg_pool2d_backward.default(getitem_310, relu_122, [2, 2], [2, 2], [0, 0], True, False, None);  getitem_310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_668: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(squeeze_387, 0);  squeeze_387 = None
    unsqueeze_669: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_668, 2);  unsqueeze_668 = None
    unsqueeze_670: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_669, 3);  unsqueeze_669 = None
    sum_123: "f32[2048]" = torch.ops.aten.sum.dim_IntList(where_8, [0, 2, 3])
    sub_210: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_160, unsqueeze_670)
    mul_1095: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(where_8, sub_210);  sub_210 = None
    sum_124: "f32[2048]" = torch.ops.aten.sum.dim_IntList(mul_1095, [0, 2, 3]);  mul_1095 = None
    mul_1096: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_123, 0.001953125)
    unsqueeze_671: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1096, 0);  mul_1096 = None
    unsqueeze_672: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_671, 2);  unsqueeze_671 = None
    unsqueeze_673: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_672, 3);  unsqueeze_672 = None
    mul_1097: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_124, 0.001953125)
    mul_1098: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_388, squeeze_388)
    mul_1099: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_1097, mul_1098);  mul_1097 = mul_1098 = None
    unsqueeze_674: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1099, 0);  mul_1099 = None
    unsqueeze_675: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_674, 2);  unsqueeze_674 = None
    unsqueeze_676: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_675, 3);  unsqueeze_675 = None
    mul_1100: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_388, primals_482);  primals_482 = None
    unsqueeze_677: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_1100, 0);  mul_1100 = None
    unsqueeze_678: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_677, 2);  unsqueeze_677 = None
    unsqueeze_679: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_678, 3);  unsqueeze_678 = None
    sub_211: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(convolution_160, unsqueeze_670);  convolution_160 = unsqueeze_670 = None
    mul_1101: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_211, unsqueeze_676);  sub_211 = unsqueeze_676 = None
    sub_212: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(where_8, mul_1101);  where_8 = mul_1101 = None
    sub_213: "f32[8, 2048, 8, 8]" = torch.ops.aten.sub.Tensor(sub_212, unsqueeze_673);  sub_212 = unsqueeze_673 = None
    mul_1102: "f32[8, 2048, 8, 8]" = torch.ops.aten.mul.Tensor(sub_213, unsqueeze_679);  sub_213 = unsqueeze_679 = None
    mul_1103: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_124, squeeze_388);  sum_124 = squeeze_388 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_11 = torch.ops.aten.convolution_backward.default(mul_1102, avg_pool2d_4, primals_481, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1102 = avg_pool2d_4 = primals_481 = None
    getitem_313: "f32[8, 512, 8, 8]" = convolution_backward_11[0]
    getitem_314: "f32[2048, 512, 1, 1]" = convolution_backward_11[1];  convolution_backward_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:107, code: out = self.avd_last(out)
    avg_pool2d_backward_1: "f32[8, 512, 16, 16]" = torch.ops.aten.avg_pool2d_backward.default(getitem_313, sum_93, [3, 3], [2, 2], [1, 1], False, True, None);  getitem_313 = sum_93 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_680: "f32[8, 1, 512, 16, 16]" = torch.ops.aten.unsqueeze.default(avg_pool2d_backward_1, 1);  avg_pool2d_backward_1 = None
    expand_7: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_680, [8, 2, 512, 16, 16]);  unsqueeze_680 = None
    mul_1104: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.mul.Tensor(expand_7, view_181);  view_181 = None
    mul_1105: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.mul.Tensor(expand_7, view_185);  expand_7 = view_185 = None
    sum_125: "f32[8, 2, 512, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1104, [3, 4], True);  mul_1104 = None
    view_211: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(sum_125, [8, 1024, 1, 1]);  sum_125 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_212: "f32[8, 1024]" = torch.ops.aten.view.default(view_211, [8, 1024]);  view_211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_213: "f32[8, 2, 1, 512]" = torch.ops.aten.view.default(view_212, [8, 2, 1, 512]);  view_212 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_197: "f32[8, 2, 1, 512]" = torch.ops.aten.alias.default(alias_156);  alias_156 = None
    mul_1106: "f32[8, 2, 1, 512]" = torch.ops.aten.mul.Tensor(view_213, alias_197);  view_213 = None
    sum_126: "f32[8, 1, 1, 512]" = torch.ops.aten.sum.dim_IntList(mul_1106, [1], True)
    mul_1107: "f32[8, 2, 1, 512]" = torch.ops.aten.mul.Tensor(alias_197, sum_126);  alias_197 = sum_126 = None
    sub_214: "f32[8, 2, 1, 512]" = torch.ops.aten.sub.Tensor(mul_1106, mul_1107);  mul_1106 = mul_1107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_40: "f32[8, 1, 2, 512]" = torch.ops.aten.permute.default(sub_214, [0, 2, 1, 3]);  sub_214 = None
    view_214: "f32[8, 1024, 1, 1]" = torch.ops.aten.view.default(permute_40, [8, 1024, 1, 1]);  permute_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_12 = torch.ops.aten.convolution_backward.default(view_214, relu_125, primals_479, [1024], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_214 = primals_479 = None
    getitem_316: "f32[8, 256, 1, 1]" = convolution_backward_12[0]
    getitem_317: "f32[1024, 256, 1, 1]" = convolution_backward_12[1]
    getitem_318: "f32[1024]" = convolution_backward_12[2];  convolution_backward_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_199: "f32[8, 256, 1, 1]" = torch.ops.aten.alias.default(relu_125);  relu_125 = None
    alias_200: "f32[8, 256, 1, 1]" = torch.ops.aten.alias.default(alias_199);  alias_199 = None
    le_9: "b8[8, 256, 1, 1]" = torch.ops.aten.le.Scalar(alias_200, 0);  alias_200 = None
    scalar_tensor_9: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_9: "f32[8, 256, 1, 1]" = torch.ops.aten.where.self(le_9, scalar_tensor_9, getitem_316);  le_9 = scalar_tensor_9 = getitem_316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_681: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_384, 0);  squeeze_384 = None
    unsqueeze_682: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_681, 2);  unsqueeze_681 = None
    unsqueeze_683: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_682, 3);  unsqueeze_682 = None
    sum_127: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_9, [0, 2, 3])
    sub_215: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_158, unsqueeze_683)
    mul_1108: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(where_9, sub_215);  sub_215 = None
    sum_128: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1108, [0, 2, 3]);  mul_1108 = None
    mul_1109: "f32[256]" = torch.ops.aten.mul.Tensor(sum_127, 0.125)
    unsqueeze_684: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1109, 0);  mul_1109 = None
    unsqueeze_685: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_684, 2);  unsqueeze_684 = None
    unsqueeze_686: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_685, 3);  unsqueeze_685 = None
    mul_1110: "f32[256]" = torch.ops.aten.mul.Tensor(sum_128, 0.125)
    mul_1111: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_385, squeeze_385)
    mul_1112: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1110, mul_1111);  mul_1110 = mul_1111 = None
    unsqueeze_687: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1112, 0);  mul_1112 = None
    unsqueeze_688: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_687, 2);  unsqueeze_687 = None
    unsqueeze_689: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_688, 3);  unsqueeze_688 = None
    mul_1113: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_385, primals_477);  primals_477 = None
    unsqueeze_690: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1113, 0);  mul_1113 = None
    unsqueeze_691: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_690, 2);  unsqueeze_690 = None
    unsqueeze_692: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_691, 3);  unsqueeze_691 = None
    sub_216: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_158, unsqueeze_683);  convolution_158 = unsqueeze_683 = None
    mul_1114: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_216, unsqueeze_689);  sub_216 = unsqueeze_689 = None
    sub_217: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(where_9, mul_1114);  where_9 = mul_1114 = None
    sub_218: "f32[8, 256, 1, 1]" = torch.ops.aten.sub.Tensor(sub_217, unsqueeze_686);  sub_217 = unsqueeze_686 = None
    mul_1115: "f32[8, 256, 1, 1]" = torch.ops.aten.mul.Tensor(sub_218, unsqueeze_692);  sub_218 = unsqueeze_692 = None
    mul_1116: "f32[256]" = torch.ops.aten.mul.Tensor(sum_128, squeeze_385);  sum_128 = squeeze_385 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_13 = torch.ops.aten.convolution_backward.default(mul_1115, mean_30, primals_475, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1115 = mean_30 = primals_475 = None
    getitem_319: "f32[8, 512, 1, 1]" = convolution_backward_13[0]
    getitem_320: "f32[256, 512, 1, 1]" = convolution_backward_13[1]
    getitem_321: "f32[256]" = convolution_backward_13[2];  convolution_backward_13 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_8: "f32[8, 512, 16, 16]" = torch.ops.aten.expand.default(getitem_319, [8, 512, 16, 16]);  getitem_319 = None
    div_36: "f32[8, 512, 16, 16]" = torch.ops.aten.div.Scalar(expand_8, 256);  expand_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_693: "f32[8, 1, 512, 16, 16]" = torch.ops.aten.unsqueeze.default(div_36, 1);  div_36 = None
    expand_9: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_693, [8, 2, 512, 16, 16]);  unsqueeze_693 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_732: "f32[8, 2, 512, 16, 16]" = torch.ops.aten.add.Tensor(mul_1105, expand_9);  mul_1105 = expand_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_215: "f32[8, 1024, 16, 16]" = torch.ops.aten.view.default(add_732, [8, 1024, 16, 16]);  add_732 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_202: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_124);  relu_124 = None
    alias_203: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_202);  alias_202 = None
    le_10: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_203, 0);  alias_203 = None
    scalar_tensor_10: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_10: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_10, scalar_tensor_10, view_215);  le_10 = scalar_tensor_10 = view_215 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_694: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_381, 0);  squeeze_381 = None
    unsqueeze_695: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_694, 2);  unsqueeze_694 = None
    unsqueeze_696: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_695, 3);  unsqueeze_695 = None
    sum_129: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_10, [0, 2, 3])
    sub_219: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_157, unsqueeze_696)
    mul_1117: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_10, sub_219);  sub_219 = None
    sum_130: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1117, [0, 2, 3]);  mul_1117 = None
    mul_1118: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_129, 0.00048828125)
    unsqueeze_697: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1118, 0);  mul_1118 = None
    unsqueeze_698: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_697, 2);  unsqueeze_697 = None
    unsqueeze_699: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_698, 3);  unsqueeze_698 = None
    mul_1119: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_130, 0.00048828125)
    mul_1120: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_382, squeeze_382)
    mul_1121: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1119, mul_1120);  mul_1119 = mul_1120 = None
    unsqueeze_700: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1121, 0);  mul_1121 = None
    unsqueeze_701: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_700, 2);  unsqueeze_700 = None
    unsqueeze_702: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_701, 3);  unsqueeze_701 = None
    mul_1122: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_382, primals_473);  primals_473 = None
    unsqueeze_703: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1122, 0);  mul_1122 = None
    unsqueeze_704: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_703, 2);  unsqueeze_703 = None
    unsqueeze_705: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_704, 3);  unsqueeze_704 = None
    sub_220: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_157, unsqueeze_696);  convolution_157 = unsqueeze_696 = None
    mul_1123: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_220, unsqueeze_702);  sub_220 = unsqueeze_702 = None
    sub_221: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_10, mul_1123);  where_10 = mul_1123 = None
    sub_222: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_221, unsqueeze_699);  sub_221 = unsqueeze_699 = None
    mul_1124: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_222, unsqueeze_705);  sub_222 = unsqueeze_705 = None
    mul_1125: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_130, squeeze_382);  sum_130 = squeeze_382 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_14 = torch.ops.aten.convolution_backward.default(mul_1124, relu_123, primals_472, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1124 = primals_472 = None
    getitem_322: "f32[8, 512, 16, 16]" = convolution_backward_14[0]
    getitem_323: "f32[1024, 256, 3, 3]" = convolution_backward_14[1];  convolution_backward_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_205: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_123);  relu_123 = None
    alias_206: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_205);  alias_205 = None
    le_11: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_206, 0);  alias_206 = None
    scalar_tensor_11: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_11: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_11, scalar_tensor_11, getitem_322);  le_11 = scalar_tensor_11 = getitem_322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_706: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_378, 0);  squeeze_378 = None
    unsqueeze_707: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_706, 2);  unsqueeze_706 = None
    unsqueeze_708: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_707, 3);  unsqueeze_707 = None
    sum_131: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_11, [0, 2, 3])
    sub_223: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_156, unsqueeze_708)
    mul_1126: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_11, sub_223);  sub_223 = None
    sum_132: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1126, [0, 2, 3]);  mul_1126 = None
    mul_1127: "f32[512]" = torch.ops.aten.mul.Tensor(sum_131, 0.00048828125)
    unsqueeze_709: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1127, 0);  mul_1127 = None
    unsqueeze_710: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_709, 2);  unsqueeze_709 = None
    unsqueeze_711: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_710, 3);  unsqueeze_710 = None
    mul_1128: "f32[512]" = torch.ops.aten.mul.Tensor(sum_132, 0.00048828125)
    mul_1129: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_379, squeeze_379)
    mul_1130: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1128, mul_1129);  mul_1128 = mul_1129 = None
    unsqueeze_712: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1130, 0);  mul_1130 = None
    unsqueeze_713: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_712, 2);  unsqueeze_712 = None
    unsqueeze_714: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_713, 3);  unsqueeze_713 = None
    mul_1131: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_379, primals_470);  primals_470 = None
    unsqueeze_715: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1131, 0);  mul_1131 = None
    unsqueeze_716: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_715, 2);  unsqueeze_715 = None
    unsqueeze_717: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_716, 3);  unsqueeze_716 = None
    sub_224: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_156, unsqueeze_708);  convolution_156 = unsqueeze_708 = None
    mul_1132: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_224, unsqueeze_714);  sub_224 = unsqueeze_714 = None
    sub_225: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_11, mul_1132);  where_11 = mul_1132 = None
    sub_226: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_225, unsqueeze_711);  sub_225 = unsqueeze_711 = None
    mul_1133: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_226, unsqueeze_717);  sub_226 = unsqueeze_717 = None
    mul_1134: "f32[512]" = torch.ops.aten.mul.Tensor(sum_132, squeeze_379);  sum_132 = squeeze_379 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_15 = torch.ops.aten.convolution_backward.default(mul_1133, relu_122, primals_469, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1133 = primals_469 = None
    getitem_325: "f32[8, 1024, 16, 16]" = convolution_backward_15[0]
    getitem_326: "f32[512, 1024, 1, 1]" = convolution_backward_15[1];  convolution_backward_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_733: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(avg_pool2d_backward, getitem_325);  avg_pool2d_backward = getitem_325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_208: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_122);  relu_122 = None
    alias_209: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_208);  alias_208 = None
    le_12: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_209, 0);  alias_209 = None
    scalar_tensor_12: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_12: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_12, scalar_tensor_12, add_733);  le_12 = scalar_tensor_12 = add_733 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_718: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_375, 0);  squeeze_375 = None
    unsqueeze_719: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_718, 2);  unsqueeze_718 = None
    unsqueeze_720: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_719, 3);  unsqueeze_719 = None
    sum_133: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_12, [0, 2, 3])
    sub_227: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_155, unsqueeze_720)
    mul_1135: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_12, sub_227);  sub_227 = None
    sum_134: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1135, [0, 2, 3]);  mul_1135 = None
    mul_1136: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_133, 0.00048828125)
    unsqueeze_721: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1136, 0);  mul_1136 = None
    unsqueeze_722: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_721, 2);  unsqueeze_721 = None
    unsqueeze_723: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_722, 3);  unsqueeze_722 = None
    mul_1137: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_134, 0.00048828125)
    mul_1138: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_376, squeeze_376)
    mul_1139: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1137, mul_1138);  mul_1137 = mul_1138 = None
    unsqueeze_724: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1139, 0);  mul_1139 = None
    unsqueeze_725: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_724, 2);  unsqueeze_724 = None
    unsqueeze_726: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_725, 3);  unsqueeze_725 = None
    mul_1140: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_376, primals_467);  primals_467 = None
    unsqueeze_727: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1140, 0);  mul_1140 = None
    unsqueeze_728: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_727, 2);  unsqueeze_727 = None
    unsqueeze_729: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_728, 3);  unsqueeze_728 = None
    sub_228: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_155, unsqueeze_720);  convolution_155 = unsqueeze_720 = None
    mul_1141: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_228, unsqueeze_726);  sub_228 = unsqueeze_726 = None
    sub_229: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_12, mul_1141);  mul_1141 = None
    sub_230: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_229, unsqueeze_723);  sub_229 = unsqueeze_723 = None
    mul_1142: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_230, unsqueeze_729);  sub_230 = unsqueeze_729 = None
    mul_1143: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_134, squeeze_376);  sum_134 = squeeze_376 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_16 = torch.ops.aten.convolution_backward.default(mul_1142, sum_90, primals_466, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1142 = sum_90 = primals_466 = None
    getitem_328: "f32[8, 256, 16, 16]" = convolution_backward_16[0]
    getitem_329: "f32[1024, 256, 1, 1]" = convolution_backward_16[1];  convolution_backward_16 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_730: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_328, 1);  getitem_328 = None
    expand_10: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_730, [8, 2, 256, 16, 16]);  unsqueeze_730 = None
    mul_1144: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_10, view_175);  view_175 = None
    mul_1145: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_10, view_179);  expand_10 = view_179 = None
    sum_135: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1144, [3, 4], True);  mul_1144 = None
    view_216: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_135, [8, 512, 1, 1]);  sum_135 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_217: "f32[8, 512]" = torch.ops.aten.view.default(view_216, [8, 512]);  view_216 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_218: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_217, [8, 2, 1, 256]);  view_217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_210: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_151);  alias_151 = None
    mul_1146: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_218, alias_210);  view_218 = None
    sum_136: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1146, [1], True)
    mul_1147: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_210, sum_136);  alias_210 = sum_136 = None
    sub_231: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1146, mul_1147);  mul_1146 = mul_1147 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_41: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_231, [0, 2, 1, 3]);  sub_231 = None
    view_219: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_41, [8, 512, 1, 1]);  permute_41 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_17 = torch.ops.aten.convolution_backward.default(view_219, relu_121, primals_464, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_219 = primals_464 = None
    getitem_331: "f32[8, 128, 1, 1]" = convolution_backward_17[0]
    getitem_332: "f32[512, 128, 1, 1]" = convolution_backward_17[1]
    getitem_333: "f32[512]" = convolution_backward_17[2];  convolution_backward_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_212: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_121);  relu_121 = None
    alias_213: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_212);  alias_212 = None
    le_13: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_213, 0);  alias_213 = None
    scalar_tensor_13: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_13: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_13, scalar_tensor_13, getitem_331);  le_13 = scalar_tensor_13 = getitem_331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_731: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_372, 0);  squeeze_372 = None
    unsqueeze_732: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_731, 2);  unsqueeze_731 = None
    unsqueeze_733: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_732, 3);  unsqueeze_732 = None
    sum_137: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_13, [0, 2, 3])
    sub_232: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_153, unsqueeze_733)
    mul_1148: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_13, sub_232);  sub_232 = None
    sum_138: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1148, [0, 2, 3]);  mul_1148 = None
    mul_1149: "f32[128]" = torch.ops.aten.mul.Tensor(sum_137, 0.125)
    unsqueeze_734: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1149, 0);  mul_1149 = None
    unsqueeze_735: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_734, 2);  unsqueeze_734 = None
    unsqueeze_736: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_735, 3);  unsqueeze_735 = None
    mul_1150: "f32[128]" = torch.ops.aten.mul.Tensor(sum_138, 0.125)
    mul_1151: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_373, squeeze_373)
    mul_1152: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1150, mul_1151);  mul_1150 = mul_1151 = None
    unsqueeze_737: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1152, 0);  mul_1152 = None
    unsqueeze_738: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_737, 2);  unsqueeze_737 = None
    unsqueeze_739: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_738, 3);  unsqueeze_738 = None
    mul_1153: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_373, primals_462);  primals_462 = None
    unsqueeze_740: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1153, 0);  mul_1153 = None
    unsqueeze_741: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_740, 2);  unsqueeze_740 = None
    unsqueeze_742: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_741, 3);  unsqueeze_741 = None
    sub_233: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_153, unsqueeze_733);  convolution_153 = unsqueeze_733 = None
    mul_1154: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_233, unsqueeze_739);  sub_233 = unsqueeze_739 = None
    sub_234: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_13, mul_1154);  where_13 = mul_1154 = None
    sub_235: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_234, unsqueeze_736);  sub_234 = unsqueeze_736 = None
    mul_1155: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_235, unsqueeze_742);  sub_235 = unsqueeze_742 = None
    mul_1156: "f32[128]" = torch.ops.aten.mul.Tensor(sum_138, squeeze_373);  sum_138 = squeeze_373 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_18 = torch.ops.aten.convolution_backward.default(mul_1155, mean_29, primals_460, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1155 = mean_29 = primals_460 = None
    getitem_334: "f32[8, 256, 1, 1]" = convolution_backward_18[0]
    getitem_335: "f32[128, 256, 1, 1]" = convolution_backward_18[1]
    getitem_336: "f32[128]" = convolution_backward_18[2];  convolution_backward_18 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_11: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_334, [8, 256, 16, 16]);  getitem_334 = None
    div_37: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_11, 256);  expand_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_743: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_37, 1);  div_37 = None
    expand_12: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_743, [8, 2, 256, 16, 16]);  unsqueeze_743 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_734: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1145, expand_12);  mul_1145 = expand_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_220: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_734, [8, 512, 16, 16]);  add_734 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_215: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_120);  relu_120 = None
    alias_216: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_215);  alias_215 = None
    le_14: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_216, 0);  alias_216 = None
    scalar_tensor_14: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_14: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_14, scalar_tensor_14, view_220);  le_14 = scalar_tensor_14 = view_220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_744: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_369, 0);  squeeze_369 = None
    unsqueeze_745: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_744, 2);  unsqueeze_744 = None
    unsqueeze_746: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_745, 3);  unsqueeze_745 = None
    sum_139: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_14, [0, 2, 3])
    sub_236: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_152, unsqueeze_746)
    mul_1157: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_14, sub_236);  sub_236 = None
    sum_140: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1157, [0, 2, 3]);  mul_1157 = None
    mul_1158: "f32[512]" = torch.ops.aten.mul.Tensor(sum_139, 0.00048828125)
    unsqueeze_747: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1158, 0);  mul_1158 = None
    unsqueeze_748: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_747, 2);  unsqueeze_747 = None
    unsqueeze_749: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_748, 3);  unsqueeze_748 = None
    mul_1159: "f32[512]" = torch.ops.aten.mul.Tensor(sum_140, 0.00048828125)
    mul_1160: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_370, squeeze_370)
    mul_1161: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1159, mul_1160);  mul_1159 = mul_1160 = None
    unsqueeze_750: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1161, 0);  mul_1161 = None
    unsqueeze_751: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_750, 2);  unsqueeze_750 = None
    unsqueeze_752: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_751, 3);  unsqueeze_751 = None
    mul_1162: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_370, primals_458);  primals_458 = None
    unsqueeze_753: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1162, 0);  mul_1162 = None
    unsqueeze_754: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_753, 2);  unsqueeze_753 = None
    unsqueeze_755: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_754, 3);  unsqueeze_754 = None
    sub_237: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_152, unsqueeze_746);  convolution_152 = unsqueeze_746 = None
    mul_1163: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_237, unsqueeze_752);  sub_237 = unsqueeze_752 = None
    sub_238: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_14, mul_1163);  where_14 = mul_1163 = None
    sub_239: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_238, unsqueeze_749);  sub_238 = unsqueeze_749 = None
    mul_1164: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_239, unsqueeze_755);  sub_239 = unsqueeze_755 = None
    mul_1165: "f32[512]" = torch.ops.aten.mul.Tensor(sum_140, squeeze_370);  sum_140 = squeeze_370 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_19 = torch.ops.aten.convolution_backward.default(mul_1164, relu_119, primals_457, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1164 = primals_457 = None
    getitem_337: "f32[8, 256, 16, 16]" = convolution_backward_19[0]
    getitem_338: "f32[512, 128, 3, 3]" = convolution_backward_19[1];  convolution_backward_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_218: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_119);  relu_119 = None
    alias_219: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_218);  alias_218 = None
    le_15: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_219, 0);  alias_219 = None
    scalar_tensor_15: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_15: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_15, scalar_tensor_15, getitem_337);  le_15 = scalar_tensor_15 = getitem_337 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_756: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_366, 0);  squeeze_366 = None
    unsqueeze_757: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_756, 2);  unsqueeze_756 = None
    unsqueeze_758: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_757, 3);  unsqueeze_757 = None
    sum_141: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_15, [0, 2, 3])
    sub_240: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_151, unsqueeze_758)
    mul_1166: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_15, sub_240);  sub_240 = None
    sum_142: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1166, [0, 2, 3]);  mul_1166 = None
    mul_1167: "f32[256]" = torch.ops.aten.mul.Tensor(sum_141, 0.00048828125)
    unsqueeze_759: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1167, 0);  mul_1167 = None
    unsqueeze_760: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_759, 2);  unsqueeze_759 = None
    unsqueeze_761: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_760, 3);  unsqueeze_760 = None
    mul_1168: "f32[256]" = torch.ops.aten.mul.Tensor(sum_142, 0.00048828125)
    mul_1169: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_367, squeeze_367)
    mul_1170: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1168, mul_1169);  mul_1168 = mul_1169 = None
    unsqueeze_762: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1170, 0);  mul_1170 = None
    unsqueeze_763: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_762, 2);  unsqueeze_762 = None
    unsqueeze_764: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_763, 3);  unsqueeze_763 = None
    mul_1171: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_367, primals_455);  primals_455 = None
    unsqueeze_765: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1171, 0);  mul_1171 = None
    unsqueeze_766: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_765, 2);  unsqueeze_765 = None
    unsqueeze_767: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_766, 3);  unsqueeze_766 = None
    sub_241: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_151, unsqueeze_758);  convolution_151 = unsqueeze_758 = None
    mul_1172: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_241, unsqueeze_764);  sub_241 = unsqueeze_764 = None
    sub_242: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_15, mul_1172);  where_15 = mul_1172 = None
    sub_243: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_242, unsqueeze_761);  sub_242 = unsqueeze_761 = None
    mul_1173: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_243, unsqueeze_767);  sub_243 = unsqueeze_767 = None
    mul_1174: "f32[256]" = torch.ops.aten.mul.Tensor(sum_142, squeeze_367);  sum_142 = squeeze_367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_20 = torch.ops.aten.convolution_backward.default(mul_1173, relu_118, primals_454, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1173 = primals_454 = None
    getitem_340: "f32[8, 1024, 16, 16]" = convolution_backward_20[0]
    getitem_341: "f32[256, 1024, 1, 1]" = convolution_backward_20[1];  convolution_backward_20 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_735: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_12, getitem_340);  where_12 = getitem_340 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_221: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_118);  relu_118 = None
    alias_222: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_221);  alias_221 = None
    le_16: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_222, 0);  alias_222 = None
    scalar_tensor_16: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_16: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_16, scalar_tensor_16, add_735);  le_16 = scalar_tensor_16 = add_735 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_768: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_363, 0);  squeeze_363 = None
    unsqueeze_769: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_768, 2);  unsqueeze_768 = None
    unsqueeze_770: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_769, 3);  unsqueeze_769 = None
    sum_143: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_16, [0, 2, 3])
    sub_244: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_150, unsqueeze_770)
    mul_1175: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_16, sub_244);  sub_244 = None
    sum_144: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1175, [0, 2, 3]);  mul_1175 = None
    mul_1176: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_143, 0.00048828125)
    unsqueeze_771: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1176, 0);  mul_1176 = None
    unsqueeze_772: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_771, 2);  unsqueeze_771 = None
    unsqueeze_773: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_772, 3);  unsqueeze_772 = None
    mul_1177: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_144, 0.00048828125)
    mul_1178: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_364, squeeze_364)
    mul_1179: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1177, mul_1178);  mul_1177 = mul_1178 = None
    unsqueeze_774: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1179, 0);  mul_1179 = None
    unsqueeze_775: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_774, 2);  unsqueeze_774 = None
    unsqueeze_776: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_775, 3);  unsqueeze_775 = None
    mul_1180: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_364, primals_452);  primals_452 = None
    unsqueeze_777: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1180, 0);  mul_1180 = None
    unsqueeze_778: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_777, 2);  unsqueeze_777 = None
    unsqueeze_779: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_778, 3);  unsqueeze_778 = None
    sub_245: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_150, unsqueeze_770);  convolution_150 = unsqueeze_770 = None
    mul_1181: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_245, unsqueeze_776);  sub_245 = unsqueeze_776 = None
    sub_246: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_16, mul_1181);  mul_1181 = None
    sub_247: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_246, unsqueeze_773);  sub_246 = unsqueeze_773 = None
    mul_1182: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_247, unsqueeze_779);  sub_247 = unsqueeze_779 = None
    mul_1183: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_144, squeeze_364);  sum_144 = squeeze_364 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_21 = torch.ops.aten.convolution_backward.default(mul_1182, sum_87, primals_451, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1182 = sum_87 = primals_451 = None
    getitem_343: "f32[8, 256, 16, 16]" = convolution_backward_21[0]
    getitem_344: "f32[1024, 256, 1, 1]" = convolution_backward_21[1];  convolution_backward_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_780: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_343, 1);  getitem_343 = None
    expand_13: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_780, [8, 2, 256, 16, 16]);  unsqueeze_780 = None
    mul_1184: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_13, view_169);  view_169 = None
    mul_1185: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_13, view_173);  expand_13 = view_173 = None
    sum_145: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1184, [3, 4], True);  mul_1184 = None
    view_221: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_145, [8, 512, 1, 1]);  sum_145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_222: "f32[8, 512]" = torch.ops.aten.view.default(view_221, [8, 512]);  view_221 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_223: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_222, [8, 2, 1, 256]);  view_222 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_223: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_146);  alias_146 = None
    mul_1186: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_223, alias_223);  view_223 = None
    sum_146: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1186, [1], True)
    mul_1187: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_223, sum_146);  alias_223 = sum_146 = None
    sub_248: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1186, mul_1187);  mul_1186 = mul_1187 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_42: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_248, [0, 2, 1, 3]);  sub_248 = None
    view_224: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_42, [8, 512, 1, 1]);  permute_42 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_22 = torch.ops.aten.convolution_backward.default(view_224, relu_117, primals_449, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_224 = primals_449 = None
    getitem_346: "f32[8, 128, 1, 1]" = convolution_backward_22[0]
    getitem_347: "f32[512, 128, 1, 1]" = convolution_backward_22[1]
    getitem_348: "f32[512]" = convolution_backward_22[2];  convolution_backward_22 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_225: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_117);  relu_117 = None
    alias_226: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_225);  alias_225 = None
    le_17: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_226, 0);  alias_226 = None
    scalar_tensor_17: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_17: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_17, scalar_tensor_17, getitem_346);  le_17 = scalar_tensor_17 = getitem_346 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_781: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_360, 0);  squeeze_360 = None
    unsqueeze_782: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_781, 2);  unsqueeze_781 = None
    unsqueeze_783: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_782, 3);  unsqueeze_782 = None
    sum_147: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_17, [0, 2, 3])
    sub_249: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_148, unsqueeze_783)
    mul_1188: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_17, sub_249);  sub_249 = None
    sum_148: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1188, [0, 2, 3]);  mul_1188 = None
    mul_1189: "f32[128]" = torch.ops.aten.mul.Tensor(sum_147, 0.125)
    unsqueeze_784: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1189, 0);  mul_1189 = None
    unsqueeze_785: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_784, 2);  unsqueeze_784 = None
    unsqueeze_786: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_785, 3);  unsqueeze_785 = None
    mul_1190: "f32[128]" = torch.ops.aten.mul.Tensor(sum_148, 0.125)
    mul_1191: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_361, squeeze_361)
    mul_1192: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1190, mul_1191);  mul_1190 = mul_1191 = None
    unsqueeze_787: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1192, 0);  mul_1192 = None
    unsqueeze_788: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_787, 2);  unsqueeze_787 = None
    unsqueeze_789: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_788, 3);  unsqueeze_788 = None
    mul_1193: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_361, primals_447);  primals_447 = None
    unsqueeze_790: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1193, 0);  mul_1193 = None
    unsqueeze_791: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_790, 2);  unsqueeze_790 = None
    unsqueeze_792: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_791, 3);  unsqueeze_791 = None
    sub_250: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_148, unsqueeze_783);  convolution_148 = unsqueeze_783 = None
    mul_1194: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_250, unsqueeze_789);  sub_250 = unsqueeze_789 = None
    sub_251: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_17, mul_1194);  where_17 = mul_1194 = None
    sub_252: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_251, unsqueeze_786);  sub_251 = unsqueeze_786 = None
    mul_1195: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_252, unsqueeze_792);  sub_252 = unsqueeze_792 = None
    mul_1196: "f32[128]" = torch.ops.aten.mul.Tensor(sum_148, squeeze_361);  sum_148 = squeeze_361 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_23 = torch.ops.aten.convolution_backward.default(mul_1195, mean_28, primals_445, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1195 = mean_28 = primals_445 = None
    getitem_349: "f32[8, 256, 1, 1]" = convolution_backward_23[0]
    getitem_350: "f32[128, 256, 1, 1]" = convolution_backward_23[1]
    getitem_351: "f32[128]" = convolution_backward_23[2];  convolution_backward_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_14: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_349, [8, 256, 16, 16]);  getitem_349 = None
    div_38: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_14, 256);  expand_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_793: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_38, 1);  div_38 = None
    expand_15: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_793, [8, 2, 256, 16, 16]);  unsqueeze_793 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_736: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1185, expand_15);  mul_1185 = expand_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_225: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_736, [8, 512, 16, 16]);  add_736 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_228: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_116);  relu_116 = None
    alias_229: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_228);  alias_228 = None
    le_18: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_229, 0);  alias_229 = None
    scalar_tensor_18: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_18: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_18, scalar_tensor_18, view_225);  le_18 = scalar_tensor_18 = view_225 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_794: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_357, 0);  squeeze_357 = None
    unsqueeze_795: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_794, 2);  unsqueeze_794 = None
    unsqueeze_796: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_795, 3);  unsqueeze_795 = None
    sum_149: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_18, [0, 2, 3])
    sub_253: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_147, unsqueeze_796)
    mul_1197: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_18, sub_253);  sub_253 = None
    sum_150: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1197, [0, 2, 3]);  mul_1197 = None
    mul_1198: "f32[512]" = torch.ops.aten.mul.Tensor(sum_149, 0.00048828125)
    unsqueeze_797: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1198, 0);  mul_1198 = None
    unsqueeze_798: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_797, 2);  unsqueeze_797 = None
    unsqueeze_799: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_798, 3);  unsqueeze_798 = None
    mul_1199: "f32[512]" = torch.ops.aten.mul.Tensor(sum_150, 0.00048828125)
    mul_1200: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_358, squeeze_358)
    mul_1201: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1199, mul_1200);  mul_1199 = mul_1200 = None
    unsqueeze_800: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1201, 0);  mul_1201 = None
    unsqueeze_801: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_800, 2);  unsqueeze_800 = None
    unsqueeze_802: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_801, 3);  unsqueeze_801 = None
    mul_1202: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_358, primals_443);  primals_443 = None
    unsqueeze_803: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1202, 0);  mul_1202 = None
    unsqueeze_804: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_803, 2);  unsqueeze_803 = None
    unsqueeze_805: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_804, 3);  unsqueeze_804 = None
    sub_254: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_147, unsqueeze_796);  convolution_147 = unsqueeze_796 = None
    mul_1203: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_254, unsqueeze_802);  sub_254 = unsqueeze_802 = None
    sub_255: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_18, mul_1203);  where_18 = mul_1203 = None
    sub_256: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_255, unsqueeze_799);  sub_255 = unsqueeze_799 = None
    mul_1204: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_256, unsqueeze_805);  sub_256 = unsqueeze_805 = None
    mul_1205: "f32[512]" = torch.ops.aten.mul.Tensor(sum_150, squeeze_358);  sum_150 = squeeze_358 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_24 = torch.ops.aten.convolution_backward.default(mul_1204, relu_115, primals_442, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1204 = primals_442 = None
    getitem_352: "f32[8, 256, 16, 16]" = convolution_backward_24[0]
    getitem_353: "f32[512, 128, 3, 3]" = convolution_backward_24[1];  convolution_backward_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_231: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_115);  relu_115 = None
    alias_232: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_231);  alias_231 = None
    le_19: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_232, 0);  alias_232 = None
    scalar_tensor_19: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_19: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_19, scalar_tensor_19, getitem_352);  le_19 = scalar_tensor_19 = getitem_352 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_806: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_354, 0);  squeeze_354 = None
    unsqueeze_807: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_806, 2);  unsqueeze_806 = None
    unsqueeze_808: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_807, 3);  unsqueeze_807 = None
    sum_151: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_19, [0, 2, 3])
    sub_257: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_146, unsqueeze_808)
    mul_1206: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_19, sub_257);  sub_257 = None
    sum_152: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1206, [0, 2, 3]);  mul_1206 = None
    mul_1207: "f32[256]" = torch.ops.aten.mul.Tensor(sum_151, 0.00048828125)
    unsqueeze_809: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1207, 0);  mul_1207 = None
    unsqueeze_810: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_809, 2);  unsqueeze_809 = None
    unsqueeze_811: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_810, 3);  unsqueeze_810 = None
    mul_1208: "f32[256]" = torch.ops.aten.mul.Tensor(sum_152, 0.00048828125)
    mul_1209: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_355, squeeze_355)
    mul_1210: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1208, mul_1209);  mul_1208 = mul_1209 = None
    unsqueeze_812: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1210, 0);  mul_1210 = None
    unsqueeze_813: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_812, 2);  unsqueeze_812 = None
    unsqueeze_814: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_813, 3);  unsqueeze_813 = None
    mul_1211: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_355, primals_440);  primals_440 = None
    unsqueeze_815: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1211, 0);  mul_1211 = None
    unsqueeze_816: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_815, 2);  unsqueeze_815 = None
    unsqueeze_817: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_816, 3);  unsqueeze_816 = None
    sub_258: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_146, unsqueeze_808);  convolution_146 = unsqueeze_808 = None
    mul_1212: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_258, unsqueeze_814);  sub_258 = unsqueeze_814 = None
    sub_259: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_19, mul_1212);  where_19 = mul_1212 = None
    sub_260: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_259, unsqueeze_811);  sub_259 = unsqueeze_811 = None
    mul_1213: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_260, unsqueeze_817);  sub_260 = unsqueeze_817 = None
    mul_1214: "f32[256]" = torch.ops.aten.mul.Tensor(sum_152, squeeze_355);  sum_152 = squeeze_355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_25 = torch.ops.aten.convolution_backward.default(mul_1213, relu_114, primals_439, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1213 = primals_439 = None
    getitem_355: "f32[8, 1024, 16, 16]" = convolution_backward_25[0]
    getitem_356: "f32[256, 1024, 1, 1]" = convolution_backward_25[1];  convolution_backward_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_737: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_16, getitem_355);  where_16 = getitem_355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_234: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_114);  relu_114 = None
    alias_235: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_234);  alias_234 = None
    le_20: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_235, 0);  alias_235 = None
    scalar_tensor_20: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_20: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_20, scalar_tensor_20, add_737);  le_20 = scalar_tensor_20 = add_737 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_818: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_351, 0);  squeeze_351 = None
    unsqueeze_819: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_818, 2);  unsqueeze_818 = None
    unsqueeze_820: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_819, 3);  unsqueeze_819 = None
    sum_153: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_20, [0, 2, 3])
    sub_261: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_145, unsqueeze_820)
    mul_1215: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_20, sub_261);  sub_261 = None
    sum_154: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1215, [0, 2, 3]);  mul_1215 = None
    mul_1216: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_153, 0.00048828125)
    unsqueeze_821: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1216, 0);  mul_1216 = None
    unsqueeze_822: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_821, 2);  unsqueeze_821 = None
    unsqueeze_823: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_822, 3);  unsqueeze_822 = None
    mul_1217: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_154, 0.00048828125)
    mul_1218: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_352, squeeze_352)
    mul_1219: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1217, mul_1218);  mul_1217 = mul_1218 = None
    unsqueeze_824: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1219, 0);  mul_1219 = None
    unsqueeze_825: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_824, 2);  unsqueeze_824 = None
    unsqueeze_826: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_825, 3);  unsqueeze_825 = None
    mul_1220: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_352, primals_437);  primals_437 = None
    unsqueeze_827: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1220, 0);  mul_1220 = None
    unsqueeze_828: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_827, 2);  unsqueeze_827 = None
    unsqueeze_829: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_828, 3);  unsqueeze_828 = None
    sub_262: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_145, unsqueeze_820);  convolution_145 = unsqueeze_820 = None
    mul_1221: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_262, unsqueeze_826);  sub_262 = unsqueeze_826 = None
    sub_263: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_20, mul_1221);  mul_1221 = None
    sub_264: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_263, unsqueeze_823);  sub_263 = unsqueeze_823 = None
    mul_1222: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_264, unsqueeze_829);  sub_264 = unsqueeze_829 = None
    mul_1223: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_154, squeeze_352);  sum_154 = squeeze_352 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_26 = torch.ops.aten.convolution_backward.default(mul_1222, sum_84, primals_436, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1222 = sum_84 = primals_436 = None
    getitem_358: "f32[8, 256, 16, 16]" = convolution_backward_26[0]
    getitem_359: "f32[1024, 256, 1, 1]" = convolution_backward_26[1];  convolution_backward_26 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_830: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_358, 1);  getitem_358 = None
    expand_16: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_830, [8, 2, 256, 16, 16]);  unsqueeze_830 = None
    mul_1224: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_16, view_163);  view_163 = None
    mul_1225: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_16, view_167);  expand_16 = view_167 = None
    sum_155: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1224, [3, 4], True);  mul_1224 = None
    view_226: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_155, [8, 512, 1, 1]);  sum_155 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_227: "f32[8, 512]" = torch.ops.aten.view.default(view_226, [8, 512]);  view_226 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_228: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_227, [8, 2, 1, 256]);  view_227 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_236: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_141);  alias_141 = None
    mul_1226: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_228, alias_236);  view_228 = None
    sum_156: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1226, [1], True)
    mul_1227: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_236, sum_156);  alias_236 = sum_156 = None
    sub_265: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1226, mul_1227);  mul_1226 = mul_1227 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_43: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_265, [0, 2, 1, 3]);  sub_265 = None
    view_229: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_43, [8, 512, 1, 1]);  permute_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_27 = torch.ops.aten.convolution_backward.default(view_229, relu_113, primals_434, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_229 = primals_434 = None
    getitem_361: "f32[8, 128, 1, 1]" = convolution_backward_27[0]
    getitem_362: "f32[512, 128, 1, 1]" = convolution_backward_27[1]
    getitem_363: "f32[512]" = convolution_backward_27[2];  convolution_backward_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_238: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_113);  relu_113 = None
    alias_239: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_238);  alias_238 = None
    le_21: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_239, 0);  alias_239 = None
    scalar_tensor_21: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_21: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_21, scalar_tensor_21, getitem_361);  le_21 = scalar_tensor_21 = getitem_361 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_831: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_348, 0);  squeeze_348 = None
    unsqueeze_832: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_831, 2);  unsqueeze_831 = None
    unsqueeze_833: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_832, 3);  unsqueeze_832 = None
    sum_157: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_21, [0, 2, 3])
    sub_266: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_143, unsqueeze_833)
    mul_1228: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_21, sub_266);  sub_266 = None
    sum_158: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1228, [0, 2, 3]);  mul_1228 = None
    mul_1229: "f32[128]" = torch.ops.aten.mul.Tensor(sum_157, 0.125)
    unsqueeze_834: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1229, 0);  mul_1229 = None
    unsqueeze_835: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_834, 2);  unsqueeze_834 = None
    unsqueeze_836: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_835, 3);  unsqueeze_835 = None
    mul_1230: "f32[128]" = torch.ops.aten.mul.Tensor(sum_158, 0.125)
    mul_1231: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_349, squeeze_349)
    mul_1232: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1230, mul_1231);  mul_1230 = mul_1231 = None
    unsqueeze_837: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1232, 0);  mul_1232 = None
    unsqueeze_838: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_837, 2);  unsqueeze_837 = None
    unsqueeze_839: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_838, 3);  unsqueeze_838 = None
    mul_1233: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_349, primals_432);  primals_432 = None
    unsqueeze_840: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1233, 0);  mul_1233 = None
    unsqueeze_841: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_840, 2);  unsqueeze_840 = None
    unsqueeze_842: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_841, 3);  unsqueeze_841 = None
    sub_267: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_143, unsqueeze_833);  convolution_143 = unsqueeze_833 = None
    mul_1234: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_267, unsqueeze_839);  sub_267 = unsqueeze_839 = None
    sub_268: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_21, mul_1234);  where_21 = mul_1234 = None
    sub_269: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_268, unsqueeze_836);  sub_268 = unsqueeze_836 = None
    mul_1235: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_269, unsqueeze_842);  sub_269 = unsqueeze_842 = None
    mul_1236: "f32[128]" = torch.ops.aten.mul.Tensor(sum_158, squeeze_349);  sum_158 = squeeze_349 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_28 = torch.ops.aten.convolution_backward.default(mul_1235, mean_27, primals_430, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1235 = mean_27 = primals_430 = None
    getitem_364: "f32[8, 256, 1, 1]" = convolution_backward_28[0]
    getitem_365: "f32[128, 256, 1, 1]" = convolution_backward_28[1]
    getitem_366: "f32[128]" = convolution_backward_28[2];  convolution_backward_28 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_17: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_364, [8, 256, 16, 16]);  getitem_364 = None
    div_39: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_17, 256);  expand_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_843: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_39, 1);  div_39 = None
    expand_18: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_843, [8, 2, 256, 16, 16]);  unsqueeze_843 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_738: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1225, expand_18);  mul_1225 = expand_18 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_230: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_738, [8, 512, 16, 16]);  add_738 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_241: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_112);  relu_112 = None
    alias_242: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_241);  alias_241 = None
    le_22: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_242, 0);  alias_242 = None
    scalar_tensor_22: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_22: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_22, scalar_tensor_22, view_230);  le_22 = scalar_tensor_22 = view_230 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_844: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_345, 0);  squeeze_345 = None
    unsqueeze_845: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_844, 2);  unsqueeze_844 = None
    unsqueeze_846: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_845, 3);  unsqueeze_845 = None
    sum_159: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_22, [0, 2, 3])
    sub_270: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_142, unsqueeze_846)
    mul_1237: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_22, sub_270);  sub_270 = None
    sum_160: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1237, [0, 2, 3]);  mul_1237 = None
    mul_1238: "f32[512]" = torch.ops.aten.mul.Tensor(sum_159, 0.00048828125)
    unsqueeze_847: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1238, 0);  mul_1238 = None
    unsqueeze_848: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_847, 2);  unsqueeze_847 = None
    unsqueeze_849: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_848, 3);  unsqueeze_848 = None
    mul_1239: "f32[512]" = torch.ops.aten.mul.Tensor(sum_160, 0.00048828125)
    mul_1240: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_346, squeeze_346)
    mul_1241: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1239, mul_1240);  mul_1239 = mul_1240 = None
    unsqueeze_850: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1241, 0);  mul_1241 = None
    unsqueeze_851: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_850, 2);  unsqueeze_850 = None
    unsqueeze_852: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_851, 3);  unsqueeze_851 = None
    mul_1242: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_346, primals_428);  primals_428 = None
    unsqueeze_853: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1242, 0);  mul_1242 = None
    unsqueeze_854: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_853, 2);  unsqueeze_853 = None
    unsqueeze_855: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_854, 3);  unsqueeze_854 = None
    sub_271: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_142, unsqueeze_846);  convolution_142 = unsqueeze_846 = None
    mul_1243: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_271, unsqueeze_852);  sub_271 = unsqueeze_852 = None
    sub_272: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_22, mul_1243);  where_22 = mul_1243 = None
    sub_273: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_272, unsqueeze_849);  sub_272 = unsqueeze_849 = None
    mul_1244: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_273, unsqueeze_855);  sub_273 = unsqueeze_855 = None
    mul_1245: "f32[512]" = torch.ops.aten.mul.Tensor(sum_160, squeeze_346);  sum_160 = squeeze_346 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_29 = torch.ops.aten.convolution_backward.default(mul_1244, relu_111, primals_427, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1244 = primals_427 = None
    getitem_367: "f32[8, 256, 16, 16]" = convolution_backward_29[0]
    getitem_368: "f32[512, 128, 3, 3]" = convolution_backward_29[1];  convolution_backward_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_244: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_111);  relu_111 = None
    alias_245: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_244);  alias_244 = None
    le_23: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_245, 0);  alias_245 = None
    scalar_tensor_23: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_23: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_23, scalar_tensor_23, getitem_367);  le_23 = scalar_tensor_23 = getitem_367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_856: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_342, 0);  squeeze_342 = None
    unsqueeze_857: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_856, 2);  unsqueeze_856 = None
    unsqueeze_858: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_857, 3);  unsqueeze_857 = None
    sum_161: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_23, [0, 2, 3])
    sub_274: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_141, unsqueeze_858)
    mul_1246: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_23, sub_274);  sub_274 = None
    sum_162: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1246, [0, 2, 3]);  mul_1246 = None
    mul_1247: "f32[256]" = torch.ops.aten.mul.Tensor(sum_161, 0.00048828125)
    unsqueeze_859: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1247, 0);  mul_1247 = None
    unsqueeze_860: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_859, 2);  unsqueeze_859 = None
    unsqueeze_861: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_860, 3);  unsqueeze_860 = None
    mul_1248: "f32[256]" = torch.ops.aten.mul.Tensor(sum_162, 0.00048828125)
    mul_1249: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_343, squeeze_343)
    mul_1250: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1248, mul_1249);  mul_1248 = mul_1249 = None
    unsqueeze_862: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1250, 0);  mul_1250 = None
    unsqueeze_863: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_862, 2);  unsqueeze_862 = None
    unsqueeze_864: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_863, 3);  unsqueeze_863 = None
    mul_1251: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_343, primals_425);  primals_425 = None
    unsqueeze_865: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1251, 0);  mul_1251 = None
    unsqueeze_866: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_865, 2);  unsqueeze_865 = None
    unsqueeze_867: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_866, 3);  unsqueeze_866 = None
    sub_275: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_141, unsqueeze_858);  convolution_141 = unsqueeze_858 = None
    mul_1252: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_275, unsqueeze_864);  sub_275 = unsqueeze_864 = None
    sub_276: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_23, mul_1252);  where_23 = mul_1252 = None
    sub_277: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_276, unsqueeze_861);  sub_276 = unsqueeze_861 = None
    mul_1253: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_277, unsqueeze_867);  sub_277 = unsqueeze_867 = None
    mul_1254: "f32[256]" = torch.ops.aten.mul.Tensor(sum_162, squeeze_343);  sum_162 = squeeze_343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_30 = torch.ops.aten.convolution_backward.default(mul_1253, relu_110, primals_424, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1253 = primals_424 = None
    getitem_370: "f32[8, 1024, 16, 16]" = convolution_backward_30[0]
    getitem_371: "f32[256, 1024, 1, 1]" = convolution_backward_30[1];  convolution_backward_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_739: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_20, getitem_370);  where_20 = getitem_370 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_247: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_110);  relu_110 = None
    alias_248: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_247);  alias_247 = None
    le_24: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_248, 0);  alias_248 = None
    scalar_tensor_24: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_24: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_24, scalar_tensor_24, add_739);  le_24 = scalar_tensor_24 = add_739 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_868: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_339, 0);  squeeze_339 = None
    unsqueeze_869: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_868, 2);  unsqueeze_868 = None
    unsqueeze_870: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_869, 3);  unsqueeze_869 = None
    sum_163: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_24, [0, 2, 3])
    sub_278: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_140, unsqueeze_870)
    mul_1255: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_24, sub_278);  sub_278 = None
    sum_164: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1255, [0, 2, 3]);  mul_1255 = None
    mul_1256: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_163, 0.00048828125)
    unsqueeze_871: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1256, 0);  mul_1256 = None
    unsqueeze_872: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_871, 2);  unsqueeze_871 = None
    unsqueeze_873: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_872, 3);  unsqueeze_872 = None
    mul_1257: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_164, 0.00048828125)
    mul_1258: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_340, squeeze_340)
    mul_1259: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1257, mul_1258);  mul_1257 = mul_1258 = None
    unsqueeze_874: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1259, 0);  mul_1259 = None
    unsqueeze_875: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_874, 2);  unsqueeze_874 = None
    unsqueeze_876: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_875, 3);  unsqueeze_875 = None
    mul_1260: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_340, primals_422);  primals_422 = None
    unsqueeze_877: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1260, 0);  mul_1260 = None
    unsqueeze_878: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_877, 2);  unsqueeze_877 = None
    unsqueeze_879: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_878, 3);  unsqueeze_878 = None
    sub_279: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_140, unsqueeze_870);  convolution_140 = unsqueeze_870 = None
    mul_1261: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_279, unsqueeze_876);  sub_279 = unsqueeze_876 = None
    sub_280: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_24, mul_1261);  mul_1261 = None
    sub_281: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_280, unsqueeze_873);  sub_280 = unsqueeze_873 = None
    mul_1262: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_281, unsqueeze_879);  sub_281 = unsqueeze_879 = None
    mul_1263: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_164, squeeze_340);  sum_164 = squeeze_340 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_31 = torch.ops.aten.convolution_backward.default(mul_1262, sum_81, primals_421, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1262 = sum_81 = primals_421 = None
    getitem_373: "f32[8, 256, 16, 16]" = convolution_backward_31[0]
    getitem_374: "f32[1024, 256, 1, 1]" = convolution_backward_31[1];  convolution_backward_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_880: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_373, 1);  getitem_373 = None
    expand_19: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_880, [8, 2, 256, 16, 16]);  unsqueeze_880 = None
    mul_1264: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_19, view_157);  view_157 = None
    mul_1265: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_19, view_161);  expand_19 = view_161 = None
    sum_165: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1264, [3, 4], True);  mul_1264 = None
    view_231: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_165, [8, 512, 1, 1]);  sum_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_232: "f32[8, 512]" = torch.ops.aten.view.default(view_231, [8, 512]);  view_231 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_233: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_232, [8, 2, 1, 256]);  view_232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_249: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_136);  alias_136 = None
    mul_1266: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_233, alias_249);  view_233 = None
    sum_166: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1266, [1], True)
    mul_1267: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_249, sum_166);  alias_249 = sum_166 = None
    sub_282: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1266, mul_1267);  mul_1266 = mul_1267 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_44: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_282, [0, 2, 1, 3]);  sub_282 = None
    view_234: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_44, [8, 512, 1, 1]);  permute_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_32 = torch.ops.aten.convolution_backward.default(view_234, relu_109, primals_419, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_234 = primals_419 = None
    getitem_376: "f32[8, 128, 1, 1]" = convolution_backward_32[0]
    getitem_377: "f32[512, 128, 1, 1]" = convolution_backward_32[1]
    getitem_378: "f32[512]" = convolution_backward_32[2];  convolution_backward_32 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_251: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_109);  relu_109 = None
    alias_252: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_251);  alias_251 = None
    le_25: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_252, 0);  alias_252 = None
    scalar_tensor_25: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_25: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_25, scalar_tensor_25, getitem_376);  le_25 = scalar_tensor_25 = getitem_376 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_881: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_336, 0);  squeeze_336 = None
    unsqueeze_882: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_881, 2);  unsqueeze_881 = None
    unsqueeze_883: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_882, 3);  unsqueeze_882 = None
    sum_167: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_25, [0, 2, 3])
    sub_283: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_138, unsqueeze_883)
    mul_1268: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_25, sub_283);  sub_283 = None
    sum_168: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1268, [0, 2, 3]);  mul_1268 = None
    mul_1269: "f32[128]" = torch.ops.aten.mul.Tensor(sum_167, 0.125)
    unsqueeze_884: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1269, 0);  mul_1269 = None
    unsqueeze_885: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_884, 2);  unsqueeze_884 = None
    unsqueeze_886: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_885, 3);  unsqueeze_885 = None
    mul_1270: "f32[128]" = torch.ops.aten.mul.Tensor(sum_168, 0.125)
    mul_1271: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_337, squeeze_337)
    mul_1272: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1270, mul_1271);  mul_1270 = mul_1271 = None
    unsqueeze_887: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1272, 0);  mul_1272 = None
    unsqueeze_888: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_887, 2);  unsqueeze_887 = None
    unsqueeze_889: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_888, 3);  unsqueeze_888 = None
    mul_1273: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_337, primals_417);  primals_417 = None
    unsqueeze_890: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1273, 0);  mul_1273 = None
    unsqueeze_891: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_890, 2);  unsqueeze_890 = None
    unsqueeze_892: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_891, 3);  unsqueeze_891 = None
    sub_284: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_138, unsqueeze_883);  convolution_138 = unsqueeze_883 = None
    mul_1274: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_284, unsqueeze_889);  sub_284 = unsqueeze_889 = None
    sub_285: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_25, mul_1274);  where_25 = mul_1274 = None
    sub_286: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_285, unsqueeze_886);  sub_285 = unsqueeze_886 = None
    mul_1275: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_286, unsqueeze_892);  sub_286 = unsqueeze_892 = None
    mul_1276: "f32[128]" = torch.ops.aten.mul.Tensor(sum_168, squeeze_337);  sum_168 = squeeze_337 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_33 = torch.ops.aten.convolution_backward.default(mul_1275, mean_26, primals_415, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1275 = mean_26 = primals_415 = None
    getitem_379: "f32[8, 256, 1, 1]" = convolution_backward_33[0]
    getitem_380: "f32[128, 256, 1, 1]" = convolution_backward_33[1]
    getitem_381: "f32[128]" = convolution_backward_33[2];  convolution_backward_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_20: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_379, [8, 256, 16, 16]);  getitem_379 = None
    div_40: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_20, 256);  expand_20 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_893: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_40, 1);  div_40 = None
    expand_21: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_893, [8, 2, 256, 16, 16]);  unsqueeze_893 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_740: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1265, expand_21);  mul_1265 = expand_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_235: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_740, [8, 512, 16, 16]);  add_740 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_254: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_108);  relu_108 = None
    alias_255: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_254);  alias_254 = None
    le_26: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_255, 0);  alias_255 = None
    scalar_tensor_26: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_26: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_26, scalar_tensor_26, view_235);  le_26 = scalar_tensor_26 = view_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_894: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_333, 0);  squeeze_333 = None
    unsqueeze_895: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_894, 2);  unsqueeze_894 = None
    unsqueeze_896: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_895, 3);  unsqueeze_895 = None
    sum_169: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_26, [0, 2, 3])
    sub_287: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_137, unsqueeze_896)
    mul_1277: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_26, sub_287);  sub_287 = None
    sum_170: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1277, [0, 2, 3]);  mul_1277 = None
    mul_1278: "f32[512]" = torch.ops.aten.mul.Tensor(sum_169, 0.00048828125)
    unsqueeze_897: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1278, 0);  mul_1278 = None
    unsqueeze_898: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_897, 2);  unsqueeze_897 = None
    unsqueeze_899: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_898, 3);  unsqueeze_898 = None
    mul_1279: "f32[512]" = torch.ops.aten.mul.Tensor(sum_170, 0.00048828125)
    mul_1280: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_334, squeeze_334)
    mul_1281: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1279, mul_1280);  mul_1279 = mul_1280 = None
    unsqueeze_900: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1281, 0);  mul_1281 = None
    unsqueeze_901: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_900, 2);  unsqueeze_900 = None
    unsqueeze_902: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_901, 3);  unsqueeze_901 = None
    mul_1282: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_334, primals_413);  primals_413 = None
    unsqueeze_903: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1282, 0);  mul_1282 = None
    unsqueeze_904: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_903, 2);  unsqueeze_903 = None
    unsqueeze_905: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_904, 3);  unsqueeze_904 = None
    sub_288: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_137, unsqueeze_896);  convolution_137 = unsqueeze_896 = None
    mul_1283: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_288, unsqueeze_902);  sub_288 = unsqueeze_902 = None
    sub_289: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_26, mul_1283);  where_26 = mul_1283 = None
    sub_290: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_289, unsqueeze_899);  sub_289 = unsqueeze_899 = None
    mul_1284: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_290, unsqueeze_905);  sub_290 = unsqueeze_905 = None
    mul_1285: "f32[512]" = torch.ops.aten.mul.Tensor(sum_170, squeeze_334);  sum_170 = squeeze_334 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_34 = torch.ops.aten.convolution_backward.default(mul_1284, relu_107, primals_412, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1284 = primals_412 = None
    getitem_382: "f32[8, 256, 16, 16]" = convolution_backward_34[0]
    getitem_383: "f32[512, 128, 3, 3]" = convolution_backward_34[1];  convolution_backward_34 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_257: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_107);  relu_107 = None
    alias_258: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_257);  alias_257 = None
    le_27: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_258, 0);  alias_258 = None
    scalar_tensor_27: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_27: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_27, scalar_tensor_27, getitem_382);  le_27 = scalar_tensor_27 = getitem_382 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_906: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_330, 0);  squeeze_330 = None
    unsqueeze_907: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_906, 2);  unsqueeze_906 = None
    unsqueeze_908: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_907, 3);  unsqueeze_907 = None
    sum_171: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_27, [0, 2, 3])
    sub_291: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_136, unsqueeze_908)
    mul_1286: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_27, sub_291);  sub_291 = None
    sum_172: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1286, [0, 2, 3]);  mul_1286 = None
    mul_1287: "f32[256]" = torch.ops.aten.mul.Tensor(sum_171, 0.00048828125)
    unsqueeze_909: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1287, 0);  mul_1287 = None
    unsqueeze_910: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_909, 2);  unsqueeze_909 = None
    unsqueeze_911: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_910, 3);  unsqueeze_910 = None
    mul_1288: "f32[256]" = torch.ops.aten.mul.Tensor(sum_172, 0.00048828125)
    mul_1289: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_331, squeeze_331)
    mul_1290: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1288, mul_1289);  mul_1288 = mul_1289 = None
    unsqueeze_912: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1290, 0);  mul_1290 = None
    unsqueeze_913: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_912, 2);  unsqueeze_912 = None
    unsqueeze_914: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_913, 3);  unsqueeze_913 = None
    mul_1291: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_331, primals_410);  primals_410 = None
    unsqueeze_915: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1291, 0);  mul_1291 = None
    unsqueeze_916: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_915, 2);  unsqueeze_915 = None
    unsqueeze_917: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_916, 3);  unsqueeze_916 = None
    sub_292: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_136, unsqueeze_908);  convolution_136 = unsqueeze_908 = None
    mul_1292: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_292, unsqueeze_914);  sub_292 = unsqueeze_914 = None
    sub_293: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_27, mul_1292);  where_27 = mul_1292 = None
    sub_294: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_293, unsqueeze_911);  sub_293 = unsqueeze_911 = None
    mul_1293: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_294, unsqueeze_917);  sub_294 = unsqueeze_917 = None
    mul_1294: "f32[256]" = torch.ops.aten.mul.Tensor(sum_172, squeeze_331);  sum_172 = squeeze_331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_35 = torch.ops.aten.convolution_backward.default(mul_1293, relu_106, primals_409, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1293 = primals_409 = None
    getitem_385: "f32[8, 1024, 16, 16]" = convolution_backward_35[0]
    getitem_386: "f32[256, 1024, 1, 1]" = convolution_backward_35[1];  convolution_backward_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_741: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_24, getitem_385);  where_24 = getitem_385 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_260: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_106);  relu_106 = None
    alias_261: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_260);  alias_260 = None
    le_28: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_261, 0);  alias_261 = None
    scalar_tensor_28: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_28: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_28, scalar_tensor_28, add_741);  le_28 = scalar_tensor_28 = add_741 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_918: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_327, 0);  squeeze_327 = None
    unsqueeze_919: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_918, 2);  unsqueeze_918 = None
    unsqueeze_920: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_919, 3);  unsqueeze_919 = None
    sum_173: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_28, [0, 2, 3])
    sub_295: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_135, unsqueeze_920)
    mul_1295: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_28, sub_295);  sub_295 = None
    sum_174: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1295, [0, 2, 3]);  mul_1295 = None
    mul_1296: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_173, 0.00048828125)
    unsqueeze_921: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1296, 0);  mul_1296 = None
    unsqueeze_922: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_921, 2);  unsqueeze_921 = None
    unsqueeze_923: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_922, 3);  unsqueeze_922 = None
    mul_1297: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_174, 0.00048828125)
    mul_1298: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_328, squeeze_328)
    mul_1299: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1297, mul_1298);  mul_1297 = mul_1298 = None
    unsqueeze_924: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1299, 0);  mul_1299 = None
    unsqueeze_925: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_924, 2);  unsqueeze_924 = None
    unsqueeze_926: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_925, 3);  unsqueeze_925 = None
    mul_1300: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_328, primals_407);  primals_407 = None
    unsqueeze_927: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1300, 0);  mul_1300 = None
    unsqueeze_928: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_927, 2);  unsqueeze_927 = None
    unsqueeze_929: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_928, 3);  unsqueeze_928 = None
    sub_296: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_135, unsqueeze_920);  convolution_135 = unsqueeze_920 = None
    mul_1301: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_296, unsqueeze_926);  sub_296 = unsqueeze_926 = None
    sub_297: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_28, mul_1301);  mul_1301 = None
    sub_298: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_297, unsqueeze_923);  sub_297 = unsqueeze_923 = None
    mul_1302: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_298, unsqueeze_929);  sub_298 = unsqueeze_929 = None
    mul_1303: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_174, squeeze_328);  sum_174 = squeeze_328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_36 = torch.ops.aten.convolution_backward.default(mul_1302, sum_78, primals_406, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1302 = sum_78 = primals_406 = None
    getitem_388: "f32[8, 256, 16, 16]" = convolution_backward_36[0]
    getitem_389: "f32[1024, 256, 1, 1]" = convolution_backward_36[1];  convolution_backward_36 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_930: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_388, 1);  getitem_388 = None
    expand_22: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_930, [8, 2, 256, 16, 16]);  unsqueeze_930 = None
    mul_1304: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_22, view_151);  view_151 = None
    mul_1305: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_22, view_155);  expand_22 = view_155 = None
    sum_175: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1304, [3, 4], True);  mul_1304 = None
    view_236: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_175, [8, 512, 1, 1]);  sum_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_237: "f32[8, 512]" = torch.ops.aten.view.default(view_236, [8, 512]);  view_236 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_238: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_237, [8, 2, 1, 256]);  view_237 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_262: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_131);  alias_131 = None
    mul_1306: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_238, alias_262);  view_238 = None
    sum_176: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1306, [1], True)
    mul_1307: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_262, sum_176);  alias_262 = sum_176 = None
    sub_299: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1306, mul_1307);  mul_1306 = mul_1307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_45: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_299, [0, 2, 1, 3]);  sub_299 = None
    view_239: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_45, [8, 512, 1, 1]);  permute_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_37 = torch.ops.aten.convolution_backward.default(view_239, relu_105, primals_404, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_239 = primals_404 = None
    getitem_391: "f32[8, 128, 1, 1]" = convolution_backward_37[0]
    getitem_392: "f32[512, 128, 1, 1]" = convolution_backward_37[1]
    getitem_393: "f32[512]" = convolution_backward_37[2];  convolution_backward_37 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_264: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_105);  relu_105 = None
    alias_265: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_264);  alias_264 = None
    le_29: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_265, 0);  alias_265 = None
    scalar_tensor_29: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_29: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_29, scalar_tensor_29, getitem_391);  le_29 = scalar_tensor_29 = getitem_391 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_931: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_324, 0);  squeeze_324 = None
    unsqueeze_932: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_931, 2);  unsqueeze_931 = None
    unsqueeze_933: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_932, 3);  unsqueeze_932 = None
    sum_177: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_29, [0, 2, 3])
    sub_300: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_133, unsqueeze_933)
    mul_1308: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_29, sub_300);  sub_300 = None
    sum_178: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1308, [0, 2, 3]);  mul_1308 = None
    mul_1309: "f32[128]" = torch.ops.aten.mul.Tensor(sum_177, 0.125)
    unsqueeze_934: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1309, 0);  mul_1309 = None
    unsqueeze_935: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_934, 2);  unsqueeze_934 = None
    unsqueeze_936: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_935, 3);  unsqueeze_935 = None
    mul_1310: "f32[128]" = torch.ops.aten.mul.Tensor(sum_178, 0.125)
    mul_1311: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_325, squeeze_325)
    mul_1312: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1310, mul_1311);  mul_1310 = mul_1311 = None
    unsqueeze_937: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1312, 0);  mul_1312 = None
    unsqueeze_938: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_937, 2);  unsqueeze_937 = None
    unsqueeze_939: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_938, 3);  unsqueeze_938 = None
    mul_1313: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_325, primals_402);  primals_402 = None
    unsqueeze_940: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1313, 0);  mul_1313 = None
    unsqueeze_941: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_940, 2);  unsqueeze_940 = None
    unsqueeze_942: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_941, 3);  unsqueeze_941 = None
    sub_301: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_133, unsqueeze_933);  convolution_133 = unsqueeze_933 = None
    mul_1314: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_301, unsqueeze_939);  sub_301 = unsqueeze_939 = None
    sub_302: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_29, mul_1314);  where_29 = mul_1314 = None
    sub_303: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_302, unsqueeze_936);  sub_302 = unsqueeze_936 = None
    mul_1315: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_303, unsqueeze_942);  sub_303 = unsqueeze_942 = None
    mul_1316: "f32[128]" = torch.ops.aten.mul.Tensor(sum_178, squeeze_325);  sum_178 = squeeze_325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_38 = torch.ops.aten.convolution_backward.default(mul_1315, mean_25, primals_400, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1315 = mean_25 = primals_400 = None
    getitem_394: "f32[8, 256, 1, 1]" = convolution_backward_38[0]
    getitem_395: "f32[128, 256, 1, 1]" = convolution_backward_38[1]
    getitem_396: "f32[128]" = convolution_backward_38[2];  convolution_backward_38 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_23: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_394, [8, 256, 16, 16]);  getitem_394 = None
    div_41: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_23, 256);  expand_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_943: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_41, 1);  div_41 = None
    expand_24: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_943, [8, 2, 256, 16, 16]);  unsqueeze_943 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_742: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1305, expand_24);  mul_1305 = expand_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_240: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_742, [8, 512, 16, 16]);  add_742 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_267: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_104);  relu_104 = None
    alias_268: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_267);  alias_267 = None
    le_30: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_268, 0);  alias_268 = None
    scalar_tensor_30: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_30: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_30, scalar_tensor_30, view_240);  le_30 = scalar_tensor_30 = view_240 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_944: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_321, 0);  squeeze_321 = None
    unsqueeze_945: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_944, 2);  unsqueeze_944 = None
    unsqueeze_946: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_945, 3);  unsqueeze_945 = None
    sum_179: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_30, [0, 2, 3])
    sub_304: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_132, unsqueeze_946)
    mul_1317: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_30, sub_304);  sub_304 = None
    sum_180: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1317, [0, 2, 3]);  mul_1317 = None
    mul_1318: "f32[512]" = torch.ops.aten.mul.Tensor(sum_179, 0.00048828125)
    unsqueeze_947: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1318, 0);  mul_1318 = None
    unsqueeze_948: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_947, 2);  unsqueeze_947 = None
    unsqueeze_949: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_948, 3);  unsqueeze_948 = None
    mul_1319: "f32[512]" = torch.ops.aten.mul.Tensor(sum_180, 0.00048828125)
    mul_1320: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_322, squeeze_322)
    mul_1321: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1319, mul_1320);  mul_1319 = mul_1320 = None
    unsqueeze_950: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1321, 0);  mul_1321 = None
    unsqueeze_951: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_950, 2);  unsqueeze_950 = None
    unsqueeze_952: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_951, 3);  unsqueeze_951 = None
    mul_1322: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_322, primals_398);  primals_398 = None
    unsqueeze_953: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1322, 0);  mul_1322 = None
    unsqueeze_954: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_953, 2);  unsqueeze_953 = None
    unsqueeze_955: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_954, 3);  unsqueeze_954 = None
    sub_305: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_132, unsqueeze_946);  convolution_132 = unsqueeze_946 = None
    mul_1323: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_305, unsqueeze_952);  sub_305 = unsqueeze_952 = None
    sub_306: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_30, mul_1323);  where_30 = mul_1323 = None
    sub_307: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_306, unsqueeze_949);  sub_306 = unsqueeze_949 = None
    mul_1324: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_307, unsqueeze_955);  sub_307 = unsqueeze_955 = None
    mul_1325: "f32[512]" = torch.ops.aten.mul.Tensor(sum_180, squeeze_322);  sum_180 = squeeze_322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_39 = torch.ops.aten.convolution_backward.default(mul_1324, relu_103, primals_397, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1324 = primals_397 = None
    getitem_397: "f32[8, 256, 16, 16]" = convolution_backward_39[0]
    getitem_398: "f32[512, 128, 3, 3]" = convolution_backward_39[1];  convolution_backward_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_270: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_103);  relu_103 = None
    alias_271: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_270);  alias_270 = None
    le_31: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_271, 0);  alias_271 = None
    scalar_tensor_31: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_31: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_31, scalar_tensor_31, getitem_397);  le_31 = scalar_tensor_31 = getitem_397 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_956: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_318, 0);  squeeze_318 = None
    unsqueeze_957: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_956, 2);  unsqueeze_956 = None
    unsqueeze_958: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_957, 3);  unsqueeze_957 = None
    sum_181: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_31, [0, 2, 3])
    sub_308: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_131, unsqueeze_958)
    mul_1326: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_31, sub_308);  sub_308 = None
    sum_182: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1326, [0, 2, 3]);  mul_1326 = None
    mul_1327: "f32[256]" = torch.ops.aten.mul.Tensor(sum_181, 0.00048828125)
    unsqueeze_959: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1327, 0);  mul_1327 = None
    unsqueeze_960: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_959, 2);  unsqueeze_959 = None
    unsqueeze_961: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_960, 3);  unsqueeze_960 = None
    mul_1328: "f32[256]" = torch.ops.aten.mul.Tensor(sum_182, 0.00048828125)
    mul_1329: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_319, squeeze_319)
    mul_1330: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1328, mul_1329);  mul_1328 = mul_1329 = None
    unsqueeze_962: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1330, 0);  mul_1330 = None
    unsqueeze_963: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_962, 2);  unsqueeze_962 = None
    unsqueeze_964: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_963, 3);  unsqueeze_963 = None
    mul_1331: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_319, primals_395);  primals_395 = None
    unsqueeze_965: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1331, 0);  mul_1331 = None
    unsqueeze_966: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_965, 2);  unsqueeze_965 = None
    unsqueeze_967: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_966, 3);  unsqueeze_966 = None
    sub_309: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_131, unsqueeze_958);  convolution_131 = unsqueeze_958 = None
    mul_1332: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_309, unsqueeze_964);  sub_309 = unsqueeze_964 = None
    sub_310: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_31, mul_1332);  where_31 = mul_1332 = None
    sub_311: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_310, unsqueeze_961);  sub_310 = unsqueeze_961 = None
    mul_1333: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_311, unsqueeze_967);  sub_311 = unsqueeze_967 = None
    mul_1334: "f32[256]" = torch.ops.aten.mul.Tensor(sum_182, squeeze_319);  sum_182 = squeeze_319 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_40 = torch.ops.aten.convolution_backward.default(mul_1333, relu_102, primals_394, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1333 = primals_394 = None
    getitem_400: "f32[8, 1024, 16, 16]" = convolution_backward_40[0]
    getitem_401: "f32[256, 1024, 1, 1]" = convolution_backward_40[1];  convolution_backward_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_743: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_28, getitem_400);  where_28 = getitem_400 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_273: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_102);  relu_102 = None
    alias_274: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_273);  alias_273 = None
    le_32: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_274, 0);  alias_274 = None
    scalar_tensor_32: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_32: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_32, scalar_tensor_32, add_743);  le_32 = scalar_tensor_32 = add_743 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_968: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_315, 0);  squeeze_315 = None
    unsqueeze_969: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_968, 2);  unsqueeze_968 = None
    unsqueeze_970: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_969, 3);  unsqueeze_969 = None
    sum_183: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_32, [0, 2, 3])
    sub_312: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_130, unsqueeze_970)
    mul_1335: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_32, sub_312);  sub_312 = None
    sum_184: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1335, [0, 2, 3]);  mul_1335 = None
    mul_1336: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_183, 0.00048828125)
    unsqueeze_971: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1336, 0);  mul_1336 = None
    unsqueeze_972: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_971, 2);  unsqueeze_971 = None
    unsqueeze_973: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_972, 3);  unsqueeze_972 = None
    mul_1337: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_184, 0.00048828125)
    mul_1338: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_316, squeeze_316)
    mul_1339: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1337, mul_1338);  mul_1337 = mul_1338 = None
    unsqueeze_974: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1339, 0);  mul_1339 = None
    unsqueeze_975: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_974, 2);  unsqueeze_974 = None
    unsqueeze_976: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_975, 3);  unsqueeze_975 = None
    mul_1340: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_316, primals_392);  primals_392 = None
    unsqueeze_977: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1340, 0);  mul_1340 = None
    unsqueeze_978: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_977, 2);  unsqueeze_977 = None
    unsqueeze_979: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_978, 3);  unsqueeze_978 = None
    sub_313: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_130, unsqueeze_970);  convolution_130 = unsqueeze_970 = None
    mul_1341: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_313, unsqueeze_976);  sub_313 = unsqueeze_976 = None
    sub_314: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_32, mul_1341);  mul_1341 = None
    sub_315: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_314, unsqueeze_973);  sub_314 = unsqueeze_973 = None
    mul_1342: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_315, unsqueeze_979);  sub_315 = unsqueeze_979 = None
    mul_1343: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_184, squeeze_316);  sum_184 = squeeze_316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_41 = torch.ops.aten.convolution_backward.default(mul_1342, sum_75, primals_391, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1342 = sum_75 = primals_391 = None
    getitem_403: "f32[8, 256, 16, 16]" = convolution_backward_41[0]
    getitem_404: "f32[1024, 256, 1, 1]" = convolution_backward_41[1];  convolution_backward_41 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_980: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_403, 1);  getitem_403 = None
    expand_25: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_980, [8, 2, 256, 16, 16]);  unsqueeze_980 = None
    mul_1344: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_25, view_145);  view_145 = None
    mul_1345: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_25, view_149);  expand_25 = view_149 = None
    sum_185: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1344, [3, 4], True);  mul_1344 = None
    view_241: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_185, [8, 512, 1, 1]);  sum_185 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_242: "f32[8, 512]" = torch.ops.aten.view.default(view_241, [8, 512]);  view_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_243: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_242, [8, 2, 1, 256]);  view_242 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_275: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_126);  alias_126 = None
    mul_1346: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_243, alias_275);  view_243 = None
    sum_186: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1346, [1], True)
    mul_1347: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_275, sum_186);  alias_275 = sum_186 = None
    sub_316: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1346, mul_1347);  mul_1346 = mul_1347 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_46: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_316, [0, 2, 1, 3]);  sub_316 = None
    view_244: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_46, [8, 512, 1, 1]);  permute_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_42 = torch.ops.aten.convolution_backward.default(view_244, relu_101, primals_389, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_244 = primals_389 = None
    getitem_406: "f32[8, 128, 1, 1]" = convolution_backward_42[0]
    getitem_407: "f32[512, 128, 1, 1]" = convolution_backward_42[1]
    getitem_408: "f32[512]" = convolution_backward_42[2];  convolution_backward_42 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_277: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_101);  relu_101 = None
    alias_278: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_277);  alias_277 = None
    le_33: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_278, 0);  alias_278 = None
    scalar_tensor_33: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_33: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_33, scalar_tensor_33, getitem_406);  le_33 = scalar_tensor_33 = getitem_406 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_981: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_312, 0);  squeeze_312 = None
    unsqueeze_982: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_981, 2);  unsqueeze_981 = None
    unsqueeze_983: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_982, 3);  unsqueeze_982 = None
    sum_187: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_33, [0, 2, 3])
    sub_317: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_128, unsqueeze_983)
    mul_1348: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_33, sub_317);  sub_317 = None
    sum_188: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1348, [0, 2, 3]);  mul_1348 = None
    mul_1349: "f32[128]" = torch.ops.aten.mul.Tensor(sum_187, 0.125)
    unsqueeze_984: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1349, 0);  mul_1349 = None
    unsqueeze_985: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_984, 2);  unsqueeze_984 = None
    unsqueeze_986: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_985, 3);  unsqueeze_985 = None
    mul_1350: "f32[128]" = torch.ops.aten.mul.Tensor(sum_188, 0.125)
    mul_1351: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_313, squeeze_313)
    mul_1352: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1350, mul_1351);  mul_1350 = mul_1351 = None
    unsqueeze_987: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1352, 0);  mul_1352 = None
    unsqueeze_988: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_987, 2);  unsqueeze_987 = None
    unsqueeze_989: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_988, 3);  unsqueeze_988 = None
    mul_1353: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_313, primals_387);  primals_387 = None
    unsqueeze_990: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1353, 0);  mul_1353 = None
    unsqueeze_991: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_990, 2);  unsqueeze_990 = None
    unsqueeze_992: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_991, 3);  unsqueeze_991 = None
    sub_318: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_128, unsqueeze_983);  convolution_128 = unsqueeze_983 = None
    mul_1354: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_318, unsqueeze_989);  sub_318 = unsqueeze_989 = None
    sub_319: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_33, mul_1354);  where_33 = mul_1354 = None
    sub_320: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_319, unsqueeze_986);  sub_319 = unsqueeze_986 = None
    mul_1355: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_320, unsqueeze_992);  sub_320 = unsqueeze_992 = None
    mul_1356: "f32[128]" = torch.ops.aten.mul.Tensor(sum_188, squeeze_313);  sum_188 = squeeze_313 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_43 = torch.ops.aten.convolution_backward.default(mul_1355, mean_24, primals_385, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1355 = mean_24 = primals_385 = None
    getitem_409: "f32[8, 256, 1, 1]" = convolution_backward_43[0]
    getitem_410: "f32[128, 256, 1, 1]" = convolution_backward_43[1]
    getitem_411: "f32[128]" = convolution_backward_43[2];  convolution_backward_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_26: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_409, [8, 256, 16, 16]);  getitem_409 = None
    div_42: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_26, 256);  expand_26 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_993: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_42, 1);  div_42 = None
    expand_27: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_993, [8, 2, 256, 16, 16]);  unsqueeze_993 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_744: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1345, expand_27);  mul_1345 = expand_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_245: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_744, [8, 512, 16, 16]);  add_744 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_280: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_100);  relu_100 = None
    alias_281: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_280);  alias_280 = None
    le_34: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_281, 0);  alias_281 = None
    scalar_tensor_34: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_34: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_34, scalar_tensor_34, view_245);  le_34 = scalar_tensor_34 = view_245 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_994: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_309, 0);  squeeze_309 = None
    unsqueeze_995: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_994, 2);  unsqueeze_994 = None
    unsqueeze_996: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_995, 3);  unsqueeze_995 = None
    sum_189: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_34, [0, 2, 3])
    sub_321: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_127, unsqueeze_996)
    mul_1357: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_34, sub_321);  sub_321 = None
    sum_190: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1357, [0, 2, 3]);  mul_1357 = None
    mul_1358: "f32[512]" = torch.ops.aten.mul.Tensor(sum_189, 0.00048828125)
    unsqueeze_997: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1358, 0);  mul_1358 = None
    unsqueeze_998: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_997, 2);  unsqueeze_997 = None
    unsqueeze_999: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_998, 3);  unsqueeze_998 = None
    mul_1359: "f32[512]" = torch.ops.aten.mul.Tensor(sum_190, 0.00048828125)
    mul_1360: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_310, squeeze_310)
    mul_1361: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1359, mul_1360);  mul_1359 = mul_1360 = None
    unsqueeze_1000: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1361, 0);  mul_1361 = None
    unsqueeze_1001: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1000, 2);  unsqueeze_1000 = None
    unsqueeze_1002: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1001, 3);  unsqueeze_1001 = None
    mul_1362: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_310, primals_383);  primals_383 = None
    unsqueeze_1003: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1362, 0);  mul_1362 = None
    unsqueeze_1004: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1003, 2);  unsqueeze_1003 = None
    unsqueeze_1005: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1004, 3);  unsqueeze_1004 = None
    sub_322: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_127, unsqueeze_996);  convolution_127 = unsqueeze_996 = None
    mul_1363: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_322, unsqueeze_1002);  sub_322 = unsqueeze_1002 = None
    sub_323: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_34, mul_1363);  where_34 = mul_1363 = None
    sub_324: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_323, unsqueeze_999);  sub_323 = unsqueeze_999 = None
    mul_1364: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_324, unsqueeze_1005);  sub_324 = unsqueeze_1005 = None
    mul_1365: "f32[512]" = torch.ops.aten.mul.Tensor(sum_190, squeeze_310);  sum_190 = squeeze_310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_44 = torch.ops.aten.convolution_backward.default(mul_1364, relu_99, primals_382, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1364 = primals_382 = None
    getitem_412: "f32[8, 256, 16, 16]" = convolution_backward_44[0]
    getitem_413: "f32[512, 128, 3, 3]" = convolution_backward_44[1];  convolution_backward_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_283: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_99);  relu_99 = None
    alias_284: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_283);  alias_283 = None
    le_35: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_284, 0);  alias_284 = None
    scalar_tensor_35: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_35: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_35, scalar_tensor_35, getitem_412);  le_35 = scalar_tensor_35 = getitem_412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1006: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_306, 0);  squeeze_306 = None
    unsqueeze_1007: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1006, 2);  unsqueeze_1006 = None
    unsqueeze_1008: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1007, 3);  unsqueeze_1007 = None
    sum_191: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_35, [0, 2, 3])
    sub_325: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_126, unsqueeze_1008)
    mul_1366: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_35, sub_325);  sub_325 = None
    sum_192: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1366, [0, 2, 3]);  mul_1366 = None
    mul_1367: "f32[256]" = torch.ops.aten.mul.Tensor(sum_191, 0.00048828125)
    unsqueeze_1009: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1367, 0);  mul_1367 = None
    unsqueeze_1010: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1009, 2);  unsqueeze_1009 = None
    unsqueeze_1011: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1010, 3);  unsqueeze_1010 = None
    mul_1368: "f32[256]" = torch.ops.aten.mul.Tensor(sum_192, 0.00048828125)
    mul_1369: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_307, squeeze_307)
    mul_1370: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1368, mul_1369);  mul_1368 = mul_1369 = None
    unsqueeze_1012: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1370, 0);  mul_1370 = None
    unsqueeze_1013: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1012, 2);  unsqueeze_1012 = None
    unsqueeze_1014: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1013, 3);  unsqueeze_1013 = None
    mul_1371: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_307, primals_380);  primals_380 = None
    unsqueeze_1015: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1371, 0);  mul_1371 = None
    unsqueeze_1016: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1015, 2);  unsqueeze_1015 = None
    unsqueeze_1017: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1016, 3);  unsqueeze_1016 = None
    sub_326: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_126, unsqueeze_1008);  convolution_126 = unsqueeze_1008 = None
    mul_1372: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_326, unsqueeze_1014);  sub_326 = unsqueeze_1014 = None
    sub_327: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_35, mul_1372);  where_35 = mul_1372 = None
    sub_328: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_327, unsqueeze_1011);  sub_327 = unsqueeze_1011 = None
    mul_1373: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_328, unsqueeze_1017);  sub_328 = unsqueeze_1017 = None
    mul_1374: "f32[256]" = torch.ops.aten.mul.Tensor(sum_192, squeeze_307);  sum_192 = squeeze_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_45 = torch.ops.aten.convolution_backward.default(mul_1373, relu_98, primals_379, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1373 = primals_379 = None
    getitem_415: "f32[8, 1024, 16, 16]" = convolution_backward_45[0]
    getitem_416: "f32[256, 1024, 1, 1]" = convolution_backward_45[1];  convolution_backward_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_745: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_32, getitem_415);  where_32 = getitem_415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_286: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_98);  relu_98 = None
    alias_287: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_286);  alias_286 = None
    le_36: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_287, 0);  alias_287 = None
    scalar_tensor_36: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_36: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_36, scalar_tensor_36, add_745);  le_36 = scalar_tensor_36 = add_745 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1018: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_303, 0);  squeeze_303 = None
    unsqueeze_1019: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1018, 2);  unsqueeze_1018 = None
    unsqueeze_1020: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1019, 3);  unsqueeze_1019 = None
    sum_193: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_36, [0, 2, 3])
    sub_329: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_125, unsqueeze_1020)
    mul_1375: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_36, sub_329);  sub_329 = None
    sum_194: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1375, [0, 2, 3]);  mul_1375 = None
    mul_1376: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_193, 0.00048828125)
    unsqueeze_1021: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1376, 0);  mul_1376 = None
    unsqueeze_1022: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1021, 2);  unsqueeze_1021 = None
    unsqueeze_1023: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1022, 3);  unsqueeze_1022 = None
    mul_1377: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_194, 0.00048828125)
    mul_1378: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_304, squeeze_304)
    mul_1379: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1377, mul_1378);  mul_1377 = mul_1378 = None
    unsqueeze_1024: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1379, 0);  mul_1379 = None
    unsqueeze_1025: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1024, 2);  unsqueeze_1024 = None
    unsqueeze_1026: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1025, 3);  unsqueeze_1025 = None
    mul_1380: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_304, primals_377);  primals_377 = None
    unsqueeze_1027: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1380, 0);  mul_1380 = None
    unsqueeze_1028: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1027, 2);  unsqueeze_1027 = None
    unsqueeze_1029: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1028, 3);  unsqueeze_1028 = None
    sub_330: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_125, unsqueeze_1020);  convolution_125 = unsqueeze_1020 = None
    mul_1381: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_330, unsqueeze_1026);  sub_330 = unsqueeze_1026 = None
    sub_331: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_36, mul_1381);  mul_1381 = None
    sub_332: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_331, unsqueeze_1023);  sub_331 = unsqueeze_1023 = None
    mul_1382: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_332, unsqueeze_1029);  sub_332 = unsqueeze_1029 = None
    mul_1383: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_194, squeeze_304);  sum_194 = squeeze_304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_46 = torch.ops.aten.convolution_backward.default(mul_1382, sum_72, primals_376, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1382 = sum_72 = primals_376 = None
    getitem_418: "f32[8, 256, 16, 16]" = convolution_backward_46[0]
    getitem_419: "f32[1024, 256, 1, 1]" = convolution_backward_46[1];  convolution_backward_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1030: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_418, 1);  getitem_418 = None
    expand_28: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1030, [8, 2, 256, 16, 16]);  unsqueeze_1030 = None
    mul_1384: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_28, view_139);  view_139 = None
    mul_1385: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_28, view_143);  expand_28 = view_143 = None
    sum_195: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1384, [3, 4], True);  mul_1384 = None
    view_246: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_195, [8, 512, 1, 1]);  sum_195 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_247: "f32[8, 512]" = torch.ops.aten.view.default(view_246, [8, 512]);  view_246 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_248: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_247, [8, 2, 1, 256]);  view_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_288: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_121);  alias_121 = None
    mul_1386: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_248, alias_288);  view_248 = None
    sum_196: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1386, [1], True)
    mul_1387: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_288, sum_196);  alias_288 = sum_196 = None
    sub_333: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1386, mul_1387);  mul_1386 = mul_1387 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_47: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_333, [0, 2, 1, 3]);  sub_333 = None
    view_249: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_47, [8, 512, 1, 1]);  permute_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_47 = torch.ops.aten.convolution_backward.default(view_249, relu_97, primals_374, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_249 = primals_374 = None
    getitem_421: "f32[8, 128, 1, 1]" = convolution_backward_47[0]
    getitem_422: "f32[512, 128, 1, 1]" = convolution_backward_47[1]
    getitem_423: "f32[512]" = convolution_backward_47[2];  convolution_backward_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_290: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_97);  relu_97 = None
    alias_291: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_290);  alias_290 = None
    le_37: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_291, 0);  alias_291 = None
    scalar_tensor_37: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_37: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_37, scalar_tensor_37, getitem_421);  le_37 = scalar_tensor_37 = getitem_421 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1031: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_300, 0);  squeeze_300 = None
    unsqueeze_1032: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1031, 2);  unsqueeze_1031 = None
    unsqueeze_1033: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1032, 3);  unsqueeze_1032 = None
    sum_197: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_37, [0, 2, 3])
    sub_334: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_123, unsqueeze_1033)
    mul_1388: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_37, sub_334);  sub_334 = None
    sum_198: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1388, [0, 2, 3]);  mul_1388 = None
    mul_1389: "f32[128]" = torch.ops.aten.mul.Tensor(sum_197, 0.125)
    unsqueeze_1034: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1389, 0);  mul_1389 = None
    unsqueeze_1035: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1034, 2);  unsqueeze_1034 = None
    unsqueeze_1036: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1035, 3);  unsqueeze_1035 = None
    mul_1390: "f32[128]" = torch.ops.aten.mul.Tensor(sum_198, 0.125)
    mul_1391: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_301, squeeze_301)
    mul_1392: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1390, mul_1391);  mul_1390 = mul_1391 = None
    unsqueeze_1037: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1392, 0);  mul_1392 = None
    unsqueeze_1038: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1037, 2);  unsqueeze_1037 = None
    unsqueeze_1039: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1038, 3);  unsqueeze_1038 = None
    mul_1393: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_301, primals_372);  primals_372 = None
    unsqueeze_1040: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1393, 0);  mul_1393 = None
    unsqueeze_1041: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1040, 2);  unsqueeze_1040 = None
    unsqueeze_1042: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1041, 3);  unsqueeze_1041 = None
    sub_335: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_123, unsqueeze_1033);  convolution_123 = unsqueeze_1033 = None
    mul_1394: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_335, unsqueeze_1039);  sub_335 = unsqueeze_1039 = None
    sub_336: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_37, mul_1394);  where_37 = mul_1394 = None
    sub_337: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_336, unsqueeze_1036);  sub_336 = unsqueeze_1036 = None
    mul_1395: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_337, unsqueeze_1042);  sub_337 = unsqueeze_1042 = None
    mul_1396: "f32[128]" = torch.ops.aten.mul.Tensor(sum_198, squeeze_301);  sum_198 = squeeze_301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_48 = torch.ops.aten.convolution_backward.default(mul_1395, mean_23, primals_370, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1395 = mean_23 = primals_370 = None
    getitem_424: "f32[8, 256, 1, 1]" = convolution_backward_48[0]
    getitem_425: "f32[128, 256, 1, 1]" = convolution_backward_48[1]
    getitem_426: "f32[128]" = convolution_backward_48[2];  convolution_backward_48 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_29: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_424, [8, 256, 16, 16]);  getitem_424 = None
    div_43: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_29, 256);  expand_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1043: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_43, 1);  div_43 = None
    expand_30: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1043, [8, 2, 256, 16, 16]);  unsqueeze_1043 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_746: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1385, expand_30);  mul_1385 = expand_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_250: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_746, [8, 512, 16, 16]);  add_746 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_293: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_96);  relu_96 = None
    alias_294: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_293);  alias_293 = None
    le_38: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_294, 0);  alias_294 = None
    scalar_tensor_38: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_38: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_38, scalar_tensor_38, view_250);  le_38 = scalar_tensor_38 = view_250 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1044: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_297, 0);  squeeze_297 = None
    unsqueeze_1045: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1044, 2);  unsqueeze_1044 = None
    unsqueeze_1046: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1045, 3);  unsqueeze_1045 = None
    sum_199: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_38, [0, 2, 3])
    sub_338: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_122, unsqueeze_1046)
    mul_1397: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_38, sub_338);  sub_338 = None
    sum_200: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1397, [0, 2, 3]);  mul_1397 = None
    mul_1398: "f32[512]" = torch.ops.aten.mul.Tensor(sum_199, 0.00048828125)
    unsqueeze_1047: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1398, 0);  mul_1398 = None
    unsqueeze_1048: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1047, 2);  unsqueeze_1047 = None
    unsqueeze_1049: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1048, 3);  unsqueeze_1048 = None
    mul_1399: "f32[512]" = torch.ops.aten.mul.Tensor(sum_200, 0.00048828125)
    mul_1400: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_298, squeeze_298)
    mul_1401: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1399, mul_1400);  mul_1399 = mul_1400 = None
    unsqueeze_1050: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1401, 0);  mul_1401 = None
    unsqueeze_1051: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1050, 2);  unsqueeze_1050 = None
    unsqueeze_1052: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1051, 3);  unsqueeze_1051 = None
    mul_1402: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_298, primals_368);  primals_368 = None
    unsqueeze_1053: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1402, 0);  mul_1402 = None
    unsqueeze_1054: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1053, 2);  unsqueeze_1053 = None
    unsqueeze_1055: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1054, 3);  unsqueeze_1054 = None
    sub_339: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_122, unsqueeze_1046);  convolution_122 = unsqueeze_1046 = None
    mul_1403: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_339, unsqueeze_1052);  sub_339 = unsqueeze_1052 = None
    sub_340: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_38, mul_1403);  where_38 = mul_1403 = None
    sub_341: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_340, unsqueeze_1049);  sub_340 = unsqueeze_1049 = None
    mul_1404: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_341, unsqueeze_1055);  sub_341 = unsqueeze_1055 = None
    mul_1405: "f32[512]" = torch.ops.aten.mul.Tensor(sum_200, squeeze_298);  sum_200 = squeeze_298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_49 = torch.ops.aten.convolution_backward.default(mul_1404, relu_95, primals_367, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1404 = primals_367 = None
    getitem_427: "f32[8, 256, 16, 16]" = convolution_backward_49[0]
    getitem_428: "f32[512, 128, 3, 3]" = convolution_backward_49[1];  convolution_backward_49 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_296: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_95);  relu_95 = None
    alias_297: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_296);  alias_296 = None
    le_39: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_297, 0);  alias_297 = None
    scalar_tensor_39: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_39: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_39, scalar_tensor_39, getitem_427);  le_39 = scalar_tensor_39 = getitem_427 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1056: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_294, 0);  squeeze_294 = None
    unsqueeze_1057: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1056, 2);  unsqueeze_1056 = None
    unsqueeze_1058: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1057, 3);  unsqueeze_1057 = None
    sum_201: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_39, [0, 2, 3])
    sub_342: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_121, unsqueeze_1058)
    mul_1406: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_39, sub_342);  sub_342 = None
    sum_202: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1406, [0, 2, 3]);  mul_1406 = None
    mul_1407: "f32[256]" = torch.ops.aten.mul.Tensor(sum_201, 0.00048828125)
    unsqueeze_1059: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1407, 0);  mul_1407 = None
    unsqueeze_1060: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1059, 2);  unsqueeze_1059 = None
    unsqueeze_1061: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1060, 3);  unsqueeze_1060 = None
    mul_1408: "f32[256]" = torch.ops.aten.mul.Tensor(sum_202, 0.00048828125)
    mul_1409: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_295, squeeze_295)
    mul_1410: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1408, mul_1409);  mul_1408 = mul_1409 = None
    unsqueeze_1062: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1410, 0);  mul_1410 = None
    unsqueeze_1063: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1062, 2);  unsqueeze_1062 = None
    unsqueeze_1064: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1063, 3);  unsqueeze_1063 = None
    mul_1411: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_295, primals_365);  primals_365 = None
    unsqueeze_1065: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1411, 0);  mul_1411 = None
    unsqueeze_1066: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1065, 2);  unsqueeze_1065 = None
    unsqueeze_1067: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1066, 3);  unsqueeze_1066 = None
    sub_343: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_121, unsqueeze_1058);  convolution_121 = unsqueeze_1058 = None
    mul_1412: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_343, unsqueeze_1064);  sub_343 = unsqueeze_1064 = None
    sub_344: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_39, mul_1412);  where_39 = mul_1412 = None
    sub_345: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_344, unsqueeze_1061);  sub_344 = unsqueeze_1061 = None
    mul_1413: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_345, unsqueeze_1067);  sub_345 = unsqueeze_1067 = None
    mul_1414: "f32[256]" = torch.ops.aten.mul.Tensor(sum_202, squeeze_295);  sum_202 = squeeze_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_50 = torch.ops.aten.convolution_backward.default(mul_1413, relu_94, primals_364, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1413 = primals_364 = None
    getitem_430: "f32[8, 1024, 16, 16]" = convolution_backward_50[0]
    getitem_431: "f32[256, 1024, 1, 1]" = convolution_backward_50[1];  convolution_backward_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_747: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_36, getitem_430);  where_36 = getitem_430 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_299: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_94);  relu_94 = None
    alias_300: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_299);  alias_299 = None
    le_40: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_300, 0);  alias_300 = None
    scalar_tensor_40: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_40: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_40, scalar_tensor_40, add_747);  le_40 = scalar_tensor_40 = add_747 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1068: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_291, 0);  squeeze_291 = None
    unsqueeze_1069: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1068, 2);  unsqueeze_1068 = None
    unsqueeze_1070: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1069, 3);  unsqueeze_1069 = None
    sum_203: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_40, [0, 2, 3])
    sub_346: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_120, unsqueeze_1070)
    mul_1415: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_40, sub_346);  sub_346 = None
    sum_204: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1415, [0, 2, 3]);  mul_1415 = None
    mul_1416: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_203, 0.00048828125)
    unsqueeze_1071: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1416, 0);  mul_1416 = None
    unsqueeze_1072: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1071, 2);  unsqueeze_1071 = None
    unsqueeze_1073: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1072, 3);  unsqueeze_1072 = None
    mul_1417: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_204, 0.00048828125)
    mul_1418: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_292, squeeze_292)
    mul_1419: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1417, mul_1418);  mul_1417 = mul_1418 = None
    unsqueeze_1074: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1419, 0);  mul_1419 = None
    unsqueeze_1075: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1074, 2);  unsqueeze_1074 = None
    unsqueeze_1076: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1075, 3);  unsqueeze_1075 = None
    mul_1420: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_292, primals_362);  primals_362 = None
    unsqueeze_1077: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1420, 0);  mul_1420 = None
    unsqueeze_1078: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1077, 2);  unsqueeze_1077 = None
    unsqueeze_1079: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1078, 3);  unsqueeze_1078 = None
    sub_347: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_120, unsqueeze_1070);  convolution_120 = unsqueeze_1070 = None
    mul_1421: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_347, unsqueeze_1076);  sub_347 = unsqueeze_1076 = None
    sub_348: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_40, mul_1421);  mul_1421 = None
    sub_349: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_348, unsqueeze_1073);  sub_348 = unsqueeze_1073 = None
    mul_1422: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_349, unsqueeze_1079);  sub_349 = unsqueeze_1079 = None
    mul_1423: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_204, squeeze_292);  sum_204 = squeeze_292 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_51 = torch.ops.aten.convolution_backward.default(mul_1422, sum_69, primals_361, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1422 = sum_69 = primals_361 = None
    getitem_433: "f32[8, 256, 16, 16]" = convolution_backward_51[0]
    getitem_434: "f32[1024, 256, 1, 1]" = convolution_backward_51[1];  convolution_backward_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1080: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_433, 1);  getitem_433 = None
    expand_31: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1080, [8, 2, 256, 16, 16]);  unsqueeze_1080 = None
    mul_1424: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_31, view_133);  view_133 = None
    mul_1425: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_31, view_137);  expand_31 = view_137 = None
    sum_205: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1424, [3, 4], True);  mul_1424 = None
    view_251: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_205, [8, 512, 1, 1]);  sum_205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_252: "f32[8, 512]" = torch.ops.aten.view.default(view_251, [8, 512]);  view_251 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_253: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_252, [8, 2, 1, 256]);  view_252 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_301: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_116);  alias_116 = None
    mul_1426: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_253, alias_301);  view_253 = None
    sum_206: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1426, [1], True)
    mul_1427: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_301, sum_206);  alias_301 = sum_206 = None
    sub_350: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1426, mul_1427);  mul_1426 = mul_1427 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_48: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_350, [0, 2, 1, 3]);  sub_350 = None
    view_254: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_48, [8, 512, 1, 1]);  permute_48 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_52 = torch.ops.aten.convolution_backward.default(view_254, relu_93, primals_359, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_254 = primals_359 = None
    getitem_436: "f32[8, 128, 1, 1]" = convolution_backward_52[0]
    getitem_437: "f32[512, 128, 1, 1]" = convolution_backward_52[1]
    getitem_438: "f32[512]" = convolution_backward_52[2];  convolution_backward_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_303: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_93);  relu_93 = None
    alias_304: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_303);  alias_303 = None
    le_41: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_304, 0);  alias_304 = None
    scalar_tensor_41: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_41: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_41, scalar_tensor_41, getitem_436);  le_41 = scalar_tensor_41 = getitem_436 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1081: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_288, 0);  squeeze_288 = None
    unsqueeze_1082: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1081, 2);  unsqueeze_1081 = None
    unsqueeze_1083: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1082, 3);  unsqueeze_1082 = None
    sum_207: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_41, [0, 2, 3])
    sub_351: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_118, unsqueeze_1083)
    mul_1428: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_41, sub_351);  sub_351 = None
    sum_208: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1428, [0, 2, 3]);  mul_1428 = None
    mul_1429: "f32[128]" = torch.ops.aten.mul.Tensor(sum_207, 0.125)
    unsqueeze_1084: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1429, 0);  mul_1429 = None
    unsqueeze_1085: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1084, 2);  unsqueeze_1084 = None
    unsqueeze_1086: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1085, 3);  unsqueeze_1085 = None
    mul_1430: "f32[128]" = torch.ops.aten.mul.Tensor(sum_208, 0.125)
    mul_1431: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_289, squeeze_289)
    mul_1432: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1430, mul_1431);  mul_1430 = mul_1431 = None
    unsqueeze_1087: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1432, 0);  mul_1432 = None
    unsqueeze_1088: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1087, 2);  unsqueeze_1087 = None
    unsqueeze_1089: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1088, 3);  unsqueeze_1088 = None
    mul_1433: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_289, primals_357);  primals_357 = None
    unsqueeze_1090: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1433, 0);  mul_1433 = None
    unsqueeze_1091: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1090, 2);  unsqueeze_1090 = None
    unsqueeze_1092: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1091, 3);  unsqueeze_1091 = None
    sub_352: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_118, unsqueeze_1083);  convolution_118 = unsqueeze_1083 = None
    mul_1434: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_352, unsqueeze_1089);  sub_352 = unsqueeze_1089 = None
    sub_353: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_41, mul_1434);  where_41 = mul_1434 = None
    sub_354: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_353, unsqueeze_1086);  sub_353 = unsqueeze_1086 = None
    mul_1435: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_354, unsqueeze_1092);  sub_354 = unsqueeze_1092 = None
    mul_1436: "f32[128]" = torch.ops.aten.mul.Tensor(sum_208, squeeze_289);  sum_208 = squeeze_289 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_53 = torch.ops.aten.convolution_backward.default(mul_1435, mean_22, primals_355, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1435 = mean_22 = primals_355 = None
    getitem_439: "f32[8, 256, 1, 1]" = convolution_backward_53[0]
    getitem_440: "f32[128, 256, 1, 1]" = convolution_backward_53[1]
    getitem_441: "f32[128]" = convolution_backward_53[2];  convolution_backward_53 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_32: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_439, [8, 256, 16, 16]);  getitem_439 = None
    div_44: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_32, 256);  expand_32 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1093: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_44, 1);  div_44 = None
    expand_33: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1093, [8, 2, 256, 16, 16]);  unsqueeze_1093 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_748: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1425, expand_33);  mul_1425 = expand_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_255: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_748, [8, 512, 16, 16]);  add_748 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_306: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_92);  relu_92 = None
    alias_307: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_306);  alias_306 = None
    le_42: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_307, 0);  alias_307 = None
    scalar_tensor_42: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_42: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_42, scalar_tensor_42, view_255);  le_42 = scalar_tensor_42 = view_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1094: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_285, 0);  squeeze_285 = None
    unsqueeze_1095: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1094, 2);  unsqueeze_1094 = None
    unsqueeze_1096: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1095, 3);  unsqueeze_1095 = None
    sum_209: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_42, [0, 2, 3])
    sub_355: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_117, unsqueeze_1096)
    mul_1437: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_42, sub_355);  sub_355 = None
    sum_210: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1437, [0, 2, 3]);  mul_1437 = None
    mul_1438: "f32[512]" = torch.ops.aten.mul.Tensor(sum_209, 0.00048828125)
    unsqueeze_1097: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1438, 0);  mul_1438 = None
    unsqueeze_1098: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1097, 2);  unsqueeze_1097 = None
    unsqueeze_1099: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1098, 3);  unsqueeze_1098 = None
    mul_1439: "f32[512]" = torch.ops.aten.mul.Tensor(sum_210, 0.00048828125)
    mul_1440: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_286, squeeze_286)
    mul_1441: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1439, mul_1440);  mul_1439 = mul_1440 = None
    unsqueeze_1100: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1441, 0);  mul_1441 = None
    unsqueeze_1101: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1100, 2);  unsqueeze_1100 = None
    unsqueeze_1102: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1101, 3);  unsqueeze_1101 = None
    mul_1442: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_286, primals_353);  primals_353 = None
    unsqueeze_1103: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1442, 0);  mul_1442 = None
    unsqueeze_1104: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1103, 2);  unsqueeze_1103 = None
    unsqueeze_1105: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1104, 3);  unsqueeze_1104 = None
    sub_356: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_117, unsqueeze_1096);  convolution_117 = unsqueeze_1096 = None
    mul_1443: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_356, unsqueeze_1102);  sub_356 = unsqueeze_1102 = None
    sub_357: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_42, mul_1443);  where_42 = mul_1443 = None
    sub_358: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_357, unsqueeze_1099);  sub_357 = unsqueeze_1099 = None
    mul_1444: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_358, unsqueeze_1105);  sub_358 = unsqueeze_1105 = None
    mul_1445: "f32[512]" = torch.ops.aten.mul.Tensor(sum_210, squeeze_286);  sum_210 = squeeze_286 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_54 = torch.ops.aten.convolution_backward.default(mul_1444, relu_91, primals_352, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1444 = primals_352 = None
    getitem_442: "f32[8, 256, 16, 16]" = convolution_backward_54[0]
    getitem_443: "f32[512, 128, 3, 3]" = convolution_backward_54[1];  convolution_backward_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_309: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_91);  relu_91 = None
    alias_310: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_309);  alias_309 = None
    le_43: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_310, 0);  alias_310 = None
    scalar_tensor_43: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_43: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_43, scalar_tensor_43, getitem_442);  le_43 = scalar_tensor_43 = getitem_442 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1106: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_282, 0);  squeeze_282 = None
    unsqueeze_1107: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1106, 2);  unsqueeze_1106 = None
    unsqueeze_1108: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1107, 3);  unsqueeze_1107 = None
    sum_211: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_43, [0, 2, 3])
    sub_359: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_116, unsqueeze_1108)
    mul_1446: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_43, sub_359);  sub_359 = None
    sum_212: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1446, [0, 2, 3]);  mul_1446 = None
    mul_1447: "f32[256]" = torch.ops.aten.mul.Tensor(sum_211, 0.00048828125)
    unsqueeze_1109: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1447, 0);  mul_1447 = None
    unsqueeze_1110: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1109, 2);  unsqueeze_1109 = None
    unsqueeze_1111: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1110, 3);  unsqueeze_1110 = None
    mul_1448: "f32[256]" = torch.ops.aten.mul.Tensor(sum_212, 0.00048828125)
    mul_1449: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_283, squeeze_283)
    mul_1450: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1448, mul_1449);  mul_1448 = mul_1449 = None
    unsqueeze_1112: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1450, 0);  mul_1450 = None
    unsqueeze_1113: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1112, 2);  unsqueeze_1112 = None
    unsqueeze_1114: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1113, 3);  unsqueeze_1113 = None
    mul_1451: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_283, primals_350);  primals_350 = None
    unsqueeze_1115: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1451, 0);  mul_1451 = None
    unsqueeze_1116: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1115, 2);  unsqueeze_1115 = None
    unsqueeze_1117: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1116, 3);  unsqueeze_1116 = None
    sub_360: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_116, unsqueeze_1108);  convolution_116 = unsqueeze_1108 = None
    mul_1452: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_360, unsqueeze_1114);  sub_360 = unsqueeze_1114 = None
    sub_361: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_43, mul_1452);  where_43 = mul_1452 = None
    sub_362: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_361, unsqueeze_1111);  sub_361 = unsqueeze_1111 = None
    mul_1453: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_362, unsqueeze_1117);  sub_362 = unsqueeze_1117 = None
    mul_1454: "f32[256]" = torch.ops.aten.mul.Tensor(sum_212, squeeze_283);  sum_212 = squeeze_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_55 = torch.ops.aten.convolution_backward.default(mul_1453, relu_90, primals_349, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1453 = primals_349 = None
    getitem_445: "f32[8, 1024, 16, 16]" = convolution_backward_55[0]
    getitem_446: "f32[256, 1024, 1, 1]" = convolution_backward_55[1];  convolution_backward_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_749: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_40, getitem_445);  where_40 = getitem_445 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_312: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_90);  relu_90 = None
    alias_313: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_312);  alias_312 = None
    le_44: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_313, 0);  alias_313 = None
    scalar_tensor_44: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_44: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_44, scalar_tensor_44, add_749);  le_44 = scalar_tensor_44 = add_749 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1118: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_279, 0);  squeeze_279 = None
    unsqueeze_1119: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1118, 2);  unsqueeze_1118 = None
    unsqueeze_1120: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1119, 3);  unsqueeze_1119 = None
    sum_213: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_44, [0, 2, 3])
    sub_363: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_115, unsqueeze_1120)
    mul_1455: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_44, sub_363);  sub_363 = None
    sum_214: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1455, [0, 2, 3]);  mul_1455 = None
    mul_1456: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_213, 0.00048828125)
    unsqueeze_1121: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1456, 0);  mul_1456 = None
    unsqueeze_1122: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1121, 2);  unsqueeze_1121 = None
    unsqueeze_1123: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1122, 3);  unsqueeze_1122 = None
    mul_1457: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_214, 0.00048828125)
    mul_1458: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_280, squeeze_280)
    mul_1459: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1457, mul_1458);  mul_1457 = mul_1458 = None
    unsqueeze_1124: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1459, 0);  mul_1459 = None
    unsqueeze_1125: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1124, 2);  unsqueeze_1124 = None
    unsqueeze_1126: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1125, 3);  unsqueeze_1125 = None
    mul_1460: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_280, primals_347);  primals_347 = None
    unsqueeze_1127: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1460, 0);  mul_1460 = None
    unsqueeze_1128: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1127, 2);  unsqueeze_1127 = None
    unsqueeze_1129: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1128, 3);  unsqueeze_1128 = None
    sub_364: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_115, unsqueeze_1120);  convolution_115 = unsqueeze_1120 = None
    mul_1461: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_364, unsqueeze_1126);  sub_364 = unsqueeze_1126 = None
    sub_365: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_44, mul_1461);  mul_1461 = None
    sub_366: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_365, unsqueeze_1123);  sub_365 = unsqueeze_1123 = None
    mul_1462: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_366, unsqueeze_1129);  sub_366 = unsqueeze_1129 = None
    mul_1463: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_214, squeeze_280);  sum_214 = squeeze_280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_56 = torch.ops.aten.convolution_backward.default(mul_1462, sum_66, primals_346, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1462 = sum_66 = primals_346 = None
    getitem_448: "f32[8, 256, 16, 16]" = convolution_backward_56[0]
    getitem_449: "f32[1024, 256, 1, 1]" = convolution_backward_56[1];  convolution_backward_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1130: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_448, 1);  getitem_448 = None
    expand_34: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1130, [8, 2, 256, 16, 16]);  unsqueeze_1130 = None
    mul_1464: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_34, view_127);  view_127 = None
    mul_1465: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_34, view_131);  expand_34 = view_131 = None
    sum_215: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1464, [3, 4], True);  mul_1464 = None
    view_256: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_215, [8, 512, 1, 1]);  sum_215 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_257: "f32[8, 512]" = torch.ops.aten.view.default(view_256, [8, 512]);  view_256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_258: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_257, [8, 2, 1, 256]);  view_257 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_314: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_111);  alias_111 = None
    mul_1466: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_258, alias_314);  view_258 = None
    sum_216: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1466, [1], True)
    mul_1467: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_314, sum_216);  alias_314 = sum_216 = None
    sub_367: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1466, mul_1467);  mul_1466 = mul_1467 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_49: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_367, [0, 2, 1, 3]);  sub_367 = None
    view_259: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_49, [8, 512, 1, 1]);  permute_49 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_57 = torch.ops.aten.convolution_backward.default(view_259, relu_89, primals_344, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_259 = primals_344 = None
    getitem_451: "f32[8, 128, 1, 1]" = convolution_backward_57[0]
    getitem_452: "f32[512, 128, 1, 1]" = convolution_backward_57[1]
    getitem_453: "f32[512]" = convolution_backward_57[2];  convolution_backward_57 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_316: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_89);  relu_89 = None
    alias_317: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_316);  alias_316 = None
    le_45: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_317, 0);  alias_317 = None
    scalar_tensor_45: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_45: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_45, scalar_tensor_45, getitem_451);  le_45 = scalar_tensor_45 = getitem_451 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1131: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_276, 0);  squeeze_276 = None
    unsqueeze_1132: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1131, 2);  unsqueeze_1131 = None
    unsqueeze_1133: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1132, 3);  unsqueeze_1132 = None
    sum_217: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_45, [0, 2, 3])
    sub_368: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_113, unsqueeze_1133)
    mul_1468: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_45, sub_368);  sub_368 = None
    sum_218: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1468, [0, 2, 3]);  mul_1468 = None
    mul_1469: "f32[128]" = torch.ops.aten.mul.Tensor(sum_217, 0.125)
    unsqueeze_1134: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1469, 0);  mul_1469 = None
    unsqueeze_1135: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1134, 2);  unsqueeze_1134 = None
    unsqueeze_1136: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1135, 3);  unsqueeze_1135 = None
    mul_1470: "f32[128]" = torch.ops.aten.mul.Tensor(sum_218, 0.125)
    mul_1471: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_277, squeeze_277)
    mul_1472: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1470, mul_1471);  mul_1470 = mul_1471 = None
    unsqueeze_1137: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1472, 0);  mul_1472 = None
    unsqueeze_1138: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1137, 2);  unsqueeze_1137 = None
    unsqueeze_1139: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1138, 3);  unsqueeze_1138 = None
    mul_1473: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_277, primals_342);  primals_342 = None
    unsqueeze_1140: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1473, 0);  mul_1473 = None
    unsqueeze_1141: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1140, 2);  unsqueeze_1140 = None
    unsqueeze_1142: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1141, 3);  unsqueeze_1141 = None
    sub_369: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_113, unsqueeze_1133);  convolution_113 = unsqueeze_1133 = None
    mul_1474: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_369, unsqueeze_1139);  sub_369 = unsqueeze_1139 = None
    sub_370: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_45, mul_1474);  where_45 = mul_1474 = None
    sub_371: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_370, unsqueeze_1136);  sub_370 = unsqueeze_1136 = None
    mul_1475: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_371, unsqueeze_1142);  sub_371 = unsqueeze_1142 = None
    mul_1476: "f32[128]" = torch.ops.aten.mul.Tensor(sum_218, squeeze_277);  sum_218 = squeeze_277 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_58 = torch.ops.aten.convolution_backward.default(mul_1475, mean_21, primals_340, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1475 = mean_21 = primals_340 = None
    getitem_454: "f32[8, 256, 1, 1]" = convolution_backward_58[0]
    getitem_455: "f32[128, 256, 1, 1]" = convolution_backward_58[1]
    getitem_456: "f32[128]" = convolution_backward_58[2];  convolution_backward_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_35: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_454, [8, 256, 16, 16]);  getitem_454 = None
    div_45: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_35, 256);  expand_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1143: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_45, 1);  div_45 = None
    expand_36: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1143, [8, 2, 256, 16, 16]);  unsqueeze_1143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_750: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1465, expand_36);  mul_1465 = expand_36 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_260: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_750, [8, 512, 16, 16]);  add_750 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_319: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_88);  relu_88 = None
    alias_320: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_319);  alias_319 = None
    le_46: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_320, 0);  alias_320 = None
    scalar_tensor_46: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_46: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_46, scalar_tensor_46, view_260);  le_46 = scalar_tensor_46 = view_260 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1144: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_273, 0);  squeeze_273 = None
    unsqueeze_1145: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1144, 2);  unsqueeze_1144 = None
    unsqueeze_1146: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1145, 3);  unsqueeze_1145 = None
    sum_219: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_46, [0, 2, 3])
    sub_372: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_112, unsqueeze_1146)
    mul_1477: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_46, sub_372);  sub_372 = None
    sum_220: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1477, [0, 2, 3]);  mul_1477 = None
    mul_1478: "f32[512]" = torch.ops.aten.mul.Tensor(sum_219, 0.00048828125)
    unsqueeze_1147: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1478, 0);  mul_1478 = None
    unsqueeze_1148: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1147, 2);  unsqueeze_1147 = None
    unsqueeze_1149: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1148, 3);  unsqueeze_1148 = None
    mul_1479: "f32[512]" = torch.ops.aten.mul.Tensor(sum_220, 0.00048828125)
    mul_1480: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_274, squeeze_274)
    mul_1481: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1479, mul_1480);  mul_1479 = mul_1480 = None
    unsqueeze_1150: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1481, 0);  mul_1481 = None
    unsqueeze_1151: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1150, 2);  unsqueeze_1150 = None
    unsqueeze_1152: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1151, 3);  unsqueeze_1151 = None
    mul_1482: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_274, primals_338);  primals_338 = None
    unsqueeze_1153: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1482, 0);  mul_1482 = None
    unsqueeze_1154: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1153, 2);  unsqueeze_1153 = None
    unsqueeze_1155: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1154, 3);  unsqueeze_1154 = None
    sub_373: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_112, unsqueeze_1146);  convolution_112 = unsqueeze_1146 = None
    mul_1483: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_373, unsqueeze_1152);  sub_373 = unsqueeze_1152 = None
    sub_374: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_46, mul_1483);  where_46 = mul_1483 = None
    sub_375: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_374, unsqueeze_1149);  sub_374 = unsqueeze_1149 = None
    mul_1484: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_375, unsqueeze_1155);  sub_375 = unsqueeze_1155 = None
    mul_1485: "f32[512]" = torch.ops.aten.mul.Tensor(sum_220, squeeze_274);  sum_220 = squeeze_274 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_59 = torch.ops.aten.convolution_backward.default(mul_1484, relu_87, primals_337, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1484 = primals_337 = None
    getitem_457: "f32[8, 256, 16, 16]" = convolution_backward_59[0]
    getitem_458: "f32[512, 128, 3, 3]" = convolution_backward_59[1];  convolution_backward_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_322: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_87);  relu_87 = None
    alias_323: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_322);  alias_322 = None
    le_47: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_323, 0);  alias_323 = None
    scalar_tensor_47: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_47: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_47, scalar_tensor_47, getitem_457);  le_47 = scalar_tensor_47 = getitem_457 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1156: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_270, 0);  squeeze_270 = None
    unsqueeze_1157: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1156, 2);  unsqueeze_1156 = None
    unsqueeze_1158: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1157, 3);  unsqueeze_1157 = None
    sum_221: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_47, [0, 2, 3])
    sub_376: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_111, unsqueeze_1158)
    mul_1486: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_47, sub_376);  sub_376 = None
    sum_222: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1486, [0, 2, 3]);  mul_1486 = None
    mul_1487: "f32[256]" = torch.ops.aten.mul.Tensor(sum_221, 0.00048828125)
    unsqueeze_1159: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1487, 0);  mul_1487 = None
    unsqueeze_1160: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1159, 2);  unsqueeze_1159 = None
    unsqueeze_1161: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1160, 3);  unsqueeze_1160 = None
    mul_1488: "f32[256]" = torch.ops.aten.mul.Tensor(sum_222, 0.00048828125)
    mul_1489: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_271, squeeze_271)
    mul_1490: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1488, mul_1489);  mul_1488 = mul_1489 = None
    unsqueeze_1162: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1490, 0);  mul_1490 = None
    unsqueeze_1163: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1162, 2);  unsqueeze_1162 = None
    unsqueeze_1164: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1163, 3);  unsqueeze_1163 = None
    mul_1491: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_271, primals_335);  primals_335 = None
    unsqueeze_1165: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1491, 0);  mul_1491 = None
    unsqueeze_1166: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1165, 2);  unsqueeze_1165 = None
    unsqueeze_1167: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1166, 3);  unsqueeze_1166 = None
    sub_377: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_111, unsqueeze_1158);  convolution_111 = unsqueeze_1158 = None
    mul_1492: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_377, unsqueeze_1164);  sub_377 = unsqueeze_1164 = None
    sub_378: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_47, mul_1492);  where_47 = mul_1492 = None
    sub_379: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_378, unsqueeze_1161);  sub_378 = unsqueeze_1161 = None
    mul_1493: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_379, unsqueeze_1167);  sub_379 = unsqueeze_1167 = None
    mul_1494: "f32[256]" = torch.ops.aten.mul.Tensor(sum_222, squeeze_271);  sum_222 = squeeze_271 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_60 = torch.ops.aten.convolution_backward.default(mul_1493, relu_86, primals_334, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1493 = primals_334 = None
    getitem_460: "f32[8, 1024, 16, 16]" = convolution_backward_60[0]
    getitem_461: "f32[256, 1024, 1, 1]" = convolution_backward_60[1];  convolution_backward_60 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_751: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_44, getitem_460);  where_44 = getitem_460 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_325: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_86);  relu_86 = None
    alias_326: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_325);  alias_325 = None
    le_48: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_326, 0);  alias_326 = None
    scalar_tensor_48: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_48: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_48, scalar_tensor_48, add_751);  le_48 = scalar_tensor_48 = add_751 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1168: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_267, 0);  squeeze_267 = None
    unsqueeze_1169: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1168, 2);  unsqueeze_1168 = None
    unsqueeze_1170: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1169, 3);  unsqueeze_1169 = None
    sum_223: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_48, [0, 2, 3])
    sub_380: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_110, unsqueeze_1170)
    mul_1495: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_48, sub_380);  sub_380 = None
    sum_224: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1495, [0, 2, 3]);  mul_1495 = None
    mul_1496: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_223, 0.00048828125)
    unsqueeze_1171: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1496, 0);  mul_1496 = None
    unsqueeze_1172: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1171, 2);  unsqueeze_1171 = None
    unsqueeze_1173: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1172, 3);  unsqueeze_1172 = None
    mul_1497: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_224, 0.00048828125)
    mul_1498: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_268, squeeze_268)
    mul_1499: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1497, mul_1498);  mul_1497 = mul_1498 = None
    unsqueeze_1174: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1499, 0);  mul_1499 = None
    unsqueeze_1175: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1174, 2);  unsqueeze_1174 = None
    unsqueeze_1176: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1175, 3);  unsqueeze_1175 = None
    mul_1500: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_268, primals_332);  primals_332 = None
    unsqueeze_1177: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1500, 0);  mul_1500 = None
    unsqueeze_1178: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1177, 2);  unsqueeze_1177 = None
    unsqueeze_1179: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1178, 3);  unsqueeze_1178 = None
    sub_381: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_110, unsqueeze_1170);  convolution_110 = unsqueeze_1170 = None
    mul_1501: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_381, unsqueeze_1176);  sub_381 = unsqueeze_1176 = None
    sub_382: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_48, mul_1501);  mul_1501 = None
    sub_383: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_382, unsqueeze_1173);  sub_382 = unsqueeze_1173 = None
    mul_1502: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_383, unsqueeze_1179);  sub_383 = unsqueeze_1179 = None
    mul_1503: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_224, squeeze_268);  sum_224 = squeeze_268 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_61 = torch.ops.aten.convolution_backward.default(mul_1502, sum_63, primals_331, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1502 = sum_63 = primals_331 = None
    getitem_463: "f32[8, 256, 16, 16]" = convolution_backward_61[0]
    getitem_464: "f32[1024, 256, 1, 1]" = convolution_backward_61[1];  convolution_backward_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1180: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_463, 1);  getitem_463 = None
    expand_37: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1180, [8, 2, 256, 16, 16]);  unsqueeze_1180 = None
    mul_1504: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_37, view_121);  view_121 = None
    mul_1505: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_37, view_125);  expand_37 = view_125 = None
    sum_225: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1504, [3, 4], True);  mul_1504 = None
    view_261: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_225, [8, 512, 1, 1]);  sum_225 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_262: "f32[8, 512]" = torch.ops.aten.view.default(view_261, [8, 512]);  view_261 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_263: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_262, [8, 2, 1, 256]);  view_262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_327: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_106);  alias_106 = None
    mul_1506: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_263, alias_327);  view_263 = None
    sum_226: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1506, [1], True)
    mul_1507: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_327, sum_226);  alias_327 = sum_226 = None
    sub_384: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1506, mul_1507);  mul_1506 = mul_1507 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_50: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_384, [0, 2, 1, 3]);  sub_384 = None
    view_264: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_50, [8, 512, 1, 1]);  permute_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_62 = torch.ops.aten.convolution_backward.default(view_264, relu_85, primals_329, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_264 = primals_329 = None
    getitem_466: "f32[8, 128, 1, 1]" = convolution_backward_62[0]
    getitem_467: "f32[512, 128, 1, 1]" = convolution_backward_62[1]
    getitem_468: "f32[512]" = convolution_backward_62[2];  convolution_backward_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_329: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_85);  relu_85 = None
    alias_330: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_329);  alias_329 = None
    le_49: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_330, 0);  alias_330 = None
    scalar_tensor_49: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_49: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_49, scalar_tensor_49, getitem_466);  le_49 = scalar_tensor_49 = getitem_466 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1181: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_264, 0);  squeeze_264 = None
    unsqueeze_1182: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1181, 2);  unsqueeze_1181 = None
    unsqueeze_1183: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1182, 3);  unsqueeze_1182 = None
    sum_227: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_49, [0, 2, 3])
    sub_385: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_108, unsqueeze_1183)
    mul_1508: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_49, sub_385);  sub_385 = None
    sum_228: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1508, [0, 2, 3]);  mul_1508 = None
    mul_1509: "f32[128]" = torch.ops.aten.mul.Tensor(sum_227, 0.125)
    unsqueeze_1184: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1509, 0);  mul_1509 = None
    unsqueeze_1185: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1184, 2);  unsqueeze_1184 = None
    unsqueeze_1186: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1185, 3);  unsqueeze_1185 = None
    mul_1510: "f32[128]" = torch.ops.aten.mul.Tensor(sum_228, 0.125)
    mul_1511: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_265, squeeze_265)
    mul_1512: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1510, mul_1511);  mul_1510 = mul_1511 = None
    unsqueeze_1187: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1512, 0);  mul_1512 = None
    unsqueeze_1188: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1187, 2);  unsqueeze_1187 = None
    unsqueeze_1189: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1188, 3);  unsqueeze_1188 = None
    mul_1513: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_265, primals_327);  primals_327 = None
    unsqueeze_1190: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1513, 0);  mul_1513 = None
    unsqueeze_1191: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1190, 2);  unsqueeze_1190 = None
    unsqueeze_1192: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1191, 3);  unsqueeze_1191 = None
    sub_386: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_108, unsqueeze_1183);  convolution_108 = unsqueeze_1183 = None
    mul_1514: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_386, unsqueeze_1189);  sub_386 = unsqueeze_1189 = None
    sub_387: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_49, mul_1514);  where_49 = mul_1514 = None
    sub_388: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_387, unsqueeze_1186);  sub_387 = unsqueeze_1186 = None
    mul_1515: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_388, unsqueeze_1192);  sub_388 = unsqueeze_1192 = None
    mul_1516: "f32[128]" = torch.ops.aten.mul.Tensor(sum_228, squeeze_265);  sum_228 = squeeze_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_63 = torch.ops.aten.convolution_backward.default(mul_1515, mean_20, primals_325, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1515 = mean_20 = primals_325 = None
    getitem_469: "f32[8, 256, 1, 1]" = convolution_backward_63[0]
    getitem_470: "f32[128, 256, 1, 1]" = convolution_backward_63[1]
    getitem_471: "f32[128]" = convolution_backward_63[2];  convolution_backward_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_38: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_469, [8, 256, 16, 16]);  getitem_469 = None
    div_46: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_38, 256);  expand_38 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1193: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_46, 1);  div_46 = None
    expand_39: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1193, [8, 2, 256, 16, 16]);  unsqueeze_1193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_752: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1505, expand_39);  mul_1505 = expand_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_265: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_752, [8, 512, 16, 16]);  add_752 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_332: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_84);  relu_84 = None
    alias_333: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_332);  alias_332 = None
    le_50: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_333, 0);  alias_333 = None
    scalar_tensor_50: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_50: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_50, scalar_tensor_50, view_265);  le_50 = scalar_tensor_50 = view_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1194: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_261, 0);  squeeze_261 = None
    unsqueeze_1195: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1194, 2);  unsqueeze_1194 = None
    unsqueeze_1196: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1195, 3);  unsqueeze_1195 = None
    sum_229: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_50, [0, 2, 3])
    sub_389: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_107, unsqueeze_1196)
    mul_1517: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_50, sub_389);  sub_389 = None
    sum_230: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1517, [0, 2, 3]);  mul_1517 = None
    mul_1518: "f32[512]" = torch.ops.aten.mul.Tensor(sum_229, 0.00048828125)
    unsqueeze_1197: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1518, 0);  mul_1518 = None
    unsqueeze_1198: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1197, 2);  unsqueeze_1197 = None
    unsqueeze_1199: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1198, 3);  unsqueeze_1198 = None
    mul_1519: "f32[512]" = torch.ops.aten.mul.Tensor(sum_230, 0.00048828125)
    mul_1520: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_262, squeeze_262)
    mul_1521: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1519, mul_1520);  mul_1519 = mul_1520 = None
    unsqueeze_1200: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1521, 0);  mul_1521 = None
    unsqueeze_1201: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1200, 2);  unsqueeze_1200 = None
    unsqueeze_1202: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1201, 3);  unsqueeze_1201 = None
    mul_1522: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_262, primals_323);  primals_323 = None
    unsqueeze_1203: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1522, 0);  mul_1522 = None
    unsqueeze_1204: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1203, 2);  unsqueeze_1203 = None
    unsqueeze_1205: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1204, 3);  unsqueeze_1204 = None
    sub_390: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_107, unsqueeze_1196);  convolution_107 = unsqueeze_1196 = None
    mul_1523: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_390, unsqueeze_1202);  sub_390 = unsqueeze_1202 = None
    sub_391: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_50, mul_1523);  where_50 = mul_1523 = None
    sub_392: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_391, unsqueeze_1199);  sub_391 = unsqueeze_1199 = None
    mul_1524: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_392, unsqueeze_1205);  sub_392 = unsqueeze_1205 = None
    mul_1525: "f32[512]" = torch.ops.aten.mul.Tensor(sum_230, squeeze_262);  sum_230 = squeeze_262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_64 = torch.ops.aten.convolution_backward.default(mul_1524, relu_83, primals_322, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1524 = primals_322 = None
    getitem_472: "f32[8, 256, 16, 16]" = convolution_backward_64[0]
    getitem_473: "f32[512, 128, 3, 3]" = convolution_backward_64[1];  convolution_backward_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_335: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_83);  relu_83 = None
    alias_336: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_335);  alias_335 = None
    le_51: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_336, 0);  alias_336 = None
    scalar_tensor_51: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_51: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_51, scalar_tensor_51, getitem_472);  le_51 = scalar_tensor_51 = getitem_472 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1206: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_258, 0);  squeeze_258 = None
    unsqueeze_1207: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1206, 2);  unsqueeze_1206 = None
    unsqueeze_1208: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1207, 3);  unsqueeze_1207 = None
    sum_231: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_51, [0, 2, 3])
    sub_393: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_106, unsqueeze_1208)
    mul_1526: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_51, sub_393);  sub_393 = None
    sum_232: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1526, [0, 2, 3]);  mul_1526 = None
    mul_1527: "f32[256]" = torch.ops.aten.mul.Tensor(sum_231, 0.00048828125)
    unsqueeze_1209: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1527, 0);  mul_1527 = None
    unsqueeze_1210: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1209, 2);  unsqueeze_1209 = None
    unsqueeze_1211: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1210, 3);  unsqueeze_1210 = None
    mul_1528: "f32[256]" = torch.ops.aten.mul.Tensor(sum_232, 0.00048828125)
    mul_1529: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_259, squeeze_259)
    mul_1530: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1528, mul_1529);  mul_1528 = mul_1529 = None
    unsqueeze_1212: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1530, 0);  mul_1530 = None
    unsqueeze_1213: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1212, 2);  unsqueeze_1212 = None
    unsqueeze_1214: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1213, 3);  unsqueeze_1213 = None
    mul_1531: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_259, primals_320);  primals_320 = None
    unsqueeze_1215: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1531, 0);  mul_1531 = None
    unsqueeze_1216: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1215, 2);  unsqueeze_1215 = None
    unsqueeze_1217: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1216, 3);  unsqueeze_1216 = None
    sub_394: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_106, unsqueeze_1208);  convolution_106 = unsqueeze_1208 = None
    mul_1532: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_394, unsqueeze_1214);  sub_394 = unsqueeze_1214 = None
    sub_395: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_51, mul_1532);  where_51 = mul_1532 = None
    sub_396: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_395, unsqueeze_1211);  sub_395 = unsqueeze_1211 = None
    mul_1533: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_396, unsqueeze_1217);  sub_396 = unsqueeze_1217 = None
    mul_1534: "f32[256]" = torch.ops.aten.mul.Tensor(sum_232, squeeze_259);  sum_232 = squeeze_259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_65 = torch.ops.aten.convolution_backward.default(mul_1533, relu_82, primals_319, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1533 = primals_319 = None
    getitem_475: "f32[8, 1024, 16, 16]" = convolution_backward_65[0]
    getitem_476: "f32[256, 1024, 1, 1]" = convolution_backward_65[1];  convolution_backward_65 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_753: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_48, getitem_475);  where_48 = getitem_475 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_338: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_82);  relu_82 = None
    alias_339: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_338);  alias_338 = None
    le_52: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_339, 0);  alias_339 = None
    scalar_tensor_52: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_52: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_52, scalar_tensor_52, add_753);  le_52 = scalar_tensor_52 = add_753 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1218: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_255, 0);  squeeze_255 = None
    unsqueeze_1219: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1218, 2);  unsqueeze_1218 = None
    unsqueeze_1220: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1219, 3);  unsqueeze_1219 = None
    sum_233: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_52, [0, 2, 3])
    sub_397: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_105, unsqueeze_1220)
    mul_1535: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_52, sub_397);  sub_397 = None
    sum_234: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1535, [0, 2, 3]);  mul_1535 = None
    mul_1536: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_233, 0.00048828125)
    unsqueeze_1221: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1536, 0);  mul_1536 = None
    unsqueeze_1222: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1221, 2);  unsqueeze_1221 = None
    unsqueeze_1223: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1222, 3);  unsqueeze_1222 = None
    mul_1537: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_234, 0.00048828125)
    mul_1538: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_256, squeeze_256)
    mul_1539: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1537, mul_1538);  mul_1537 = mul_1538 = None
    unsqueeze_1224: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1539, 0);  mul_1539 = None
    unsqueeze_1225: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1224, 2);  unsqueeze_1224 = None
    unsqueeze_1226: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1225, 3);  unsqueeze_1225 = None
    mul_1540: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_256, primals_317);  primals_317 = None
    unsqueeze_1227: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1540, 0);  mul_1540 = None
    unsqueeze_1228: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1227, 2);  unsqueeze_1227 = None
    unsqueeze_1229: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1228, 3);  unsqueeze_1228 = None
    sub_398: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_105, unsqueeze_1220);  convolution_105 = unsqueeze_1220 = None
    mul_1541: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_398, unsqueeze_1226);  sub_398 = unsqueeze_1226 = None
    sub_399: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_52, mul_1541);  mul_1541 = None
    sub_400: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_399, unsqueeze_1223);  sub_399 = unsqueeze_1223 = None
    mul_1542: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_400, unsqueeze_1229);  sub_400 = unsqueeze_1229 = None
    mul_1543: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_234, squeeze_256);  sum_234 = squeeze_256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_66 = torch.ops.aten.convolution_backward.default(mul_1542, sum_60, primals_316, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1542 = sum_60 = primals_316 = None
    getitem_478: "f32[8, 256, 16, 16]" = convolution_backward_66[0]
    getitem_479: "f32[1024, 256, 1, 1]" = convolution_backward_66[1];  convolution_backward_66 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1230: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_478, 1);  getitem_478 = None
    expand_40: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1230, [8, 2, 256, 16, 16]);  unsqueeze_1230 = None
    mul_1544: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_40, view_115);  view_115 = None
    mul_1545: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_40, view_119);  expand_40 = view_119 = None
    sum_235: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1544, [3, 4], True);  mul_1544 = None
    view_266: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_235, [8, 512, 1, 1]);  sum_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_267: "f32[8, 512]" = torch.ops.aten.view.default(view_266, [8, 512]);  view_266 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_268: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_267, [8, 2, 1, 256]);  view_267 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_340: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_101);  alias_101 = None
    mul_1546: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_268, alias_340);  view_268 = None
    sum_236: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1546, [1], True)
    mul_1547: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_340, sum_236);  alias_340 = sum_236 = None
    sub_401: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1546, mul_1547);  mul_1546 = mul_1547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_51: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_401, [0, 2, 1, 3]);  sub_401 = None
    view_269: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_51, [8, 512, 1, 1]);  permute_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_67 = torch.ops.aten.convolution_backward.default(view_269, relu_81, primals_314, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_269 = primals_314 = None
    getitem_481: "f32[8, 128, 1, 1]" = convolution_backward_67[0]
    getitem_482: "f32[512, 128, 1, 1]" = convolution_backward_67[1]
    getitem_483: "f32[512]" = convolution_backward_67[2];  convolution_backward_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_342: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_81);  relu_81 = None
    alias_343: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_342);  alias_342 = None
    le_53: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_343, 0);  alias_343 = None
    scalar_tensor_53: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_53: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_53, scalar_tensor_53, getitem_481);  le_53 = scalar_tensor_53 = getitem_481 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1231: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_252, 0);  squeeze_252 = None
    unsqueeze_1232: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1231, 2);  unsqueeze_1231 = None
    unsqueeze_1233: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1232, 3);  unsqueeze_1232 = None
    sum_237: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_53, [0, 2, 3])
    sub_402: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_103, unsqueeze_1233)
    mul_1548: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_53, sub_402);  sub_402 = None
    sum_238: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1548, [0, 2, 3]);  mul_1548 = None
    mul_1549: "f32[128]" = torch.ops.aten.mul.Tensor(sum_237, 0.125)
    unsqueeze_1234: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1549, 0);  mul_1549 = None
    unsqueeze_1235: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1234, 2);  unsqueeze_1234 = None
    unsqueeze_1236: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1235, 3);  unsqueeze_1235 = None
    mul_1550: "f32[128]" = torch.ops.aten.mul.Tensor(sum_238, 0.125)
    mul_1551: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_253, squeeze_253)
    mul_1552: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1550, mul_1551);  mul_1550 = mul_1551 = None
    unsqueeze_1237: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1552, 0);  mul_1552 = None
    unsqueeze_1238: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1237, 2);  unsqueeze_1237 = None
    unsqueeze_1239: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1238, 3);  unsqueeze_1238 = None
    mul_1553: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_253, primals_312);  primals_312 = None
    unsqueeze_1240: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1553, 0);  mul_1553 = None
    unsqueeze_1241: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1240, 2);  unsqueeze_1240 = None
    unsqueeze_1242: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1241, 3);  unsqueeze_1241 = None
    sub_403: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_103, unsqueeze_1233);  convolution_103 = unsqueeze_1233 = None
    mul_1554: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_403, unsqueeze_1239);  sub_403 = unsqueeze_1239 = None
    sub_404: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_53, mul_1554);  where_53 = mul_1554 = None
    sub_405: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_404, unsqueeze_1236);  sub_404 = unsqueeze_1236 = None
    mul_1555: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_405, unsqueeze_1242);  sub_405 = unsqueeze_1242 = None
    mul_1556: "f32[128]" = torch.ops.aten.mul.Tensor(sum_238, squeeze_253);  sum_238 = squeeze_253 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_68 = torch.ops.aten.convolution_backward.default(mul_1555, mean_19, primals_310, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1555 = mean_19 = primals_310 = None
    getitem_484: "f32[8, 256, 1, 1]" = convolution_backward_68[0]
    getitem_485: "f32[128, 256, 1, 1]" = convolution_backward_68[1]
    getitem_486: "f32[128]" = convolution_backward_68[2];  convolution_backward_68 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_41: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_484, [8, 256, 16, 16]);  getitem_484 = None
    div_47: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_41, 256);  expand_41 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1243: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_47, 1);  div_47 = None
    expand_42: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1243, [8, 2, 256, 16, 16]);  unsqueeze_1243 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_754: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1545, expand_42);  mul_1545 = expand_42 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_270: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_754, [8, 512, 16, 16]);  add_754 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_345: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_80);  relu_80 = None
    alias_346: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_345);  alias_345 = None
    le_54: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_346, 0);  alias_346 = None
    scalar_tensor_54: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_54: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_54, scalar_tensor_54, view_270);  le_54 = scalar_tensor_54 = view_270 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1244: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_249, 0);  squeeze_249 = None
    unsqueeze_1245: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1244, 2);  unsqueeze_1244 = None
    unsqueeze_1246: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1245, 3);  unsqueeze_1245 = None
    sum_239: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_54, [0, 2, 3])
    sub_406: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_102, unsqueeze_1246)
    mul_1557: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_54, sub_406);  sub_406 = None
    sum_240: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1557, [0, 2, 3]);  mul_1557 = None
    mul_1558: "f32[512]" = torch.ops.aten.mul.Tensor(sum_239, 0.00048828125)
    unsqueeze_1247: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1558, 0);  mul_1558 = None
    unsqueeze_1248: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1247, 2);  unsqueeze_1247 = None
    unsqueeze_1249: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1248, 3);  unsqueeze_1248 = None
    mul_1559: "f32[512]" = torch.ops.aten.mul.Tensor(sum_240, 0.00048828125)
    mul_1560: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_250, squeeze_250)
    mul_1561: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1559, mul_1560);  mul_1559 = mul_1560 = None
    unsqueeze_1250: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1561, 0);  mul_1561 = None
    unsqueeze_1251: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1250, 2);  unsqueeze_1250 = None
    unsqueeze_1252: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1251, 3);  unsqueeze_1251 = None
    mul_1562: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_250, primals_308);  primals_308 = None
    unsqueeze_1253: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1562, 0);  mul_1562 = None
    unsqueeze_1254: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1253, 2);  unsqueeze_1253 = None
    unsqueeze_1255: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1254, 3);  unsqueeze_1254 = None
    sub_407: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_102, unsqueeze_1246);  convolution_102 = unsqueeze_1246 = None
    mul_1563: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_407, unsqueeze_1252);  sub_407 = unsqueeze_1252 = None
    sub_408: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_54, mul_1563);  where_54 = mul_1563 = None
    sub_409: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_408, unsqueeze_1249);  sub_408 = unsqueeze_1249 = None
    mul_1564: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_409, unsqueeze_1255);  sub_409 = unsqueeze_1255 = None
    mul_1565: "f32[512]" = torch.ops.aten.mul.Tensor(sum_240, squeeze_250);  sum_240 = squeeze_250 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_69 = torch.ops.aten.convolution_backward.default(mul_1564, relu_79, primals_307, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1564 = primals_307 = None
    getitem_487: "f32[8, 256, 16, 16]" = convolution_backward_69[0]
    getitem_488: "f32[512, 128, 3, 3]" = convolution_backward_69[1];  convolution_backward_69 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_348: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_79);  relu_79 = None
    alias_349: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_348);  alias_348 = None
    le_55: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_349, 0);  alias_349 = None
    scalar_tensor_55: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_55: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_55, scalar_tensor_55, getitem_487);  le_55 = scalar_tensor_55 = getitem_487 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1256: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_246, 0);  squeeze_246 = None
    unsqueeze_1257: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1256, 2);  unsqueeze_1256 = None
    unsqueeze_1258: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1257, 3);  unsqueeze_1257 = None
    sum_241: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_55, [0, 2, 3])
    sub_410: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_101, unsqueeze_1258)
    mul_1566: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_55, sub_410);  sub_410 = None
    sum_242: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1566, [0, 2, 3]);  mul_1566 = None
    mul_1567: "f32[256]" = torch.ops.aten.mul.Tensor(sum_241, 0.00048828125)
    unsqueeze_1259: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1567, 0);  mul_1567 = None
    unsqueeze_1260: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1259, 2);  unsqueeze_1259 = None
    unsqueeze_1261: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1260, 3);  unsqueeze_1260 = None
    mul_1568: "f32[256]" = torch.ops.aten.mul.Tensor(sum_242, 0.00048828125)
    mul_1569: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_247, squeeze_247)
    mul_1570: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1568, mul_1569);  mul_1568 = mul_1569 = None
    unsqueeze_1262: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1570, 0);  mul_1570 = None
    unsqueeze_1263: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1262, 2);  unsqueeze_1262 = None
    unsqueeze_1264: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1263, 3);  unsqueeze_1263 = None
    mul_1571: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_247, primals_305);  primals_305 = None
    unsqueeze_1265: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1571, 0);  mul_1571 = None
    unsqueeze_1266: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1265, 2);  unsqueeze_1265 = None
    unsqueeze_1267: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1266, 3);  unsqueeze_1266 = None
    sub_411: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_101, unsqueeze_1258);  convolution_101 = unsqueeze_1258 = None
    mul_1572: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_411, unsqueeze_1264);  sub_411 = unsqueeze_1264 = None
    sub_412: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_55, mul_1572);  where_55 = mul_1572 = None
    sub_413: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_412, unsqueeze_1261);  sub_412 = unsqueeze_1261 = None
    mul_1573: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_413, unsqueeze_1267);  sub_413 = unsqueeze_1267 = None
    mul_1574: "f32[256]" = torch.ops.aten.mul.Tensor(sum_242, squeeze_247);  sum_242 = squeeze_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_70 = torch.ops.aten.convolution_backward.default(mul_1573, relu_78, primals_304, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1573 = primals_304 = None
    getitem_490: "f32[8, 1024, 16, 16]" = convolution_backward_70[0]
    getitem_491: "f32[256, 1024, 1, 1]" = convolution_backward_70[1];  convolution_backward_70 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_755: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_52, getitem_490);  where_52 = getitem_490 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_351: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_78);  relu_78 = None
    alias_352: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_351);  alias_351 = None
    le_56: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_352, 0);  alias_352 = None
    scalar_tensor_56: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_56: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_56, scalar_tensor_56, add_755);  le_56 = scalar_tensor_56 = add_755 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1268: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_243, 0);  squeeze_243 = None
    unsqueeze_1269: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1268, 2);  unsqueeze_1268 = None
    unsqueeze_1270: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1269, 3);  unsqueeze_1269 = None
    sum_243: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_56, [0, 2, 3])
    sub_414: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_100, unsqueeze_1270)
    mul_1575: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_56, sub_414);  sub_414 = None
    sum_244: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1575, [0, 2, 3]);  mul_1575 = None
    mul_1576: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_243, 0.00048828125)
    unsqueeze_1271: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1576, 0);  mul_1576 = None
    unsqueeze_1272: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1271, 2);  unsqueeze_1271 = None
    unsqueeze_1273: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1272, 3);  unsqueeze_1272 = None
    mul_1577: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_244, 0.00048828125)
    mul_1578: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_244, squeeze_244)
    mul_1579: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1577, mul_1578);  mul_1577 = mul_1578 = None
    unsqueeze_1274: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1579, 0);  mul_1579 = None
    unsqueeze_1275: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1274, 2);  unsqueeze_1274 = None
    unsqueeze_1276: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1275, 3);  unsqueeze_1275 = None
    mul_1580: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_244, primals_302);  primals_302 = None
    unsqueeze_1277: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1580, 0);  mul_1580 = None
    unsqueeze_1278: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1277, 2);  unsqueeze_1277 = None
    unsqueeze_1279: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1278, 3);  unsqueeze_1278 = None
    sub_415: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_100, unsqueeze_1270);  convolution_100 = unsqueeze_1270 = None
    mul_1581: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_415, unsqueeze_1276);  sub_415 = unsqueeze_1276 = None
    sub_416: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_56, mul_1581);  mul_1581 = None
    sub_417: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_416, unsqueeze_1273);  sub_416 = unsqueeze_1273 = None
    mul_1582: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_417, unsqueeze_1279);  sub_417 = unsqueeze_1279 = None
    mul_1583: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_244, squeeze_244);  sum_244 = squeeze_244 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_71 = torch.ops.aten.convolution_backward.default(mul_1582, sum_57, primals_301, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1582 = sum_57 = primals_301 = None
    getitem_493: "f32[8, 256, 16, 16]" = convolution_backward_71[0]
    getitem_494: "f32[1024, 256, 1, 1]" = convolution_backward_71[1];  convolution_backward_71 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1280: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_493, 1);  getitem_493 = None
    expand_43: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1280, [8, 2, 256, 16, 16]);  unsqueeze_1280 = None
    mul_1584: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_43, view_109);  view_109 = None
    mul_1585: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_43, view_113);  expand_43 = view_113 = None
    sum_245: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1584, [3, 4], True);  mul_1584 = None
    view_271: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_245, [8, 512, 1, 1]);  sum_245 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_272: "f32[8, 512]" = torch.ops.aten.view.default(view_271, [8, 512]);  view_271 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_273: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_272, [8, 2, 1, 256]);  view_272 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_353: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_96);  alias_96 = None
    mul_1586: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_273, alias_353);  view_273 = None
    sum_246: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1586, [1], True)
    mul_1587: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_353, sum_246);  alias_353 = sum_246 = None
    sub_418: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1586, mul_1587);  mul_1586 = mul_1587 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_52: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_418, [0, 2, 1, 3]);  sub_418 = None
    view_274: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_52, [8, 512, 1, 1]);  permute_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_72 = torch.ops.aten.convolution_backward.default(view_274, relu_77, primals_299, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_274 = primals_299 = None
    getitem_496: "f32[8, 128, 1, 1]" = convolution_backward_72[0]
    getitem_497: "f32[512, 128, 1, 1]" = convolution_backward_72[1]
    getitem_498: "f32[512]" = convolution_backward_72[2];  convolution_backward_72 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_355: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_77);  relu_77 = None
    alias_356: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_355);  alias_355 = None
    le_57: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_356, 0);  alias_356 = None
    scalar_tensor_57: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_57: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_57, scalar_tensor_57, getitem_496);  le_57 = scalar_tensor_57 = getitem_496 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1281: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_240, 0);  squeeze_240 = None
    unsqueeze_1282: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1281, 2);  unsqueeze_1281 = None
    unsqueeze_1283: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1282, 3);  unsqueeze_1282 = None
    sum_247: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_57, [0, 2, 3])
    sub_419: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_98, unsqueeze_1283)
    mul_1588: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_57, sub_419);  sub_419 = None
    sum_248: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1588, [0, 2, 3]);  mul_1588 = None
    mul_1589: "f32[128]" = torch.ops.aten.mul.Tensor(sum_247, 0.125)
    unsqueeze_1284: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1589, 0);  mul_1589 = None
    unsqueeze_1285: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1284, 2);  unsqueeze_1284 = None
    unsqueeze_1286: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1285, 3);  unsqueeze_1285 = None
    mul_1590: "f32[128]" = torch.ops.aten.mul.Tensor(sum_248, 0.125)
    mul_1591: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_241, squeeze_241)
    mul_1592: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1590, mul_1591);  mul_1590 = mul_1591 = None
    unsqueeze_1287: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1592, 0);  mul_1592 = None
    unsqueeze_1288: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1287, 2);  unsqueeze_1287 = None
    unsqueeze_1289: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1288, 3);  unsqueeze_1288 = None
    mul_1593: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_241, primals_297);  primals_297 = None
    unsqueeze_1290: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1593, 0);  mul_1593 = None
    unsqueeze_1291: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1290, 2);  unsqueeze_1290 = None
    unsqueeze_1292: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1291, 3);  unsqueeze_1291 = None
    sub_420: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_98, unsqueeze_1283);  convolution_98 = unsqueeze_1283 = None
    mul_1594: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_420, unsqueeze_1289);  sub_420 = unsqueeze_1289 = None
    sub_421: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_57, mul_1594);  where_57 = mul_1594 = None
    sub_422: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_421, unsqueeze_1286);  sub_421 = unsqueeze_1286 = None
    mul_1595: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_422, unsqueeze_1292);  sub_422 = unsqueeze_1292 = None
    mul_1596: "f32[128]" = torch.ops.aten.mul.Tensor(sum_248, squeeze_241);  sum_248 = squeeze_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_73 = torch.ops.aten.convolution_backward.default(mul_1595, mean_18, primals_295, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1595 = mean_18 = primals_295 = None
    getitem_499: "f32[8, 256, 1, 1]" = convolution_backward_73[0]
    getitem_500: "f32[128, 256, 1, 1]" = convolution_backward_73[1]
    getitem_501: "f32[128]" = convolution_backward_73[2];  convolution_backward_73 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_44: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_499, [8, 256, 16, 16]);  getitem_499 = None
    div_48: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_44, 256);  expand_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1293: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_48, 1);  div_48 = None
    expand_45: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1293, [8, 2, 256, 16, 16]);  unsqueeze_1293 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_756: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1585, expand_45);  mul_1585 = expand_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_275: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_756, [8, 512, 16, 16]);  add_756 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_358: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_76);  relu_76 = None
    alias_359: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_358);  alias_358 = None
    le_58: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_359, 0);  alias_359 = None
    scalar_tensor_58: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_58: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_58, scalar_tensor_58, view_275);  le_58 = scalar_tensor_58 = view_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1294: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_237, 0);  squeeze_237 = None
    unsqueeze_1295: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1294, 2);  unsqueeze_1294 = None
    unsqueeze_1296: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1295, 3);  unsqueeze_1295 = None
    sum_249: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_58, [0, 2, 3])
    sub_423: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_97, unsqueeze_1296)
    mul_1597: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_58, sub_423);  sub_423 = None
    sum_250: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1597, [0, 2, 3]);  mul_1597 = None
    mul_1598: "f32[512]" = torch.ops.aten.mul.Tensor(sum_249, 0.00048828125)
    unsqueeze_1297: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1598, 0);  mul_1598 = None
    unsqueeze_1298: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1297, 2);  unsqueeze_1297 = None
    unsqueeze_1299: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1298, 3);  unsqueeze_1298 = None
    mul_1599: "f32[512]" = torch.ops.aten.mul.Tensor(sum_250, 0.00048828125)
    mul_1600: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_238, squeeze_238)
    mul_1601: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1599, mul_1600);  mul_1599 = mul_1600 = None
    unsqueeze_1300: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1601, 0);  mul_1601 = None
    unsqueeze_1301: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1300, 2);  unsqueeze_1300 = None
    unsqueeze_1302: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1301, 3);  unsqueeze_1301 = None
    mul_1602: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_238, primals_293);  primals_293 = None
    unsqueeze_1303: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1602, 0);  mul_1602 = None
    unsqueeze_1304: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1303, 2);  unsqueeze_1303 = None
    unsqueeze_1305: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1304, 3);  unsqueeze_1304 = None
    sub_424: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_97, unsqueeze_1296);  convolution_97 = unsqueeze_1296 = None
    mul_1603: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_424, unsqueeze_1302);  sub_424 = unsqueeze_1302 = None
    sub_425: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_58, mul_1603);  where_58 = mul_1603 = None
    sub_426: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_425, unsqueeze_1299);  sub_425 = unsqueeze_1299 = None
    mul_1604: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_426, unsqueeze_1305);  sub_426 = unsqueeze_1305 = None
    mul_1605: "f32[512]" = torch.ops.aten.mul.Tensor(sum_250, squeeze_238);  sum_250 = squeeze_238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_74 = torch.ops.aten.convolution_backward.default(mul_1604, relu_75, primals_292, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1604 = primals_292 = None
    getitem_502: "f32[8, 256, 16, 16]" = convolution_backward_74[0]
    getitem_503: "f32[512, 128, 3, 3]" = convolution_backward_74[1];  convolution_backward_74 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_361: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_75);  relu_75 = None
    alias_362: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_361);  alias_361 = None
    le_59: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_362, 0);  alias_362 = None
    scalar_tensor_59: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_59: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_59, scalar_tensor_59, getitem_502);  le_59 = scalar_tensor_59 = getitem_502 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1306: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_234, 0);  squeeze_234 = None
    unsqueeze_1307: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1306, 2);  unsqueeze_1306 = None
    unsqueeze_1308: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1307, 3);  unsqueeze_1307 = None
    sum_251: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_59, [0, 2, 3])
    sub_427: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_96, unsqueeze_1308)
    mul_1606: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_59, sub_427);  sub_427 = None
    sum_252: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1606, [0, 2, 3]);  mul_1606 = None
    mul_1607: "f32[256]" = torch.ops.aten.mul.Tensor(sum_251, 0.00048828125)
    unsqueeze_1309: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1607, 0);  mul_1607 = None
    unsqueeze_1310: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1309, 2);  unsqueeze_1309 = None
    unsqueeze_1311: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1310, 3);  unsqueeze_1310 = None
    mul_1608: "f32[256]" = torch.ops.aten.mul.Tensor(sum_252, 0.00048828125)
    mul_1609: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_235, squeeze_235)
    mul_1610: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1608, mul_1609);  mul_1608 = mul_1609 = None
    unsqueeze_1312: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1610, 0);  mul_1610 = None
    unsqueeze_1313: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1312, 2);  unsqueeze_1312 = None
    unsqueeze_1314: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1313, 3);  unsqueeze_1313 = None
    mul_1611: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_235, primals_290);  primals_290 = None
    unsqueeze_1315: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1611, 0);  mul_1611 = None
    unsqueeze_1316: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1315, 2);  unsqueeze_1315 = None
    unsqueeze_1317: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1316, 3);  unsqueeze_1316 = None
    sub_428: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_96, unsqueeze_1308);  convolution_96 = unsqueeze_1308 = None
    mul_1612: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_428, unsqueeze_1314);  sub_428 = unsqueeze_1314 = None
    sub_429: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_59, mul_1612);  where_59 = mul_1612 = None
    sub_430: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_429, unsqueeze_1311);  sub_429 = unsqueeze_1311 = None
    mul_1613: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_430, unsqueeze_1317);  sub_430 = unsqueeze_1317 = None
    mul_1614: "f32[256]" = torch.ops.aten.mul.Tensor(sum_252, squeeze_235);  sum_252 = squeeze_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_75 = torch.ops.aten.convolution_backward.default(mul_1613, relu_74, primals_289, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1613 = primals_289 = None
    getitem_505: "f32[8, 1024, 16, 16]" = convolution_backward_75[0]
    getitem_506: "f32[256, 1024, 1, 1]" = convolution_backward_75[1];  convolution_backward_75 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_757: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_56, getitem_505);  where_56 = getitem_505 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_364: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_74);  relu_74 = None
    alias_365: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_364);  alias_364 = None
    le_60: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_365, 0);  alias_365 = None
    scalar_tensor_60: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_60: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_60, scalar_tensor_60, add_757);  le_60 = scalar_tensor_60 = add_757 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1318: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_231, 0);  squeeze_231 = None
    unsqueeze_1319: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1318, 2);  unsqueeze_1318 = None
    unsqueeze_1320: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1319, 3);  unsqueeze_1319 = None
    sum_253: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_60, [0, 2, 3])
    sub_431: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_95, unsqueeze_1320)
    mul_1615: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_60, sub_431);  sub_431 = None
    sum_254: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1615, [0, 2, 3]);  mul_1615 = None
    mul_1616: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_253, 0.00048828125)
    unsqueeze_1321: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1616, 0);  mul_1616 = None
    unsqueeze_1322: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1321, 2);  unsqueeze_1321 = None
    unsqueeze_1323: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1322, 3);  unsqueeze_1322 = None
    mul_1617: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_254, 0.00048828125)
    mul_1618: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_232, squeeze_232)
    mul_1619: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1617, mul_1618);  mul_1617 = mul_1618 = None
    unsqueeze_1324: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1619, 0);  mul_1619 = None
    unsqueeze_1325: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1324, 2);  unsqueeze_1324 = None
    unsqueeze_1326: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1325, 3);  unsqueeze_1325 = None
    mul_1620: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_232, primals_287);  primals_287 = None
    unsqueeze_1327: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1620, 0);  mul_1620 = None
    unsqueeze_1328: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1327, 2);  unsqueeze_1327 = None
    unsqueeze_1329: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1328, 3);  unsqueeze_1328 = None
    sub_432: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_95, unsqueeze_1320);  convolution_95 = unsqueeze_1320 = None
    mul_1621: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_432, unsqueeze_1326);  sub_432 = unsqueeze_1326 = None
    sub_433: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_60, mul_1621);  mul_1621 = None
    sub_434: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_433, unsqueeze_1323);  sub_433 = unsqueeze_1323 = None
    mul_1622: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_434, unsqueeze_1329);  sub_434 = unsqueeze_1329 = None
    mul_1623: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_254, squeeze_232);  sum_254 = squeeze_232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_76 = torch.ops.aten.convolution_backward.default(mul_1622, sum_54, primals_286, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1622 = sum_54 = primals_286 = None
    getitem_508: "f32[8, 256, 16, 16]" = convolution_backward_76[0]
    getitem_509: "f32[1024, 256, 1, 1]" = convolution_backward_76[1];  convolution_backward_76 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1330: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_508, 1);  getitem_508 = None
    expand_46: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1330, [8, 2, 256, 16, 16]);  unsqueeze_1330 = None
    mul_1624: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_46, view_103);  view_103 = None
    mul_1625: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_46, view_107);  expand_46 = view_107 = None
    sum_255: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1624, [3, 4], True);  mul_1624 = None
    view_276: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_255, [8, 512, 1, 1]);  sum_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_277: "f32[8, 512]" = torch.ops.aten.view.default(view_276, [8, 512]);  view_276 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_278: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_277, [8, 2, 1, 256]);  view_277 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_366: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_91);  alias_91 = None
    mul_1626: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_278, alias_366);  view_278 = None
    sum_256: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1626, [1], True)
    mul_1627: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_366, sum_256);  alias_366 = sum_256 = None
    sub_435: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1626, mul_1627);  mul_1626 = mul_1627 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_53: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_435, [0, 2, 1, 3]);  sub_435 = None
    view_279: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_53, [8, 512, 1, 1]);  permute_53 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_77 = torch.ops.aten.convolution_backward.default(view_279, relu_73, primals_284, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_279 = primals_284 = None
    getitem_511: "f32[8, 128, 1, 1]" = convolution_backward_77[0]
    getitem_512: "f32[512, 128, 1, 1]" = convolution_backward_77[1]
    getitem_513: "f32[512]" = convolution_backward_77[2];  convolution_backward_77 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_368: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_73);  relu_73 = None
    alias_369: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_368);  alias_368 = None
    le_61: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_369, 0);  alias_369 = None
    scalar_tensor_61: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_61: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_61, scalar_tensor_61, getitem_511);  le_61 = scalar_tensor_61 = getitem_511 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1331: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_228, 0);  squeeze_228 = None
    unsqueeze_1332: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1331, 2);  unsqueeze_1331 = None
    unsqueeze_1333: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1332, 3);  unsqueeze_1332 = None
    sum_257: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_61, [0, 2, 3])
    sub_436: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_93, unsqueeze_1333)
    mul_1628: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_61, sub_436);  sub_436 = None
    sum_258: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1628, [0, 2, 3]);  mul_1628 = None
    mul_1629: "f32[128]" = torch.ops.aten.mul.Tensor(sum_257, 0.125)
    unsqueeze_1334: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1629, 0);  mul_1629 = None
    unsqueeze_1335: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1334, 2);  unsqueeze_1334 = None
    unsqueeze_1336: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1335, 3);  unsqueeze_1335 = None
    mul_1630: "f32[128]" = torch.ops.aten.mul.Tensor(sum_258, 0.125)
    mul_1631: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_229, squeeze_229)
    mul_1632: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1630, mul_1631);  mul_1630 = mul_1631 = None
    unsqueeze_1337: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1632, 0);  mul_1632 = None
    unsqueeze_1338: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1337, 2);  unsqueeze_1337 = None
    unsqueeze_1339: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1338, 3);  unsqueeze_1338 = None
    mul_1633: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_229, primals_282);  primals_282 = None
    unsqueeze_1340: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1633, 0);  mul_1633 = None
    unsqueeze_1341: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1340, 2);  unsqueeze_1340 = None
    unsqueeze_1342: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1341, 3);  unsqueeze_1341 = None
    sub_437: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_93, unsqueeze_1333);  convolution_93 = unsqueeze_1333 = None
    mul_1634: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_437, unsqueeze_1339);  sub_437 = unsqueeze_1339 = None
    sub_438: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_61, mul_1634);  where_61 = mul_1634 = None
    sub_439: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_438, unsqueeze_1336);  sub_438 = unsqueeze_1336 = None
    mul_1635: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_439, unsqueeze_1342);  sub_439 = unsqueeze_1342 = None
    mul_1636: "f32[128]" = torch.ops.aten.mul.Tensor(sum_258, squeeze_229);  sum_258 = squeeze_229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_78 = torch.ops.aten.convolution_backward.default(mul_1635, mean_17, primals_280, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1635 = mean_17 = primals_280 = None
    getitem_514: "f32[8, 256, 1, 1]" = convolution_backward_78[0]
    getitem_515: "f32[128, 256, 1, 1]" = convolution_backward_78[1]
    getitem_516: "f32[128]" = convolution_backward_78[2];  convolution_backward_78 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_47: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_514, [8, 256, 16, 16]);  getitem_514 = None
    div_49: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_47, 256);  expand_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1343: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_49, 1);  div_49 = None
    expand_48: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1343, [8, 2, 256, 16, 16]);  unsqueeze_1343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_758: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1625, expand_48);  mul_1625 = expand_48 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_280: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_758, [8, 512, 16, 16]);  add_758 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_371: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_72);  relu_72 = None
    alias_372: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_371);  alias_371 = None
    le_62: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_372, 0);  alias_372 = None
    scalar_tensor_62: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_62: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_62, scalar_tensor_62, view_280);  le_62 = scalar_tensor_62 = view_280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1344: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_225, 0);  squeeze_225 = None
    unsqueeze_1345: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1344, 2);  unsqueeze_1344 = None
    unsqueeze_1346: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1345, 3);  unsqueeze_1345 = None
    sum_259: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_62, [0, 2, 3])
    sub_440: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_92, unsqueeze_1346)
    mul_1637: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_62, sub_440);  sub_440 = None
    sum_260: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1637, [0, 2, 3]);  mul_1637 = None
    mul_1638: "f32[512]" = torch.ops.aten.mul.Tensor(sum_259, 0.00048828125)
    unsqueeze_1347: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1638, 0);  mul_1638 = None
    unsqueeze_1348: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1347, 2);  unsqueeze_1347 = None
    unsqueeze_1349: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1348, 3);  unsqueeze_1348 = None
    mul_1639: "f32[512]" = torch.ops.aten.mul.Tensor(sum_260, 0.00048828125)
    mul_1640: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_226, squeeze_226)
    mul_1641: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1639, mul_1640);  mul_1639 = mul_1640 = None
    unsqueeze_1350: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1641, 0);  mul_1641 = None
    unsqueeze_1351: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1350, 2);  unsqueeze_1350 = None
    unsqueeze_1352: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1351, 3);  unsqueeze_1351 = None
    mul_1642: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_226, primals_278);  primals_278 = None
    unsqueeze_1353: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1642, 0);  mul_1642 = None
    unsqueeze_1354: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1353, 2);  unsqueeze_1353 = None
    unsqueeze_1355: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1354, 3);  unsqueeze_1354 = None
    sub_441: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_92, unsqueeze_1346);  convolution_92 = unsqueeze_1346 = None
    mul_1643: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_441, unsqueeze_1352);  sub_441 = unsqueeze_1352 = None
    sub_442: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_62, mul_1643);  where_62 = mul_1643 = None
    sub_443: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_442, unsqueeze_1349);  sub_442 = unsqueeze_1349 = None
    mul_1644: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_443, unsqueeze_1355);  sub_443 = unsqueeze_1355 = None
    mul_1645: "f32[512]" = torch.ops.aten.mul.Tensor(sum_260, squeeze_226);  sum_260 = squeeze_226 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_79 = torch.ops.aten.convolution_backward.default(mul_1644, relu_71, primals_277, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1644 = primals_277 = None
    getitem_517: "f32[8, 256, 16, 16]" = convolution_backward_79[0]
    getitem_518: "f32[512, 128, 3, 3]" = convolution_backward_79[1];  convolution_backward_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_374: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_71);  relu_71 = None
    alias_375: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_374);  alias_374 = None
    le_63: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_375, 0);  alias_375 = None
    scalar_tensor_63: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_63: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_63, scalar_tensor_63, getitem_517);  le_63 = scalar_tensor_63 = getitem_517 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1356: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_222, 0);  squeeze_222 = None
    unsqueeze_1357: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1356, 2);  unsqueeze_1356 = None
    unsqueeze_1358: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1357, 3);  unsqueeze_1357 = None
    sum_261: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_63, [0, 2, 3])
    sub_444: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_91, unsqueeze_1358)
    mul_1646: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_63, sub_444);  sub_444 = None
    sum_262: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1646, [0, 2, 3]);  mul_1646 = None
    mul_1647: "f32[256]" = torch.ops.aten.mul.Tensor(sum_261, 0.00048828125)
    unsqueeze_1359: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1647, 0);  mul_1647 = None
    unsqueeze_1360: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1359, 2);  unsqueeze_1359 = None
    unsqueeze_1361: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1360, 3);  unsqueeze_1360 = None
    mul_1648: "f32[256]" = torch.ops.aten.mul.Tensor(sum_262, 0.00048828125)
    mul_1649: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_223, squeeze_223)
    mul_1650: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1648, mul_1649);  mul_1648 = mul_1649 = None
    unsqueeze_1362: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1650, 0);  mul_1650 = None
    unsqueeze_1363: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1362, 2);  unsqueeze_1362 = None
    unsqueeze_1364: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1363, 3);  unsqueeze_1363 = None
    mul_1651: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_223, primals_275);  primals_275 = None
    unsqueeze_1365: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1651, 0);  mul_1651 = None
    unsqueeze_1366: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1365, 2);  unsqueeze_1365 = None
    unsqueeze_1367: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1366, 3);  unsqueeze_1366 = None
    sub_445: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_91, unsqueeze_1358);  convolution_91 = unsqueeze_1358 = None
    mul_1652: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_445, unsqueeze_1364);  sub_445 = unsqueeze_1364 = None
    sub_446: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_63, mul_1652);  where_63 = mul_1652 = None
    sub_447: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_446, unsqueeze_1361);  sub_446 = unsqueeze_1361 = None
    mul_1653: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_447, unsqueeze_1367);  sub_447 = unsqueeze_1367 = None
    mul_1654: "f32[256]" = torch.ops.aten.mul.Tensor(sum_262, squeeze_223);  sum_262 = squeeze_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_80 = torch.ops.aten.convolution_backward.default(mul_1653, relu_70, primals_274, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1653 = primals_274 = None
    getitem_520: "f32[8, 1024, 16, 16]" = convolution_backward_80[0]
    getitem_521: "f32[256, 1024, 1, 1]" = convolution_backward_80[1];  convolution_backward_80 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_759: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_60, getitem_520);  where_60 = getitem_520 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_377: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_70);  relu_70 = None
    alias_378: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_377);  alias_377 = None
    le_64: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_378, 0);  alias_378 = None
    scalar_tensor_64: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_64: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_64, scalar_tensor_64, add_759);  le_64 = scalar_tensor_64 = add_759 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1368: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_219, 0);  squeeze_219 = None
    unsqueeze_1369: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1368, 2);  unsqueeze_1368 = None
    unsqueeze_1370: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1369, 3);  unsqueeze_1369 = None
    sum_263: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_64, [0, 2, 3])
    sub_448: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_90, unsqueeze_1370)
    mul_1655: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_64, sub_448);  sub_448 = None
    sum_264: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1655, [0, 2, 3]);  mul_1655 = None
    mul_1656: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_263, 0.00048828125)
    unsqueeze_1371: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1656, 0);  mul_1656 = None
    unsqueeze_1372: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1371, 2);  unsqueeze_1371 = None
    unsqueeze_1373: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1372, 3);  unsqueeze_1372 = None
    mul_1657: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_264, 0.00048828125)
    mul_1658: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_220, squeeze_220)
    mul_1659: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1657, mul_1658);  mul_1657 = mul_1658 = None
    unsqueeze_1374: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1659, 0);  mul_1659 = None
    unsqueeze_1375: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1374, 2);  unsqueeze_1374 = None
    unsqueeze_1376: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1375, 3);  unsqueeze_1375 = None
    mul_1660: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_220, primals_272);  primals_272 = None
    unsqueeze_1377: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1660, 0);  mul_1660 = None
    unsqueeze_1378: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1377, 2);  unsqueeze_1377 = None
    unsqueeze_1379: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1378, 3);  unsqueeze_1378 = None
    sub_449: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_90, unsqueeze_1370);  convolution_90 = unsqueeze_1370 = None
    mul_1661: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_449, unsqueeze_1376);  sub_449 = unsqueeze_1376 = None
    sub_450: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_64, mul_1661);  mul_1661 = None
    sub_451: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_450, unsqueeze_1373);  sub_450 = unsqueeze_1373 = None
    mul_1662: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_451, unsqueeze_1379);  sub_451 = unsqueeze_1379 = None
    mul_1663: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_264, squeeze_220);  sum_264 = squeeze_220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_81 = torch.ops.aten.convolution_backward.default(mul_1662, sum_51, primals_271, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1662 = sum_51 = primals_271 = None
    getitem_523: "f32[8, 256, 16, 16]" = convolution_backward_81[0]
    getitem_524: "f32[1024, 256, 1, 1]" = convolution_backward_81[1];  convolution_backward_81 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1380: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_523, 1);  getitem_523 = None
    expand_49: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1380, [8, 2, 256, 16, 16]);  unsqueeze_1380 = None
    mul_1664: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_49, view_97);  view_97 = None
    mul_1665: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_49, view_101);  expand_49 = view_101 = None
    sum_265: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1664, [3, 4], True);  mul_1664 = None
    view_281: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_265, [8, 512, 1, 1]);  sum_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_282: "f32[8, 512]" = torch.ops.aten.view.default(view_281, [8, 512]);  view_281 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_283: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_282, [8, 2, 1, 256]);  view_282 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_379: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_86);  alias_86 = None
    mul_1666: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_283, alias_379);  view_283 = None
    sum_266: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1666, [1], True)
    mul_1667: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_379, sum_266);  alias_379 = sum_266 = None
    sub_452: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1666, mul_1667);  mul_1666 = mul_1667 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_54: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_452, [0, 2, 1, 3]);  sub_452 = None
    view_284: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_54, [8, 512, 1, 1]);  permute_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_82 = torch.ops.aten.convolution_backward.default(view_284, relu_69, primals_269, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_284 = primals_269 = None
    getitem_526: "f32[8, 128, 1, 1]" = convolution_backward_82[0]
    getitem_527: "f32[512, 128, 1, 1]" = convolution_backward_82[1]
    getitem_528: "f32[512]" = convolution_backward_82[2];  convolution_backward_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_381: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_69);  relu_69 = None
    alias_382: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_381);  alias_381 = None
    le_65: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_382, 0);  alias_382 = None
    scalar_tensor_65: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_65: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_65, scalar_tensor_65, getitem_526);  le_65 = scalar_tensor_65 = getitem_526 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1381: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_216, 0);  squeeze_216 = None
    unsqueeze_1382: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1381, 2);  unsqueeze_1381 = None
    unsqueeze_1383: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1382, 3);  unsqueeze_1382 = None
    sum_267: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_65, [0, 2, 3])
    sub_453: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_88, unsqueeze_1383)
    mul_1668: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_65, sub_453);  sub_453 = None
    sum_268: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1668, [0, 2, 3]);  mul_1668 = None
    mul_1669: "f32[128]" = torch.ops.aten.mul.Tensor(sum_267, 0.125)
    unsqueeze_1384: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1669, 0);  mul_1669 = None
    unsqueeze_1385: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1384, 2);  unsqueeze_1384 = None
    unsqueeze_1386: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1385, 3);  unsqueeze_1385 = None
    mul_1670: "f32[128]" = torch.ops.aten.mul.Tensor(sum_268, 0.125)
    mul_1671: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_217, squeeze_217)
    mul_1672: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1670, mul_1671);  mul_1670 = mul_1671 = None
    unsqueeze_1387: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1672, 0);  mul_1672 = None
    unsqueeze_1388: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1387, 2);  unsqueeze_1387 = None
    unsqueeze_1389: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1388, 3);  unsqueeze_1388 = None
    mul_1673: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_217, primals_267);  primals_267 = None
    unsqueeze_1390: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1673, 0);  mul_1673 = None
    unsqueeze_1391: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1390, 2);  unsqueeze_1390 = None
    unsqueeze_1392: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1391, 3);  unsqueeze_1391 = None
    sub_454: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_88, unsqueeze_1383);  convolution_88 = unsqueeze_1383 = None
    mul_1674: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_454, unsqueeze_1389);  sub_454 = unsqueeze_1389 = None
    sub_455: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_65, mul_1674);  where_65 = mul_1674 = None
    sub_456: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_455, unsqueeze_1386);  sub_455 = unsqueeze_1386 = None
    mul_1675: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_456, unsqueeze_1392);  sub_456 = unsqueeze_1392 = None
    mul_1676: "f32[128]" = torch.ops.aten.mul.Tensor(sum_268, squeeze_217);  sum_268 = squeeze_217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_83 = torch.ops.aten.convolution_backward.default(mul_1675, mean_16, primals_265, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1675 = mean_16 = primals_265 = None
    getitem_529: "f32[8, 256, 1, 1]" = convolution_backward_83[0]
    getitem_530: "f32[128, 256, 1, 1]" = convolution_backward_83[1]
    getitem_531: "f32[128]" = convolution_backward_83[2];  convolution_backward_83 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_50: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_529, [8, 256, 16, 16]);  getitem_529 = None
    div_50: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_50, 256);  expand_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1393: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_50, 1);  div_50 = None
    expand_51: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1393, [8, 2, 256, 16, 16]);  unsqueeze_1393 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_760: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1665, expand_51);  mul_1665 = expand_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_285: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_760, [8, 512, 16, 16]);  add_760 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_384: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_68);  relu_68 = None
    alias_385: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_384);  alias_384 = None
    le_66: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_385, 0);  alias_385 = None
    scalar_tensor_66: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_66: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_66, scalar_tensor_66, view_285);  le_66 = scalar_tensor_66 = view_285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1394: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_213, 0);  squeeze_213 = None
    unsqueeze_1395: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1394, 2);  unsqueeze_1394 = None
    unsqueeze_1396: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1395, 3);  unsqueeze_1395 = None
    sum_269: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_66, [0, 2, 3])
    sub_457: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_87, unsqueeze_1396)
    mul_1677: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_66, sub_457);  sub_457 = None
    sum_270: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1677, [0, 2, 3]);  mul_1677 = None
    mul_1678: "f32[512]" = torch.ops.aten.mul.Tensor(sum_269, 0.00048828125)
    unsqueeze_1397: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1678, 0);  mul_1678 = None
    unsqueeze_1398: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1397, 2);  unsqueeze_1397 = None
    unsqueeze_1399: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1398, 3);  unsqueeze_1398 = None
    mul_1679: "f32[512]" = torch.ops.aten.mul.Tensor(sum_270, 0.00048828125)
    mul_1680: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_214, squeeze_214)
    mul_1681: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1679, mul_1680);  mul_1679 = mul_1680 = None
    unsqueeze_1400: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1681, 0);  mul_1681 = None
    unsqueeze_1401: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1400, 2);  unsqueeze_1400 = None
    unsqueeze_1402: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1401, 3);  unsqueeze_1401 = None
    mul_1682: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_214, primals_263);  primals_263 = None
    unsqueeze_1403: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1682, 0);  mul_1682 = None
    unsqueeze_1404: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1403, 2);  unsqueeze_1403 = None
    unsqueeze_1405: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1404, 3);  unsqueeze_1404 = None
    sub_458: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_87, unsqueeze_1396);  convolution_87 = unsqueeze_1396 = None
    mul_1683: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_458, unsqueeze_1402);  sub_458 = unsqueeze_1402 = None
    sub_459: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_66, mul_1683);  where_66 = mul_1683 = None
    sub_460: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_459, unsqueeze_1399);  sub_459 = unsqueeze_1399 = None
    mul_1684: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_460, unsqueeze_1405);  sub_460 = unsqueeze_1405 = None
    mul_1685: "f32[512]" = torch.ops.aten.mul.Tensor(sum_270, squeeze_214);  sum_270 = squeeze_214 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_84 = torch.ops.aten.convolution_backward.default(mul_1684, relu_67, primals_262, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1684 = primals_262 = None
    getitem_532: "f32[8, 256, 16, 16]" = convolution_backward_84[0]
    getitem_533: "f32[512, 128, 3, 3]" = convolution_backward_84[1];  convolution_backward_84 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_387: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_67);  relu_67 = None
    alias_388: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_387);  alias_387 = None
    le_67: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_388, 0);  alias_388 = None
    scalar_tensor_67: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_67: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_67, scalar_tensor_67, getitem_532);  le_67 = scalar_tensor_67 = getitem_532 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1406: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_210, 0);  squeeze_210 = None
    unsqueeze_1407: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1406, 2);  unsqueeze_1406 = None
    unsqueeze_1408: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1407, 3);  unsqueeze_1407 = None
    sum_271: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_67, [0, 2, 3])
    sub_461: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_86, unsqueeze_1408)
    mul_1686: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_67, sub_461);  sub_461 = None
    sum_272: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1686, [0, 2, 3]);  mul_1686 = None
    mul_1687: "f32[256]" = torch.ops.aten.mul.Tensor(sum_271, 0.00048828125)
    unsqueeze_1409: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1687, 0);  mul_1687 = None
    unsqueeze_1410: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1409, 2);  unsqueeze_1409 = None
    unsqueeze_1411: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1410, 3);  unsqueeze_1410 = None
    mul_1688: "f32[256]" = torch.ops.aten.mul.Tensor(sum_272, 0.00048828125)
    mul_1689: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_211, squeeze_211)
    mul_1690: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1688, mul_1689);  mul_1688 = mul_1689 = None
    unsqueeze_1412: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1690, 0);  mul_1690 = None
    unsqueeze_1413: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1412, 2);  unsqueeze_1412 = None
    unsqueeze_1414: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1413, 3);  unsqueeze_1413 = None
    mul_1691: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_211, primals_260);  primals_260 = None
    unsqueeze_1415: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1691, 0);  mul_1691 = None
    unsqueeze_1416: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1415, 2);  unsqueeze_1415 = None
    unsqueeze_1417: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1416, 3);  unsqueeze_1416 = None
    sub_462: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_86, unsqueeze_1408);  convolution_86 = unsqueeze_1408 = None
    mul_1692: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_462, unsqueeze_1414);  sub_462 = unsqueeze_1414 = None
    sub_463: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_67, mul_1692);  where_67 = mul_1692 = None
    sub_464: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_463, unsqueeze_1411);  sub_463 = unsqueeze_1411 = None
    mul_1693: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_464, unsqueeze_1417);  sub_464 = unsqueeze_1417 = None
    mul_1694: "f32[256]" = torch.ops.aten.mul.Tensor(sum_272, squeeze_211);  sum_272 = squeeze_211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_85 = torch.ops.aten.convolution_backward.default(mul_1693, relu_66, primals_259, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1693 = primals_259 = None
    getitem_535: "f32[8, 1024, 16, 16]" = convolution_backward_85[0]
    getitem_536: "f32[256, 1024, 1, 1]" = convolution_backward_85[1];  convolution_backward_85 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_761: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_64, getitem_535);  where_64 = getitem_535 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_390: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_66);  relu_66 = None
    alias_391: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_390);  alias_390 = None
    le_68: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_391, 0);  alias_391 = None
    scalar_tensor_68: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_68: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_68, scalar_tensor_68, add_761);  le_68 = scalar_tensor_68 = add_761 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1418: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_207, 0);  squeeze_207 = None
    unsqueeze_1419: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1418, 2);  unsqueeze_1418 = None
    unsqueeze_1420: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1419, 3);  unsqueeze_1419 = None
    sum_273: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_68, [0, 2, 3])
    sub_465: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_85, unsqueeze_1420)
    mul_1695: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_68, sub_465);  sub_465 = None
    sum_274: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1695, [0, 2, 3]);  mul_1695 = None
    mul_1696: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_273, 0.00048828125)
    unsqueeze_1421: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1696, 0);  mul_1696 = None
    unsqueeze_1422: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1421, 2);  unsqueeze_1421 = None
    unsqueeze_1423: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1422, 3);  unsqueeze_1422 = None
    mul_1697: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_274, 0.00048828125)
    mul_1698: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_208, squeeze_208)
    mul_1699: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1697, mul_1698);  mul_1697 = mul_1698 = None
    unsqueeze_1424: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1699, 0);  mul_1699 = None
    unsqueeze_1425: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1424, 2);  unsqueeze_1424 = None
    unsqueeze_1426: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1425, 3);  unsqueeze_1425 = None
    mul_1700: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_208, primals_257);  primals_257 = None
    unsqueeze_1427: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1700, 0);  mul_1700 = None
    unsqueeze_1428: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1427, 2);  unsqueeze_1427 = None
    unsqueeze_1429: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1428, 3);  unsqueeze_1428 = None
    sub_466: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_85, unsqueeze_1420);  convolution_85 = unsqueeze_1420 = None
    mul_1701: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_466, unsqueeze_1426);  sub_466 = unsqueeze_1426 = None
    sub_467: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_68, mul_1701);  mul_1701 = None
    sub_468: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_467, unsqueeze_1423);  sub_467 = unsqueeze_1423 = None
    mul_1702: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_468, unsqueeze_1429);  sub_468 = unsqueeze_1429 = None
    mul_1703: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_274, squeeze_208);  sum_274 = squeeze_208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_86 = torch.ops.aten.convolution_backward.default(mul_1702, sum_48, primals_256, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1702 = sum_48 = primals_256 = None
    getitem_538: "f32[8, 256, 16, 16]" = convolution_backward_86[0]
    getitem_539: "f32[1024, 256, 1, 1]" = convolution_backward_86[1];  convolution_backward_86 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1430: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_538, 1);  getitem_538 = None
    expand_52: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1430, [8, 2, 256, 16, 16]);  unsqueeze_1430 = None
    mul_1704: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_52, view_91);  view_91 = None
    mul_1705: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_52, view_95);  expand_52 = view_95 = None
    sum_275: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1704, [3, 4], True);  mul_1704 = None
    view_286: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_275, [8, 512, 1, 1]);  sum_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_287: "f32[8, 512]" = torch.ops.aten.view.default(view_286, [8, 512]);  view_286 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_288: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_287, [8, 2, 1, 256]);  view_287 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_392: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_81);  alias_81 = None
    mul_1706: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_288, alias_392);  view_288 = None
    sum_276: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1706, [1], True)
    mul_1707: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_392, sum_276);  alias_392 = sum_276 = None
    sub_469: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1706, mul_1707);  mul_1706 = mul_1707 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_55: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_469, [0, 2, 1, 3]);  sub_469 = None
    view_289: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_55, [8, 512, 1, 1]);  permute_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_87 = torch.ops.aten.convolution_backward.default(view_289, relu_65, primals_254, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_289 = primals_254 = None
    getitem_541: "f32[8, 128, 1, 1]" = convolution_backward_87[0]
    getitem_542: "f32[512, 128, 1, 1]" = convolution_backward_87[1]
    getitem_543: "f32[512]" = convolution_backward_87[2];  convolution_backward_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_394: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_65);  relu_65 = None
    alias_395: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_394);  alias_394 = None
    le_69: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_395, 0);  alias_395 = None
    scalar_tensor_69: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_69: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_69, scalar_tensor_69, getitem_541);  le_69 = scalar_tensor_69 = getitem_541 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1431: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_204, 0);  squeeze_204 = None
    unsqueeze_1432: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1431, 2);  unsqueeze_1431 = None
    unsqueeze_1433: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1432, 3);  unsqueeze_1432 = None
    sum_277: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_69, [0, 2, 3])
    sub_470: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_83, unsqueeze_1433)
    mul_1708: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_69, sub_470);  sub_470 = None
    sum_278: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1708, [0, 2, 3]);  mul_1708 = None
    mul_1709: "f32[128]" = torch.ops.aten.mul.Tensor(sum_277, 0.125)
    unsqueeze_1434: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1709, 0);  mul_1709 = None
    unsqueeze_1435: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1434, 2);  unsqueeze_1434 = None
    unsqueeze_1436: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1435, 3);  unsqueeze_1435 = None
    mul_1710: "f32[128]" = torch.ops.aten.mul.Tensor(sum_278, 0.125)
    mul_1711: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_205, squeeze_205)
    mul_1712: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1710, mul_1711);  mul_1710 = mul_1711 = None
    unsqueeze_1437: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1712, 0);  mul_1712 = None
    unsqueeze_1438: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1437, 2);  unsqueeze_1437 = None
    unsqueeze_1439: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1438, 3);  unsqueeze_1438 = None
    mul_1713: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_205, primals_252);  primals_252 = None
    unsqueeze_1440: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1713, 0);  mul_1713 = None
    unsqueeze_1441: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1440, 2);  unsqueeze_1440 = None
    unsqueeze_1442: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1441, 3);  unsqueeze_1441 = None
    sub_471: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_83, unsqueeze_1433);  convolution_83 = unsqueeze_1433 = None
    mul_1714: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_471, unsqueeze_1439);  sub_471 = unsqueeze_1439 = None
    sub_472: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_69, mul_1714);  where_69 = mul_1714 = None
    sub_473: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_472, unsqueeze_1436);  sub_472 = unsqueeze_1436 = None
    mul_1715: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_473, unsqueeze_1442);  sub_473 = unsqueeze_1442 = None
    mul_1716: "f32[128]" = torch.ops.aten.mul.Tensor(sum_278, squeeze_205);  sum_278 = squeeze_205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_88 = torch.ops.aten.convolution_backward.default(mul_1715, mean_15, primals_250, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1715 = mean_15 = primals_250 = None
    getitem_544: "f32[8, 256, 1, 1]" = convolution_backward_88[0]
    getitem_545: "f32[128, 256, 1, 1]" = convolution_backward_88[1]
    getitem_546: "f32[128]" = convolution_backward_88[2];  convolution_backward_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_53: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_544, [8, 256, 16, 16]);  getitem_544 = None
    div_51: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_53, 256);  expand_53 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1443: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_51, 1);  div_51 = None
    expand_54: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1443, [8, 2, 256, 16, 16]);  unsqueeze_1443 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_762: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1705, expand_54);  mul_1705 = expand_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_290: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_762, [8, 512, 16, 16]);  add_762 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_397: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_64);  relu_64 = None
    alias_398: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_397);  alias_397 = None
    le_70: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_398, 0);  alias_398 = None
    scalar_tensor_70: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_70: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_70, scalar_tensor_70, view_290);  le_70 = scalar_tensor_70 = view_290 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1444: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_201, 0);  squeeze_201 = None
    unsqueeze_1445: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1444, 2);  unsqueeze_1444 = None
    unsqueeze_1446: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1445, 3);  unsqueeze_1445 = None
    sum_279: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_70, [0, 2, 3])
    sub_474: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_82, unsqueeze_1446)
    mul_1717: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_70, sub_474);  sub_474 = None
    sum_280: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1717, [0, 2, 3]);  mul_1717 = None
    mul_1718: "f32[512]" = torch.ops.aten.mul.Tensor(sum_279, 0.00048828125)
    unsqueeze_1447: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1718, 0);  mul_1718 = None
    unsqueeze_1448: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1447, 2);  unsqueeze_1447 = None
    unsqueeze_1449: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1448, 3);  unsqueeze_1448 = None
    mul_1719: "f32[512]" = torch.ops.aten.mul.Tensor(sum_280, 0.00048828125)
    mul_1720: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_202, squeeze_202)
    mul_1721: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1719, mul_1720);  mul_1719 = mul_1720 = None
    unsqueeze_1450: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1721, 0);  mul_1721 = None
    unsqueeze_1451: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1450, 2);  unsqueeze_1450 = None
    unsqueeze_1452: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1451, 3);  unsqueeze_1451 = None
    mul_1722: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_202, primals_248);  primals_248 = None
    unsqueeze_1453: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1722, 0);  mul_1722 = None
    unsqueeze_1454: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1453, 2);  unsqueeze_1453 = None
    unsqueeze_1455: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1454, 3);  unsqueeze_1454 = None
    sub_475: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_82, unsqueeze_1446);  convolution_82 = unsqueeze_1446 = None
    mul_1723: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_475, unsqueeze_1452);  sub_475 = unsqueeze_1452 = None
    sub_476: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_70, mul_1723);  where_70 = mul_1723 = None
    sub_477: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_476, unsqueeze_1449);  sub_476 = unsqueeze_1449 = None
    mul_1724: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_477, unsqueeze_1455);  sub_477 = unsqueeze_1455 = None
    mul_1725: "f32[512]" = torch.ops.aten.mul.Tensor(sum_280, squeeze_202);  sum_280 = squeeze_202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_89 = torch.ops.aten.convolution_backward.default(mul_1724, relu_63, primals_247, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1724 = primals_247 = None
    getitem_547: "f32[8, 256, 16, 16]" = convolution_backward_89[0]
    getitem_548: "f32[512, 128, 3, 3]" = convolution_backward_89[1];  convolution_backward_89 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_400: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_63);  relu_63 = None
    alias_401: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_400);  alias_400 = None
    le_71: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_401, 0);  alias_401 = None
    scalar_tensor_71: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_71: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_71, scalar_tensor_71, getitem_547);  le_71 = scalar_tensor_71 = getitem_547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1456: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_198, 0);  squeeze_198 = None
    unsqueeze_1457: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1456, 2);  unsqueeze_1456 = None
    unsqueeze_1458: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1457, 3);  unsqueeze_1457 = None
    sum_281: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_71, [0, 2, 3])
    sub_478: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_81, unsqueeze_1458)
    mul_1726: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_71, sub_478);  sub_478 = None
    sum_282: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1726, [0, 2, 3]);  mul_1726 = None
    mul_1727: "f32[256]" = torch.ops.aten.mul.Tensor(sum_281, 0.00048828125)
    unsqueeze_1459: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1727, 0);  mul_1727 = None
    unsqueeze_1460: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1459, 2);  unsqueeze_1459 = None
    unsqueeze_1461: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1460, 3);  unsqueeze_1460 = None
    mul_1728: "f32[256]" = torch.ops.aten.mul.Tensor(sum_282, 0.00048828125)
    mul_1729: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_199, squeeze_199)
    mul_1730: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1728, mul_1729);  mul_1728 = mul_1729 = None
    unsqueeze_1462: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1730, 0);  mul_1730 = None
    unsqueeze_1463: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1462, 2);  unsqueeze_1462 = None
    unsqueeze_1464: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1463, 3);  unsqueeze_1463 = None
    mul_1731: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_199, primals_245);  primals_245 = None
    unsqueeze_1465: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1731, 0);  mul_1731 = None
    unsqueeze_1466: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1465, 2);  unsqueeze_1465 = None
    unsqueeze_1467: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1466, 3);  unsqueeze_1466 = None
    sub_479: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_81, unsqueeze_1458);  convolution_81 = unsqueeze_1458 = None
    mul_1732: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_479, unsqueeze_1464);  sub_479 = unsqueeze_1464 = None
    sub_480: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_71, mul_1732);  where_71 = mul_1732 = None
    sub_481: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_480, unsqueeze_1461);  sub_480 = unsqueeze_1461 = None
    mul_1733: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_481, unsqueeze_1467);  sub_481 = unsqueeze_1467 = None
    mul_1734: "f32[256]" = torch.ops.aten.mul.Tensor(sum_282, squeeze_199);  sum_282 = squeeze_199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_90 = torch.ops.aten.convolution_backward.default(mul_1733, relu_62, primals_244, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1733 = primals_244 = None
    getitem_550: "f32[8, 1024, 16, 16]" = convolution_backward_90[0]
    getitem_551: "f32[256, 1024, 1, 1]" = convolution_backward_90[1];  convolution_backward_90 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_763: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_68, getitem_550);  where_68 = getitem_550 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_403: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_62);  relu_62 = None
    alias_404: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_403);  alias_403 = None
    le_72: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_404, 0);  alias_404 = None
    scalar_tensor_72: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_72: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_72, scalar_tensor_72, add_763);  le_72 = scalar_tensor_72 = add_763 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1468: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_195, 0);  squeeze_195 = None
    unsqueeze_1469: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1468, 2);  unsqueeze_1468 = None
    unsqueeze_1470: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1469, 3);  unsqueeze_1469 = None
    sum_283: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_72, [0, 2, 3])
    sub_482: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_80, unsqueeze_1470)
    mul_1735: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_72, sub_482);  sub_482 = None
    sum_284: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1735, [0, 2, 3]);  mul_1735 = None
    mul_1736: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_283, 0.00048828125)
    unsqueeze_1471: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1736, 0);  mul_1736 = None
    unsqueeze_1472: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1471, 2);  unsqueeze_1471 = None
    unsqueeze_1473: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1472, 3);  unsqueeze_1472 = None
    mul_1737: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_284, 0.00048828125)
    mul_1738: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_196, squeeze_196)
    mul_1739: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1737, mul_1738);  mul_1737 = mul_1738 = None
    unsqueeze_1474: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1739, 0);  mul_1739 = None
    unsqueeze_1475: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1474, 2);  unsqueeze_1474 = None
    unsqueeze_1476: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1475, 3);  unsqueeze_1475 = None
    mul_1740: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_196, primals_242);  primals_242 = None
    unsqueeze_1477: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1740, 0);  mul_1740 = None
    unsqueeze_1478: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1477, 2);  unsqueeze_1477 = None
    unsqueeze_1479: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1478, 3);  unsqueeze_1478 = None
    sub_483: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_80, unsqueeze_1470);  convolution_80 = unsqueeze_1470 = None
    mul_1741: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_483, unsqueeze_1476);  sub_483 = unsqueeze_1476 = None
    sub_484: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_72, mul_1741);  mul_1741 = None
    sub_485: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_484, unsqueeze_1473);  sub_484 = unsqueeze_1473 = None
    mul_1742: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_485, unsqueeze_1479);  sub_485 = unsqueeze_1479 = None
    mul_1743: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_284, squeeze_196);  sum_284 = squeeze_196 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_91 = torch.ops.aten.convolution_backward.default(mul_1742, sum_45, primals_241, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1742 = sum_45 = primals_241 = None
    getitem_553: "f32[8, 256, 16, 16]" = convolution_backward_91[0]
    getitem_554: "f32[1024, 256, 1, 1]" = convolution_backward_91[1];  convolution_backward_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1480: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_553, 1);  getitem_553 = None
    expand_55: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1480, [8, 2, 256, 16, 16]);  unsqueeze_1480 = None
    mul_1744: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_55, view_85);  view_85 = None
    mul_1745: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_55, view_89);  expand_55 = view_89 = None
    sum_285: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1744, [3, 4], True);  mul_1744 = None
    view_291: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_285, [8, 512, 1, 1]);  sum_285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_292: "f32[8, 512]" = torch.ops.aten.view.default(view_291, [8, 512]);  view_291 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_293: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_292, [8, 2, 1, 256]);  view_292 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_405: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_76);  alias_76 = None
    mul_1746: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_293, alias_405);  view_293 = None
    sum_286: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1746, [1], True)
    mul_1747: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_405, sum_286);  alias_405 = sum_286 = None
    sub_486: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1746, mul_1747);  mul_1746 = mul_1747 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_56: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_486, [0, 2, 1, 3]);  sub_486 = None
    view_294: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_56, [8, 512, 1, 1]);  permute_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_92 = torch.ops.aten.convolution_backward.default(view_294, relu_61, primals_239, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_294 = primals_239 = None
    getitem_556: "f32[8, 128, 1, 1]" = convolution_backward_92[0]
    getitem_557: "f32[512, 128, 1, 1]" = convolution_backward_92[1]
    getitem_558: "f32[512]" = convolution_backward_92[2];  convolution_backward_92 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_407: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_61);  relu_61 = None
    alias_408: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_407);  alias_407 = None
    le_73: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_408, 0);  alias_408 = None
    scalar_tensor_73: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_73: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_73, scalar_tensor_73, getitem_556);  le_73 = scalar_tensor_73 = getitem_556 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1481: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_192, 0);  squeeze_192 = None
    unsqueeze_1482: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1481, 2);  unsqueeze_1481 = None
    unsqueeze_1483: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1482, 3);  unsqueeze_1482 = None
    sum_287: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_73, [0, 2, 3])
    sub_487: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_78, unsqueeze_1483)
    mul_1748: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_73, sub_487);  sub_487 = None
    sum_288: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1748, [0, 2, 3]);  mul_1748 = None
    mul_1749: "f32[128]" = torch.ops.aten.mul.Tensor(sum_287, 0.125)
    unsqueeze_1484: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1749, 0);  mul_1749 = None
    unsqueeze_1485: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1484, 2);  unsqueeze_1484 = None
    unsqueeze_1486: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1485, 3);  unsqueeze_1485 = None
    mul_1750: "f32[128]" = torch.ops.aten.mul.Tensor(sum_288, 0.125)
    mul_1751: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_193, squeeze_193)
    mul_1752: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1750, mul_1751);  mul_1750 = mul_1751 = None
    unsqueeze_1487: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1752, 0);  mul_1752 = None
    unsqueeze_1488: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1487, 2);  unsqueeze_1487 = None
    unsqueeze_1489: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1488, 3);  unsqueeze_1488 = None
    mul_1753: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_193, primals_237);  primals_237 = None
    unsqueeze_1490: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1753, 0);  mul_1753 = None
    unsqueeze_1491: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1490, 2);  unsqueeze_1490 = None
    unsqueeze_1492: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1491, 3);  unsqueeze_1491 = None
    sub_488: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_78, unsqueeze_1483);  convolution_78 = unsqueeze_1483 = None
    mul_1754: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_488, unsqueeze_1489);  sub_488 = unsqueeze_1489 = None
    sub_489: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_73, mul_1754);  where_73 = mul_1754 = None
    sub_490: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_489, unsqueeze_1486);  sub_489 = unsqueeze_1486 = None
    mul_1755: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_490, unsqueeze_1492);  sub_490 = unsqueeze_1492 = None
    mul_1756: "f32[128]" = torch.ops.aten.mul.Tensor(sum_288, squeeze_193);  sum_288 = squeeze_193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_93 = torch.ops.aten.convolution_backward.default(mul_1755, mean_14, primals_235, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1755 = mean_14 = primals_235 = None
    getitem_559: "f32[8, 256, 1, 1]" = convolution_backward_93[0]
    getitem_560: "f32[128, 256, 1, 1]" = convolution_backward_93[1]
    getitem_561: "f32[128]" = convolution_backward_93[2];  convolution_backward_93 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_56: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_559, [8, 256, 16, 16]);  getitem_559 = None
    div_52: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_56, 256);  expand_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1493: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_52, 1);  div_52 = None
    expand_57: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1493, [8, 2, 256, 16, 16]);  unsqueeze_1493 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_764: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1745, expand_57);  mul_1745 = expand_57 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_295: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_764, [8, 512, 16, 16]);  add_764 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_410: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_60);  relu_60 = None
    alias_411: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_410);  alias_410 = None
    le_74: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_411, 0);  alias_411 = None
    scalar_tensor_74: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_74: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_74, scalar_tensor_74, view_295);  le_74 = scalar_tensor_74 = view_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1494: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_189, 0);  squeeze_189 = None
    unsqueeze_1495: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1494, 2);  unsqueeze_1494 = None
    unsqueeze_1496: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1495, 3);  unsqueeze_1495 = None
    sum_289: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_74, [0, 2, 3])
    sub_491: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_77, unsqueeze_1496)
    mul_1757: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_74, sub_491);  sub_491 = None
    sum_290: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1757, [0, 2, 3]);  mul_1757 = None
    mul_1758: "f32[512]" = torch.ops.aten.mul.Tensor(sum_289, 0.00048828125)
    unsqueeze_1497: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1758, 0);  mul_1758 = None
    unsqueeze_1498: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1497, 2);  unsqueeze_1497 = None
    unsqueeze_1499: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1498, 3);  unsqueeze_1498 = None
    mul_1759: "f32[512]" = torch.ops.aten.mul.Tensor(sum_290, 0.00048828125)
    mul_1760: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_190, squeeze_190)
    mul_1761: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1759, mul_1760);  mul_1759 = mul_1760 = None
    unsqueeze_1500: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1761, 0);  mul_1761 = None
    unsqueeze_1501: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1500, 2);  unsqueeze_1500 = None
    unsqueeze_1502: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1501, 3);  unsqueeze_1501 = None
    mul_1762: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_190, primals_233);  primals_233 = None
    unsqueeze_1503: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1762, 0);  mul_1762 = None
    unsqueeze_1504: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1503, 2);  unsqueeze_1503 = None
    unsqueeze_1505: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1504, 3);  unsqueeze_1504 = None
    sub_492: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_77, unsqueeze_1496);  convolution_77 = unsqueeze_1496 = None
    mul_1763: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_492, unsqueeze_1502);  sub_492 = unsqueeze_1502 = None
    sub_493: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_74, mul_1763);  where_74 = mul_1763 = None
    sub_494: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_493, unsqueeze_1499);  sub_493 = unsqueeze_1499 = None
    mul_1764: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_494, unsqueeze_1505);  sub_494 = unsqueeze_1505 = None
    mul_1765: "f32[512]" = torch.ops.aten.mul.Tensor(sum_290, squeeze_190);  sum_290 = squeeze_190 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_94 = torch.ops.aten.convolution_backward.default(mul_1764, relu_59, primals_232, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1764 = primals_232 = None
    getitem_562: "f32[8, 256, 16, 16]" = convolution_backward_94[0]
    getitem_563: "f32[512, 128, 3, 3]" = convolution_backward_94[1];  convolution_backward_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_413: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_59);  relu_59 = None
    alias_414: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_413);  alias_413 = None
    le_75: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_414, 0);  alias_414 = None
    scalar_tensor_75: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_75: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_75, scalar_tensor_75, getitem_562);  le_75 = scalar_tensor_75 = getitem_562 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1506: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_186, 0);  squeeze_186 = None
    unsqueeze_1507: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1506, 2);  unsqueeze_1506 = None
    unsqueeze_1508: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1507, 3);  unsqueeze_1507 = None
    sum_291: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_75, [0, 2, 3])
    sub_495: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_76, unsqueeze_1508)
    mul_1766: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_75, sub_495);  sub_495 = None
    sum_292: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1766, [0, 2, 3]);  mul_1766 = None
    mul_1767: "f32[256]" = torch.ops.aten.mul.Tensor(sum_291, 0.00048828125)
    unsqueeze_1509: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1767, 0);  mul_1767 = None
    unsqueeze_1510: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1509, 2);  unsqueeze_1509 = None
    unsqueeze_1511: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1510, 3);  unsqueeze_1510 = None
    mul_1768: "f32[256]" = torch.ops.aten.mul.Tensor(sum_292, 0.00048828125)
    mul_1769: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_187, squeeze_187)
    mul_1770: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1768, mul_1769);  mul_1768 = mul_1769 = None
    unsqueeze_1512: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1770, 0);  mul_1770 = None
    unsqueeze_1513: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1512, 2);  unsqueeze_1512 = None
    unsqueeze_1514: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1513, 3);  unsqueeze_1513 = None
    mul_1771: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_187, primals_230);  primals_230 = None
    unsqueeze_1515: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1771, 0);  mul_1771 = None
    unsqueeze_1516: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1515, 2);  unsqueeze_1515 = None
    unsqueeze_1517: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1516, 3);  unsqueeze_1516 = None
    sub_496: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_76, unsqueeze_1508);  convolution_76 = unsqueeze_1508 = None
    mul_1772: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_496, unsqueeze_1514);  sub_496 = unsqueeze_1514 = None
    sub_497: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_75, mul_1772);  where_75 = mul_1772 = None
    sub_498: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_497, unsqueeze_1511);  sub_497 = unsqueeze_1511 = None
    mul_1773: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_498, unsqueeze_1517);  sub_498 = unsqueeze_1517 = None
    mul_1774: "f32[256]" = torch.ops.aten.mul.Tensor(sum_292, squeeze_187);  sum_292 = squeeze_187 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_95 = torch.ops.aten.convolution_backward.default(mul_1773, relu_58, primals_229, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1773 = primals_229 = None
    getitem_565: "f32[8, 1024, 16, 16]" = convolution_backward_95[0]
    getitem_566: "f32[256, 1024, 1, 1]" = convolution_backward_95[1];  convolution_backward_95 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_765: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_72, getitem_565);  where_72 = getitem_565 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_416: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_58);  relu_58 = None
    alias_417: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_416);  alias_416 = None
    le_76: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_417, 0);  alias_417 = None
    scalar_tensor_76: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_76: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_76, scalar_tensor_76, add_765);  le_76 = scalar_tensor_76 = add_765 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1518: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_183, 0);  squeeze_183 = None
    unsqueeze_1519: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1518, 2);  unsqueeze_1518 = None
    unsqueeze_1520: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1519, 3);  unsqueeze_1519 = None
    sum_293: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_76, [0, 2, 3])
    sub_499: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_75, unsqueeze_1520)
    mul_1775: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_76, sub_499);  sub_499 = None
    sum_294: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1775, [0, 2, 3]);  mul_1775 = None
    mul_1776: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_293, 0.00048828125)
    unsqueeze_1521: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1776, 0);  mul_1776 = None
    unsqueeze_1522: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1521, 2);  unsqueeze_1521 = None
    unsqueeze_1523: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1522, 3);  unsqueeze_1522 = None
    mul_1777: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_294, 0.00048828125)
    mul_1778: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_184, squeeze_184)
    mul_1779: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1777, mul_1778);  mul_1777 = mul_1778 = None
    unsqueeze_1524: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1779, 0);  mul_1779 = None
    unsqueeze_1525: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1524, 2);  unsqueeze_1524 = None
    unsqueeze_1526: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1525, 3);  unsqueeze_1525 = None
    mul_1780: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_184, primals_227);  primals_227 = None
    unsqueeze_1527: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1780, 0);  mul_1780 = None
    unsqueeze_1528: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1527, 2);  unsqueeze_1527 = None
    unsqueeze_1529: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1528, 3);  unsqueeze_1528 = None
    sub_500: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_75, unsqueeze_1520);  convolution_75 = unsqueeze_1520 = None
    mul_1781: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_500, unsqueeze_1526);  sub_500 = unsqueeze_1526 = None
    sub_501: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_76, mul_1781);  mul_1781 = None
    sub_502: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_501, unsqueeze_1523);  sub_501 = unsqueeze_1523 = None
    mul_1782: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_502, unsqueeze_1529);  sub_502 = unsqueeze_1529 = None
    mul_1783: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_294, squeeze_184);  sum_294 = squeeze_184 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_96 = torch.ops.aten.convolution_backward.default(mul_1782, sum_42, primals_226, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1782 = sum_42 = primals_226 = None
    getitem_568: "f32[8, 256, 16, 16]" = convolution_backward_96[0]
    getitem_569: "f32[1024, 256, 1, 1]" = convolution_backward_96[1];  convolution_backward_96 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1530: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_568, 1);  getitem_568 = None
    expand_58: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1530, [8, 2, 256, 16, 16]);  unsqueeze_1530 = None
    mul_1784: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_58, view_79);  view_79 = None
    mul_1785: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_58, view_83);  expand_58 = view_83 = None
    sum_295: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1784, [3, 4], True);  mul_1784 = None
    view_296: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_295, [8, 512, 1, 1]);  sum_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_297: "f32[8, 512]" = torch.ops.aten.view.default(view_296, [8, 512]);  view_296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_298: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_297, [8, 2, 1, 256]);  view_297 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_418: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_71);  alias_71 = None
    mul_1786: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_298, alias_418);  view_298 = None
    sum_296: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1786, [1], True)
    mul_1787: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_418, sum_296);  alias_418 = sum_296 = None
    sub_503: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1786, mul_1787);  mul_1786 = mul_1787 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_57: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_503, [0, 2, 1, 3]);  sub_503 = None
    view_299: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_57, [8, 512, 1, 1]);  permute_57 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_97 = torch.ops.aten.convolution_backward.default(view_299, relu_57, primals_224, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_299 = primals_224 = None
    getitem_571: "f32[8, 128, 1, 1]" = convolution_backward_97[0]
    getitem_572: "f32[512, 128, 1, 1]" = convolution_backward_97[1]
    getitem_573: "f32[512]" = convolution_backward_97[2];  convolution_backward_97 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_420: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_57);  relu_57 = None
    alias_421: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_420);  alias_420 = None
    le_77: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_421, 0);  alias_421 = None
    scalar_tensor_77: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_77: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_77, scalar_tensor_77, getitem_571);  le_77 = scalar_tensor_77 = getitem_571 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1531: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_180, 0);  squeeze_180 = None
    unsqueeze_1532: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1531, 2);  unsqueeze_1531 = None
    unsqueeze_1533: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1532, 3);  unsqueeze_1532 = None
    sum_297: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_77, [0, 2, 3])
    sub_504: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_73, unsqueeze_1533)
    mul_1788: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_77, sub_504);  sub_504 = None
    sum_298: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1788, [0, 2, 3]);  mul_1788 = None
    mul_1789: "f32[128]" = torch.ops.aten.mul.Tensor(sum_297, 0.125)
    unsqueeze_1534: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1789, 0);  mul_1789 = None
    unsqueeze_1535: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1534, 2);  unsqueeze_1534 = None
    unsqueeze_1536: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1535, 3);  unsqueeze_1535 = None
    mul_1790: "f32[128]" = torch.ops.aten.mul.Tensor(sum_298, 0.125)
    mul_1791: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_181, squeeze_181)
    mul_1792: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1790, mul_1791);  mul_1790 = mul_1791 = None
    unsqueeze_1537: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1792, 0);  mul_1792 = None
    unsqueeze_1538: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1537, 2);  unsqueeze_1537 = None
    unsqueeze_1539: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1538, 3);  unsqueeze_1538 = None
    mul_1793: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_181, primals_222);  primals_222 = None
    unsqueeze_1540: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1793, 0);  mul_1793 = None
    unsqueeze_1541: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1540, 2);  unsqueeze_1540 = None
    unsqueeze_1542: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1541, 3);  unsqueeze_1541 = None
    sub_505: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_73, unsqueeze_1533);  convolution_73 = unsqueeze_1533 = None
    mul_1794: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_505, unsqueeze_1539);  sub_505 = unsqueeze_1539 = None
    sub_506: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_77, mul_1794);  where_77 = mul_1794 = None
    sub_507: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_506, unsqueeze_1536);  sub_506 = unsqueeze_1536 = None
    mul_1795: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_507, unsqueeze_1542);  sub_507 = unsqueeze_1542 = None
    mul_1796: "f32[128]" = torch.ops.aten.mul.Tensor(sum_298, squeeze_181);  sum_298 = squeeze_181 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_98 = torch.ops.aten.convolution_backward.default(mul_1795, mean_13, primals_220, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1795 = mean_13 = primals_220 = None
    getitem_574: "f32[8, 256, 1, 1]" = convolution_backward_98[0]
    getitem_575: "f32[128, 256, 1, 1]" = convolution_backward_98[1]
    getitem_576: "f32[128]" = convolution_backward_98[2];  convolution_backward_98 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_59: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_574, [8, 256, 16, 16]);  getitem_574 = None
    div_53: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_59, 256);  expand_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1543: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_53, 1);  div_53 = None
    expand_60: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1543, [8, 2, 256, 16, 16]);  unsqueeze_1543 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_766: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1785, expand_60);  mul_1785 = expand_60 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_300: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_766, [8, 512, 16, 16]);  add_766 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_423: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_56);  relu_56 = None
    alias_424: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_423);  alias_423 = None
    le_78: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_424, 0);  alias_424 = None
    scalar_tensor_78: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_78: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_78, scalar_tensor_78, view_300);  le_78 = scalar_tensor_78 = view_300 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1544: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_177, 0);  squeeze_177 = None
    unsqueeze_1545: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1544, 2);  unsqueeze_1544 = None
    unsqueeze_1546: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1545, 3);  unsqueeze_1545 = None
    sum_299: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_78, [0, 2, 3])
    sub_508: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_72, unsqueeze_1546)
    mul_1797: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_78, sub_508);  sub_508 = None
    sum_300: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1797, [0, 2, 3]);  mul_1797 = None
    mul_1798: "f32[512]" = torch.ops.aten.mul.Tensor(sum_299, 0.00048828125)
    unsqueeze_1547: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1798, 0);  mul_1798 = None
    unsqueeze_1548: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1547, 2);  unsqueeze_1547 = None
    unsqueeze_1549: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1548, 3);  unsqueeze_1548 = None
    mul_1799: "f32[512]" = torch.ops.aten.mul.Tensor(sum_300, 0.00048828125)
    mul_1800: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_178, squeeze_178)
    mul_1801: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1799, mul_1800);  mul_1799 = mul_1800 = None
    unsqueeze_1550: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1801, 0);  mul_1801 = None
    unsqueeze_1551: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1550, 2);  unsqueeze_1550 = None
    unsqueeze_1552: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1551, 3);  unsqueeze_1551 = None
    mul_1802: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_178, primals_218);  primals_218 = None
    unsqueeze_1553: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1802, 0);  mul_1802 = None
    unsqueeze_1554: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1553, 2);  unsqueeze_1553 = None
    unsqueeze_1555: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1554, 3);  unsqueeze_1554 = None
    sub_509: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_72, unsqueeze_1546);  convolution_72 = unsqueeze_1546 = None
    mul_1803: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_509, unsqueeze_1552);  sub_509 = unsqueeze_1552 = None
    sub_510: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_78, mul_1803);  where_78 = mul_1803 = None
    sub_511: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_510, unsqueeze_1549);  sub_510 = unsqueeze_1549 = None
    mul_1804: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_511, unsqueeze_1555);  sub_511 = unsqueeze_1555 = None
    mul_1805: "f32[512]" = torch.ops.aten.mul.Tensor(sum_300, squeeze_178);  sum_300 = squeeze_178 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_99 = torch.ops.aten.convolution_backward.default(mul_1804, relu_55, primals_217, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1804 = primals_217 = None
    getitem_577: "f32[8, 256, 16, 16]" = convolution_backward_99[0]
    getitem_578: "f32[512, 128, 3, 3]" = convolution_backward_99[1];  convolution_backward_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_426: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_55);  relu_55 = None
    alias_427: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_426);  alias_426 = None
    le_79: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_427, 0);  alias_427 = None
    scalar_tensor_79: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_79: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_79, scalar_tensor_79, getitem_577);  le_79 = scalar_tensor_79 = getitem_577 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1556: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_174, 0);  squeeze_174 = None
    unsqueeze_1557: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1556, 2);  unsqueeze_1556 = None
    unsqueeze_1558: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1557, 3);  unsqueeze_1557 = None
    sum_301: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_79, [0, 2, 3])
    sub_512: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_71, unsqueeze_1558)
    mul_1806: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_79, sub_512);  sub_512 = None
    sum_302: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1806, [0, 2, 3]);  mul_1806 = None
    mul_1807: "f32[256]" = torch.ops.aten.mul.Tensor(sum_301, 0.00048828125)
    unsqueeze_1559: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1807, 0);  mul_1807 = None
    unsqueeze_1560: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1559, 2);  unsqueeze_1559 = None
    unsqueeze_1561: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1560, 3);  unsqueeze_1560 = None
    mul_1808: "f32[256]" = torch.ops.aten.mul.Tensor(sum_302, 0.00048828125)
    mul_1809: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_175, squeeze_175)
    mul_1810: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1808, mul_1809);  mul_1808 = mul_1809 = None
    unsqueeze_1562: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1810, 0);  mul_1810 = None
    unsqueeze_1563: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1562, 2);  unsqueeze_1562 = None
    unsqueeze_1564: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1563, 3);  unsqueeze_1563 = None
    mul_1811: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_175, primals_215);  primals_215 = None
    unsqueeze_1565: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1811, 0);  mul_1811 = None
    unsqueeze_1566: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1565, 2);  unsqueeze_1565 = None
    unsqueeze_1567: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1566, 3);  unsqueeze_1566 = None
    sub_513: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_71, unsqueeze_1558);  convolution_71 = unsqueeze_1558 = None
    mul_1812: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_513, unsqueeze_1564);  sub_513 = unsqueeze_1564 = None
    sub_514: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_79, mul_1812);  where_79 = mul_1812 = None
    sub_515: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_514, unsqueeze_1561);  sub_514 = unsqueeze_1561 = None
    mul_1813: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_515, unsqueeze_1567);  sub_515 = unsqueeze_1567 = None
    mul_1814: "f32[256]" = torch.ops.aten.mul.Tensor(sum_302, squeeze_175);  sum_302 = squeeze_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_100 = torch.ops.aten.convolution_backward.default(mul_1813, relu_54, primals_214, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1813 = primals_214 = None
    getitem_580: "f32[8, 1024, 16, 16]" = convolution_backward_100[0]
    getitem_581: "f32[256, 1024, 1, 1]" = convolution_backward_100[1];  convolution_backward_100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_767: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_76, getitem_580);  where_76 = getitem_580 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_429: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_54);  relu_54 = None
    alias_430: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_429);  alias_429 = None
    le_80: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_430, 0);  alias_430 = None
    scalar_tensor_80: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_80: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_80, scalar_tensor_80, add_767);  le_80 = scalar_tensor_80 = add_767 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1568: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_171, 0);  squeeze_171 = None
    unsqueeze_1569: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1568, 2);  unsqueeze_1568 = None
    unsqueeze_1570: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1569, 3);  unsqueeze_1569 = None
    sum_303: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_80, [0, 2, 3])
    sub_516: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_70, unsqueeze_1570)
    mul_1815: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_80, sub_516);  sub_516 = None
    sum_304: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1815, [0, 2, 3]);  mul_1815 = None
    mul_1816: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_303, 0.00048828125)
    unsqueeze_1571: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1816, 0);  mul_1816 = None
    unsqueeze_1572: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1571, 2);  unsqueeze_1571 = None
    unsqueeze_1573: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1572, 3);  unsqueeze_1572 = None
    mul_1817: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_304, 0.00048828125)
    mul_1818: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_172, squeeze_172)
    mul_1819: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1817, mul_1818);  mul_1817 = mul_1818 = None
    unsqueeze_1574: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1819, 0);  mul_1819 = None
    unsqueeze_1575: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1574, 2);  unsqueeze_1574 = None
    unsqueeze_1576: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1575, 3);  unsqueeze_1575 = None
    mul_1820: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_172, primals_212);  primals_212 = None
    unsqueeze_1577: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1820, 0);  mul_1820 = None
    unsqueeze_1578: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1577, 2);  unsqueeze_1577 = None
    unsqueeze_1579: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1578, 3);  unsqueeze_1578 = None
    sub_517: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_70, unsqueeze_1570);  convolution_70 = unsqueeze_1570 = None
    mul_1821: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_517, unsqueeze_1576);  sub_517 = unsqueeze_1576 = None
    sub_518: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_80, mul_1821);  mul_1821 = None
    sub_519: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_518, unsqueeze_1573);  sub_518 = unsqueeze_1573 = None
    mul_1822: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_519, unsqueeze_1579);  sub_519 = unsqueeze_1579 = None
    mul_1823: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_304, squeeze_172);  sum_304 = squeeze_172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_101 = torch.ops.aten.convolution_backward.default(mul_1822, sum_39, primals_211, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1822 = sum_39 = primals_211 = None
    getitem_583: "f32[8, 256, 16, 16]" = convolution_backward_101[0]
    getitem_584: "f32[1024, 256, 1, 1]" = convolution_backward_101[1];  convolution_backward_101 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1580: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_583, 1);  getitem_583 = None
    expand_61: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1580, [8, 2, 256, 16, 16]);  unsqueeze_1580 = None
    mul_1824: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_61, view_73);  view_73 = None
    mul_1825: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_61, view_77);  expand_61 = view_77 = None
    sum_305: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1824, [3, 4], True);  mul_1824 = None
    view_301: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_305, [8, 512, 1, 1]);  sum_305 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_302: "f32[8, 512]" = torch.ops.aten.view.default(view_301, [8, 512]);  view_301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_303: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_302, [8, 2, 1, 256]);  view_302 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_431: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_66);  alias_66 = None
    mul_1826: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_303, alias_431);  view_303 = None
    sum_306: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1826, [1], True)
    mul_1827: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_431, sum_306);  alias_431 = sum_306 = None
    sub_520: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1826, mul_1827);  mul_1826 = mul_1827 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_58: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_520, [0, 2, 1, 3]);  sub_520 = None
    view_304: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_58, [8, 512, 1, 1]);  permute_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_102 = torch.ops.aten.convolution_backward.default(view_304, relu_53, primals_209, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_304 = primals_209 = None
    getitem_586: "f32[8, 128, 1, 1]" = convolution_backward_102[0]
    getitem_587: "f32[512, 128, 1, 1]" = convolution_backward_102[1]
    getitem_588: "f32[512]" = convolution_backward_102[2];  convolution_backward_102 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_433: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_53);  relu_53 = None
    alias_434: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_433);  alias_433 = None
    le_81: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_434, 0);  alias_434 = None
    scalar_tensor_81: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_81: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_81, scalar_tensor_81, getitem_586);  le_81 = scalar_tensor_81 = getitem_586 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1581: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_168, 0);  squeeze_168 = None
    unsqueeze_1582: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1581, 2);  unsqueeze_1581 = None
    unsqueeze_1583: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1582, 3);  unsqueeze_1582 = None
    sum_307: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_81, [0, 2, 3])
    sub_521: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_68, unsqueeze_1583)
    mul_1828: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_81, sub_521);  sub_521 = None
    sum_308: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1828, [0, 2, 3]);  mul_1828 = None
    mul_1829: "f32[128]" = torch.ops.aten.mul.Tensor(sum_307, 0.125)
    unsqueeze_1584: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1829, 0);  mul_1829 = None
    unsqueeze_1585: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1584, 2);  unsqueeze_1584 = None
    unsqueeze_1586: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1585, 3);  unsqueeze_1585 = None
    mul_1830: "f32[128]" = torch.ops.aten.mul.Tensor(sum_308, 0.125)
    mul_1831: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_169, squeeze_169)
    mul_1832: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1830, mul_1831);  mul_1830 = mul_1831 = None
    unsqueeze_1587: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1832, 0);  mul_1832 = None
    unsqueeze_1588: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1587, 2);  unsqueeze_1587 = None
    unsqueeze_1589: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1588, 3);  unsqueeze_1588 = None
    mul_1833: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_169, primals_207);  primals_207 = None
    unsqueeze_1590: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1833, 0);  mul_1833 = None
    unsqueeze_1591: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1590, 2);  unsqueeze_1590 = None
    unsqueeze_1592: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1591, 3);  unsqueeze_1591 = None
    sub_522: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_68, unsqueeze_1583);  convolution_68 = unsqueeze_1583 = None
    mul_1834: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_522, unsqueeze_1589);  sub_522 = unsqueeze_1589 = None
    sub_523: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_81, mul_1834);  where_81 = mul_1834 = None
    sub_524: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_523, unsqueeze_1586);  sub_523 = unsqueeze_1586 = None
    mul_1835: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_524, unsqueeze_1592);  sub_524 = unsqueeze_1592 = None
    mul_1836: "f32[128]" = torch.ops.aten.mul.Tensor(sum_308, squeeze_169);  sum_308 = squeeze_169 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_103 = torch.ops.aten.convolution_backward.default(mul_1835, mean_12, primals_205, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1835 = mean_12 = primals_205 = None
    getitem_589: "f32[8, 256, 1, 1]" = convolution_backward_103[0]
    getitem_590: "f32[128, 256, 1, 1]" = convolution_backward_103[1]
    getitem_591: "f32[128]" = convolution_backward_103[2];  convolution_backward_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_62: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_589, [8, 256, 16, 16]);  getitem_589 = None
    div_54: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_62, 256);  expand_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1593: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_54, 1);  div_54 = None
    expand_63: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1593, [8, 2, 256, 16, 16]);  unsqueeze_1593 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_768: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1825, expand_63);  mul_1825 = expand_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_305: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_768, [8, 512, 16, 16]);  add_768 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_436: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_52);  relu_52 = None
    alias_437: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_436);  alias_436 = None
    le_82: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_437, 0);  alias_437 = None
    scalar_tensor_82: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_82: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_82, scalar_tensor_82, view_305);  le_82 = scalar_tensor_82 = view_305 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1594: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_165, 0);  squeeze_165 = None
    unsqueeze_1595: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1594, 2);  unsqueeze_1594 = None
    unsqueeze_1596: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1595, 3);  unsqueeze_1595 = None
    sum_309: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_82, [0, 2, 3])
    sub_525: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_67, unsqueeze_1596)
    mul_1837: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_82, sub_525);  sub_525 = None
    sum_310: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1837, [0, 2, 3]);  mul_1837 = None
    mul_1838: "f32[512]" = torch.ops.aten.mul.Tensor(sum_309, 0.00048828125)
    unsqueeze_1597: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1838, 0);  mul_1838 = None
    unsqueeze_1598: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1597, 2);  unsqueeze_1597 = None
    unsqueeze_1599: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1598, 3);  unsqueeze_1598 = None
    mul_1839: "f32[512]" = torch.ops.aten.mul.Tensor(sum_310, 0.00048828125)
    mul_1840: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_166, squeeze_166)
    mul_1841: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1839, mul_1840);  mul_1839 = mul_1840 = None
    unsqueeze_1600: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1841, 0);  mul_1841 = None
    unsqueeze_1601: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1600, 2);  unsqueeze_1600 = None
    unsqueeze_1602: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1601, 3);  unsqueeze_1601 = None
    mul_1842: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_166, primals_203);  primals_203 = None
    unsqueeze_1603: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1842, 0);  mul_1842 = None
    unsqueeze_1604: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1603, 2);  unsqueeze_1603 = None
    unsqueeze_1605: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1604, 3);  unsqueeze_1604 = None
    sub_526: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_67, unsqueeze_1596);  convolution_67 = unsqueeze_1596 = None
    mul_1843: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_526, unsqueeze_1602);  sub_526 = unsqueeze_1602 = None
    sub_527: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_82, mul_1843);  where_82 = mul_1843 = None
    sub_528: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_527, unsqueeze_1599);  sub_527 = unsqueeze_1599 = None
    mul_1844: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_528, unsqueeze_1605);  sub_528 = unsqueeze_1605 = None
    mul_1845: "f32[512]" = torch.ops.aten.mul.Tensor(sum_310, squeeze_166);  sum_310 = squeeze_166 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_104 = torch.ops.aten.convolution_backward.default(mul_1844, relu_51, primals_202, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1844 = primals_202 = None
    getitem_592: "f32[8, 256, 16, 16]" = convolution_backward_104[0]
    getitem_593: "f32[512, 128, 3, 3]" = convolution_backward_104[1];  convolution_backward_104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_439: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_51);  relu_51 = None
    alias_440: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_439);  alias_439 = None
    le_83: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_440, 0);  alias_440 = None
    scalar_tensor_83: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_83: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_83, scalar_tensor_83, getitem_592);  le_83 = scalar_tensor_83 = getitem_592 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1606: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_162, 0);  squeeze_162 = None
    unsqueeze_1607: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1606, 2);  unsqueeze_1606 = None
    unsqueeze_1608: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1607, 3);  unsqueeze_1607 = None
    sum_311: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_83, [0, 2, 3])
    sub_529: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_66, unsqueeze_1608)
    mul_1846: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_83, sub_529);  sub_529 = None
    sum_312: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1846, [0, 2, 3]);  mul_1846 = None
    mul_1847: "f32[256]" = torch.ops.aten.mul.Tensor(sum_311, 0.00048828125)
    unsqueeze_1609: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1847, 0);  mul_1847 = None
    unsqueeze_1610: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1609, 2);  unsqueeze_1609 = None
    unsqueeze_1611: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1610, 3);  unsqueeze_1610 = None
    mul_1848: "f32[256]" = torch.ops.aten.mul.Tensor(sum_312, 0.00048828125)
    mul_1849: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_163, squeeze_163)
    mul_1850: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1848, mul_1849);  mul_1848 = mul_1849 = None
    unsqueeze_1612: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1850, 0);  mul_1850 = None
    unsqueeze_1613: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1612, 2);  unsqueeze_1612 = None
    unsqueeze_1614: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1613, 3);  unsqueeze_1613 = None
    mul_1851: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_163, primals_200);  primals_200 = None
    unsqueeze_1615: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1851, 0);  mul_1851 = None
    unsqueeze_1616: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1615, 2);  unsqueeze_1615 = None
    unsqueeze_1617: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1616, 3);  unsqueeze_1616 = None
    sub_530: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_66, unsqueeze_1608);  convolution_66 = unsqueeze_1608 = None
    mul_1852: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_530, unsqueeze_1614);  sub_530 = unsqueeze_1614 = None
    sub_531: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_83, mul_1852);  where_83 = mul_1852 = None
    sub_532: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_531, unsqueeze_1611);  sub_531 = unsqueeze_1611 = None
    mul_1853: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_532, unsqueeze_1617);  sub_532 = unsqueeze_1617 = None
    mul_1854: "f32[256]" = torch.ops.aten.mul.Tensor(sum_312, squeeze_163);  sum_312 = squeeze_163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_105 = torch.ops.aten.convolution_backward.default(mul_1853, relu_50, primals_199, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1853 = primals_199 = None
    getitem_595: "f32[8, 1024, 16, 16]" = convolution_backward_105[0]
    getitem_596: "f32[256, 1024, 1, 1]" = convolution_backward_105[1];  convolution_backward_105 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_769: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_80, getitem_595);  where_80 = getitem_595 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_442: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_50);  relu_50 = None
    alias_443: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_442);  alias_442 = None
    le_84: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_443, 0);  alias_443 = None
    scalar_tensor_84: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_84: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_84, scalar_tensor_84, add_769);  le_84 = scalar_tensor_84 = add_769 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1618: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_159, 0);  squeeze_159 = None
    unsqueeze_1619: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1618, 2);  unsqueeze_1618 = None
    unsqueeze_1620: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1619, 3);  unsqueeze_1619 = None
    sum_313: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_84, [0, 2, 3])
    sub_533: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_65, unsqueeze_1620)
    mul_1855: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_84, sub_533);  sub_533 = None
    sum_314: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1855, [0, 2, 3]);  mul_1855 = None
    mul_1856: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_313, 0.00048828125)
    unsqueeze_1621: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1856, 0);  mul_1856 = None
    unsqueeze_1622: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1621, 2);  unsqueeze_1621 = None
    unsqueeze_1623: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1622, 3);  unsqueeze_1622 = None
    mul_1857: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_314, 0.00048828125)
    mul_1858: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_160, squeeze_160)
    mul_1859: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1857, mul_1858);  mul_1857 = mul_1858 = None
    unsqueeze_1624: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1859, 0);  mul_1859 = None
    unsqueeze_1625: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1624, 2);  unsqueeze_1624 = None
    unsqueeze_1626: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1625, 3);  unsqueeze_1625 = None
    mul_1860: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_160, primals_197);  primals_197 = None
    unsqueeze_1627: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1860, 0);  mul_1860 = None
    unsqueeze_1628: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1627, 2);  unsqueeze_1627 = None
    unsqueeze_1629: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1628, 3);  unsqueeze_1628 = None
    sub_534: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_65, unsqueeze_1620);  convolution_65 = unsqueeze_1620 = None
    mul_1861: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_534, unsqueeze_1626);  sub_534 = unsqueeze_1626 = None
    sub_535: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_84, mul_1861);  mul_1861 = None
    sub_536: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_535, unsqueeze_1623);  sub_535 = unsqueeze_1623 = None
    mul_1862: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_536, unsqueeze_1629);  sub_536 = unsqueeze_1629 = None
    mul_1863: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_314, squeeze_160);  sum_314 = squeeze_160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_106 = torch.ops.aten.convolution_backward.default(mul_1862, sum_36, primals_196, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1862 = sum_36 = primals_196 = None
    getitem_598: "f32[8, 256, 16, 16]" = convolution_backward_106[0]
    getitem_599: "f32[1024, 256, 1, 1]" = convolution_backward_106[1];  convolution_backward_106 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1630: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_598, 1);  getitem_598 = None
    expand_64: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1630, [8, 2, 256, 16, 16]);  unsqueeze_1630 = None
    mul_1864: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_64, view_67);  view_67 = None
    mul_1865: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_64, view_71);  expand_64 = view_71 = None
    sum_315: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1864, [3, 4], True);  mul_1864 = None
    view_306: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_315, [8, 512, 1, 1]);  sum_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_307: "f32[8, 512]" = torch.ops.aten.view.default(view_306, [8, 512]);  view_306 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_308: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_307, [8, 2, 1, 256]);  view_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_444: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_61);  alias_61 = None
    mul_1866: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_308, alias_444);  view_308 = None
    sum_316: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1866, [1], True)
    mul_1867: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_444, sum_316);  alias_444 = sum_316 = None
    sub_537: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1866, mul_1867);  mul_1866 = mul_1867 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_59: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_537, [0, 2, 1, 3]);  sub_537 = None
    view_309: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_59, [8, 512, 1, 1]);  permute_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_107 = torch.ops.aten.convolution_backward.default(view_309, relu_49, primals_194, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_309 = primals_194 = None
    getitem_601: "f32[8, 128, 1, 1]" = convolution_backward_107[0]
    getitem_602: "f32[512, 128, 1, 1]" = convolution_backward_107[1]
    getitem_603: "f32[512]" = convolution_backward_107[2];  convolution_backward_107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_446: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_49);  relu_49 = None
    alias_447: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_446);  alias_446 = None
    le_85: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_447, 0);  alias_447 = None
    scalar_tensor_85: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_85: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_85, scalar_tensor_85, getitem_601);  le_85 = scalar_tensor_85 = getitem_601 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1631: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_156, 0);  squeeze_156 = None
    unsqueeze_1632: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1631, 2);  unsqueeze_1631 = None
    unsqueeze_1633: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1632, 3);  unsqueeze_1632 = None
    sum_317: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_85, [0, 2, 3])
    sub_538: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_63, unsqueeze_1633)
    mul_1868: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_85, sub_538);  sub_538 = None
    sum_318: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1868, [0, 2, 3]);  mul_1868 = None
    mul_1869: "f32[128]" = torch.ops.aten.mul.Tensor(sum_317, 0.125)
    unsqueeze_1634: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1869, 0);  mul_1869 = None
    unsqueeze_1635: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1634, 2);  unsqueeze_1634 = None
    unsqueeze_1636: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1635, 3);  unsqueeze_1635 = None
    mul_1870: "f32[128]" = torch.ops.aten.mul.Tensor(sum_318, 0.125)
    mul_1871: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_157, squeeze_157)
    mul_1872: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1870, mul_1871);  mul_1870 = mul_1871 = None
    unsqueeze_1637: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1872, 0);  mul_1872 = None
    unsqueeze_1638: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1637, 2);  unsqueeze_1637 = None
    unsqueeze_1639: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1638, 3);  unsqueeze_1638 = None
    mul_1873: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_157, primals_192);  primals_192 = None
    unsqueeze_1640: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1873, 0);  mul_1873 = None
    unsqueeze_1641: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1640, 2);  unsqueeze_1640 = None
    unsqueeze_1642: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1641, 3);  unsqueeze_1641 = None
    sub_539: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_63, unsqueeze_1633);  convolution_63 = unsqueeze_1633 = None
    mul_1874: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_539, unsqueeze_1639);  sub_539 = unsqueeze_1639 = None
    sub_540: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_85, mul_1874);  where_85 = mul_1874 = None
    sub_541: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_540, unsqueeze_1636);  sub_540 = unsqueeze_1636 = None
    mul_1875: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_541, unsqueeze_1642);  sub_541 = unsqueeze_1642 = None
    mul_1876: "f32[128]" = torch.ops.aten.mul.Tensor(sum_318, squeeze_157);  sum_318 = squeeze_157 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_108 = torch.ops.aten.convolution_backward.default(mul_1875, mean_11, primals_190, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1875 = mean_11 = primals_190 = None
    getitem_604: "f32[8, 256, 1, 1]" = convolution_backward_108[0]
    getitem_605: "f32[128, 256, 1, 1]" = convolution_backward_108[1]
    getitem_606: "f32[128]" = convolution_backward_108[2];  convolution_backward_108 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_65: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_604, [8, 256, 16, 16]);  getitem_604 = None
    div_55: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_65, 256);  expand_65 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1643: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_55, 1);  div_55 = None
    expand_66: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1643, [8, 2, 256, 16, 16]);  unsqueeze_1643 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_770: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1865, expand_66);  mul_1865 = expand_66 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_310: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_770, [8, 512, 16, 16]);  add_770 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_449: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_48);  relu_48 = None
    alias_450: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_449);  alias_449 = None
    le_86: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_450, 0);  alias_450 = None
    scalar_tensor_86: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_86: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_86, scalar_tensor_86, view_310);  le_86 = scalar_tensor_86 = view_310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1644: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_153, 0);  squeeze_153 = None
    unsqueeze_1645: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1644, 2);  unsqueeze_1644 = None
    unsqueeze_1646: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1645, 3);  unsqueeze_1645 = None
    sum_319: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_86, [0, 2, 3])
    sub_542: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_62, unsqueeze_1646)
    mul_1877: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_86, sub_542);  sub_542 = None
    sum_320: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1877, [0, 2, 3]);  mul_1877 = None
    mul_1878: "f32[512]" = torch.ops.aten.mul.Tensor(sum_319, 0.00048828125)
    unsqueeze_1647: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1878, 0);  mul_1878 = None
    unsqueeze_1648: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1647, 2);  unsqueeze_1647 = None
    unsqueeze_1649: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1648, 3);  unsqueeze_1648 = None
    mul_1879: "f32[512]" = torch.ops.aten.mul.Tensor(sum_320, 0.00048828125)
    mul_1880: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_154, squeeze_154)
    mul_1881: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1879, mul_1880);  mul_1879 = mul_1880 = None
    unsqueeze_1650: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1881, 0);  mul_1881 = None
    unsqueeze_1651: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1650, 2);  unsqueeze_1650 = None
    unsqueeze_1652: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1651, 3);  unsqueeze_1651 = None
    mul_1882: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_154, primals_188);  primals_188 = None
    unsqueeze_1653: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1882, 0);  mul_1882 = None
    unsqueeze_1654: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1653, 2);  unsqueeze_1653 = None
    unsqueeze_1655: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1654, 3);  unsqueeze_1654 = None
    sub_543: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_62, unsqueeze_1646);  convolution_62 = unsqueeze_1646 = None
    mul_1883: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_543, unsqueeze_1652);  sub_543 = unsqueeze_1652 = None
    sub_544: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_86, mul_1883);  where_86 = mul_1883 = None
    sub_545: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_544, unsqueeze_1649);  sub_544 = unsqueeze_1649 = None
    mul_1884: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_545, unsqueeze_1655);  sub_545 = unsqueeze_1655 = None
    mul_1885: "f32[512]" = torch.ops.aten.mul.Tensor(sum_320, squeeze_154);  sum_320 = squeeze_154 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_109 = torch.ops.aten.convolution_backward.default(mul_1884, relu_47, primals_187, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1884 = primals_187 = None
    getitem_607: "f32[8, 256, 16, 16]" = convolution_backward_109[0]
    getitem_608: "f32[512, 128, 3, 3]" = convolution_backward_109[1];  convolution_backward_109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_452: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_47);  relu_47 = None
    alias_453: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_452);  alias_452 = None
    le_87: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_453, 0);  alias_453 = None
    scalar_tensor_87: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_87: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_87, scalar_tensor_87, getitem_607);  le_87 = scalar_tensor_87 = getitem_607 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1656: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_150, 0);  squeeze_150 = None
    unsqueeze_1657: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1656, 2);  unsqueeze_1656 = None
    unsqueeze_1658: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1657, 3);  unsqueeze_1657 = None
    sum_321: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_87, [0, 2, 3])
    sub_546: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_61, unsqueeze_1658)
    mul_1886: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_87, sub_546);  sub_546 = None
    sum_322: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1886, [0, 2, 3]);  mul_1886 = None
    mul_1887: "f32[256]" = torch.ops.aten.mul.Tensor(sum_321, 0.00048828125)
    unsqueeze_1659: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1887, 0);  mul_1887 = None
    unsqueeze_1660: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1659, 2);  unsqueeze_1659 = None
    unsqueeze_1661: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1660, 3);  unsqueeze_1660 = None
    mul_1888: "f32[256]" = torch.ops.aten.mul.Tensor(sum_322, 0.00048828125)
    mul_1889: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_151, squeeze_151)
    mul_1890: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1888, mul_1889);  mul_1888 = mul_1889 = None
    unsqueeze_1662: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1890, 0);  mul_1890 = None
    unsqueeze_1663: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1662, 2);  unsqueeze_1662 = None
    unsqueeze_1664: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1663, 3);  unsqueeze_1663 = None
    mul_1891: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_151, primals_185);  primals_185 = None
    unsqueeze_1665: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1891, 0);  mul_1891 = None
    unsqueeze_1666: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1665, 2);  unsqueeze_1665 = None
    unsqueeze_1667: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1666, 3);  unsqueeze_1666 = None
    sub_547: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_61, unsqueeze_1658);  convolution_61 = unsqueeze_1658 = None
    mul_1892: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_547, unsqueeze_1664);  sub_547 = unsqueeze_1664 = None
    sub_548: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_87, mul_1892);  where_87 = mul_1892 = None
    sub_549: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_548, unsqueeze_1661);  sub_548 = unsqueeze_1661 = None
    mul_1893: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_549, unsqueeze_1667);  sub_549 = unsqueeze_1667 = None
    mul_1894: "f32[256]" = torch.ops.aten.mul.Tensor(sum_322, squeeze_151);  sum_322 = squeeze_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_110 = torch.ops.aten.convolution_backward.default(mul_1893, relu_46, primals_184, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1893 = primals_184 = None
    getitem_610: "f32[8, 1024, 16, 16]" = convolution_backward_110[0]
    getitem_611: "f32[256, 1024, 1, 1]" = convolution_backward_110[1];  convolution_backward_110 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_771: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_84, getitem_610);  where_84 = getitem_610 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_455: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_46);  relu_46 = None
    alias_456: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_455);  alias_455 = None
    le_88: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_456, 0);  alias_456 = None
    scalar_tensor_88: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_88: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_88, scalar_tensor_88, add_771);  le_88 = scalar_tensor_88 = add_771 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1668: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_147, 0);  squeeze_147 = None
    unsqueeze_1669: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1668, 2);  unsqueeze_1668 = None
    unsqueeze_1670: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1669, 3);  unsqueeze_1669 = None
    sum_323: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_88, [0, 2, 3])
    sub_550: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_60, unsqueeze_1670)
    mul_1895: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_88, sub_550);  sub_550 = None
    sum_324: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1895, [0, 2, 3]);  mul_1895 = None
    mul_1896: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_323, 0.00048828125)
    unsqueeze_1671: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1896, 0);  mul_1896 = None
    unsqueeze_1672: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1671, 2);  unsqueeze_1671 = None
    unsqueeze_1673: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1672, 3);  unsqueeze_1672 = None
    mul_1897: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_324, 0.00048828125)
    mul_1898: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_148, squeeze_148)
    mul_1899: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1897, mul_1898);  mul_1897 = mul_1898 = None
    unsqueeze_1674: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1899, 0);  mul_1899 = None
    unsqueeze_1675: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1674, 2);  unsqueeze_1674 = None
    unsqueeze_1676: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1675, 3);  unsqueeze_1675 = None
    mul_1900: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_148, primals_182);  primals_182 = None
    unsqueeze_1677: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1900, 0);  mul_1900 = None
    unsqueeze_1678: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1677, 2);  unsqueeze_1677 = None
    unsqueeze_1679: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1678, 3);  unsqueeze_1678 = None
    sub_551: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_60, unsqueeze_1670);  convolution_60 = unsqueeze_1670 = None
    mul_1901: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_551, unsqueeze_1676);  sub_551 = unsqueeze_1676 = None
    sub_552: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_88, mul_1901);  mul_1901 = None
    sub_553: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_552, unsqueeze_1673);  sub_552 = unsqueeze_1673 = None
    mul_1902: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_553, unsqueeze_1679);  sub_553 = unsqueeze_1679 = None
    mul_1903: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_324, squeeze_148);  sum_324 = squeeze_148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_111 = torch.ops.aten.convolution_backward.default(mul_1902, sum_33, primals_181, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1902 = sum_33 = primals_181 = None
    getitem_613: "f32[8, 256, 16, 16]" = convolution_backward_111[0]
    getitem_614: "f32[1024, 256, 1, 1]" = convolution_backward_111[1];  convolution_backward_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1680: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_613, 1);  getitem_613 = None
    expand_67: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1680, [8, 2, 256, 16, 16]);  unsqueeze_1680 = None
    mul_1904: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_67, view_61);  view_61 = None
    mul_1905: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_67, view_65);  expand_67 = view_65 = None
    sum_325: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1904, [3, 4], True);  mul_1904 = None
    view_311: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_325, [8, 512, 1, 1]);  sum_325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_312: "f32[8, 512]" = torch.ops.aten.view.default(view_311, [8, 512]);  view_311 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_313: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_312, [8, 2, 1, 256]);  view_312 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_457: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_56);  alias_56 = None
    mul_1906: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_313, alias_457);  view_313 = None
    sum_326: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1906, [1], True)
    mul_1907: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_457, sum_326);  alias_457 = sum_326 = None
    sub_554: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1906, mul_1907);  mul_1906 = mul_1907 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_60: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_554, [0, 2, 1, 3]);  sub_554 = None
    view_314: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_60, [8, 512, 1, 1]);  permute_60 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_112 = torch.ops.aten.convolution_backward.default(view_314, relu_45, primals_179, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_314 = primals_179 = None
    getitem_616: "f32[8, 128, 1, 1]" = convolution_backward_112[0]
    getitem_617: "f32[512, 128, 1, 1]" = convolution_backward_112[1]
    getitem_618: "f32[512]" = convolution_backward_112[2];  convolution_backward_112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_459: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_45);  relu_45 = None
    alias_460: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_459);  alias_459 = None
    le_89: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_460, 0);  alias_460 = None
    scalar_tensor_89: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_89: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_89, scalar_tensor_89, getitem_616);  le_89 = scalar_tensor_89 = getitem_616 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1681: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_144, 0);  squeeze_144 = None
    unsqueeze_1682: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1681, 2);  unsqueeze_1681 = None
    unsqueeze_1683: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1682, 3);  unsqueeze_1682 = None
    sum_327: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_89, [0, 2, 3])
    sub_555: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_58, unsqueeze_1683)
    mul_1908: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_89, sub_555);  sub_555 = None
    sum_328: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1908, [0, 2, 3]);  mul_1908 = None
    mul_1909: "f32[128]" = torch.ops.aten.mul.Tensor(sum_327, 0.125)
    unsqueeze_1684: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1909, 0);  mul_1909 = None
    unsqueeze_1685: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1684, 2);  unsqueeze_1684 = None
    unsqueeze_1686: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1685, 3);  unsqueeze_1685 = None
    mul_1910: "f32[128]" = torch.ops.aten.mul.Tensor(sum_328, 0.125)
    mul_1911: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_145, squeeze_145)
    mul_1912: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1910, mul_1911);  mul_1910 = mul_1911 = None
    unsqueeze_1687: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1912, 0);  mul_1912 = None
    unsqueeze_1688: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1687, 2);  unsqueeze_1687 = None
    unsqueeze_1689: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1688, 3);  unsqueeze_1688 = None
    mul_1913: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_145, primals_177);  primals_177 = None
    unsqueeze_1690: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1913, 0);  mul_1913 = None
    unsqueeze_1691: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1690, 2);  unsqueeze_1690 = None
    unsqueeze_1692: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1691, 3);  unsqueeze_1691 = None
    sub_556: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_58, unsqueeze_1683);  convolution_58 = unsqueeze_1683 = None
    mul_1914: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_556, unsqueeze_1689);  sub_556 = unsqueeze_1689 = None
    sub_557: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_89, mul_1914);  where_89 = mul_1914 = None
    sub_558: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_557, unsqueeze_1686);  sub_557 = unsqueeze_1686 = None
    mul_1915: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_558, unsqueeze_1692);  sub_558 = unsqueeze_1692 = None
    mul_1916: "f32[128]" = torch.ops.aten.mul.Tensor(sum_328, squeeze_145);  sum_328 = squeeze_145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_113 = torch.ops.aten.convolution_backward.default(mul_1915, mean_10, primals_175, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1915 = mean_10 = primals_175 = None
    getitem_619: "f32[8, 256, 1, 1]" = convolution_backward_113[0]
    getitem_620: "f32[128, 256, 1, 1]" = convolution_backward_113[1]
    getitem_621: "f32[128]" = convolution_backward_113[2];  convolution_backward_113 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_68: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_619, [8, 256, 16, 16]);  getitem_619 = None
    div_56: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_68, 256);  expand_68 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1693: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_56, 1);  div_56 = None
    expand_69: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1693, [8, 2, 256, 16, 16]);  unsqueeze_1693 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_772: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1905, expand_69);  mul_1905 = expand_69 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_315: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_772, [8, 512, 16, 16]);  add_772 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_462: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_44);  relu_44 = None
    alias_463: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_462);  alias_462 = None
    le_90: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_463, 0);  alias_463 = None
    scalar_tensor_90: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_90: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_90, scalar_tensor_90, view_315);  le_90 = scalar_tensor_90 = view_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1694: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_141, 0);  squeeze_141 = None
    unsqueeze_1695: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1694, 2);  unsqueeze_1694 = None
    unsqueeze_1696: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1695, 3);  unsqueeze_1695 = None
    sum_329: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_90, [0, 2, 3])
    sub_559: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_57, unsqueeze_1696)
    mul_1917: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_90, sub_559);  sub_559 = None
    sum_330: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1917, [0, 2, 3]);  mul_1917 = None
    mul_1918: "f32[512]" = torch.ops.aten.mul.Tensor(sum_329, 0.00048828125)
    unsqueeze_1697: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1918, 0);  mul_1918 = None
    unsqueeze_1698: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1697, 2);  unsqueeze_1697 = None
    unsqueeze_1699: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1698, 3);  unsqueeze_1698 = None
    mul_1919: "f32[512]" = torch.ops.aten.mul.Tensor(sum_330, 0.00048828125)
    mul_1920: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_142, squeeze_142)
    mul_1921: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1919, mul_1920);  mul_1919 = mul_1920 = None
    unsqueeze_1700: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1921, 0);  mul_1921 = None
    unsqueeze_1701: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1700, 2);  unsqueeze_1700 = None
    unsqueeze_1702: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1701, 3);  unsqueeze_1701 = None
    mul_1922: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_142, primals_173);  primals_173 = None
    unsqueeze_1703: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1922, 0);  mul_1922 = None
    unsqueeze_1704: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1703, 2);  unsqueeze_1703 = None
    unsqueeze_1705: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1704, 3);  unsqueeze_1704 = None
    sub_560: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_57, unsqueeze_1696);  convolution_57 = unsqueeze_1696 = None
    mul_1923: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_560, unsqueeze_1702);  sub_560 = unsqueeze_1702 = None
    sub_561: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_90, mul_1923);  where_90 = mul_1923 = None
    sub_562: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_561, unsqueeze_1699);  sub_561 = unsqueeze_1699 = None
    mul_1924: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_562, unsqueeze_1705);  sub_562 = unsqueeze_1705 = None
    mul_1925: "f32[512]" = torch.ops.aten.mul.Tensor(sum_330, squeeze_142);  sum_330 = squeeze_142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_114 = torch.ops.aten.convolution_backward.default(mul_1924, relu_43, primals_172, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1924 = primals_172 = None
    getitem_622: "f32[8, 256, 16, 16]" = convolution_backward_114[0]
    getitem_623: "f32[512, 128, 3, 3]" = convolution_backward_114[1];  convolution_backward_114 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_465: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_43);  relu_43 = None
    alias_466: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_465);  alias_465 = None
    le_91: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_466, 0);  alias_466 = None
    scalar_tensor_91: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_91: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_91, scalar_tensor_91, getitem_622);  le_91 = scalar_tensor_91 = getitem_622 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1706: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_138, 0);  squeeze_138 = None
    unsqueeze_1707: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1706, 2);  unsqueeze_1706 = None
    unsqueeze_1708: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1707, 3);  unsqueeze_1707 = None
    sum_331: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_91, [0, 2, 3])
    sub_563: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_56, unsqueeze_1708)
    mul_1926: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_91, sub_563);  sub_563 = None
    sum_332: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1926, [0, 2, 3]);  mul_1926 = None
    mul_1927: "f32[256]" = torch.ops.aten.mul.Tensor(sum_331, 0.00048828125)
    unsqueeze_1709: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1927, 0);  mul_1927 = None
    unsqueeze_1710: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1709, 2);  unsqueeze_1709 = None
    unsqueeze_1711: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1710, 3);  unsqueeze_1710 = None
    mul_1928: "f32[256]" = torch.ops.aten.mul.Tensor(sum_332, 0.00048828125)
    mul_1929: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_139, squeeze_139)
    mul_1930: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1928, mul_1929);  mul_1928 = mul_1929 = None
    unsqueeze_1712: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1930, 0);  mul_1930 = None
    unsqueeze_1713: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1712, 2);  unsqueeze_1712 = None
    unsqueeze_1714: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1713, 3);  unsqueeze_1713 = None
    mul_1931: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_139, primals_170);  primals_170 = None
    unsqueeze_1715: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1931, 0);  mul_1931 = None
    unsqueeze_1716: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1715, 2);  unsqueeze_1715 = None
    unsqueeze_1717: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1716, 3);  unsqueeze_1716 = None
    sub_564: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_56, unsqueeze_1708);  convolution_56 = unsqueeze_1708 = None
    mul_1932: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_564, unsqueeze_1714);  sub_564 = unsqueeze_1714 = None
    sub_565: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_91, mul_1932);  where_91 = mul_1932 = None
    sub_566: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_565, unsqueeze_1711);  sub_565 = unsqueeze_1711 = None
    mul_1933: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_566, unsqueeze_1717);  sub_566 = unsqueeze_1717 = None
    mul_1934: "f32[256]" = torch.ops.aten.mul.Tensor(sum_332, squeeze_139);  sum_332 = squeeze_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_115 = torch.ops.aten.convolution_backward.default(mul_1933, relu_42, primals_169, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1933 = primals_169 = None
    getitem_625: "f32[8, 1024, 16, 16]" = convolution_backward_115[0]
    getitem_626: "f32[256, 1024, 1, 1]" = convolution_backward_115[1];  convolution_backward_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_773: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_88, getitem_625);  where_88 = getitem_625 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_468: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_42);  relu_42 = None
    alias_469: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_468);  alias_468 = None
    le_92: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_469, 0);  alias_469 = None
    scalar_tensor_92: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_92: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_92, scalar_tensor_92, add_773);  le_92 = scalar_tensor_92 = add_773 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1718: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_135, 0);  squeeze_135 = None
    unsqueeze_1719: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1718, 2);  unsqueeze_1718 = None
    unsqueeze_1720: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1719, 3);  unsqueeze_1719 = None
    sum_333: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_92, [0, 2, 3])
    sub_567: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_55, unsqueeze_1720)
    mul_1935: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_92, sub_567);  sub_567 = None
    sum_334: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1935, [0, 2, 3]);  mul_1935 = None
    mul_1936: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_333, 0.00048828125)
    unsqueeze_1721: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1936, 0);  mul_1936 = None
    unsqueeze_1722: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1721, 2);  unsqueeze_1721 = None
    unsqueeze_1723: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1722, 3);  unsqueeze_1722 = None
    mul_1937: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_334, 0.00048828125)
    mul_1938: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_136, squeeze_136)
    mul_1939: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1937, mul_1938);  mul_1937 = mul_1938 = None
    unsqueeze_1724: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1939, 0);  mul_1939 = None
    unsqueeze_1725: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1724, 2);  unsqueeze_1724 = None
    unsqueeze_1726: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1725, 3);  unsqueeze_1725 = None
    mul_1940: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_136, primals_167);  primals_167 = None
    unsqueeze_1727: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1940, 0);  mul_1940 = None
    unsqueeze_1728: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1727, 2);  unsqueeze_1727 = None
    unsqueeze_1729: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1728, 3);  unsqueeze_1728 = None
    sub_568: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_55, unsqueeze_1720);  convolution_55 = unsqueeze_1720 = None
    mul_1941: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_568, unsqueeze_1726);  sub_568 = unsqueeze_1726 = None
    sub_569: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_92, mul_1941);  mul_1941 = None
    sub_570: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_569, unsqueeze_1723);  sub_569 = unsqueeze_1723 = None
    mul_1942: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_570, unsqueeze_1729);  sub_570 = unsqueeze_1729 = None
    mul_1943: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_334, squeeze_136);  sum_334 = squeeze_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_116 = torch.ops.aten.convolution_backward.default(mul_1942, sum_30, primals_166, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1942 = sum_30 = primals_166 = None
    getitem_628: "f32[8, 256, 16, 16]" = convolution_backward_116[0]
    getitem_629: "f32[1024, 256, 1, 1]" = convolution_backward_116[1];  convolution_backward_116 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1730: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_628, 1);  getitem_628 = None
    expand_70: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1730, [8, 2, 256, 16, 16]);  unsqueeze_1730 = None
    mul_1944: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_70, view_55);  view_55 = None
    mul_1945: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_70, view_59);  expand_70 = view_59 = None
    sum_335: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1944, [3, 4], True);  mul_1944 = None
    view_316: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_335, [8, 512, 1, 1]);  sum_335 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_317: "f32[8, 512]" = torch.ops.aten.view.default(view_316, [8, 512]);  view_316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_318: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_317, [8, 2, 1, 256]);  view_317 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_470: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_51);  alias_51 = None
    mul_1946: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_318, alias_470);  view_318 = None
    sum_336: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1946, [1], True)
    mul_1947: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_470, sum_336);  alias_470 = sum_336 = None
    sub_571: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1946, mul_1947);  mul_1946 = mul_1947 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_61: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_571, [0, 2, 1, 3]);  sub_571 = None
    view_319: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_61, [8, 512, 1, 1]);  permute_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_117 = torch.ops.aten.convolution_backward.default(view_319, relu_41, primals_164, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_319 = primals_164 = None
    getitem_631: "f32[8, 128, 1, 1]" = convolution_backward_117[0]
    getitem_632: "f32[512, 128, 1, 1]" = convolution_backward_117[1]
    getitem_633: "f32[512]" = convolution_backward_117[2];  convolution_backward_117 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_472: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_41);  relu_41 = None
    alias_473: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_472);  alias_472 = None
    le_93: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_473, 0);  alias_473 = None
    scalar_tensor_93: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_93: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_93, scalar_tensor_93, getitem_631);  le_93 = scalar_tensor_93 = getitem_631 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1731: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_132, 0);  squeeze_132 = None
    unsqueeze_1732: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1731, 2);  unsqueeze_1731 = None
    unsqueeze_1733: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1732, 3);  unsqueeze_1732 = None
    sum_337: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_93, [0, 2, 3])
    sub_572: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_53, unsqueeze_1733)
    mul_1948: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_93, sub_572);  sub_572 = None
    sum_338: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1948, [0, 2, 3]);  mul_1948 = None
    mul_1949: "f32[128]" = torch.ops.aten.mul.Tensor(sum_337, 0.125)
    unsqueeze_1734: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1949, 0);  mul_1949 = None
    unsqueeze_1735: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1734, 2);  unsqueeze_1734 = None
    unsqueeze_1736: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1735, 3);  unsqueeze_1735 = None
    mul_1950: "f32[128]" = torch.ops.aten.mul.Tensor(sum_338, 0.125)
    mul_1951: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_133, squeeze_133)
    mul_1952: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1950, mul_1951);  mul_1950 = mul_1951 = None
    unsqueeze_1737: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1952, 0);  mul_1952 = None
    unsqueeze_1738: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1737, 2);  unsqueeze_1737 = None
    unsqueeze_1739: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1738, 3);  unsqueeze_1738 = None
    mul_1953: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_133, primals_162);  primals_162 = None
    unsqueeze_1740: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1953, 0);  mul_1953 = None
    unsqueeze_1741: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1740, 2);  unsqueeze_1740 = None
    unsqueeze_1742: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1741, 3);  unsqueeze_1741 = None
    sub_573: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_53, unsqueeze_1733);  convolution_53 = unsqueeze_1733 = None
    mul_1954: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_573, unsqueeze_1739);  sub_573 = unsqueeze_1739 = None
    sub_574: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_93, mul_1954);  where_93 = mul_1954 = None
    sub_575: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_574, unsqueeze_1736);  sub_574 = unsqueeze_1736 = None
    mul_1955: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_575, unsqueeze_1742);  sub_575 = unsqueeze_1742 = None
    mul_1956: "f32[128]" = torch.ops.aten.mul.Tensor(sum_338, squeeze_133);  sum_338 = squeeze_133 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_118 = torch.ops.aten.convolution_backward.default(mul_1955, mean_9, primals_160, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1955 = mean_9 = primals_160 = None
    getitem_634: "f32[8, 256, 1, 1]" = convolution_backward_118[0]
    getitem_635: "f32[128, 256, 1, 1]" = convolution_backward_118[1]
    getitem_636: "f32[128]" = convolution_backward_118[2];  convolution_backward_118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_71: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_634, [8, 256, 16, 16]);  getitem_634 = None
    div_57: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_71, 256);  expand_71 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1743: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_57, 1);  div_57 = None
    expand_72: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1743, [8, 2, 256, 16, 16]);  unsqueeze_1743 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_774: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1945, expand_72);  mul_1945 = expand_72 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_320: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_774, [8, 512, 16, 16]);  add_774 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_475: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_40);  relu_40 = None
    alias_476: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_475);  alias_475 = None
    le_94: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_476, 0);  alias_476 = None
    scalar_tensor_94: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_94: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_94, scalar_tensor_94, view_320);  le_94 = scalar_tensor_94 = view_320 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1744: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_129, 0);  squeeze_129 = None
    unsqueeze_1745: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1744, 2);  unsqueeze_1744 = None
    unsqueeze_1746: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1745, 3);  unsqueeze_1745 = None
    sum_339: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_94, [0, 2, 3])
    sub_576: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_52, unsqueeze_1746)
    mul_1957: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_94, sub_576);  sub_576 = None
    sum_340: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1957, [0, 2, 3]);  mul_1957 = None
    mul_1958: "f32[512]" = torch.ops.aten.mul.Tensor(sum_339, 0.00048828125)
    unsqueeze_1747: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1958, 0);  mul_1958 = None
    unsqueeze_1748: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1747, 2);  unsqueeze_1747 = None
    unsqueeze_1749: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1748, 3);  unsqueeze_1748 = None
    mul_1959: "f32[512]" = torch.ops.aten.mul.Tensor(sum_340, 0.00048828125)
    mul_1960: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_130, squeeze_130)
    mul_1961: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1959, mul_1960);  mul_1959 = mul_1960 = None
    unsqueeze_1750: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1961, 0);  mul_1961 = None
    unsqueeze_1751: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1750, 2);  unsqueeze_1750 = None
    unsqueeze_1752: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1751, 3);  unsqueeze_1751 = None
    mul_1962: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_130, primals_158);  primals_158 = None
    unsqueeze_1753: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1962, 0);  mul_1962 = None
    unsqueeze_1754: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1753, 2);  unsqueeze_1753 = None
    unsqueeze_1755: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1754, 3);  unsqueeze_1754 = None
    sub_577: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_52, unsqueeze_1746);  convolution_52 = unsqueeze_1746 = None
    mul_1963: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_577, unsqueeze_1752);  sub_577 = unsqueeze_1752 = None
    sub_578: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_94, mul_1963);  where_94 = mul_1963 = None
    sub_579: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_578, unsqueeze_1749);  sub_578 = unsqueeze_1749 = None
    mul_1964: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_579, unsqueeze_1755);  sub_579 = unsqueeze_1755 = None
    mul_1965: "f32[512]" = torch.ops.aten.mul.Tensor(sum_340, squeeze_130);  sum_340 = squeeze_130 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_119 = torch.ops.aten.convolution_backward.default(mul_1964, relu_39, primals_157, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_1964 = primals_157 = None
    getitem_637: "f32[8, 256, 16, 16]" = convolution_backward_119[0]
    getitem_638: "f32[512, 128, 3, 3]" = convolution_backward_119[1];  convolution_backward_119 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_478: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_39);  relu_39 = None
    alias_479: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_478);  alias_478 = None
    le_95: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_479, 0);  alias_479 = None
    scalar_tensor_95: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_95: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_95, scalar_tensor_95, getitem_637);  le_95 = scalar_tensor_95 = getitem_637 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1756: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_126, 0);  squeeze_126 = None
    unsqueeze_1757: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1756, 2);  unsqueeze_1756 = None
    unsqueeze_1758: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1757, 3);  unsqueeze_1757 = None
    sum_341: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_95, [0, 2, 3])
    sub_580: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_51, unsqueeze_1758)
    mul_1966: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_95, sub_580);  sub_580 = None
    sum_342: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_1966, [0, 2, 3]);  mul_1966 = None
    mul_1967: "f32[256]" = torch.ops.aten.mul.Tensor(sum_341, 0.00048828125)
    unsqueeze_1759: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1967, 0);  mul_1967 = None
    unsqueeze_1760: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1759, 2);  unsqueeze_1759 = None
    unsqueeze_1761: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1760, 3);  unsqueeze_1760 = None
    mul_1968: "f32[256]" = torch.ops.aten.mul.Tensor(sum_342, 0.00048828125)
    mul_1969: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_127, squeeze_127)
    mul_1970: "f32[256]" = torch.ops.aten.mul.Tensor(mul_1968, mul_1969);  mul_1968 = mul_1969 = None
    unsqueeze_1762: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1970, 0);  mul_1970 = None
    unsqueeze_1763: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1762, 2);  unsqueeze_1762 = None
    unsqueeze_1764: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1763, 3);  unsqueeze_1763 = None
    mul_1971: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_127, primals_155);  primals_155 = None
    unsqueeze_1765: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_1971, 0);  mul_1971 = None
    unsqueeze_1766: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1765, 2);  unsqueeze_1765 = None
    unsqueeze_1767: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1766, 3);  unsqueeze_1766 = None
    sub_581: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_51, unsqueeze_1758);  convolution_51 = unsqueeze_1758 = None
    mul_1972: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_581, unsqueeze_1764);  sub_581 = unsqueeze_1764 = None
    sub_582: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_95, mul_1972);  where_95 = mul_1972 = None
    sub_583: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_582, unsqueeze_1761);  sub_582 = unsqueeze_1761 = None
    mul_1973: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_583, unsqueeze_1767);  sub_583 = unsqueeze_1767 = None
    mul_1974: "f32[256]" = torch.ops.aten.mul.Tensor(sum_342, squeeze_127);  sum_342 = squeeze_127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_120 = torch.ops.aten.convolution_backward.default(mul_1973, relu_38, primals_154, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1973 = primals_154 = None
    getitem_640: "f32[8, 1024, 16, 16]" = convolution_backward_120[0]
    getitem_641: "f32[256, 1024, 1, 1]" = convolution_backward_120[1];  convolution_backward_120 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_775: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_92, getitem_640);  where_92 = getitem_640 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_481: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_38);  relu_38 = None
    alias_482: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_481);  alias_481 = None
    le_96: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_482, 0);  alias_482 = None
    scalar_tensor_96: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_96: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_96, scalar_tensor_96, add_775);  le_96 = scalar_tensor_96 = add_775 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1768: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_123, 0);  squeeze_123 = None
    unsqueeze_1769: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1768, 2);  unsqueeze_1768 = None
    unsqueeze_1770: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1769, 3);  unsqueeze_1769 = None
    sum_343: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_96, [0, 2, 3])
    sub_584: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_50, unsqueeze_1770)
    mul_1975: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_96, sub_584);  sub_584 = None
    sum_344: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_1975, [0, 2, 3]);  mul_1975 = None
    mul_1976: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_343, 0.00048828125)
    unsqueeze_1771: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1976, 0);  mul_1976 = None
    unsqueeze_1772: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1771, 2);  unsqueeze_1771 = None
    unsqueeze_1773: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1772, 3);  unsqueeze_1772 = None
    mul_1977: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_344, 0.00048828125)
    mul_1978: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_124, squeeze_124)
    mul_1979: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_1977, mul_1978);  mul_1977 = mul_1978 = None
    unsqueeze_1774: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1979, 0);  mul_1979 = None
    unsqueeze_1775: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1774, 2);  unsqueeze_1774 = None
    unsqueeze_1776: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1775, 3);  unsqueeze_1775 = None
    mul_1980: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_124, primals_152);  primals_152 = None
    unsqueeze_1777: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_1980, 0);  mul_1980 = None
    unsqueeze_1778: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1777, 2);  unsqueeze_1777 = None
    unsqueeze_1779: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1778, 3);  unsqueeze_1778 = None
    sub_585: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_50, unsqueeze_1770);  convolution_50 = unsqueeze_1770 = None
    mul_1981: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_585, unsqueeze_1776);  sub_585 = unsqueeze_1776 = None
    sub_586: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_96, mul_1981);  mul_1981 = None
    sub_587: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_586, unsqueeze_1773);  sub_586 = unsqueeze_1773 = None
    mul_1982: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_587, unsqueeze_1779);  sub_587 = unsqueeze_1779 = None
    mul_1983: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_344, squeeze_124);  sum_344 = squeeze_124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_121 = torch.ops.aten.convolution_backward.default(mul_1982, sum_27, primals_151, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_1982 = sum_27 = primals_151 = None
    getitem_643: "f32[8, 256, 16, 16]" = convolution_backward_121[0]
    getitem_644: "f32[1024, 256, 1, 1]" = convolution_backward_121[1];  convolution_backward_121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1780: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(getitem_643, 1);  getitem_643 = None
    expand_73: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1780, [8, 2, 256, 16, 16]);  unsqueeze_1780 = None
    mul_1984: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_73, view_49);  view_49 = None
    mul_1985: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.mul.Tensor(expand_73, view_53);  expand_73 = view_53 = None
    sum_345: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_1984, [3, 4], True);  mul_1984 = None
    view_321: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_345, [8, 512, 1, 1]);  sum_345 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_322: "f32[8, 512]" = torch.ops.aten.view.default(view_321, [8, 512]);  view_321 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_323: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_322, [8, 2, 1, 256]);  view_322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_483: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_46);  alias_46 = None
    mul_1986: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_323, alias_483);  view_323 = None
    sum_346: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_1986, [1], True)
    mul_1987: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_483, sum_346);  alias_483 = sum_346 = None
    sub_588: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_1986, mul_1987);  mul_1986 = mul_1987 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_62: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_588, [0, 2, 1, 3]);  sub_588 = None
    view_324: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_62, [8, 512, 1, 1]);  permute_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_122 = torch.ops.aten.convolution_backward.default(view_324, relu_37, primals_149, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_324 = primals_149 = None
    getitem_646: "f32[8, 128, 1, 1]" = convolution_backward_122[0]
    getitem_647: "f32[512, 128, 1, 1]" = convolution_backward_122[1]
    getitem_648: "f32[512]" = convolution_backward_122[2];  convolution_backward_122 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_485: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_37);  relu_37 = None
    alias_486: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_485);  alias_485 = None
    le_97: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_486, 0);  alias_486 = None
    scalar_tensor_97: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_97: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_97, scalar_tensor_97, getitem_646);  le_97 = scalar_tensor_97 = getitem_646 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1781: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_120, 0);  squeeze_120 = None
    unsqueeze_1782: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1781, 2);  unsqueeze_1781 = None
    unsqueeze_1783: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1782, 3);  unsqueeze_1782 = None
    sum_347: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_97, [0, 2, 3])
    sub_589: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_48, unsqueeze_1783)
    mul_1988: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_97, sub_589);  sub_589 = None
    sum_348: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_1988, [0, 2, 3]);  mul_1988 = None
    mul_1989: "f32[128]" = torch.ops.aten.mul.Tensor(sum_347, 0.125)
    unsqueeze_1784: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1989, 0);  mul_1989 = None
    unsqueeze_1785: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1784, 2);  unsqueeze_1784 = None
    unsqueeze_1786: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1785, 3);  unsqueeze_1785 = None
    mul_1990: "f32[128]" = torch.ops.aten.mul.Tensor(sum_348, 0.125)
    mul_1991: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_121, squeeze_121)
    mul_1992: "f32[128]" = torch.ops.aten.mul.Tensor(mul_1990, mul_1991);  mul_1990 = mul_1991 = None
    unsqueeze_1787: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1992, 0);  mul_1992 = None
    unsqueeze_1788: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1787, 2);  unsqueeze_1787 = None
    unsqueeze_1789: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1788, 3);  unsqueeze_1788 = None
    mul_1993: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_121, primals_147);  primals_147 = None
    unsqueeze_1790: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_1993, 0);  mul_1993 = None
    unsqueeze_1791: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1790, 2);  unsqueeze_1790 = None
    unsqueeze_1792: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1791, 3);  unsqueeze_1791 = None
    sub_590: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_48, unsqueeze_1783);  convolution_48 = unsqueeze_1783 = None
    mul_1994: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_590, unsqueeze_1789);  sub_590 = unsqueeze_1789 = None
    sub_591: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_97, mul_1994);  where_97 = mul_1994 = None
    sub_592: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_591, unsqueeze_1786);  sub_591 = unsqueeze_1786 = None
    mul_1995: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_592, unsqueeze_1792);  sub_592 = unsqueeze_1792 = None
    mul_1996: "f32[128]" = torch.ops.aten.mul.Tensor(sum_348, squeeze_121);  sum_348 = squeeze_121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_123 = torch.ops.aten.convolution_backward.default(mul_1995, mean_8, primals_145, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_1995 = mean_8 = primals_145 = None
    getitem_649: "f32[8, 256, 1, 1]" = convolution_backward_123[0]
    getitem_650: "f32[128, 256, 1, 1]" = convolution_backward_123[1]
    getitem_651: "f32[128]" = convolution_backward_123[2];  convolution_backward_123 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_74: "f32[8, 256, 16, 16]" = torch.ops.aten.expand.default(getitem_649, [8, 256, 16, 16]);  getitem_649 = None
    div_58: "f32[8, 256, 16, 16]" = torch.ops.aten.div.Scalar(expand_74, 256);  expand_74 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1793: "f32[8, 1, 256, 16, 16]" = torch.ops.aten.unsqueeze.default(div_58, 1);  div_58 = None
    expand_75: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.expand.default(unsqueeze_1793, [8, 2, 256, 16, 16]);  unsqueeze_1793 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_776: "f32[8, 2, 256, 16, 16]" = torch.ops.aten.add.Tensor(mul_1985, expand_75);  mul_1985 = expand_75 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_325: "f32[8, 512, 16, 16]" = torch.ops.aten.view.default(add_776, [8, 512, 16, 16]);  add_776 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_488: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(relu_36);  relu_36 = None
    alias_489: "f32[8, 512, 16, 16]" = torch.ops.aten.alias.default(alias_488);  alias_488 = None
    le_98: "b8[8, 512, 16, 16]" = torch.ops.aten.le.Scalar(alias_489, 0);  alias_489 = None
    scalar_tensor_98: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_98: "f32[8, 512, 16, 16]" = torch.ops.aten.where.self(le_98, scalar_tensor_98, view_325);  le_98 = scalar_tensor_98 = view_325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1794: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_117, 0);  squeeze_117 = None
    unsqueeze_1795: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1794, 2);  unsqueeze_1794 = None
    unsqueeze_1796: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1795, 3);  unsqueeze_1795 = None
    sum_349: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_98, [0, 2, 3])
    sub_593: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_47, unsqueeze_1796)
    mul_1997: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(where_98, sub_593);  sub_593 = None
    sum_350: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_1997, [0, 2, 3]);  mul_1997 = None
    mul_1998: "f32[512]" = torch.ops.aten.mul.Tensor(sum_349, 0.00048828125)
    unsqueeze_1797: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_1998, 0);  mul_1998 = None
    unsqueeze_1798: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1797, 2);  unsqueeze_1797 = None
    unsqueeze_1799: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1798, 3);  unsqueeze_1798 = None
    mul_1999: "f32[512]" = torch.ops.aten.mul.Tensor(sum_350, 0.00048828125)
    mul_2000: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_118, squeeze_118)
    mul_2001: "f32[512]" = torch.ops.aten.mul.Tensor(mul_1999, mul_2000);  mul_1999 = mul_2000 = None
    unsqueeze_1800: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2001, 0);  mul_2001 = None
    unsqueeze_1801: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1800, 2);  unsqueeze_1800 = None
    unsqueeze_1802: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1801, 3);  unsqueeze_1801 = None
    mul_2002: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_118, primals_143);  primals_143 = None
    unsqueeze_1803: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2002, 0);  mul_2002 = None
    unsqueeze_1804: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1803, 2);  unsqueeze_1803 = None
    unsqueeze_1805: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1804, 3);  unsqueeze_1804 = None
    sub_594: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_47, unsqueeze_1796);  convolution_47 = unsqueeze_1796 = None
    mul_2003: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_594, unsqueeze_1802);  sub_594 = unsqueeze_1802 = None
    sub_595: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(where_98, mul_2003);  where_98 = mul_2003 = None
    sub_596: "f32[8, 512, 16, 16]" = torch.ops.aten.sub.Tensor(sub_595, unsqueeze_1799);  sub_595 = unsqueeze_1799 = None
    mul_2004: "f32[8, 512, 16, 16]" = torch.ops.aten.mul.Tensor(sub_596, unsqueeze_1805);  sub_596 = unsqueeze_1805 = None
    mul_2005: "f32[512]" = torch.ops.aten.mul.Tensor(sum_350, squeeze_118);  sum_350 = squeeze_118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_124 = torch.ops.aten.convolution_backward.default(mul_2004, relu_35, primals_142, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2004 = primals_142 = None
    getitem_652: "f32[8, 256, 16, 16]" = convolution_backward_124[0]
    getitem_653: "f32[512, 128, 3, 3]" = convolution_backward_124[1];  convolution_backward_124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_491: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(relu_35);  relu_35 = None
    alias_492: "f32[8, 256, 16, 16]" = torch.ops.aten.alias.default(alias_491);  alias_491 = None
    le_99: "b8[8, 256, 16, 16]" = torch.ops.aten.le.Scalar(alias_492, 0);  alias_492 = None
    scalar_tensor_99: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_99: "f32[8, 256, 16, 16]" = torch.ops.aten.where.self(le_99, scalar_tensor_99, getitem_652);  le_99 = scalar_tensor_99 = getitem_652 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1806: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_114, 0);  squeeze_114 = None
    unsqueeze_1807: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1806, 2);  unsqueeze_1806 = None
    unsqueeze_1808: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1807, 3);  unsqueeze_1807 = None
    sum_351: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_99, [0, 2, 3])
    sub_597: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_46, unsqueeze_1808)
    mul_2006: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(where_99, sub_597);  sub_597 = None
    sum_352: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2006, [0, 2, 3]);  mul_2006 = None
    mul_2007: "f32[256]" = torch.ops.aten.mul.Tensor(sum_351, 0.00048828125)
    unsqueeze_1809: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2007, 0);  mul_2007 = None
    unsqueeze_1810: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1809, 2);  unsqueeze_1809 = None
    unsqueeze_1811: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1810, 3);  unsqueeze_1810 = None
    mul_2008: "f32[256]" = torch.ops.aten.mul.Tensor(sum_352, 0.00048828125)
    mul_2009: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_115, squeeze_115)
    mul_2010: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2008, mul_2009);  mul_2008 = mul_2009 = None
    unsqueeze_1812: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2010, 0);  mul_2010 = None
    unsqueeze_1813: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1812, 2);  unsqueeze_1812 = None
    unsqueeze_1814: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1813, 3);  unsqueeze_1813 = None
    mul_2011: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_115, primals_140);  primals_140 = None
    unsqueeze_1815: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2011, 0);  mul_2011 = None
    unsqueeze_1816: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1815, 2);  unsqueeze_1815 = None
    unsqueeze_1817: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1816, 3);  unsqueeze_1816 = None
    sub_598: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_46, unsqueeze_1808);  convolution_46 = unsqueeze_1808 = None
    mul_2012: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_598, unsqueeze_1814);  sub_598 = unsqueeze_1814 = None
    sub_599: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(where_99, mul_2012);  where_99 = mul_2012 = None
    sub_600: "f32[8, 256, 16, 16]" = torch.ops.aten.sub.Tensor(sub_599, unsqueeze_1811);  sub_599 = unsqueeze_1811 = None
    mul_2013: "f32[8, 256, 16, 16]" = torch.ops.aten.mul.Tensor(sub_600, unsqueeze_1817);  sub_600 = unsqueeze_1817 = None
    mul_2014: "f32[256]" = torch.ops.aten.mul.Tensor(sum_352, squeeze_115);  sum_352 = squeeze_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_125 = torch.ops.aten.convolution_backward.default(mul_2013, relu_34, primals_139, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2013 = primals_139 = None
    getitem_655: "f32[8, 1024, 16, 16]" = convolution_backward_125[0]
    getitem_656: "f32[256, 1024, 1, 1]" = convolution_backward_125[1];  convolution_backward_125 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_777: "f32[8, 1024, 16, 16]" = torch.ops.aten.add.Tensor(where_96, getitem_655);  where_96 = getitem_655 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_494: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(relu_34);  relu_34 = None
    alias_495: "f32[8, 1024, 16, 16]" = torch.ops.aten.alias.default(alias_494);  alias_494 = None
    le_100: "b8[8, 1024, 16, 16]" = torch.ops.aten.le.Scalar(alias_495, 0);  alias_495 = None
    scalar_tensor_100: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_100: "f32[8, 1024, 16, 16]" = torch.ops.aten.where.self(le_100, scalar_tensor_100, add_777);  le_100 = scalar_tensor_100 = add_777 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    unsqueeze_1818: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_111, 0);  squeeze_111 = None
    unsqueeze_1819: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1818, 2);  unsqueeze_1818 = None
    unsqueeze_1820: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1819, 3);  unsqueeze_1819 = None
    sum_353: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_100, [0, 2, 3])
    sub_601: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_45, unsqueeze_1820)
    mul_2015: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_100, sub_601);  sub_601 = None
    sum_354: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_2015, [0, 2, 3]);  mul_2015 = None
    mul_2016: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_353, 0.00048828125)
    unsqueeze_1821: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2016, 0);  mul_2016 = None
    unsqueeze_1822: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1821, 2);  unsqueeze_1821 = None
    unsqueeze_1823: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1822, 3);  unsqueeze_1822 = None
    mul_2017: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_354, 0.00048828125)
    mul_2018: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_112, squeeze_112)
    mul_2019: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2017, mul_2018);  mul_2017 = mul_2018 = None
    unsqueeze_1824: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2019, 0);  mul_2019 = None
    unsqueeze_1825: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1824, 2);  unsqueeze_1824 = None
    unsqueeze_1826: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1825, 3);  unsqueeze_1825 = None
    mul_2020: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_112, primals_137);  primals_137 = None
    unsqueeze_1827: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2020, 0);  mul_2020 = None
    unsqueeze_1828: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1827, 2);  unsqueeze_1827 = None
    unsqueeze_1829: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1828, 3);  unsqueeze_1828 = None
    sub_602: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_45, unsqueeze_1820);  convolution_45 = unsqueeze_1820 = None
    mul_2021: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_602, unsqueeze_1826);  sub_602 = unsqueeze_1826 = None
    sub_603: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_100, mul_2021);  mul_2021 = None
    sub_604: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_603, unsqueeze_1823);  sub_603 = unsqueeze_1823 = None
    mul_2022: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_604, unsqueeze_1829);  sub_604 = unsqueeze_1829 = None
    mul_2023: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_354, squeeze_112);  sum_354 = squeeze_112 = None
    convolution_backward_126 = torch.ops.aten.convolution_backward.default(mul_2022, avg_pool2d_3, primals_136, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2022 = avg_pool2d_3 = primals_136 = None
    getitem_658: "f32[8, 512, 16, 16]" = convolution_backward_126[0]
    getitem_659: "f32[1024, 512, 1, 1]" = convolution_backward_126[1];  convolution_backward_126 = None
    avg_pool2d_backward_2: "f32[8, 512, 32, 32]" = torch.ops.aten.avg_pool2d_backward.default(getitem_658, relu_30, [2, 2], [2, 2], [0, 0], True, False, None);  getitem_658 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1830: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_108, 0);  squeeze_108 = None
    unsqueeze_1831: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1830, 2);  unsqueeze_1830 = None
    unsqueeze_1832: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1831, 3);  unsqueeze_1831 = None
    sum_355: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_100, [0, 2, 3])
    sub_605: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_44, unsqueeze_1832)
    mul_2024: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(where_100, sub_605);  sub_605 = None
    sum_356: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_2024, [0, 2, 3]);  mul_2024 = None
    mul_2025: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_355, 0.00048828125)
    unsqueeze_1833: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2025, 0);  mul_2025 = None
    unsqueeze_1834: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1833, 2);  unsqueeze_1833 = None
    unsqueeze_1835: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1834, 3);  unsqueeze_1834 = None
    mul_2026: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_356, 0.00048828125)
    mul_2027: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_109, squeeze_109)
    mul_2028: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2026, mul_2027);  mul_2026 = mul_2027 = None
    unsqueeze_1836: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2028, 0);  mul_2028 = None
    unsqueeze_1837: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1836, 2);  unsqueeze_1836 = None
    unsqueeze_1838: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1837, 3);  unsqueeze_1837 = None
    mul_2029: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_109, primals_134);  primals_134 = None
    unsqueeze_1839: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2029, 0);  mul_2029 = None
    unsqueeze_1840: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1839, 2);  unsqueeze_1839 = None
    unsqueeze_1841: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1840, 3);  unsqueeze_1840 = None
    sub_606: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(convolution_44, unsqueeze_1832);  convolution_44 = unsqueeze_1832 = None
    mul_2030: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_606, unsqueeze_1838);  sub_606 = unsqueeze_1838 = None
    sub_607: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(where_100, mul_2030);  where_100 = mul_2030 = None
    sub_608: "f32[8, 1024, 16, 16]" = torch.ops.aten.sub.Tensor(sub_607, unsqueeze_1835);  sub_607 = unsqueeze_1835 = None
    mul_2031: "f32[8, 1024, 16, 16]" = torch.ops.aten.mul.Tensor(sub_608, unsqueeze_1841);  sub_608 = unsqueeze_1841 = None
    mul_2032: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_356, squeeze_109);  sum_356 = squeeze_109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_127 = torch.ops.aten.convolution_backward.default(mul_2031, avg_pool2d_2, primals_133, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2031 = avg_pool2d_2 = primals_133 = None
    getitem_661: "f32[8, 256, 16, 16]" = convolution_backward_127[0]
    getitem_662: "f32[1024, 256, 1, 1]" = convolution_backward_127[1];  convolution_backward_127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:107, code: out = self.avd_last(out)
    avg_pool2d_backward_3: "f32[8, 256, 32, 32]" = torch.ops.aten.avg_pool2d_backward.default(getitem_661, sum_24, [3, 3], [2, 2], [1, 1], False, True, None);  getitem_661 = sum_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1842: "f32[8, 1, 256, 32, 32]" = torch.ops.aten.unsqueeze.default(avg_pool2d_backward_3, 1);  avg_pool2d_backward_3 = None
    expand_76: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1842, [8, 2, 256, 32, 32]);  unsqueeze_1842 = None
    mul_2033: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.mul.Tensor(expand_76, view_43);  view_43 = None
    mul_2034: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.mul.Tensor(expand_76, view_47);  expand_76 = view_47 = None
    sum_357: "f32[8, 2, 256, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2033, [3, 4], True);  mul_2033 = None
    view_326: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(sum_357, [8, 512, 1, 1]);  sum_357 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_327: "f32[8, 512]" = torch.ops.aten.view.default(view_326, [8, 512]);  view_326 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_328: "f32[8, 2, 1, 256]" = torch.ops.aten.view.default(view_327, [8, 2, 1, 256]);  view_327 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_496: "f32[8, 2, 1, 256]" = torch.ops.aten.alias.default(alias_41);  alias_41 = None
    mul_2035: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(view_328, alias_496);  view_328 = None
    sum_358: "f32[8, 1, 1, 256]" = torch.ops.aten.sum.dim_IntList(mul_2035, [1], True)
    mul_2036: "f32[8, 2, 1, 256]" = torch.ops.aten.mul.Tensor(alias_496, sum_358);  alias_496 = sum_358 = None
    sub_609: "f32[8, 2, 1, 256]" = torch.ops.aten.sub.Tensor(mul_2035, mul_2036);  mul_2035 = mul_2036 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_63: "f32[8, 1, 2, 256]" = torch.ops.aten.permute.default(sub_609, [0, 2, 1, 3]);  sub_609 = None
    view_329: "f32[8, 512, 1, 1]" = torch.ops.aten.view.default(permute_63, [8, 512, 1, 1]);  permute_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_128 = torch.ops.aten.convolution_backward.default(view_329, relu_33, primals_131, [512], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_329 = primals_131 = None
    getitem_664: "f32[8, 128, 1, 1]" = convolution_backward_128[0]
    getitem_665: "f32[512, 128, 1, 1]" = convolution_backward_128[1]
    getitem_666: "f32[512]" = convolution_backward_128[2];  convolution_backward_128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_498: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(relu_33);  relu_33 = None
    alias_499: "f32[8, 128, 1, 1]" = torch.ops.aten.alias.default(alias_498);  alias_498 = None
    le_101: "b8[8, 128, 1, 1]" = torch.ops.aten.le.Scalar(alias_499, 0);  alias_499 = None
    scalar_tensor_101: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_101: "f32[8, 128, 1, 1]" = torch.ops.aten.where.self(le_101, scalar_tensor_101, getitem_664);  le_101 = scalar_tensor_101 = getitem_664 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1843: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_105, 0);  squeeze_105 = None
    unsqueeze_1844: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1843, 2);  unsqueeze_1843 = None
    unsqueeze_1845: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1844, 3);  unsqueeze_1844 = None
    sum_359: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_101, [0, 2, 3])
    sub_610: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_42, unsqueeze_1845)
    mul_2037: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(where_101, sub_610);  sub_610 = None
    sum_360: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2037, [0, 2, 3]);  mul_2037 = None
    mul_2038: "f32[128]" = torch.ops.aten.mul.Tensor(sum_359, 0.125)
    unsqueeze_1846: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2038, 0);  mul_2038 = None
    unsqueeze_1847: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1846, 2);  unsqueeze_1846 = None
    unsqueeze_1848: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1847, 3);  unsqueeze_1847 = None
    mul_2039: "f32[128]" = torch.ops.aten.mul.Tensor(sum_360, 0.125)
    mul_2040: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_106, squeeze_106)
    mul_2041: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2039, mul_2040);  mul_2039 = mul_2040 = None
    unsqueeze_1849: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2041, 0);  mul_2041 = None
    unsqueeze_1850: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1849, 2);  unsqueeze_1849 = None
    unsqueeze_1851: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1850, 3);  unsqueeze_1850 = None
    mul_2042: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_106, primals_129);  primals_129 = None
    unsqueeze_1852: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2042, 0);  mul_2042 = None
    unsqueeze_1853: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1852, 2);  unsqueeze_1852 = None
    unsqueeze_1854: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1853, 3);  unsqueeze_1853 = None
    sub_611: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_42, unsqueeze_1845);  convolution_42 = unsqueeze_1845 = None
    mul_2043: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_611, unsqueeze_1851);  sub_611 = unsqueeze_1851 = None
    sub_612: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(where_101, mul_2043);  where_101 = mul_2043 = None
    sub_613: "f32[8, 128, 1, 1]" = torch.ops.aten.sub.Tensor(sub_612, unsqueeze_1848);  sub_612 = unsqueeze_1848 = None
    mul_2044: "f32[8, 128, 1, 1]" = torch.ops.aten.mul.Tensor(sub_613, unsqueeze_1854);  sub_613 = unsqueeze_1854 = None
    mul_2045: "f32[128]" = torch.ops.aten.mul.Tensor(sum_360, squeeze_106);  sum_360 = squeeze_106 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_129 = torch.ops.aten.convolution_backward.default(mul_2044, mean_7, primals_127, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2044 = mean_7 = primals_127 = None
    getitem_667: "f32[8, 256, 1, 1]" = convolution_backward_129[0]
    getitem_668: "f32[128, 256, 1, 1]" = convolution_backward_129[1]
    getitem_669: "f32[128]" = convolution_backward_129[2];  convolution_backward_129 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_77: "f32[8, 256, 32, 32]" = torch.ops.aten.expand.default(getitem_667, [8, 256, 32, 32]);  getitem_667 = None
    div_59: "f32[8, 256, 32, 32]" = torch.ops.aten.div.Scalar(expand_77, 1024);  expand_77 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1855: "f32[8, 1, 256, 32, 32]" = torch.ops.aten.unsqueeze.default(div_59, 1);  div_59 = None
    expand_78: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1855, [8, 2, 256, 32, 32]);  unsqueeze_1855 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_778: "f32[8, 2, 256, 32, 32]" = torch.ops.aten.add.Tensor(mul_2034, expand_78);  mul_2034 = expand_78 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_330: "f32[8, 512, 32, 32]" = torch.ops.aten.view.default(add_778, [8, 512, 32, 32]);  add_778 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_501: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(relu_32);  relu_32 = None
    alias_502: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(alias_501);  alias_501 = None
    le_102: "b8[8, 512, 32, 32]" = torch.ops.aten.le.Scalar(alias_502, 0);  alias_502 = None
    scalar_tensor_102: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_102: "f32[8, 512, 32, 32]" = torch.ops.aten.where.self(le_102, scalar_tensor_102, view_330);  le_102 = scalar_tensor_102 = view_330 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1856: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_102, 0);  squeeze_102 = None
    unsqueeze_1857: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1856, 2);  unsqueeze_1856 = None
    unsqueeze_1858: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1857, 3);  unsqueeze_1857 = None
    sum_361: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_102, [0, 2, 3])
    sub_614: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_41, unsqueeze_1858)
    mul_2046: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(where_102, sub_614);  sub_614 = None
    sum_362: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2046, [0, 2, 3]);  mul_2046 = None
    mul_2047: "f32[512]" = torch.ops.aten.mul.Tensor(sum_361, 0.0001220703125)
    unsqueeze_1859: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2047, 0);  mul_2047 = None
    unsqueeze_1860: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1859, 2);  unsqueeze_1859 = None
    unsqueeze_1861: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1860, 3);  unsqueeze_1860 = None
    mul_2048: "f32[512]" = torch.ops.aten.mul.Tensor(sum_362, 0.0001220703125)
    mul_2049: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_103, squeeze_103)
    mul_2050: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2048, mul_2049);  mul_2048 = mul_2049 = None
    unsqueeze_1862: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2050, 0);  mul_2050 = None
    unsqueeze_1863: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1862, 2);  unsqueeze_1862 = None
    unsqueeze_1864: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1863, 3);  unsqueeze_1863 = None
    mul_2051: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_103, primals_125);  primals_125 = None
    unsqueeze_1865: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2051, 0);  mul_2051 = None
    unsqueeze_1866: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1865, 2);  unsqueeze_1865 = None
    unsqueeze_1867: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1866, 3);  unsqueeze_1866 = None
    sub_615: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_41, unsqueeze_1858);  convolution_41 = unsqueeze_1858 = None
    mul_2052: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_615, unsqueeze_1864);  sub_615 = unsqueeze_1864 = None
    sub_616: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(where_102, mul_2052);  where_102 = mul_2052 = None
    sub_617: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(sub_616, unsqueeze_1861);  sub_616 = unsqueeze_1861 = None
    mul_2053: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_617, unsqueeze_1867);  sub_617 = unsqueeze_1867 = None
    mul_2054: "f32[512]" = torch.ops.aten.mul.Tensor(sum_362, squeeze_103);  sum_362 = squeeze_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_130 = torch.ops.aten.convolution_backward.default(mul_2053, relu_31, primals_124, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2053 = primals_124 = None
    getitem_670: "f32[8, 256, 32, 32]" = convolution_backward_130[0]
    getitem_671: "f32[512, 128, 3, 3]" = convolution_backward_130[1];  convolution_backward_130 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_504: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(relu_31);  relu_31 = None
    alias_505: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(alias_504);  alias_504 = None
    le_103: "b8[8, 256, 32, 32]" = torch.ops.aten.le.Scalar(alias_505, 0);  alias_505 = None
    scalar_tensor_103: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_103: "f32[8, 256, 32, 32]" = torch.ops.aten.where.self(le_103, scalar_tensor_103, getitem_670);  le_103 = scalar_tensor_103 = getitem_670 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1868: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_99, 0);  squeeze_99 = None
    unsqueeze_1869: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1868, 2);  unsqueeze_1868 = None
    unsqueeze_1870: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1869, 3);  unsqueeze_1869 = None
    sum_363: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_103, [0, 2, 3])
    sub_618: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_40, unsqueeze_1870)
    mul_2055: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(where_103, sub_618);  sub_618 = None
    sum_364: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2055, [0, 2, 3]);  mul_2055 = None
    mul_2056: "f32[256]" = torch.ops.aten.mul.Tensor(sum_363, 0.0001220703125)
    unsqueeze_1871: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2056, 0);  mul_2056 = None
    unsqueeze_1872: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1871, 2);  unsqueeze_1871 = None
    unsqueeze_1873: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1872, 3);  unsqueeze_1872 = None
    mul_2057: "f32[256]" = torch.ops.aten.mul.Tensor(sum_364, 0.0001220703125)
    mul_2058: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_100, squeeze_100)
    mul_2059: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2057, mul_2058);  mul_2057 = mul_2058 = None
    unsqueeze_1874: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2059, 0);  mul_2059 = None
    unsqueeze_1875: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1874, 2);  unsqueeze_1874 = None
    unsqueeze_1876: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1875, 3);  unsqueeze_1875 = None
    mul_2060: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_100, primals_122);  primals_122 = None
    unsqueeze_1877: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2060, 0);  mul_2060 = None
    unsqueeze_1878: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1877, 2);  unsqueeze_1877 = None
    unsqueeze_1879: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1878, 3);  unsqueeze_1878 = None
    sub_619: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_40, unsqueeze_1870);  convolution_40 = unsqueeze_1870 = None
    mul_2061: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_619, unsqueeze_1876);  sub_619 = unsqueeze_1876 = None
    sub_620: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(where_103, mul_2061);  where_103 = mul_2061 = None
    sub_621: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(sub_620, unsqueeze_1873);  sub_620 = unsqueeze_1873 = None
    mul_2062: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_621, unsqueeze_1879);  sub_621 = unsqueeze_1879 = None
    mul_2063: "f32[256]" = torch.ops.aten.mul.Tensor(sum_364, squeeze_100);  sum_364 = squeeze_100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_131 = torch.ops.aten.convolution_backward.default(mul_2062, relu_30, primals_121, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2062 = primals_121 = None
    getitem_673: "f32[8, 512, 32, 32]" = convolution_backward_131[0]
    getitem_674: "f32[256, 512, 1, 1]" = convolution_backward_131[1];  convolution_backward_131 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_779: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(avg_pool2d_backward_2, getitem_673);  avg_pool2d_backward_2 = getitem_673 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_507: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(relu_30);  relu_30 = None
    alias_508: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(alias_507);  alias_507 = None
    le_104: "b8[8, 512, 32, 32]" = torch.ops.aten.le.Scalar(alias_508, 0);  alias_508 = None
    scalar_tensor_104: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_104: "f32[8, 512, 32, 32]" = torch.ops.aten.where.self(le_104, scalar_tensor_104, add_779);  le_104 = scalar_tensor_104 = add_779 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1880: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_96, 0);  squeeze_96 = None
    unsqueeze_1881: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1880, 2);  unsqueeze_1880 = None
    unsqueeze_1882: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1881, 3);  unsqueeze_1881 = None
    sum_365: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_104, [0, 2, 3])
    sub_622: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_39, unsqueeze_1882)
    mul_2064: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(where_104, sub_622);  sub_622 = None
    sum_366: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2064, [0, 2, 3]);  mul_2064 = None
    mul_2065: "f32[512]" = torch.ops.aten.mul.Tensor(sum_365, 0.0001220703125)
    unsqueeze_1883: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2065, 0);  mul_2065 = None
    unsqueeze_1884: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1883, 2);  unsqueeze_1883 = None
    unsqueeze_1885: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1884, 3);  unsqueeze_1884 = None
    mul_2066: "f32[512]" = torch.ops.aten.mul.Tensor(sum_366, 0.0001220703125)
    mul_2067: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_97, squeeze_97)
    mul_2068: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2066, mul_2067);  mul_2066 = mul_2067 = None
    unsqueeze_1886: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2068, 0);  mul_2068 = None
    unsqueeze_1887: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1886, 2);  unsqueeze_1886 = None
    unsqueeze_1888: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1887, 3);  unsqueeze_1887 = None
    mul_2069: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_97, primals_119);  primals_119 = None
    unsqueeze_1889: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2069, 0);  mul_2069 = None
    unsqueeze_1890: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1889, 2);  unsqueeze_1889 = None
    unsqueeze_1891: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1890, 3);  unsqueeze_1890 = None
    sub_623: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_39, unsqueeze_1882);  convolution_39 = unsqueeze_1882 = None
    mul_2070: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_623, unsqueeze_1888);  sub_623 = unsqueeze_1888 = None
    sub_624: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(where_104, mul_2070);  mul_2070 = None
    sub_625: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(sub_624, unsqueeze_1885);  sub_624 = unsqueeze_1885 = None
    mul_2071: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_625, unsqueeze_1891);  sub_625 = unsqueeze_1891 = None
    mul_2072: "f32[512]" = torch.ops.aten.mul.Tensor(sum_366, squeeze_97);  sum_366 = squeeze_97 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_132 = torch.ops.aten.convolution_backward.default(mul_2071, sum_21, primals_118, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2071 = sum_21 = primals_118 = None
    getitem_676: "f32[8, 128, 32, 32]" = convolution_backward_132[0]
    getitem_677: "f32[512, 128, 1, 1]" = convolution_backward_132[1];  convolution_backward_132 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1892: "f32[8, 1, 128, 32, 32]" = torch.ops.aten.unsqueeze.default(getitem_676, 1);  getitem_676 = None
    expand_79: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1892, [8, 2, 128, 32, 32]);  unsqueeze_1892 = None
    mul_2073: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(expand_79, view_37);  view_37 = None
    mul_2074: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(expand_79, view_41);  expand_79 = view_41 = None
    sum_367: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2073, [3, 4], True);  mul_2073 = None
    view_331: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(sum_367, [8, 256, 1, 1]);  sum_367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_332: "f32[8, 256]" = torch.ops.aten.view.default(view_331, [8, 256]);  view_331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_333: "f32[8, 2, 1, 128]" = torch.ops.aten.view.default(view_332, [8, 2, 1, 128]);  view_332 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_509: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(alias_36);  alias_36 = None
    mul_2075: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(view_333, alias_509);  view_333 = None
    sum_368: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(mul_2075, [1], True)
    mul_2076: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(alias_509, sum_368);  alias_509 = sum_368 = None
    sub_626: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(mul_2075, mul_2076);  mul_2075 = mul_2076 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_64: "f32[8, 1, 2, 128]" = torch.ops.aten.permute.default(sub_626, [0, 2, 1, 3]);  sub_626 = None
    view_334: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(permute_64, [8, 256, 1, 1]);  permute_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_133 = torch.ops.aten.convolution_backward.default(view_334, relu_29, primals_116, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_334 = primals_116 = None
    getitem_679: "f32[8, 64, 1, 1]" = convolution_backward_133[0]
    getitem_680: "f32[256, 64, 1, 1]" = convolution_backward_133[1]
    getitem_681: "f32[256]" = convolution_backward_133[2];  convolution_backward_133 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_511: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(relu_29);  relu_29 = None
    alias_512: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(alias_511);  alias_511 = None
    le_105: "b8[8, 64, 1, 1]" = torch.ops.aten.le.Scalar(alias_512, 0);  alias_512 = None
    scalar_tensor_105: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_105: "f32[8, 64, 1, 1]" = torch.ops.aten.where.self(le_105, scalar_tensor_105, getitem_679);  le_105 = scalar_tensor_105 = getitem_679 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1893: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_93, 0);  squeeze_93 = None
    unsqueeze_1894: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1893, 2);  unsqueeze_1893 = None
    unsqueeze_1895: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1894, 3);  unsqueeze_1894 = None
    sum_369: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_105, [0, 2, 3])
    sub_627: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_37, unsqueeze_1895)
    mul_2077: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(where_105, sub_627);  sub_627 = None
    sum_370: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2077, [0, 2, 3]);  mul_2077 = None
    mul_2078: "f32[64]" = torch.ops.aten.mul.Tensor(sum_369, 0.125)
    unsqueeze_1896: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2078, 0);  mul_2078 = None
    unsqueeze_1897: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1896, 2);  unsqueeze_1896 = None
    unsqueeze_1898: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1897, 3);  unsqueeze_1897 = None
    mul_2079: "f32[64]" = torch.ops.aten.mul.Tensor(sum_370, 0.125)
    mul_2080: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_94, squeeze_94)
    mul_2081: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2079, mul_2080);  mul_2079 = mul_2080 = None
    unsqueeze_1899: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2081, 0);  mul_2081 = None
    unsqueeze_1900: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1899, 2);  unsqueeze_1899 = None
    unsqueeze_1901: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1900, 3);  unsqueeze_1900 = None
    mul_2082: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_94, primals_114);  primals_114 = None
    unsqueeze_1902: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2082, 0);  mul_2082 = None
    unsqueeze_1903: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1902, 2);  unsqueeze_1902 = None
    unsqueeze_1904: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1903, 3);  unsqueeze_1903 = None
    sub_628: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_37, unsqueeze_1895);  convolution_37 = unsqueeze_1895 = None
    mul_2083: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_628, unsqueeze_1901);  sub_628 = unsqueeze_1901 = None
    sub_629: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(where_105, mul_2083);  where_105 = mul_2083 = None
    sub_630: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(sub_629, unsqueeze_1898);  sub_629 = unsqueeze_1898 = None
    mul_2084: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_630, unsqueeze_1904);  sub_630 = unsqueeze_1904 = None
    mul_2085: "f32[64]" = torch.ops.aten.mul.Tensor(sum_370, squeeze_94);  sum_370 = squeeze_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_134 = torch.ops.aten.convolution_backward.default(mul_2084, mean_6, primals_112, [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2084 = mean_6 = primals_112 = None
    getitem_682: "f32[8, 128, 1, 1]" = convolution_backward_134[0]
    getitem_683: "f32[64, 128, 1, 1]" = convolution_backward_134[1]
    getitem_684: "f32[64]" = convolution_backward_134[2];  convolution_backward_134 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_80: "f32[8, 128, 32, 32]" = torch.ops.aten.expand.default(getitem_682, [8, 128, 32, 32]);  getitem_682 = None
    div_60: "f32[8, 128, 32, 32]" = torch.ops.aten.div.Scalar(expand_80, 1024);  expand_80 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1905: "f32[8, 1, 128, 32, 32]" = torch.ops.aten.unsqueeze.default(div_60, 1);  div_60 = None
    expand_81: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1905, [8, 2, 128, 32, 32]);  unsqueeze_1905 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_780: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.add.Tensor(mul_2074, expand_81);  mul_2074 = expand_81 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_335: "f32[8, 256, 32, 32]" = torch.ops.aten.view.default(add_780, [8, 256, 32, 32]);  add_780 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_514: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(relu_28);  relu_28 = None
    alias_515: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(alias_514);  alias_514 = None
    le_106: "b8[8, 256, 32, 32]" = torch.ops.aten.le.Scalar(alias_515, 0);  alias_515 = None
    scalar_tensor_106: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_106: "f32[8, 256, 32, 32]" = torch.ops.aten.where.self(le_106, scalar_tensor_106, view_335);  le_106 = scalar_tensor_106 = view_335 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1906: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_90, 0);  squeeze_90 = None
    unsqueeze_1907: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1906, 2);  unsqueeze_1906 = None
    unsqueeze_1908: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1907, 3);  unsqueeze_1907 = None
    sum_371: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_106, [0, 2, 3])
    sub_631: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_36, unsqueeze_1908)
    mul_2086: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(where_106, sub_631);  sub_631 = None
    sum_372: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2086, [0, 2, 3]);  mul_2086 = None
    mul_2087: "f32[256]" = torch.ops.aten.mul.Tensor(sum_371, 0.0001220703125)
    unsqueeze_1909: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2087, 0);  mul_2087 = None
    unsqueeze_1910: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1909, 2);  unsqueeze_1909 = None
    unsqueeze_1911: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1910, 3);  unsqueeze_1910 = None
    mul_2088: "f32[256]" = torch.ops.aten.mul.Tensor(sum_372, 0.0001220703125)
    mul_2089: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_91, squeeze_91)
    mul_2090: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2088, mul_2089);  mul_2088 = mul_2089 = None
    unsqueeze_1912: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2090, 0);  mul_2090 = None
    unsqueeze_1913: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1912, 2);  unsqueeze_1912 = None
    unsqueeze_1914: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1913, 3);  unsqueeze_1913 = None
    mul_2091: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_91, primals_110);  primals_110 = None
    unsqueeze_1915: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2091, 0);  mul_2091 = None
    unsqueeze_1916: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1915, 2);  unsqueeze_1915 = None
    unsqueeze_1917: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1916, 3);  unsqueeze_1916 = None
    sub_632: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_36, unsqueeze_1908);  convolution_36 = unsqueeze_1908 = None
    mul_2092: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_632, unsqueeze_1914);  sub_632 = unsqueeze_1914 = None
    sub_633: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(where_106, mul_2092);  where_106 = mul_2092 = None
    sub_634: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(sub_633, unsqueeze_1911);  sub_633 = unsqueeze_1911 = None
    mul_2093: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_634, unsqueeze_1917);  sub_634 = unsqueeze_1917 = None
    mul_2094: "f32[256]" = torch.ops.aten.mul.Tensor(sum_372, squeeze_91);  sum_372 = squeeze_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_135 = torch.ops.aten.convolution_backward.default(mul_2093, relu_27, primals_109, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2093 = primals_109 = None
    getitem_685: "f32[8, 128, 32, 32]" = convolution_backward_135[0]
    getitem_686: "f32[256, 64, 3, 3]" = convolution_backward_135[1];  convolution_backward_135 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_517: "f32[8, 128, 32, 32]" = torch.ops.aten.alias.default(relu_27);  relu_27 = None
    alias_518: "f32[8, 128, 32, 32]" = torch.ops.aten.alias.default(alias_517);  alias_517 = None
    le_107: "b8[8, 128, 32, 32]" = torch.ops.aten.le.Scalar(alias_518, 0);  alias_518 = None
    scalar_tensor_107: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_107: "f32[8, 128, 32, 32]" = torch.ops.aten.where.self(le_107, scalar_tensor_107, getitem_685);  le_107 = scalar_tensor_107 = getitem_685 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1918: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_87, 0);  squeeze_87 = None
    unsqueeze_1919: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1918, 2);  unsqueeze_1918 = None
    unsqueeze_1920: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1919, 3);  unsqueeze_1919 = None
    sum_373: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_107, [0, 2, 3])
    sub_635: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_35, unsqueeze_1920)
    mul_2095: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(where_107, sub_635);  sub_635 = None
    sum_374: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2095, [0, 2, 3]);  mul_2095 = None
    mul_2096: "f32[128]" = torch.ops.aten.mul.Tensor(sum_373, 0.0001220703125)
    unsqueeze_1921: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2096, 0);  mul_2096 = None
    unsqueeze_1922: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1921, 2);  unsqueeze_1921 = None
    unsqueeze_1923: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1922, 3);  unsqueeze_1922 = None
    mul_2097: "f32[128]" = torch.ops.aten.mul.Tensor(sum_374, 0.0001220703125)
    mul_2098: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_88, squeeze_88)
    mul_2099: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2097, mul_2098);  mul_2097 = mul_2098 = None
    unsqueeze_1924: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2099, 0);  mul_2099 = None
    unsqueeze_1925: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1924, 2);  unsqueeze_1924 = None
    unsqueeze_1926: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1925, 3);  unsqueeze_1925 = None
    mul_2100: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_88, primals_107);  primals_107 = None
    unsqueeze_1927: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2100, 0);  mul_2100 = None
    unsqueeze_1928: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1927, 2);  unsqueeze_1927 = None
    unsqueeze_1929: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1928, 3);  unsqueeze_1928 = None
    sub_636: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_35, unsqueeze_1920);  convolution_35 = unsqueeze_1920 = None
    mul_2101: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_636, unsqueeze_1926);  sub_636 = unsqueeze_1926 = None
    sub_637: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(where_107, mul_2101);  where_107 = mul_2101 = None
    sub_638: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(sub_637, unsqueeze_1923);  sub_637 = unsqueeze_1923 = None
    mul_2102: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_638, unsqueeze_1929);  sub_638 = unsqueeze_1929 = None
    mul_2103: "f32[128]" = torch.ops.aten.mul.Tensor(sum_374, squeeze_88);  sum_374 = squeeze_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_136 = torch.ops.aten.convolution_backward.default(mul_2102, relu_26, primals_106, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2102 = primals_106 = None
    getitem_688: "f32[8, 512, 32, 32]" = convolution_backward_136[0]
    getitem_689: "f32[128, 512, 1, 1]" = convolution_backward_136[1];  convolution_backward_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_781: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(where_104, getitem_688);  where_104 = getitem_688 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_520: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(relu_26);  relu_26 = None
    alias_521: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(alias_520);  alias_520 = None
    le_108: "b8[8, 512, 32, 32]" = torch.ops.aten.le.Scalar(alias_521, 0);  alias_521 = None
    scalar_tensor_108: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_108: "f32[8, 512, 32, 32]" = torch.ops.aten.where.self(le_108, scalar_tensor_108, add_781);  le_108 = scalar_tensor_108 = add_781 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1930: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_84, 0);  squeeze_84 = None
    unsqueeze_1931: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1930, 2);  unsqueeze_1930 = None
    unsqueeze_1932: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1931, 3);  unsqueeze_1931 = None
    sum_375: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_108, [0, 2, 3])
    sub_639: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_34, unsqueeze_1932)
    mul_2104: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(where_108, sub_639);  sub_639 = None
    sum_376: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2104, [0, 2, 3]);  mul_2104 = None
    mul_2105: "f32[512]" = torch.ops.aten.mul.Tensor(sum_375, 0.0001220703125)
    unsqueeze_1933: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2105, 0);  mul_2105 = None
    unsqueeze_1934: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1933, 2);  unsqueeze_1933 = None
    unsqueeze_1935: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1934, 3);  unsqueeze_1934 = None
    mul_2106: "f32[512]" = torch.ops.aten.mul.Tensor(sum_376, 0.0001220703125)
    mul_2107: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_85, squeeze_85)
    mul_2108: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2106, mul_2107);  mul_2106 = mul_2107 = None
    unsqueeze_1936: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2108, 0);  mul_2108 = None
    unsqueeze_1937: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1936, 2);  unsqueeze_1936 = None
    unsqueeze_1938: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1937, 3);  unsqueeze_1937 = None
    mul_2109: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_85, primals_104);  primals_104 = None
    unsqueeze_1939: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2109, 0);  mul_2109 = None
    unsqueeze_1940: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1939, 2);  unsqueeze_1939 = None
    unsqueeze_1941: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1940, 3);  unsqueeze_1940 = None
    sub_640: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_34, unsqueeze_1932);  convolution_34 = unsqueeze_1932 = None
    mul_2110: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_640, unsqueeze_1938);  sub_640 = unsqueeze_1938 = None
    sub_641: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(where_108, mul_2110);  mul_2110 = None
    sub_642: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(sub_641, unsqueeze_1935);  sub_641 = unsqueeze_1935 = None
    mul_2111: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_642, unsqueeze_1941);  sub_642 = unsqueeze_1941 = None
    mul_2112: "f32[512]" = torch.ops.aten.mul.Tensor(sum_376, squeeze_85);  sum_376 = squeeze_85 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_137 = torch.ops.aten.convolution_backward.default(mul_2111, sum_18, primals_103, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2111 = sum_18 = primals_103 = None
    getitem_691: "f32[8, 128, 32, 32]" = convolution_backward_137[0]
    getitem_692: "f32[512, 128, 1, 1]" = convolution_backward_137[1];  convolution_backward_137 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1942: "f32[8, 1, 128, 32, 32]" = torch.ops.aten.unsqueeze.default(getitem_691, 1);  getitem_691 = None
    expand_82: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1942, [8, 2, 128, 32, 32]);  unsqueeze_1942 = None
    mul_2113: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(expand_82, view_31);  view_31 = None
    mul_2114: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(expand_82, view_35);  expand_82 = view_35 = None
    sum_377: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2113, [3, 4], True);  mul_2113 = None
    view_336: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(sum_377, [8, 256, 1, 1]);  sum_377 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_337: "f32[8, 256]" = torch.ops.aten.view.default(view_336, [8, 256]);  view_336 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_338: "f32[8, 2, 1, 128]" = torch.ops.aten.view.default(view_337, [8, 2, 1, 128]);  view_337 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_522: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(alias_31);  alias_31 = None
    mul_2115: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(view_338, alias_522);  view_338 = None
    sum_378: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(mul_2115, [1], True)
    mul_2116: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(alias_522, sum_378);  alias_522 = sum_378 = None
    sub_643: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(mul_2115, mul_2116);  mul_2115 = mul_2116 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_65: "f32[8, 1, 2, 128]" = torch.ops.aten.permute.default(sub_643, [0, 2, 1, 3]);  sub_643 = None
    view_339: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(permute_65, [8, 256, 1, 1]);  permute_65 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_138 = torch.ops.aten.convolution_backward.default(view_339, relu_25, primals_101, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_339 = primals_101 = None
    getitem_694: "f32[8, 64, 1, 1]" = convolution_backward_138[0]
    getitem_695: "f32[256, 64, 1, 1]" = convolution_backward_138[1]
    getitem_696: "f32[256]" = convolution_backward_138[2];  convolution_backward_138 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_524: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(relu_25);  relu_25 = None
    alias_525: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(alias_524);  alias_524 = None
    le_109: "b8[8, 64, 1, 1]" = torch.ops.aten.le.Scalar(alias_525, 0);  alias_525 = None
    scalar_tensor_109: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_109: "f32[8, 64, 1, 1]" = torch.ops.aten.where.self(le_109, scalar_tensor_109, getitem_694);  le_109 = scalar_tensor_109 = getitem_694 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1943: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_81, 0);  squeeze_81 = None
    unsqueeze_1944: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1943, 2);  unsqueeze_1943 = None
    unsqueeze_1945: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1944, 3);  unsqueeze_1944 = None
    sum_379: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_109, [0, 2, 3])
    sub_644: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_32, unsqueeze_1945)
    mul_2117: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(where_109, sub_644);  sub_644 = None
    sum_380: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2117, [0, 2, 3]);  mul_2117 = None
    mul_2118: "f32[64]" = torch.ops.aten.mul.Tensor(sum_379, 0.125)
    unsqueeze_1946: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2118, 0);  mul_2118 = None
    unsqueeze_1947: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1946, 2);  unsqueeze_1946 = None
    unsqueeze_1948: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1947, 3);  unsqueeze_1947 = None
    mul_2119: "f32[64]" = torch.ops.aten.mul.Tensor(sum_380, 0.125)
    mul_2120: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_82, squeeze_82)
    mul_2121: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2119, mul_2120);  mul_2119 = mul_2120 = None
    unsqueeze_1949: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2121, 0);  mul_2121 = None
    unsqueeze_1950: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1949, 2);  unsqueeze_1949 = None
    unsqueeze_1951: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1950, 3);  unsqueeze_1950 = None
    mul_2122: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_82, primals_99);  primals_99 = None
    unsqueeze_1952: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2122, 0);  mul_2122 = None
    unsqueeze_1953: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1952, 2);  unsqueeze_1952 = None
    unsqueeze_1954: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1953, 3);  unsqueeze_1953 = None
    sub_645: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_32, unsqueeze_1945);  convolution_32 = unsqueeze_1945 = None
    mul_2123: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_645, unsqueeze_1951);  sub_645 = unsqueeze_1951 = None
    sub_646: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(where_109, mul_2123);  where_109 = mul_2123 = None
    sub_647: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(sub_646, unsqueeze_1948);  sub_646 = unsqueeze_1948 = None
    mul_2124: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_647, unsqueeze_1954);  sub_647 = unsqueeze_1954 = None
    mul_2125: "f32[64]" = torch.ops.aten.mul.Tensor(sum_380, squeeze_82);  sum_380 = squeeze_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_139 = torch.ops.aten.convolution_backward.default(mul_2124, mean_5, primals_97, [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2124 = mean_5 = primals_97 = None
    getitem_697: "f32[8, 128, 1, 1]" = convolution_backward_139[0]
    getitem_698: "f32[64, 128, 1, 1]" = convolution_backward_139[1]
    getitem_699: "f32[64]" = convolution_backward_139[2];  convolution_backward_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_83: "f32[8, 128, 32, 32]" = torch.ops.aten.expand.default(getitem_697, [8, 128, 32, 32]);  getitem_697 = None
    div_61: "f32[8, 128, 32, 32]" = torch.ops.aten.div.Scalar(expand_83, 1024);  expand_83 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_1955: "f32[8, 1, 128, 32, 32]" = torch.ops.aten.unsqueeze.default(div_61, 1);  div_61 = None
    expand_84: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1955, [8, 2, 128, 32, 32]);  unsqueeze_1955 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_782: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.add.Tensor(mul_2114, expand_84);  mul_2114 = expand_84 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_340: "f32[8, 256, 32, 32]" = torch.ops.aten.view.default(add_782, [8, 256, 32, 32]);  add_782 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_527: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(relu_24);  relu_24 = None
    alias_528: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(alias_527);  alias_527 = None
    le_110: "b8[8, 256, 32, 32]" = torch.ops.aten.le.Scalar(alias_528, 0);  alias_528 = None
    scalar_tensor_110: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_110: "f32[8, 256, 32, 32]" = torch.ops.aten.where.self(le_110, scalar_tensor_110, view_340);  le_110 = scalar_tensor_110 = view_340 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_1956: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_78, 0);  squeeze_78 = None
    unsqueeze_1957: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1956, 2);  unsqueeze_1956 = None
    unsqueeze_1958: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1957, 3);  unsqueeze_1957 = None
    sum_381: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_110, [0, 2, 3])
    sub_648: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_31, unsqueeze_1958)
    mul_2126: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(where_110, sub_648);  sub_648 = None
    sum_382: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2126, [0, 2, 3]);  mul_2126 = None
    mul_2127: "f32[256]" = torch.ops.aten.mul.Tensor(sum_381, 0.0001220703125)
    unsqueeze_1959: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2127, 0);  mul_2127 = None
    unsqueeze_1960: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1959, 2);  unsqueeze_1959 = None
    unsqueeze_1961: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1960, 3);  unsqueeze_1960 = None
    mul_2128: "f32[256]" = torch.ops.aten.mul.Tensor(sum_382, 0.0001220703125)
    mul_2129: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_79, squeeze_79)
    mul_2130: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2128, mul_2129);  mul_2128 = mul_2129 = None
    unsqueeze_1962: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2130, 0);  mul_2130 = None
    unsqueeze_1963: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1962, 2);  unsqueeze_1962 = None
    unsqueeze_1964: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1963, 3);  unsqueeze_1963 = None
    mul_2131: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_79, primals_95);  primals_95 = None
    unsqueeze_1965: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2131, 0);  mul_2131 = None
    unsqueeze_1966: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1965, 2);  unsqueeze_1965 = None
    unsqueeze_1967: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1966, 3);  unsqueeze_1966 = None
    sub_649: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_31, unsqueeze_1958);  convolution_31 = unsqueeze_1958 = None
    mul_2132: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_649, unsqueeze_1964);  sub_649 = unsqueeze_1964 = None
    sub_650: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(where_110, mul_2132);  where_110 = mul_2132 = None
    sub_651: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(sub_650, unsqueeze_1961);  sub_650 = unsqueeze_1961 = None
    mul_2133: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_651, unsqueeze_1967);  sub_651 = unsqueeze_1967 = None
    mul_2134: "f32[256]" = torch.ops.aten.mul.Tensor(sum_382, squeeze_79);  sum_382 = squeeze_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_140 = torch.ops.aten.convolution_backward.default(mul_2133, relu_23, primals_94, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2133 = primals_94 = None
    getitem_700: "f32[8, 128, 32, 32]" = convolution_backward_140[0]
    getitem_701: "f32[256, 64, 3, 3]" = convolution_backward_140[1];  convolution_backward_140 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_530: "f32[8, 128, 32, 32]" = torch.ops.aten.alias.default(relu_23);  relu_23 = None
    alias_531: "f32[8, 128, 32, 32]" = torch.ops.aten.alias.default(alias_530);  alias_530 = None
    le_111: "b8[8, 128, 32, 32]" = torch.ops.aten.le.Scalar(alias_531, 0);  alias_531 = None
    scalar_tensor_111: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_111: "f32[8, 128, 32, 32]" = torch.ops.aten.where.self(le_111, scalar_tensor_111, getitem_700);  le_111 = scalar_tensor_111 = getitem_700 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_1968: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_75, 0);  squeeze_75 = None
    unsqueeze_1969: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1968, 2);  unsqueeze_1968 = None
    unsqueeze_1970: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1969, 3);  unsqueeze_1969 = None
    sum_383: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_111, [0, 2, 3])
    sub_652: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_30, unsqueeze_1970)
    mul_2135: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(where_111, sub_652);  sub_652 = None
    sum_384: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2135, [0, 2, 3]);  mul_2135 = None
    mul_2136: "f32[128]" = torch.ops.aten.mul.Tensor(sum_383, 0.0001220703125)
    unsqueeze_1971: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2136, 0);  mul_2136 = None
    unsqueeze_1972: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1971, 2);  unsqueeze_1971 = None
    unsqueeze_1973: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1972, 3);  unsqueeze_1972 = None
    mul_2137: "f32[128]" = torch.ops.aten.mul.Tensor(sum_384, 0.0001220703125)
    mul_2138: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_76, squeeze_76)
    mul_2139: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2137, mul_2138);  mul_2137 = mul_2138 = None
    unsqueeze_1974: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2139, 0);  mul_2139 = None
    unsqueeze_1975: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1974, 2);  unsqueeze_1974 = None
    unsqueeze_1976: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1975, 3);  unsqueeze_1975 = None
    mul_2140: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_76, primals_92);  primals_92 = None
    unsqueeze_1977: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2140, 0);  mul_2140 = None
    unsqueeze_1978: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1977, 2);  unsqueeze_1977 = None
    unsqueeze_1979: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1978, 3);  unsqueeze_1978 = None
    sub_653: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_30, unsqueeze_1970);  convolution_30 = unsqueeze_1970 = None
    mul_2141: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_653, unsqueeze_1976);  sub_653 = unsqueeze_1976 = None
    sub_654: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(where_111, mul_2141);  where_111 = mul_2141 = None
    sub_655: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(sub_654, unsqueeze_1973);  sub_654 = unsqueeze_1973 = None
    mul_2142: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_655, unsqueeze_1979);  sub_655 = unsqueeze_1979 = None
    mul_2143: "f32[128]" = torch.ops.aten.mul.Tensor(sum_384, squeeze_76);  sum_384 = squeeze_76 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_141 = torch.ops.aten.convolution_backward.default(mul_2142, relu_22, primals_91, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2142 = primals_91 = None
    getitem_703: "f32[8, 512, 32, 32]" = convolution_backward_141[0]
    getitem_704: "f32[128, 512, 1, 1]" = convolution_backward_141[1];  convolution_backward_141 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_783: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(where_108, getitem_703);  where_108 = getitem_703 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_533: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(relu_22);  relu_22 = None
    alias_534: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(alias_533);  alias_533 = None
    le_112: "b8[8, 512, 32, 32]" = torch.ops.aten.le.Scalar(alias_534, 0);  alias_534 = None
    scalar_tensor_112: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_112: "f32[8, 512, 32, 32]" = torch.ops.aten.where.self(le_112, scalar_tensor_112, add_783);  le_112 = scalar_tensor_112 = add_783 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_1980: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_72, 0);  squeeze_72 = None
    unsqueeze_1981: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1980, 2);  unsqueeze_1980 = None
    unsqueeze_1982: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1981, 3);  unsqueeze_1981 = None
    sum_385: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_112, [0, 2, 3])
    sub_656: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_29, unsqueeze_1982)
    mul_2144: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(where_112, sub_656);  sub_656 = None
    sum_386: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2144, [0, 2, 3]);  mul_2144 = None
    mul_2145: "f32[512]" = torch.ops.aten.mul.Tensor(sum_385, 0.0001220703125)
    unsqueeze_1983: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2145, 0);  mul_2145 = None
    unsqueeze_1984: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1983, 2);  unsqueeze_1983 = None
    unsqueeze_1985: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1984, 3);  unsqueeze_1984 = None
    mul_2146: "f32[512]" = torch.ops.aten.mul.Tensor(sum_386, 0.0001220703125)
    mul_2147: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_73, squeeze_73)
    mul_2148: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2146, mul_2147);  mul_2146 = mul_2147 = None
    unsqueeze_1986: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2148, 0);  mul_2148 = None
    unsqueeze_1987: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1986, 2);  unsqueeze_1986 = None
    unsqueeze_1988: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1987, 3);  unsqueeze_1987 = None
    mul_2149: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_73, primals_89);  primals_89 = None
    unsqueeze_1989: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2149, 0);  mul_2149 = None
    unsqueeze_1990: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1989, 2);  unsqueeze_1989 = None
    unsqueeze_1991: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1990, 3);  unsqueeze_1990 = None
    sub_657: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_29, unsqueeze_1982);  convolution_29 = unsqueeze_1982 = None
    mul_2150: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_657, unsqueeze_1988);  sub_657 = unsqueeze_1988 = None
    sub_658: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(where_112, mul_2150);  mul_2150 = None
    sub_659: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(sub_658, unsqueeze_1985);  sub_658 = unsqueeze_1985 = None
    mul_2151: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_659, unsqueeze_1991);  sub_659 = unsqueeze_1991 = None
    mul_2152: "f32[512]" = torch.ops.aten.mul.Tensor(sum_386, squeeze_73);  sum_386 = squeeze_73 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_142 = torch.ops.aten.convolution_backward.default(mul_2151, sum_15, primals_88, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2151 = sum_15 = primals_88 = None
    getitem_706: "f32[8, 128, 32, 32]" = convolution_backward_142[0]
    getitem_707: "f32[512, 128, 1, 1]" = convolution_backward_142[1];  convolution_backward_142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_1992: "f32[8, 1, 128, 32, 32]" = torch.ops.aten.unsqueeze.default(getitem_706, 1);  getitem_706 = None
    expand_85: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_1992, [8, 2, 128, 32, 32]);  unsqueeze_1992 = None
    mul_2153: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(expand_85, view_25);  view_25 = None
    mul_2154: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.mul.Tensor(expand_85, view_29);  expand_85 = view_29 = None
    sum_387: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2153, [3, 4], True);  mul_2153 = None
    view_341: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(sum_387, [8, 256, 1, 1]);  sum_387 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_342: "f32[8, 256]" = torch.ops.aten.view.default(view_341, [8, 256]);  view_341 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_343: "f32[8, 2, 1, 128]" = torch.ops.aten.view.default(view_342, [8, 2, 1, 128]);  view_342 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_535: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(alias_26);  alias_26 = None
    mul_2155: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(view_343, alias_535);  view_343 = None
    sum_388: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(mul_2155, [1], True)
    mul_2156: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(alias_535, sum_388);  alias_535 = sum_388 = None
    sub_660: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(mul_2155, mul_2156);  mul_2155 = mul_2156 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_66: "f32[8, 1, 2, 128]" = torch.ops.aten.permute.default(sub_660, [0, 2, 1, 3]);  sub_660 = None
    view_344: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(permute_66, [8, 256, 1, 1]);  permute_66 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_143 = torch.ops.aten.convolution_backward.default(view_344, relu_21, primals_86, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_344 = primals_86 = None
    getitem_709: "f32[8, 64, 1, 1]" = convolution_backward_143[0]
    getitem_710: "f32[256, 64, 1, 1]" = convolution_backward_143[1]
    getitem_711: "f32[256]" = convolution_backward_143[2];  convolution_backward_143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_537: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(relu_21);  relu_21 = None
    alias_538: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(alias_537);  alias_537 = None
    le_113: "b8[8, 64, 1, 1]" = torch.ops.aten.le.Scalar(alias_538, 0);  alias_538 = None
    scalar_tensor_113: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_113: "f32[8, 64, 1, 1]" = torch.ops.aten.where.self(le_113, scalar_tensor_113, getitem_709);  le_113 = scalar_tensor_113 = getitem_709 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_1993: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_69, 0);  squeeze_69 = None
    unsqueeze_1994: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1993, 2);  unsqueeze_1993 = None
    unsqueeze_1995: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1994, 3);  unsqueeze_1994 = None
    sum_389: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_113, [0, 2, 3])
    sub_661: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_27, unsqueeze_1995)
    mul_2157: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(where_113, sub_661);  sub_661 = None
    sum_390: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2157, [0, 2, 3]);  mul_2157 = None
    mul_2158: "f32[64]" = torch.ops.aten.mul.Tensor(sum_389, 0.125)
    unsqueeze_1996: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2158, 0);  mul_2158 = None
    unsqueeze_1997: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1996, 2);  unsqueeze_1996 = None
    unsqueeze_1998: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1997, 3);  unsqueeze_1997 = None
    mul_2159: "f32[64]" = torch.ops.aten.mul.Tensor(sum_390, 0.125)
    mul_2160: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_70, squeeze_70)
    mul_2161: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2159, mul_2160);  mul_2159 = mul_2160 = None
    unsqueeze_1999: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2161, 0);  mul_2161 = None
    unsqueeze_2000: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1999, 2);  unsqueeze_1999 = None
    unsqueeze_2001: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2000, 3);  unsqueeze_2000 = None
    mul_2162: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_70, primals_84);  primals_84 = None
    unsqueeze_2002: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2162, 0);  mul_2162 = None
    unsqueeze_2003: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2002, 2);  unsqueeze_2002 = None
    unsqueeze_2004: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2003, 3);  unsqueeze_2003 = None
    sub_662: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_27, unsqueeze_1995);  convolution_27 = unsqueeze_1995 = None
    mul_2163: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_662, unsqueeze_2001);  sub_662 = unsqueeze_2001 = None
    sub_663: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(where_113, mul_2163);  where_113 = mul_2163 = None
    sub_664: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(sub_663, unsqueeze_1998);  sub_663 = unsqueeze_1998 = None
    mul_2164: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_664, unsqueeze_2004);  sub_664 = unsqueeze_2004 = None
    mul_2165: "f32[64]" = torch.ops.aten.mul.Tensor(sum_390, squeeze_70);  sum_390 = squeeze_70 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_144 = torch.ops.aten.convolution_backward.default(mul_2164, mean_4, primals_82, [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2164 = mean_4 = primals_82 = None
    getitem_712: "f32[8, 128, 1, 1]" = convolution_backward_144[0]
    getitem_713: "f32[64, 128, 1, 1]" = convolution_backward_144[1]
    getitem_714: "f32[64]" = convolution_backward_144[2];  convolution_backward_144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_86: "f32[8, 128, 32, 32]" = torch.ops.aten.expand.default(getitem_712, [8, 128, 32, 32]);  getitem_712 = None
    div_62: "f32[8, 128, 32, 32]" = torch.ops.aten.div.Scalar(expand_86, 1024);  expand_86 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_2005: "f32[8, 1, 128, 32, 32]" = torch.ops.aten.unsqueeze.default(div_62, 1);  div_62 = None
    expand_87: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.expand.default(unsqueeze_2005, [8, 2, 128, 32, 32]);  unsqueeze_2005 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_784: "f32[8, 2, 128, 32, 32]" = torch.ops.aten.add.Tensor(mul_2154, expand_87);  mul_2154 = expand_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_345: "f32[8, 256, 32, 32]" = torch.ops.aten.view.default(add_784, [8, 256, 32, 32]);  add_784 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_540: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(relu_20);  relu_20 = None
    alias_541: "f32[8, 256, 32, 32]" = torch.ops.aten.alias.default(alias_540);  alias_540 = None
    le_114: "b8[8, 256, 32, 32]" = torch.ops.aten.le.Scalar(alias_541, 0);  alias_541 = None
    scalar_tensor_114: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_114: "f32[8, 256, 32, 32]" = torch.ops.aten.where.self(le_114, scalar_tensor_114, view_345);  le_114 = scalar_tensor_114 = view_345 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_2006: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_66, 0);  squeeze_66 = None
    unsqueeze_2007: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2006, 2);  unsqueeze_2006 = None
    unsqueeze_2008: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2007, 3);  unsqueeze_2007 = None
    sum_391: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_114, [0, 2, 3])
    sub_665: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_26, unsqueeze_2008)
    mul_2166: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(where_114, sub_665);  sub_665 = None
    sum_392: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2166, [0, 2, 3]);  mul_2166 = None
    mul_2167: "f32[256]" = torch.ops.aten.mul.Tensor(sum_391, 0.0001220703125)
    unsqueeze_2009: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2167, 0);  mul_2167 = None
    unsqueeze_2010: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2009, 2);  unsqueeze_2009 = None
    unsqueeze_2011: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2010, 3);  unsqueeze_2010 = None
    mul_2168: "f32[256]" = torch.ops.aten.mul.Tensor(sum_392, 0.0001220703125)
    mul_2169: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_67, squeeze_67)
    mul_2170: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2168, mul_2169);  mul_2168 = mul_2169 = None
    unsqueeze_2012: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2170, 0);  mul_2170 = None
    unsqueeze_2013: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2012, 2);  unsqueeze_2012 = None
    unsqueeze_2014: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2013, 3);  unsqueeze_2013 = None
    mul_2171: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_67, primals_80);  primals_80 = None
    unsqueeze_2015: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2171, 0);  mul_2171 = None
    unsqueeze_2016: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2015, 2);  unsqueeze_2015 = None
    unsqueeze_2017: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2016, 3);  unsqueeze_2016 = None
    sub_666: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_26, unsqueeze_2008);  convolution_26 = unsqueeze_2008 = None
    mul_2172: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_666, unsqueeze_2014);  sub_666 = unsqueeze_2014 = None
    sub_667: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(where_114, mul_2172);  where_114 = mul_2172 = None
    sub_668: "f32[8, 256, 32, 32]" = torch.ops.aten.sub.Tensor(sub_667, unsqueeze_2011);  sub_667 = unsqueeze_2011 = None
    mul_2173: "f32[8, 256, 32, 32]" = torch.ops.aten.mul.Tensor(sub_668, unsqueeze_2017);  sub_668 = unsqueeze_2017 = None
    mul_2174: "f32[256]" = torch.ops.aten.mul.Tensor(sum_392, squeeze_67);  sum_392 = squeeze_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_145 = torch.ops.aten.convolution_backward.default(mul_2173, relu_19, primals_79, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2173 = primals_79 = None
    getitem_715: "f32[8, 128, 32, 32]" = convolution_backward_145[0]
    getitem_716: "f32[256, 64, 3, 3]" = convolution_backward_145[1];  convolution_backward_145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_543: "f32[8, 128, 32, 32]" = torch.ops.aten.alias.default(relu_19);  relu_19 = None
    alias_544: "f32[8, 128, 32, 32]" = torch.ops.aten.alias.default(alias_543);  alias_543 = None
    le_115: "b8[8, 128, 32, 32]" = torch.ops.aten.le.Scalar(alias_544, 0);  alias_544 = None
    scalar_tensor_115: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_115: "f32[8, 128, 32, 32]" = torch.ops.aten.where.self(le_115, scalar_tensor_115, getitem_715);  le_115 = scalar_tensor_115 = getitem_715 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_2018: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_63, 0);  squeeze_63 = None
    unsqueeze_2019: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2018, 2);  unsqueeze_2018 = None
    unsqueeze_2020: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2019, 3);  unsqueeze_2019 = None
    sum_393: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_115, [0, 2, 3])
    sub_669: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_25, unsqueeze_2020)
    mul_2175: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(where_115, sub_669);  sub_669 = None
    sum_394: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2175, [0, 2, 3]);  mul_2175 = None
    mul_2176: "f32[128]" = torch.ops.aten.mul.Tensor(sum_393, 0.0001220703125)
    unsqueeze_2021: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2176, 0);  mul_2176 = None
    unsqueeze_2022: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2021, 2);  unsqueeze_2021 = None
    unsqueeze_2023: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2022, 3);  unsqueeze_2022 = None
    mul_2177: "f32[128]" = torch.ops.aten.mul.Tensor(sum_394, 0.0001220703125)
    mul_2178: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_64, squeeze_64)
    mul_2179: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2177, mul_2178);  mul_2177 = mul_2178 = None
    unsqueeze_2024: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2179, 0);  mul_2179 = None
    unsqueeze_2025: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2024, 2);  unsqueeze_2024 = None
    unsqueeze_2026: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2025, 3);  unsqueeze_2025 = None
    mul_2180: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_64, primals_77);  primals_77 = None
    unsqueeze_2027: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2180, 0);  mul_2180 = None
    unsqueeze_2028: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2027, 2);  unsqueeze_2027 = None
    unsqueeze_2029: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2028, 3);  unsqueeze_2028 = None
    sub_670: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_25, unsqueeze_2020);  convolution_25 = unsqueeze_2020 = None
    mul_2181: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_670, unsqueeze_2026);  sub_670 = unsqueeze_2026 = None
    sub_671: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(where_115, mul_2181);  where_115 = mul_2181 = None
    sub_672: "f32[8, 128, 32, 32]" = torch.ops.aten.sub.Tensor(sub_671, unsqueeze_2023);  sub_671 = unsqueeze_2023 = None
    mul_2182: "f32[8, 128, 32, 32]" = torch.ops.aten.mul.Tensor(sub_672, unsqueeze_2029);  sub_672 = unsqueeze_2029 = None
    mul_2183: "f32[128]" = torch.ops.aten.mul.Tensor(sum_394, squeeze_64);  sum_394 = squeeze_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_146 = torch.ops.aten.convolution_backward.default(mul_2182, relu_18, primals_76, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2182 = primals_76 = None
    getitem_718: "f32[8, 512, 32, 32]" = convolution_backward_146[0]
    getitem_719: "f32[128, 512, 1, 1]" = convolution_backward_146[1];  convolution_backward_146 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_785: "f32[8, 512, 32, 32]" = torch.ops.aten.add.Tensor(where_112, getitem_718);  where_112 = getitem_718 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_546: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(relu_18);  relu_18 = None
    alias_547: "f32[8, 512, 32, 32]" = torch.ops.aten.alias.default(alias_546);  alias_546 = None
    le_116: "b8[8, 512, 32, 32]" = torch.ops.aten.le.Scalar(alias_547, 0);  alias_547 = None
    scalar_tensor_116: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_116: "f32[8, 512, 32, 32]" = torch.ops.aten.where.self(le_116, scalar_tensor_116, add_785);  le_116 = scalar_tensor_116 = add_785 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    unsqueeze_2030: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_60, 0);  squeeze_60 = None
    unsqueeze_2031: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2030, 2);  unsqueeze_2030 = None
    unsqueeze_2032: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2031, 3);  unsqueeze_2031 = None
    sum_395: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_116, [0, 2, 3])
    sub_673: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_24, unsqueeze_2032)
    mul_2184: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(where_116, sub_673);  sub_673 = None
    sum_396: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2184, [0, 2, 3]);  mul_2184 = None
    mul_2185: "f32[512]" = torch.ops.aten.mul.Tensor(sum_395, 0.0001220703125)
    unsqueeze_2033: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2185, 0);  mul_2185 = None
    unsqueeze_2034: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2033, 2);  unsqueeze_2033 = None
    unsqueeze_2035: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2034, 3);  unsqueeze_2034 = None
    mul_2186: "f32[512]" = torch.ops.aten.mul.Tensor(sum_396, 0.0001220703125)
    mul_2187: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_61, squeeze_61)
    mul_2188: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2186, mul_2187);  mul_2186 = mul_2187 = None
    unsqueeze_2036: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2188, 0);  mul_2188 = None
    unsqueeze_2037: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2036, 2);  unsqueeze_2036 = None
    unsqueeze_2038: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2037, 3);  unsqueeze_2037 = None
    mul_2189: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_61, primals_74);  primals_74 = None
    unsqueeze_2039: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2189, 0);  mul_2189 = None
    unsqueeze_2040: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2039, 2);  unsqueeze_2039 = None
    unsqueeze_2041: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2040, 3);  unsqueeze_2040 = None
    sub_674: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_24, unsqueeze_2032);  convolution_24 = unsqueeze_2032 = None
    mul_2190: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_674, unsqueeze_2038);  sub_674 = unsqueeze_2038 = None
    sub_675: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(where_116, mul_2190);  mul_2190 = None
    sub_676: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(sub_675, unsqueeze_2035);  sub_675 = unsqueeze_2035 = None
    mul_2191: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_676, unsqueeze_2041);  sub_676 = unsqueeze_2041 = None
    mul_2192: "f32[512]" = torch.ops.aten.mul.Tensor(sum_396, squeeze_61);  sum_396 = squeeze_61 = None
    convolution_backward_147 = torch.ops.aten.convolution_backward.default(mul_2191, avg_pool2d_1, primals_73, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2191 = avg_pool2d_1 = primals_73 = None
    getitem_721: "f32[8, 256, 32, 32]" = convolution_backward_147[0]
    getitem_722: "f32[512, 256, 1, 1]" = convolution_backward_147[1];  convolution_backward_147 = None
    avg_pool2d_backward_4: "f32[8, 256, 64, 64]" = torch.ops.aten.avg_pool2d_backward.default(getitem_721, relu_14, [2, 2], [2, 2], [0, 0], True, False, None);  getitem_721 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_2042: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_57, 0);  squeeze_57 = None
    unsqueeze_2043: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2042, 2);  unsqueeze_2042 = None
    unsqueeze_2044: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2043, 3);  unsqueeze_2043 = None
    sum_397: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_116, [0, 2, 3])
    sub_677: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_23, unsqueeze_2044)
    mul_2193: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(where_116, sub_677);  sub_677 = None
    sum_398: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2193, [0, 2, 3]);  mul_2193 = None
    mul_2194: "f32[512]" = torch.ops.aten.mul.Tensor(sum_397, 0.0001220703125)
    unsqueeze_2045: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2194, 0);  mul_2194 = None
    unsqueeze_2046: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2045, 2);  unsqueeze_2045 = None
    unsqueeze_2047: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2046, 3);  unsqueeze_2046 = None
    mul_2195: "f32[512]" = torch.ops.aten.mul.Tensor(sum_398, 0.0001220703125)
    mul_2196: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_58, squeeze_58)
    mul_2197: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2195, mul_2196);  mul_2195 = mul_2196 = None
    unsqueeze_2048: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2197, 0);  mul_2197 = None
    unsqueeze_2049: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2048, 2);  unsqueeze_2048 = None
    unsqueeze_2050: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2049, 3);  unsqueeze_2049 = None
    mul_2198: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_58, primals_71);  primals_71 = None
    unsqueeze_2051: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2198, 0);  mul_2198 = None
    unsqueeze_2052: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2051, 2);  unsqueeze_2051 = None
    unsqueeze_2053: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2052, 3);  unsqueeze_2052 = None
    sub_678: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(convolution_23, unsqueeze_2044);  convolution_23 = unsqueeze_2044 = None
    mul_2199: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_678, unsqueeze_2050);  sub_678 = unsqueeze_2050 = None
    sub_679: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(where_116, mul_2199);  where_116 = mul_2199 = None
    sub_680: "f32[8, 512, 32, 32]" = torch.ops.aten.sub.Tensor(sub_679, unsqueeze_2047);  sub_679 = unsqueeze_2047 = None
    mul_2200: "f32[8, 512, 32, 32]" = torch.ops.aten.mul.Tensor(sub_680, unsqueeze_2053);  sub_680 = unsqueeze_2053 = None
    mul_2201: "f32[512]" = torch.ops.aten.mul.Tensor(sum_398, squeeze_58);  sum_398 = squeeze_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_148 = torch.ops.aten.convolution_backward.default(mul_2200, avg_pool2d, primals_70, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2200 = avg_pool2d = primals_70 = None
    getitem_724: "f32[8, 128, 32, 32]" = convolution_backward_148[0]
    getitem_725: "f32[512, 128, 1, 1]" = convolution_backward_148[1];  convolution_backward_148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:107, code: out = self.avd_last(out)
    avg_pool2d_backward_5: "f32[8, 128, 64, 64]" = torch.ops.aten.avg_pool2d_backward.default(getitem_724, sum_12, [3, 3], [2, 2], [1, 1], False, True, None);  getitem_724 = sum_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_2054: "f32[8, 1, 128, 64, 64]" = torch.ops.aten.unsqueeze.default(avg_pool2d_backward_5, 1);  avg_pool2d_backward_5 = None
    expand_88: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2054, [8, 2, 128, 64, 64]);  unsqueeze_2054 = None
    mul_2202: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.mul.Tensor(expand_88, view_19);  view_19 = None
    mul_2203: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.mul.Tensor(expand_88, view_23);  expand_88 = view_23 = None
    sum_399: "f32[8, 2, 128, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2202, [3, 4], True);  mul_2202 = None
    view_346: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(sum_399, [8, 256, 1, 1]);  sum_399 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_347: "f32[8, 256]" = torch.ops.aten.view.default(view_346, [8, 256]);  view_346 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_348: "f32[8, 2, 1, 128]" = torch.ops.aten.view.default(view_347, [8, 2, 1, 128]);  view_347 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_548: "f32[8, 2, 1, 128]" = torch.ops.aten.alias.default(alias_21);  alias_21 = None
    mul_2204: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(view_348, alias_548);  view_348 = None
    sum_400: "f32[8, 1, 1, 128]" = torch.ops.aten.sum.dim_IntList(mul_2204, [1], True)
    mul_2205: "f32[8, 2, 1, 128]" = torch.ops.aten.mul.Tensor(alias_548, sum_400);  alias_548 = sum_400 = None
    sub_681: "f32[8, 2, 1, 128]" = torch.ops.aten.sub.Tensor(mul_2204, mul_2205);  mul_2204 = mul_2205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_67: "f32[8, 1, 2, 128]" = torch.ops.aten.permute.default(sub_681, [0, 2, 1, 3]);  sub_681 = None
    view_349: "f32[8, 256, 1, 1]" = torch.ops.aten.view.default(permute_67, [8, 256, 1, 1]);  permute_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_149 = torch.ops.aten.convolution_backward.default(view_349, relu_17, primals_68, [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_349 = primals_68 = None
    getitem_727: "f32[8, 64, 1, 1]" = convolution_backward_149[0]
    getitem_728: "f32[256, 64, 1, 1]" = convolution_backward_149[1]
    getitem_729: "f32[256]" = convolution_backward_149[2];  convolution_backward_149 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_550: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(relu_17);  relu_17 = None
    alias_551: "f32[8, 64, 1, 1]" = torch.ops.aten.alias.default(alias_550);  alias_550 = None
    le_117: "b8[8, 64, 1, 1]" = torch.ops.aten.le.Scalar(alias_551, 0);  alias_551 = None
    scalar_tensor_117: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_117: "f32[8, 64, 1, 1]" = torch.ops.aten.where.self(le_117, scalar_tensor_117, getitem_727);  le_117 = scalar_tensor_117 = getitem_727 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_2055: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_54, 0);  squeeze_54 = None
    unsqueeze_2056: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2055, 2);  unsqueeze_2055 = None
    unsqueeze_2057: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2056, 3);  unsqueeze_2056 = None
    sum_401: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_117, [0, 2, 3])
    sub_682: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_21, unsqueeze_2057)
    mul_2206: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(where_117, sub_682);  sub_682 = None
    sum_402: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2206, [0, 2, 3]);  mul_2206 = None
    mul_2207: "f32[64]" = torch.ops.aten.mul.Tensor(sum_401, 0.125)
    unsqueeze_2058: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2207, 0);  mul_2207 = None
    unsqueeze_2059: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2058, 2);  unsqueeze_2058 = None
    unsqueeze_2060: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2059, 3);  unsqueeze_2059 = None
    mul_2208: "f32[64]" = torch.ops.aten.mul.Tensor(sum_402, 0.125)
    mul_2209: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_55, squeeze_55)
    mul_2210: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2208, mul_2209);  mul_2208 = mul_2209 = None
    unsqueeze_2061: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2210, 0);  mul_2210 = None
    unsqueeze_2062: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2061, 2);  unsqueeze_2061 = None
    unsqueeze_2063: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2062, 3);  unsqueeze_2062 = None
    mul_2211: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_55, primals_66);  primals_66 = None
    unsqueeze_2064: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2211, 0);  mul_2211 = None
    unsqueeze_2065: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2064, 2);  unsqueeze_2064 = None
    unsqueeze_2066: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2065, 3);  unsqueeze_2065 = None
    sub_683: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_21, unsqueeze_2057);  convolution_21 = unsqueeze_2057 = None
    mul_2212: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_683, unsqueeze_2063);  sub_683 = unsqueeze_2063 = None
    sub_684: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(where_117, mul_2212);  where_117 = mul_2212 = None
    sub_685: "f32[8, 64, 1, 1]" = torch.ops.aten.sub.Tensor(sub_684, unsqueeze_2060);  sub_684 = unsqueeze_2060 = None
    mul_2213: "f32[8, 64, 1, 1]" = torch.ops.aten.mul.Tensor(sub_685, unsqueeze_2066);  sub_685 = unsqueeze_2066 = None
    mul_2214: "f32[64]" = torch.ops.aten.mul.Tensor(sum_402, squeeze_55);  sum_402 = squeeze_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_150 = torch.ops.aten.convolution_backward.default(mul_2213, mean_3, primals_64, [64], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2213 = mean_3 = primals_64 = None
    getitem_730: "f32[8, 128, 1, 1]" = convolution_backward_150[0]
    getitem_731: "f32[64, 128, 1, 1]" = convolution_backward_150[1]
    getitem_732: "f32[64]" = convolution_backward_150[2];  convolution_backward_150 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_89: "f32[8, 128, 64, 64]" = torch.ops.aten.expand.default(getitem_730, [8, 128, 64, 64]);  getitem_730 = None
    div_63: "f32[8, 128, 64, 64]" = torch.ops.aten.div.Scalar(expand_89, 4096);  expand_89 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_2067: "f32[8, 1, 128, 64, 64]" = torch.ops.aten.unsqueeze.default(div_63, 1);  div_63 = None
    expand_90: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2067, [8, 2, 128, 64, 64]);  unsqueeze_2067 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_786: "f32[8, 2, 128, 64, 64]" = torch.ops.aten.add.Tensor(mul_2203, expand_90);  mul_2203 = expand_90 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_350: "f32[8, 256, 64, 64]" = torch.ops.aten.view.default(add_786, [8, 256, 64, 64]);  add_786 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_553: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(relu_16);  relu_16 = None
    alias_554: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(alias_553);  alias_553 = None
    le_118: "b8[8, 256, 64, 64]" = torch.ops.aten.le.Scalar(alias_554, 0);  alias_554 = None
    scalar_tensor_118: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_118: "f32[8, 256, 64, 64]" = torch.ops.aten.where.self(le_118, scalar_tensor_118, view_350);  le_118 = scalar_tensor_118 = view_350 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_2068: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_51, 0);  squeeze_51 = None
    unsqueeze_2069: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2068, 2);  unsqueeze_2068 = None
    unsqueeze_2070: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2069, 3);  unsqueeze_2069 = None
    sum_403: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_118, [0, 2, 3])
    sub_686: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_20, unsqueeze_2070)
    mul_2215: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(where_118, sub_686);  sub_686 = None
    sum_404: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2215, [0, 2, 3]);  mul_2215 = None
    mul_2216: "f32[256]" = torch.ops.aten.mul.Tensor(sum_403, 3.0517578125e-05)
    unsqueeze_2071: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2216, 0);  mul_2216 = None
    unsqueeze_2072: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2071, 2);  unsqueeze_2071 = None
    unsqueeze_2073: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2072, 3);  unsqueeze_2072 = None
    mul_2217: "f32[256]" = torch.ops.aten.mul.Tensor(sum_404, 3.0517578125e-05)
    mul_2218: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_52, squeeze_52)
    mul_2219: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2217, mul_2218);  mul_2217 = mul_2218 = None
    unsqueeze_2074: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2219, 0);  mul_2219 = None
    unsqueeze_2075: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2074, 2);  unsqueeze_2074 = None
    unsqueeze_2076: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2075, 3);  unsqueeze_2075 = None
    mul_2220: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_52, primals_62);  primals_62 = None
    unsqueeze_2077: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2220, 0);  mul_2220 = None
    unsqueeze_2078: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2077, 2);  unsqueeze_2077 = None
    unsqueeze_2079: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2078, 3);  unsqueeze_2078 = None
    sub_687: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_20, unsqueeze_2070);  convolution_20 = unsqueeze_2070 = None
    mul_2221: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_687, unsqueeze_2076);  sub_687 = unsqueeze_2076 = None
    sub_688: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(where_118, mul_2221);  where_118 = mul_2221 = None
    sub_689: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(sub_688, unsqueeze_2073);  sub_688 = unsqueeze_2073 = None
    mul_2222: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_689, unsqueeze_2079);  sub_689 = unsqueeze_2079 = None
    mul_2223: "f32[256]" = torch.ops.aten.mul.Tensor(sum_404, squeeze_52);  sum_404 = squeeze_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_151 = torch.ops.aten.convolution_backward.default(mul_2222, relu_15, primals_61, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2222 = primals_61 = None
    getitem_733: "f32[8, 128, 64, 64]" = convolution_backward_151[0]
    getitem_734: "f32[256, 64, 3, 3]" = convolution_backward_151[1];  convolution_backward_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_556: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(relu_15);  relu_15 = None
    alias_557: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(alias_556);  alias_556 = None
    le_119: "b8[8, 128, 64, 64]" = torch.ops.aten.le.Scalar(alias_557, 0);  alias_557 = None
    scalar_tensor_119: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_119: "f32[8, 128, 64, 64]" = torch.ops.aten.where.self(le_119, scalar_tensor_119, getitem_733);  le_119 = scalar_tensor_119 = getitem_733 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_2080: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_48, 0);  squeeze_48 = None
    unsqueeze_2081: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2080, 2);  unsqueeze_2080 = None
    unsqueeze_2082: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2081, 3);  unsqueeze_2081 = None
    sum_405: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_119, [0, 2, 3])
    sub_690: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_19, unsqueeze_2082)
    mul_2224: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(where_119, sub_690);  sub_690 = None
    sum_406: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2224, [0, 2, 3]);  mul_2224 = None
    mul_2225: "f32[128]" = torch.ops.aten.mul.Tensor(sum_405, 3.0517578125e-05)
    unsqueeze_2083: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2225, 0);  mul_2225 = None
    unsqueeze_2084: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2083, 2);  unsqueeze_2083 = None
    unsqueeze_2085: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2084, 3);  unsqueeze_2084 = None
    mul_2226: "f32[128]" = torch.ops.aten.mul.Tensor(sum_406, 3.0517578125e-05)
    mul_2227: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_49, squeeze_49)
    mul_2228: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2226, mul_2227);  mul_2226 = mul_2227 = None
    unsqueeze_2086: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2228, 0);  mul_2228 = None
    unsqueeze_2087: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2086, 2);  unsqueeze_2086 = None
    unsqueeze_2088: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2087, 3);  unsqueeze_2087 = None
    mul_2229: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_49, primals_59);  primals_59 = None
    unsqueeze_2089: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2229, 0);  mul_2229 = None
    unsqueeze_2090: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2089, 2);  unsqueeze_2089 = None
    unsqueeze_2091: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2090, 3);  unsqueeze_2090 = None
    sub_691: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_19, unsqueeze_2082);  convolution_19 = unsqueeze_2082 = None
    mul_2230: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_691, unsqueeze_2088);  sub_691 = unsqueeze_2088 = None
    sub_692: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(where_119, mul_2230);  where_119 = mul_2230 = None
    sub_693: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(sub_692, unsqueeze_2085);  sub_692 = unsqueeze_2085 = None
    mul_2231: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_693, unsqueeze_2091);  sub_693 = unsqueeze_2091 = None
    mul_2232: "f32[128]" = torch.ops.aten.mul.Tensor(sum_406, squeeze_49);  sum_406 = squeeze_49 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_152 = torch.ops.aten.convolution_backward.default(mul_2231, relu_14, primals_58, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2231 = primals_58 = None
    getitem_736: "f32[8, 256, 64, 64]" = convolution_backward_152[0]
    getitem_737: "f32[128, 256, 1, 1]" = convolution_backward_152[1];  convolution_backward_152 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_787: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(avg_pool2d_backward_4, getitem_736);  avg_pool2d_backward_4 = getitem_736 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_559: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(relu_14);  relu_14 = None
    alias_560: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(alias_559);  alias_559 = None
    le_120: "b8[8, 256, 64, 64]" = torch.ops.aten.le.Scalar(alias_560, 0);  alias_560 = None
    scalar_tensor_120: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_120: "f32[8, 256, 64, 64]" = torch.ops.aten.where.self(le_120, scalar_tensor_120, add_787);  le_120 = scalar_tensor_120 = add_787 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_2092: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_45, 0);  squeeze_45 = None
    unsqueeze_2093: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2092, 2);  unsqueeze_2092 = None
    unsqueeze_2094: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2093, 3);  unsqueeze_2093 = None
    sum_407: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_120, [0, 2, 3])
    sub_694: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_18, unsqueeze_2094)
    mul_2233: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(where_120, sub_694);  sub_694 = None
    sum_408: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2233, [0, 2, 3]);  mul_2233 = None
    mul_2234: "f32[256]" = torch.ops.aten.mul.Tensor(sum_407, 3.0517578125e-05)
    unsqueeze_2095: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2234, 0);  mul_2234 = None
    unsqueeze_2096: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2095, 2);  unsqueeze_2095 = None
    unsqueeze_2097: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2096, 3);  unsqueeze_2096 = None
    mul_2235: "f32[256]" = torch.ops.aten.mul.Tensor(sum_408, 3.0517578125e-05)
    mul_2236: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_46, squeeze_46)
    mul_2237: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2235, mul_2236);  mul_2235 = mul_2236 = None
    unsqueeze_2098: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2237, 0);  mul_2237 = None
    unsqueeze_2099: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2098, 2);  unsqueeze_2098 = None
    unsqueeze_2100: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2099, 3);  unsqueeze_2099 = None
    mul_2238: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_46, primals_56);  primals_56 = None
    unsqueeze_2101: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2238, 0);  mul_2238 = None
    unsqueeze_2102: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2101, 2);  unsqueeze_2101 = None
    unsqueeze_2103: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2102, 3);  unsqueeze_2102 = None
    sub_695: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_18, unsqueeze_2094);  convolution_18 = unsqueeze_2094 = None
    mul_2239: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_695, unsqueeze_2100);  sub_695 = unsqueeze_2100 = None
    sub_696: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(where_120, mul_2239);  mul_2239 = None
    sub_697: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(sub_696, unsqueeze_2097);  sub_696 = unsqueeze_2097 = None
    mul_2240: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_697, unsqueeze_2103);  sub_697 = unsqueeze_2103 = None
    mul_2241: "f32[256]" = torch.ops.aten.mul.Tensor(sum_408, squeeze_46);  sum_408 = squeeze_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_153 = torch.ops.aten.convolution_backward.default(mul_2240, sum_9, primals_55, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2240 = sum_9 = primals_55 = None
    getitem_739: "f32[8, 64, 64, 64]" = convolution_backward_153[0]
    getitem_740: "f32[256, 64, 1, 1]" = convolution_backward_153[1];  convolution_backward_153 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_2104: "f32[8, 1, 64, 64, 64]" = torch.ops.aten.unsqueeze.default(getitem_739, 1);  getitem_739 = None
    expand_91: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2104, [8, 2, 64, 64, 64]);  unsqueeze_2104 = None
    mul_2242: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(expand_91, view_13);  view_13 = None
    mul_2243: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(expand_91, view_17);  expand_91 = view_17 = None
    sum_409: "f32[8, 2, 64, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2242, [3, 4], True);  mul_2242 = None
    view_351: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(sum_409, [8, 128, 1, 1]);  sum_409 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_352: "f32[8, 128]" = torch.ops.aten.view.default(view_351, [8, 128]);  view_351 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_353: "f32[8, 2, 1, 64]" = torch.ops.aten.view.default(view_352, [8, 2, 1, 64]);  view_352 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_561: "f32[8, 2, 1, 64]" = torch.ops.aten.alias.default(alias_16);  alias_16 = None
    mul_2244: "f32[8, 2, 1, 64]" = torch.ops.aten.mul.Tensor(view_353, alias_561);  view_353 = None
    sum_410: "f32[8, 1, 1, 64]" = torch.ops.aten.sum.dim_IntList(mul_2244, [1], True)
    mul_2245: "f32[8, 2, 1, 64]" = torch.ops.aten.mul.Tensor(alias_561, sum_410);  alias_561 = sum_410 = None
    sub_698: "f32[8, 2, 1, 64]" = torch.ops.aten.sub.Tensor(mul_2244, mul_2245);  mul_2244 = mul_2245 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_68: "f32[8, 1, 2, 64]" = torch.ops.aten.permute.default(sub_698, [0, 2, 1, 3]);  sub_698 = None
    view_354: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(permute_68, [8, 128, 1, 1]);  permute_68 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_154 = torch.ops.aten.convolution_backward.default(view_354, relu_13, primals_53, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_354 = primals_53 = None
    getitem_742: "f32[8, 32, 1, 1]" = convolution_backward_154[0]
    getitem_743: "f32[128, 32, 1, 1]" = convolution_backward_154[1]
    getitem_744: "f32[128]" = convolution_backward_154[2];  convolution_backward_154 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_563: "f32[8, 32, 1, 1]" = torch.ops.aten.alias.default(relu_13);  relu_13 = None
    alias_564: "f32[8, 32, 1, 1]" = torch.ops.aten.alias.default(alias_563);  alias_563 = None
    le_121: "b8[8, 32, 1, 1]" = torch.ops.aten.le.Scalar(alias_564, 0);  alias_564 = None
    scalar_tensor_121: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_121: "f32[8, 32, 1, 1]" = torch.ops.aten.where.self(le_121, scalar_tensor_121, getitem_742);  le_121 = scalar_tensor_121 = getitem_742 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_2105: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(squeeze_42, 0);  squeeze_42 = None
    unsqueeze_2106: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2105, 2);  unsqueeze_2105 = None
    unsqueeze_2107: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2106, 3);  unsqueeze_2106 = None
    sum_411: "f32[32]" = torch.ops.aten.sum.dim_IntList(where_121, [0, 2, 3])
    sub_699: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_16, unsqueeze_2107)
    mul_2246: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(where_121, sub_699);  sub_699 = None
    sum_412: "f32[32]" = torch.ops.aten.sum.dim_IntList(mul_2246, [0, 2, 3]);  mul_2246 = None
    mul_2247: "f32[32]" = torch.ops.aten.mul.Tensor(sum_411, 0.125)
    unsqueeze_2108: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2247, 0);  mul_2247 = None
    unsqueeze_2109: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2108, 2);  unsqueeze_2108 = None
    unsqueeze_2110: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2109, 3);  unsqueeze_2109 = None
    mul_2248: "f32[32]" = torch.ops.aten.mul.Tensor(sum_412, 0.125)
    mul_2249: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_43, squeeze_43)
    mul_2250: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2248, mul_2249);  mul_2248 = mul_2249 = None
    unsqueeze_2111: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2250, 0);  mul_2250 = None
    unsqueeze_2112: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2111, 2);  unsqueeze_2111 = None
    unsqueeze_2113: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2112, 3);  unsqueeze_2112 = None
    mul_2251: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_43, primals_51);  primals_51 = None
    unsqueeze_2114: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2251, 0);  mul_2251 = None
    unsqueeze_2115: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2114, 2);  unsqueeze_2114 = None
    unsqueeze_2116: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2115, 3);  unsqueeze_2115 = None
    sub_700: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_16, unsqueeze_2107);  convolution_16 = unsqueeze_2107 = None
    mul_2252: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_700, unsqueeze_2113);  sub_700 = unsqueeze_2113 = None
    sub_701: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(where_121, mul_2252);  where_121 = mul_2252 = None
    sub_702: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(sub_701, unsqueeze_2110);  sub_701 = unsqueeze_2110 = None
    mul_2253: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_702, unsqueeze_2116);  sub_702 = unsqueeze_2116 = None
    mul_2254: "f32[32]" = torch.ops.aten.mul.Tensor(sum_412, squeeze_43);  sum_412 = squeeze_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_155 = torch.ops.aten.convolution_backward.default(mul_2253, mean_2, primals_49, [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2253 = mean_2 = primals_49 = None
    getitem_745: "f32[8, 64, 1, 1]" = convolution_backward_155[0]
    getitem_746: "f32[32, 64, 1, 1]" = convolution_backward_155[1]
    getitem_747: "f32[32]" = convolution_backward_155[2];  convolution_backward_155 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_92: "f32[8, 64, 64, 64]" = torch.ops.aten.expand.default(getitem_745, [8, 64, 64, 64]);  getitem_745 = None
    div_64: "f32[8, 64, 64, 64]" = torch.ops.aten.div.Scalar(expand_92, 4096);  expand_92 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_2117: "f32[8, 1, 64, 64, 64]" = torch.ops.aten.unsqueeze.default(div_64, 1);  div_64 = None
    expand_93: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2117, [8, 2, 64, 64, 64]);  unsqueeze_2117 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_788: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.add.Tensor(mul_2243, expand_93);  mul_2243 = expand_93 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_355: "f32[8, 128, 64, 64]" = torch.ops.aten.view.default(add_788, [8, 128, 64, 64]);  add_788 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_566: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(relu_12);  relu_12 = None
    alias_567: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(alias_566);  alias_566 = None
    le_122: "b8[8, 128, 64, 64]" = torch.ops.aten.le.Scalar(alias_567, 0);  alias_567 = None
    scalar_tensor_122: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_122: "f32[8, 128, 64, 64]" = torch.ops.aten.where.self(le_122, scalar_tensor_122, view_355);  le_122 = scalar_tensor_122 = view_355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_2118: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_39, 0);  squeeze_39 = None
    unsqueeze_2119: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2118, 2);  unsqueeze_2118 = None
    unsqueeze_2120: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2119, 3);  unsqueeze_2119 = None
    sum_413: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_122, [0, 2, 3])
    sub_703: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_15, unsqueeze_2120)
    mul_2255: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(where_122, sub_703);  sub_703 = None
    sum_414: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2255, [0, 2, 3]);  mul_2255 = None
    mul_2256: "f32[128]" = torch.ops.aten.mul.Tensor(sum_413, 3.0517578125e-05)
    unsqueeze_2121: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2256, 0);  mul_2256 = None
    unsqueeze_2122: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2121, 2);  unsqueeze_2121 = None
    unsqueeze_2123: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2122, 3);  unsqueeze_2122 = None
    mul_2257: "f32[128]" = torch.ops.aten.mul.Tensor(sum_414, 3.0517578125e-05)
    mul_2258: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_40, squeeze_40)
    mul_2259: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2257, mul_2258);  mul_2257 = mul_2258 = None
    unsqueeze_2124: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2259, 0);  mul_2259 = None
    unsqueeze_2125: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2124, 2);  unsqueeze_2124 = None
    unsqueeze_2126: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2125, 3);  unsqueeze_2125 = None
    mul_2260: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_40, primals_47);  primals_47 = None
    unsqueeze_2127: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2260, 0);  mul_2260 = None
    unsqueeze_2128: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2127, 2);  unsqueeze_2127 = None
    unsqueeze_2129: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2128, 3);  unsqueeze_2128 = None
    sub_704: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_15, unsqueeze_2120);  convolution_15 = unsqueeze_2120 = None
    mul_2261: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_704, unsqueeze_2126);  sub_704 = unsqueeze_2126 = None
    sub_705: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(where_122, mul_2261);  where_122 = mul_2261 = None
    sub_706: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(sub_705, unsqueeze_2123);  sub_705 = unsqueeze_2123 = None
    mul_2262: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_706, unsqueeze_2129);  sub_706 = unsqueeze_2129 = None
    mul_2263: "f32[128]" = torch.ops.aten.mul.Tensor(sum_414, squeeze_40);  sum_414 = squeeze_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_156 = torch.ops.aten.convolution_backward.default(mul_2262, relu_11, primals_46, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2262 = primals_46 = None
    getitem_748: "f32[8, 64, 64, 64]" = convolution_backward_156[0]
    getitem_749: "f32[128, 32, 3, 3]" = convolution_backward_156[1];  convolution_backward_156 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_569: "f32[8, 64, 64, 64]" = torch.ops.aten.alias.default(relu_11);  relu_11 = None
    alias_570: "f32[8, 64, 64, 64]" = torch.ops.aten.alias.default(alias_569);  alias_569 = None
    le_123: "b8[8, 64, 64, 64]" = torch.ops.aten.le.Scalar(alias_570, 0);  alias_570 = None
    scalar_tensor_123: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_123: "f32[8, 64, 64, 64]" = torch.ops.aten.where.self(le_123, scalar_tensor_123, getitem_748);  le_123 = scalar_tensor_123 = getitem_748 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_2130: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_36, 0);  squeeze_36 = None
    unsqueeze_2131: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2130, 2);  unsqueeze_2130 = None
    unsqueeze_2132: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2131, 3);  unsqueeze_2131 = None
    sum_415: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_123, [0, 2, 3])
    sub_707: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_14, unsqueeze_2132)
    mul_2264: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(where_123, sub_707);  sub_707 = None
    sum_416: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2264, [0, 2, 3]);  mul_2264 = None
    mul_2265: "f32[64]" = torch.ops.aten.mul.Tensor(sum_415, 3.0517578125e-05)
    unsqueeze_2133: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2265, 0);  mul_2265 = None
    unsqueeze_2134: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2133, 2);  unsqueeze_2133 = None
    unsqueeze_2135: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2134, 3);  unsqueeze_2134 = None
    mul_2266: "f32[64]" = torch.ops.aten.mul.Tensor(sum_416, 3.0517578125e-05)
    mul_2267: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_37, squeeze_37)
    mul_2268: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2266, mul_2267);  mul_2266 = mul_2267 = None
    unsqueeze_2136: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2268, 0);  mul_2268 = None
    unsqueeze_2137: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2136, 2);  unsqueeze_2136 = None
    unsqueeze_2138: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2137, 3);  unsqueeze_2137 = None
    mul_2269: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_37, primals_44);  primals_44 = None
    unsqueeze_2139: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2269, 0);  mul_2269 = None
    unsqueeze_2140: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2139, 2);  unsqueeze_2139 = None
    unsqueeze_2141: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2140, 3);  unsqueeze_2140 = None
    sub_708: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_14, unsqueeze_2132);  convolution_14 = unsqueeze_2132 = None
    mul_2270: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_708, unsqueeze_2138);  sub_708 = unsqueeze_2138 = None
    sub_709: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(where_123, mul_2270);  where_123 = mul_2270 = None
    sub_710: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(sub_709, unsqueeze_2135);  sub_709 = unsqueeze_2135 = None
    mul_2271: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_710, unsqueeze_2141);  sub_710 = unsqueeze_2141 = None
    mul_2272: "f32[64]" = torch.ops.aten.mul.Tensor(sum_416, squeeze_37);  sum_416 = squeeze_37 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_157 = torch.ops.aten.convolution_backward.default(mul_2271, relu_10, primals_43, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2271 = primals_43 = None
    getitem_751: "f32[8, 256, 64, 64]" = convolution_backward_157[0]
    getitem_752: "f32[64, 256, 1, 1]" = convolution_backward_157[1];  convolution_backward_157 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_789: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(where_120, getitem_751);  where_120 = getitem_751 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_572: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(relu_10);  relu_10 = None
    alias_573: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(alias_572);  alias_572 = None
    le_124: "b8[8, 256, 64, 64]" = torch.ops.aten.le.Scalar(alias_573, 0);  alias_573 = None
    scalar_tensor_124: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_124: "f32[8, 256, 64, 64]" = torch.ops.aten.where.self(le_124, scalar_tensor_124, add_789);  le_124 = scalar_tensor_124 = add_789 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_2142: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_33, 0);  squeeze_33 = None
    unsqueeze_2143: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2142, 2);  unsqueeze_2142 = None
    unsqueeze_2144: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2143, 3);  unsqueeze_2143 = None
    sum_417: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_124, [0, 2, 3])
    sub_711: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_13, unsqueeze_2144)
    mul_2273: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(where_124, sub_711);  sub_711 = None
    sum_418: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2273, [0, 2, 3]);  mul_2273 = None
    mul_2274: "f32[256]" = torch.ops.aten.mul.Tensor(sum_417, 3.0517578125e-05)
    unsqueeze_2145: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2274, 0);  mul_2274 = None
    unsqueeze_2146: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2145, 2);  unsqueeze_2145 = None
    unsqueeze_2147: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2146, 3);  unsqueeze_2146 = None
    mul_2275: "f32[256]" = torch.ops.aten.mul.Tensor(sum_418, 3.0517578125e-05)
    mul_2276: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_34, squeeze_34)
    mul_2277: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2275, mul_2276);  mul_2275 = mul_2276 = None
    unsqueeze_2148: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2277, 0);  mul_2277 = None
    unsqueeze_2149: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2148, 2);  unsqueeze_2148 = None
    unsqueeze_2150: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2149, 3);  unsqueeze_2149 = None
    mul_2278: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_34, primals_41);  primals_41 = None
    unsqueeze_2151: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2278, 0);  mul_2278 = None
    unsqueeze_2152: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2151, 2);  unsqueeze_2151 = None
    unsqueeze_2153: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2152, 3);  unsqueeze_2152 = None
    sub_712: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_13, unsqueeze_2144);  convolution_13 = unsqueeze_2144 = None
    mul_2279: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_712, unsqueeze_2150);  sub_712 = unsqueeze_2150 = None
    sub_713: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(where_124, mul_2279);  mul_2279 = None
    sub_714: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(sub_713, unsqueeze_2147);  sub_713 = unsqueeze_2147 = None
    mul_2280: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_714, unsqueeze_2153);  sub_714 = unsqueeze_2153 = None
    mul_2281: "f32[256]" = torch.ops.aten.mul.Tensor(sum_418, squeeze_34);  sum_418 = squeeze_34 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_158 = torch.ops.aten.convolution_backward.default(mul_2280, sum_6, primals_40, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2280 = sum_6 = primals_40 = None
    getitem_754: "f32[8, 64, 64, 64]" = convolution_backward_158[0]
    getitem_755: "f32[256, 64, 1, 1]" = convolution_backward_158[1];  convolution_backward_158 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_2154: "f32[8, 1, 64, 64, 64]" = torch.ops.aten.unsqueeze.default(getitem_754, 1);  getitem_754 = None
    expand_94: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2154, [8, 2, 64, 64, 64]);  unsqueeze_2154 = None
    mul_2282: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(expand_94, view_7);  view_7 = None
    mul_2283: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(expand_94, view_11);  expand_94 = view_11 = None
    sum_419: "f32[8, 2, 64, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2282, [3, 4], True);  mul_2282 = None
    view_356: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(sum_419, [8, 128, 1, 1]);  sum_419 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_357: "f32[8, 128]" = torch.ops.aten.view.default(view_356, [8, 128]);  view_356 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_358: "f32[8, 2, 1, 64]" = torch.ops.aten.view.default(view_357, [8, 2, 1, 64]);  view_357 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_574: "f32[8, 2, 1, 64]" = torch.ops.aten.alias.default(alias_11);  alias_11 = None
    mul_2284: "f32[8, 2, 1, 64]" = torch.ops.aten.mul.Tensor(view_358, alias_574);  view_358 = None
    sum_420: "f32[8, 1, 1, 64]" = torch.ops.aten.sum.dim_IntList(mul_2284, [1], True)
    mul_2285: "f32[8, 2, 1, 64]" = torch.ops.aten.mul.Tensor(alias_574, sum_420);  alias_574 = sum_420 = None
    sub_715: "f32[8, 2, 1, 64]" = torch.ops.aten.sub.Tensor(mul_2284, mul_2285);  mul_2284 = mul_2285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_69: "f32[8, 1, 2, 64]" = torch.ops.aten.permute.default(sub_715, [0, 2, 1, 3]);  sub_715 = None
    view_359: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(permute_69, [8, 128, 1, 1]);  permute_69 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_159 = torch.ops.aten.convolution_backward.default(view_359, relu_9, primals_38, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_359 = primals_38 = None
    getitem_757: "f32[8, 32, 1, 1]" = convolution_backward_159[0]
    getitem_758: "f32[128, 32, 1, 1]" = convolution_backward_159[1]
    getitem_759: "f32[128]" = convolution_backward_159[2];  convolution_backward_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_576: "f32[8, 32, 1, 1]" = torch.ops.aten.alias.default(relu_9);  relu_9 = None
    alias_577: "f32[8, 32, 1, 1]" = torch.ops.aten.alias.default(alias_576);  alias_576 = None
    le_125: "b8[8, 32, 1, 1]" = torch.ops.aten.le.Scalar(alias_577, 0);  alias_577 = None
    scalar_tensor_125: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_125: "f32[8, 32, 1, 1]" = torch.ops.aten.where.self(le_125, scalar_tensor_125, getitem_757);  le_125 = scalar_tensor_125 = getitem_757 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_2155: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(squeeze_30, 0);  squeeze_30 = None
    unsqueeze_2156: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2155, 2);  unsqueeze_2155 = None
    unsqueeze_2157: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2156, 3);  unsqueeze_2156 = None
    sum_421: "f32[32]" = torch.ops.aten.sum.dim_IntList(where_125, [0, 2, 3])
    sub_716: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_11, unsqueeze_2157)
    mul_2286: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(where_125, sub_716);  sub_716 = None
    sum_422: "f32[32]" = torch.ops.aten.sum.dim_IntList(mul_2286, [0, 2, 3]);  mul_2286 = None
    mul_2287: "f32[32]" = torch.ops.aten.mul.Tensor(sum_421, 0.125)
    unsqueeze_2158: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2287, 0);  mul_2287 = None
    unsqueeze_2159: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2158, 2);  unsqueeze_2158 = None
    unsqueeze_2160: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2159, 3);  unsqueeze_2159 = None
    mul_2288: "f32[32]" = torch.ops.aten.mul.Tensor(sum_422, 0.125)
    mul_2289: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_31, squeeze_31)
    mul_2290: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2288, mul_2289);  mul_2288 = mul_2289 = None
    unsqueeze_2161: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2290, 0);  mul_2290 = None
    unsqueeze_2162: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2161, 2);  unsqueeze_2161 = None
    unsqueeze_2163: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2162, 3);  unsqueeze_2162 = None
    mul_2291: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_31, primals_36);  primals_36 = None
    unsqueeze_2164: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2291, 0);  mul_2291 = None
    unsqueeze_2165: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2164, 2);  unsqueeze_2164 = None
    unsqueeze_2166: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2165, 3);  unsqueeze_2165 = None
    sub_717: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_11, unsqueeze_2157);  convolution_11 = unsqueeze_2157 = None
    mul_2292: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_717, unsqueeze_2163);  sub_717 = unsqueeze_2163 = None
    sub_718: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(where_125, mul_2292);  where_125 = mul_2292 = None
    sub_719: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(sub_718, unsqueeze_2160);  sub_718 = unsqueeze_2160 = None
    mul_2293: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_719, unsqueeze_2166);  sub_719 = unsqueeze_2166 = None
    mul_2294: "f32[32]" = torch.ops.aten.mul.Tensor(sum_422, squeeze_31);  sum_422 = squeeze_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_160 = torch.ops.aten.convolution_backward.default(mul_2293, mean_1, primals_34, [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2293 = mean_1 = primals_34 = None
    getitem_760: "f32[8, 64, 1, 1]" = convolution_backward_160[0]
    getitem_761: "f32[32, 64, 1, 1]" = convolution_backward_160[1]
    getitem_762: "f32[32]" = convolution_backward_160[2];  convolution_backward_160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_95: "f32[8, 64, 64, 64]" = torch.ops.aten.expand.default(getitem_760, [8, 64, 64, 64]);  getitem_760 = None
    div_65: "f32[8, 64, 64, 64]" = torch.ops.aten.div.Scalar(expand_95, 4096);  expand_95 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_2167: "f32[8, 1, 64, 64, 64]" = torch.ops.aten.unsqueeze.default(div_65, 1);  div_65 = None
    expand_96: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2167, [8, 2, 64, 64, 64]);  unsqueeze_2167 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_790: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.add.Tensor(mul_2283, expand_96);  mul_2283 = expand_96 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_360: "f32[8, 128, 64, 64]" = torch.ops.aten.view.default(add_790, [8, 128, 64, 64]);  add_790 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_579: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(relu_8);  relu_8 = None
    alias_580: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(alias_579);  alias_579 = None
    le_126: "b8[8, 128, 64, 64]" = torch.ops.aten.le.Scalar(alias_580, 0);  alias_580 = None
    scalar_tensor_126: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_126: "f32[8, 128, 64, 64]" = torch.ops.aten.where.self(le_126, scalar_tensor_126, view_360);  le_126 = scalar_tensor_126 = view_360 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_2168: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_27, 0);  squeeze_27 = None
    unsqueeze_2169: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2168, 2);  unsqueeze_2168 = None
    unsqueeze_2170: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2169, 3);  unsqueeze_2169 = None
    sum_423: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_126, [0, 2, 3])
    sub_720: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_10, unsqueeze_2170)
    mul_2295: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(where_126, sub_720);  sub_720 = None
    sum_424: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2295, [0, 2, 3]);  mul_2295 = None
    mul_2296: "f32[128]" = torch.ops.aten.mul.Tensor(sum_423, 3.0517578125e-05)
    unsqueeze_2171: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2296, 0);  mul_2296 = None
    unsqueeze_2172: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2171, 2);  unsqueeze_2171 = None
    unsqueeze_2173: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2172, 3);  unsqueeze_2172 = None
    mul_2297: "f32[128]" = torch.ops.aten.mul.Tensor(sum_424, 3.0517578125e-05)
    mul_2298: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_28, squeeze_28)
    mul_2299: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2297, mul_2298);  mul_2297 = mul_2298 = None
    unsqueeze_2174: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2299, 0);  mul_2299 = None
    unsqueeze_2175: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2174, 2);  unsqueeze_2174 = None
    unsqueeze_2176: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2175, 3);  unsqueeze_2175 = None
    mul_2300: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_28, primals_32);  primals_32 = None
    unsqueeze_2177: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2300, 0);  mul_2300 = None
    unsqueeze_2178: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2177, 2);  unsqueeze_2177 = None
    unsqueeze_2179: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2178, 3);  unsqueeze_2178 = None
    sub_721: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_10, unsqueeze_2170);  convolution_10 = unsqueeze_2170 = None
    mul_2301: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_721, unsqueeze_2176);  sub_721 = unsqueeze_2176 = None
    sub_722: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(where_126, mul_2301);  where_126 = mul_2301 = None
    sub_723: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(sub_722, unsqueeze_2173);  sub_722 = unsqueeze_2173 = None
    mul_2302: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_723, unsqueeze_2179);  sub_723 = unsqueeze_2179 = None
    mul_2303: "f32[128]" = torch.ops.aten.mul.Tensor(sum_424, squeeze_28);  sum_424 = squeeze_28 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_161 = torch.ops.aten.convolution_backward.default(mul_2302, relu_7, primals_31, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2302 = primals_31 = None
    getitem_763: "f32[8, 64, 64, 64]" = convolution_backward_161[0]
    getitem_764: "f32[128, 32, 3, 3]" = convolution_backward_161[1];  convolution_backward_161 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_582: "f32[8, 64, 64, 64]" = torch.ops.aten.alias.default(relu_7);  relu_7 = None
    alias_583: "f32[8, 64, 64, 64]" = torch.ops.aten.alias.default(alias_582);  alias_582 = None
    le_127: "b8[8, 64, 64, 64]" = torch.ops.aten.le.Scalar(alias_583, 0);  alias_583 = None
    scalar_tensor_127: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_127: "f32[8, 64, 64, 64]" = torch.ops.aten.where.self(le_127, scalar_tensor_127, getitem_763);  le_127 = scalar_tensor_127 = getitem_763 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_2180: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_24, 0);  squeeze_24 = None
    unsqueeze_2181: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2180, 2);  unsqueeze_2180 = None
    unsqueeze_2182: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2181, 3);  unsqueeze_2181 = None
    sum_425: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_127, [0, 2, 3])
    sub_724: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_9, unsqueeze_2182)
    mul_2304: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(where_127, sub_724);  sub_724 = None
    sum_426: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2304, [0, 2, 3]);  mul_2304 = None
    mul_2305: "f32[64]" = torch.ops.aten.mul.Tensor(sum_425, 3.0517578125e-05)
    unsqueeze_2183: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2305, 0);  mul_2305 = None
    unsqueeze_2184: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2183, 2);  unsqueeze_2183 = None
    unsqueeze_2185: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2184, 3);  unsqueeze_2184 = None
    mul_2306: "f32[64]" = torch.ops.aten.mul.Tensor(sum_426, 3.0517578125e-05)
    mul_2307: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_25, squeeze_25)
    mul_2308: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2306, mul_2307);  mul_2306 = mul_2307 = None
    unsqueeze_2186: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2308, 0);  mul_2308 = None
    unsqueeze_2187: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2186, 2);  unsqueeze_2186 = None
    unsqueeze_2188: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2187, 3);  unsqueeze_2187 = None
    mul_2309: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_25, primals_29);  primals_29 = None
    unsqueeze_2189: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2309, 0);  mul_2309 = None
    unsqueeze_2190: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2189, 2);  unsqueeze_2189 = None
    unsqueeze_2191: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2190, 3);  unsqueeze_2190 = None
    sub_725: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_9, unsqueeze_2182);  convolution_9 = unsqueeze_2182 = None
    mul_2310: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_725, unsqueeze_2188);  sub_725 = unsqueeze_2188 = None
    sub_726: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(where_127, mul_2310);  where_127 = mul_2310 = None
    sub_727: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(sub_726, unsqueeze_2185);  sub_726 = unsqueeze_2185 = None
    mul_2311: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_727, unsqueeze_2191);  sub_727 = unsqueeze_2191 = None
    mul_2312: "f32[64]" = torch.ops.aten.mul.Tensor(sum_426, squeeze_25);  sum_426 = squeeze_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_162 = torch.ops.aten.convolution_backward.default(mul_2311, relu_6, primals_28, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2311 = primals_28 = None
    getitem_766: "f32[8, 256, 64, 64]" = convolution_backward_162[0]
    getitem_767: "f32[64, 256, 1, 1]" = convolution_backward_162[1];  convolution_backward_162 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_791: "f32[8, 256, 64, 64]" = torch.ops.aten.add.Tensor(where_124, getitem_766);  where_124 = getitem_766 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:116, code: out = self.act3(out)
    alias_585: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(relu_6);  relu_6 = None
    alias_586: "f32[8, 256, 64, 64]" = torch.ops.aten.alias.default(alias_585);  alias_585 = None
    le_128: "b8[8, 256, 64, 64]" = torch.ops.aten.le.Scalar(alias_586, 0);  alias_586 = None
    scalar_tensor_128: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_128: "f32[8, 256, 64, 64]" = torch.ops.aten.where.self(le_128, scalar_tensor_128, add_791);  le_128 = scalar_tensor_128 = add_791 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:113, code: shortcut = self.downsample(x)
    unsqueeze_2192: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_21, 0);  squeeze_21 = None
    unsqueeze_2193: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2192, 2);  unsqueeze_2192 = None
    unsqueeze_2194: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2193, 3);  unsqueeze_2193 = None
    sum_427: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_128, [0, 2, 3])
    sub_728: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_8, unsqueeze_2194)
    mul_2313: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(where_128, sub_728);  sub_728 = None
    sum_428: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2313, [0, 2, 3]);  mul_2313 = None
    mul_2314: "f32[256]" = torch.ops.aten.mul.Tensor(sum_427, 3.0517578125e-05)
    unsqueeze_2195: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2314, 0);  mul_2314 = None
    unsqueeze_2196: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2195, 2);  unsqueeze_2195 = None
    unsqueeze_2197: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2196, 3);  unsqueeze_2196 = None
    mul_2315: "f32[256]" = torch.ops.aten.mul.Tensor(sum_428, 3.0517578125e-05)
    mul_2316: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_22, squeeze_22)
    mul_2317: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2315, mul_2316);  mul_2315 = mul_2316 = None
    unsqueeze_2198: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2317, 0);  mul_2317 = None
    unsqueeze_2199: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2198, 2);  unsqueeze_2198 = None
    unsqueeze_2200: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2199, 3);  unsqueeze_2199 = None
    mul_2318: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_22, primals_26);  primals_26 = None
    unsqueeze_2201: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2318, 0);  mul_2318 = None
    unsqueeze_2202: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2201, 2);  unsqueeze_2201 = None
    unsqueeze_2203: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2202, 3);  unsqueeze_2202 = None
    sub_729: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_8, unsqueeze_2194);  convolution_8 = unsqueeze_2194 = None
    mul_2319: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_729, unsqueeze_2200);  sub_729 = unsqueeze_2200 = None
    sub_730: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(where_128, mul_2319);  mul_2319 = None
    sub_731: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(sub_730, unsqueeze_2197);  sub_730 = unsqueeze_2197 = None
    mul_2320: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_731, unsqueeze_2203);  sub_731 = unsqueeze_2203 = None
    mul_2321: "f32[256]" = torch.ops.aten.mul.Tensor(sum_428, squeeze_22);  sum_428 = squeeze_22 = None
    convolution_backward_163 = torch.ops.aten.convolution_backward.default(mul_2320, getitem_6, primals_25, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2320 = primals_25 = None
    getitem_769: "f32[8, 128, 64, 64]" = convolution_backward_163[0]
    getitem_770: "f32[256, 128, 1, 1]" = convolution_backward_163[1];  convolution_backward_163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:110, code: out = self.bn3(out)
    unsqueeze_2204: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_18, 0);  squeeze_18 = None
    unsqueeze_2205: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2204, 2);  unsqueeze_2204 = None
    unsqueeze_2206: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2205, 3);  unsqueeze_2205 = None
    sum_429: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_128, [0, 2, 3])
    sub_732: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_7, unsqueeze_2206)
    mul_2322: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(where_128, sub_732);  sub_732 = None
    sum_430: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2322, [0, 2, 3]);  mul_2322 = None
    mul_2323: "f32[256]" = torch.ops.aten.mul.Tensor(sum_429, 3.0517578125e-05)
    unsqueeze_2207: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2323, 0);  mul_2323 = None
    unsqueeze_2208: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2207, 2);  unsqueeze_2207 = None
    unsqueeze_2209: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2208, 3);  unsqueeze_2208 = None
    mul_2324: "f32[256]" = torch.ops.aten.mul.Tensor(sum_430, 3.0517578125e-05)
    mul_2325: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_19, squeeze_19)
    mul_2326: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2324, mul_2325);  mul_2324 = mul_2325 = None
    unsqueeze_2210: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2326, 0);  mul_2326 = None
    unsqueeze_2211: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2210, 2);  unsqueeze_2210 = None
    unsqueeze_2212: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2211, 3);  unsqueeze_2211 = None
    mul_2327: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_19, primals_23);  primals_23 = None
    unsqueeze_2213: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2327, 0);  mul_2327 = None
    unsqueeze_2214: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2213, 2);  unsqueeze_2213 = None
    unsqueeze_2215: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2214, 3);  unsqueeze_2214 = None
    sub_733: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_7, unsqueeze_2206);  convolution_7 = unsqueeze_2206 = None
    mul_2328: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_733, unsqueeze_2212);  sub_733 = unsqueeze_2212 = None
    sub_734: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(where_128, mul_2328);  where_128 = mul_2328 = None
    sub_735: "f32[8, 256, 64, 64]" = torch.ops.aten.sub.Tensor(sub_734, unsqueeze_2209);  sub_734 = unsqueeze_2209 = None
    mul_2329: "f32[8, 256, 64, 64]" = torch.ops.aten.mul.Tensor(sub_735, unsqueeze_2215);  sub_735 = unsqueeze_2215 = None
    mul_2330: "f32[256]" = torch.ops.aten.mul.Tensor(sum_430, squeeze_19);  sum_430 = squeeze_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:109, code: out = self.conv3(out)
    convolution_backward_164 = torch.ops.aten.convolution_backward.default(mul_2329, sum_3, primals_22, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2329 = sum_3 = primals_22 = None
    getitem_772: "f32[8, 64, 64, 64]" = convolution_backward_164[0]
    getitem_773: "f32[256, 64, 1, 1]" = convolution_backward_164[1];  convolution_backward_164 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:81, code: out = (x * x_attn.reshape((B, self.radix, RC // self.radix, 1, 1))).sum(dim=1)
    unsqueeze_2216: "f32[8, 1, 64, 64, 64]" = torch.ops.aten.unsqueeze.default(getitem_772, 1);  getitem_772 = None
    expand_97: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2216, [8, 2, 64, 64, 64]);  unsqueeze_2216 = None
    mul_2331: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(expand_97, view_1);  view_1 = None
    mul_2332: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.mul.Tensor(expand_97, view_5);  expand_97 = view_5 = None
    sum_431: "f32[8, 2, 64, 1, 1]" = torch.ops.aten.sum.dim_IntList(mul_2331, [3, 4], True);  mul_2331 = None
    view_361: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(sum_431, [8, 128, 1, 1]);  sum_431 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:79, code: x_attn = self.rsoftmax(x_attn).view(B, -1, 1, 1)
    view_362: "f32[8, 128]" = torch.ops.aten.view.default(view_361, [8, 128]);  view_361 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:27, code: x = x.reshape(batch, -1)
    view_363: "f32[8, 2, 1, 64]" = torch.ops.aten.view.default(view_362, [8, 2, 1, 64]);  view_362 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:26, code: x = F.softmax(x, dim=1)
    alias_587: "f32[8, 2, 1, 64]" = torch.ops.aten.alias.default(alias_6);  alias_6 = None
    mul_2333: "f32[8, 2, 1, 64]" = torch.ops.aten.mul.Tensor(view_363, alias_587);  view_363 = None
    sum_432: "f32[8, 1, 1, 64]" = torch.ops.aten.sum.dim_IntList(mul_2333, [1], True)
    mul_2334: "f32[8, 2, 1, 64]" = torch.ops.aten.mul.Tensor(alias_587, sum_432);  alias_587 = sum_432 = None
    sub_736: "f32[8, 2, 1, 64]" = torch.ops.aten.sub.Tensor(mul_2333, mul_2334);  mul_2333 = mul_2334 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:25, code: x = x.view(batch, self.cardinality, self.radix, -1).transpose(1, 2)
    permute_70: "f32[8, 1, 2, 64]" = torch.ops.aten.permute.default(sub_736, [0, 2, 1, 3]);  sub_736 = None
    view_364: "f32[8, 128, 1, 1]" = torch.ops.aten.view.default(permute_70, [8, 128, 1, 1]);  permute_70 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:77, code: x_attn = self.fc2(x_gap)
    convolution_backward_165 = torch.ops.aten.convolution_backward.default(view_364, relu_5, primals_20, [128], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  view_364 = primals_20 = None
    getitem_775: "f32[8, 32, 1, 1]" = convolution_backward_165[0]
    getitem_776: "f32[128, 32, 1, 1]" = convolution_backward_165[1]
    getitem_777: "f32[128]" = convolution_backward_165[2];  convolution_backward_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:76, code: x_gap = self.act1(x_gap)
    alias_589: "f32[8, 32, 1, 1]" = torch.ops.aten.alias.default(relu_5);  relu_5 = None
    alias_590: "f32[8, 32, 1, 1]" = torch.ops.aten.alias.default(alias_589);  alias_589 = None
    le_129: "b8[8, 32, 1, 1]" = torch.ops.aten.le.Scalar(alias_590, 0);  alias_590 = None
    scalar_tensor_129: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_129: "f32[8, 32, 1, 1]" = torch.ops.aten.where.self(le_129, scalar_tensor_129, getitem_775);  le_129 = scalar_tensor_129 = getitem_775 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:75, code: x_gap = self.bn1(x_gap)
    unsqueeze_2217: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(squeeze_15, 0);  squeeze_15 = None
    unsqueeze_2218: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2217, 2);  unsqueeze_2217 = None
    unsqueeze_2219: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2218, 3);  unsqueeze_2218 = None
    sum_433: "f32[32]" = torch.ops.aten.sum.dim_IntList(where_129, [0, 2, 3])
    sub_737: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_5, unsqueeze_2219)
    mul_2335: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(where_129, sub_737);  sub_737 = None
    sum_434: "f32[32]" = torch.ops.aten.sum.dim_IntList(mul_2335, [0, 2, 3]);  mul_2335 = None
    mul_2336: "f32[32]" = torch.ops.aten.mul.Tensor(sum_433, 0.125)
    unsqueeze_2220: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2336, 0);  mul_2336 = None
    unsqueeze_2221: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2220, 2);  unsqueeze_2220 = None
    unsqueeze_2222: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2221, 3);  unsqueeze_2221 = None
    mul_2337: "f32[32]" = torch.ops.aten.mul.Tensor(sum_434, 0.125)
    mul_2338: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_16, squeeze_16)
    mul_2339: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2337, mul_2338);  mul_2337 = mul_2338 = None
    unsqueeze_2223: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2339, 0);  mul_2339 = None
    unsqueeze_2224: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2223, 2);  unsqueeze_2223 = None
    unsqueeze_2225: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2224, 3);  unsqueeze_2224 = None
    mul_2340: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_16, primals_18);  primals_18 = None
    unsqueeze_2226: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2340, 0);  mul_2340 = None
    unsqueeze_2227: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2226, 2);  unsqueeze_2226 = None
    unsqueeze_2228: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2227, 3);  unsqueeze_2227 = None
    sub_738: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(convolution_5, unsqueeze_2219);  convolution_5 = unsqueeze_2219 = None
    mul_2341: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_738, unsqueeze_2225);  sub_738 = unsqueeze_2225 = None
    sub_739: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(where_129, mul_2341);  where_129 = mul_2341 = None
    sub_740: "f32[8, 32, 1, 1]" = torch.ops.aten.sub.Tensor(sub_739, unsqueeze_2222);  sub_739 = unsqueeze_2222 = None
    mul_2342: "f32[8, 32, 1, 1]" = torch.ops.aten.mul.Tensor(sub_740, unsqueeze_2228);  sub_740 = unsqueeze_2228 = None
    mul_2343: "f32[32]" = torch.ops.aten.mul.Tensor(sum_434, squeeze_16);  sum_434 = squeeze_16 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:74, code: x_gap = self.fc1(x_gap)
    convolution_backward_166 = torch.ops.aten.convolution_backward.default(mul_2342, mean, primals_16, [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]);  mul_2342 = mean = primals_16 = None
    getitem_778: "f32[8, 64, 1, 1]" = convolution_backward_166[0]
    getitem_779: "f32[32, 64, 1, 1]" = convolution_backward_166[1]
    getitem_780: "f32[32]" = convolution_backward_166[2];  convolution_backward_166 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:73, code: x_gap = x_gap.mean((2, 3), keepdim=True)
    expand_98: "f32[8, 64, 64, 64]" = torch.ops.aten.expand.default(getitem_778, [8, 64, 64, 64]);  getitem_778 = None
    div_66: "f32[8, 64, 64, 64]" = torch.ops.aten.div.Scalar(expand_98, 4096);  expand_98 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    unsqueeze_2229: "f32[8, 1, 64, 64, 64]" = torch.ops.aten.unsqueeze.default(div_66, 1);  div_66 = None
    expand_99: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.expand.default(unsqueeze_2229, [8, 2, 64, 64, 64]);  unsqueeze_2229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:70, code: x_gap = x.sum(dim=1)
    add_792: "f32[8, 2, 64, 64, 64]" = torch.ops.aten.add.Tensor(mul_2332, expand_99);  mul_2332 = expand_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:69, code: x = x.reshape((B, self.radix, RC // self.radix, H, W))
    view_365: "f32[8, 128, 64, 64]" = torch.ops.aten.view.default(add_792, [8, 128, 64, 64]);  add_792 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:65, code: x = self.act0(x)
    alias_592: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(relu_4);  relu_4 = None
    alias_593: "f32[8, 128, 64, 64]" = torch.ops.aten.alias.default(alias_592);  alias_592 = None
    le_130: "b8[8, 128, 64, 64]" = torch.ops.aten.le.Scalar(alias_593, 0);  alias_593 = None
    scalar_tensor_130: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_130: "f32[8, 128, 64, 64]" = torch.ops.aten.where.self(le_130, scalar_tensor_130, view_365);  le_130 = scalar_tensor_130 = view_365 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:63, code: x = self.bn0(x)
    unsqueeze_2230: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_12, 0);  squeeze_12 = None
    unsqueeze_2231: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2230, 2);  unsqueeze_2230 = None
    unsqueeze_2232: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2231, 3);  unsqueeze_2231 = None
    sum_435: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_130, [0, 2, 3])
    sub_741: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_4, unsqueeze_2232)
    mul_2344: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(where_130, sub_741);  sub_741 = None
    sum_436: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2344, [0, 2, 3]);  mul_2344 = None
    mul_2345: "f32[128]" = torch.ops.aten.mul.Tensor(sum_435, 3.0517578125e-05)
    unsqueeze_2233: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2345, 0);  mul_2345 = None
    unsqueeze_2234: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2233, 2);  unsqueeze_2233 = None
    unsqueeze_2235: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2234, 3);  unsqueeze_2234 = None
    mul_2346: "f32[128]" = torch.ops.aten.mul.Tensor(sum_436, 3.0517578125e-05)
    mul_2347: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_13, squeeze_13)
    mul_2348: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2346, mul_2347);  mul_2346 = mul_2347 = None
    unsqueeze_2236: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2348, 0);  mul_2348 = None
    unsqueeze_2237: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2236, 2);  unsqueeze_2236 = None
    unsqueeze_2238: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2237, 3);  unsqueeze_2237 = None
    mul_2349: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_13, primals_14);  primals_14 = None
    unsqueeze_2239: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2349, 0);  mul_2349 = None
    unsqueeze_2240: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2239, 2);  unsqueeze_2239 = None
    unsqueeze_2241: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2240, 3);  unsqueeze_2240 = None
    sub_742: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_4, unsqueeze_2232);  convolution_4 = unsqueeze_2232 = None
    mul_2350: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_742, unsqueeze_2238);  sub_742 = unsqueeze_2238 = None
    sub_743: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(where_130, mul_2350);  where_130 = mul_2350 = None
    sub_744: "f32[8, 128, 64, 64]" = torch.ops.aten.sub.Tensor(sub_743, unsqueeze_2235);  sub_743 = unsqueeze_2235 = None
    mul_2351: "f32[8, 128, 64, 64]" = torch.ops.aten.mul.Tensor(sub_744, unsqueeze_2241);  sub_744 = unsqueeze_2241 = None
    mul_2352: "f32[128]" = torch.ops.aten.mul.Tensor(sum_436, squeeze_13);  sum_436 = squeeze_13 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/split_attn.py:62, code: x = self.conv(x)
    convolution_backward_167 = torch.ops.aten.convolution_backward.default(mul_2351, relu_3, primals_13, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 2, [True, True, False]);  mul_2351 = primals_13 = None
    getitem_781: "f32[8, 64, 64, 64]" = convolution_backward_167[0]
    getitem_782: "f32[128, 32, 3, 3]" = convolution_backward_167[1];  convolution_backward_167 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:96, code: out = self.act1(out)
    alias_595: "f32[8, 64, 64, 64]" = torch.ops.aten.alias.default(relu_3);  relu_3 = None
    alias_596: "f32[8, 64, 64, 64]" = torch.ops.aten.alias.default(alias_595);  alias_595 = None
    le_131: "b8[8, 64, 64, 64]" = torch.ops.aten.le.Scalar(alias_596, 0);  alias_596 = None
    scalar_tensor_131: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_131: "f32[8, 64, 64, 64]" = torch.ops.aten.where.self(le_131, scalar_tensor_131, getitem_781);  le_131 = scalar_tensor_131 = getitem_781 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:95, code: out = self.bn1(out)
    unsqueeze_2242: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_9, 0);  squeeze_9 = None
    unsqueeze_2243: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2242, 2);  unsqueeze_2242 = None
    unsqueeze_2244: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2243, 3);  unsqueeze_2243 = None
    sum_437: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_131, [0, 2, 3])
    sub_745: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_3, unsqueeze_2244)
    mul_2353: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(where_131, sub_745);  sub_745 = None
    sum_438: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2353, [0, 2, 3]);  mul_2353 = None
    mul_2354: "f32[64]" = torch.ops.aten.mul.Tensor(sum_437, 3.0517578125e-05)
    unsqueeze_2245: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2354, 0);  mul_2354 = None
    unsqueeze_2246: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2245, 2);  unsqueeze_2245 = None
    unsqueeze_2247: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2246, 3);  unsqueeze_2246 = None
    mul_2355: "f32[64]" = torch.ops.aten.mul.Tensor(sum_438, 3.0517578125e-05)
    mul_2356: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_10, squeeze_10)
    mul_2357: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2355, mul_2356);  mul_2355 = mul_2356 = None
    unsqueeze_2248: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2357, 0);  mul_2357 = None
    unsqueeze_2249: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2248, 2);  unsqueeze_2248 = None
    unsqueeze_2250: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2249, 3);  unsqueeze_2249 = None
    mul_2358: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_10, primals_11);  primals_11 = None
    unsqueeze_2251: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2358, 0);  mul_2358 = None
    unsqueeze_2252: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2251, 2);  unsqueeze_2251 = None
    unsqueeze_2253: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2252, 3);  unsqueeze_2252 = None
    sub_746: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(convolution_3, unsqueeze_2244);  convolution_3 = unsqueeze_2244 = None
    mul_2359: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_746, unsqueeze_2250);  sub_746 = unsqueeze_2250 = None
    sub_747: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(where_131, mul_2359);  where_131 = mul_2359 = None
    sub_748: "f32[8, 64, 64, 64]" = torch.ops.aten.sub.Tensor(sub_747, unsqueeze_2247);  sub_747 = unsqueeze_2247 = None
    mul_2360: "f32[8, 64, 64, 64]" = torch.ops.aten.mul.Tensor(sub_748, unsqueeze_2253);  sub_748 = unsqueeze_2253 = None
    mul_2361: "f32[64]" = torch.ops.aten.mul.Tensor(sum_438, squeeze_10);  sum_438 = squeeze_10 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    convolution_backward_168 = torch.ops.aten.convolution_backward.default(mul_2360, getitem_6, primals_10, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2360 = getitem_6 = primals_10 = None
    getitem_784: "f32[8, 128, 64, 64]" = convolution_backward_168[0]
    getitem_785: "f32[64, 128, 1, 1]" = convolution_backward_168[1];  convolution_backward_168 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnest.py:94, code: out = self.conv1(x)
    add_793: "f32[8, 128, 64, 64]" = torch.ops.aten.add.Tensor(getitem_769, getitem_784);  getitem_769 = getitem_784 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:523, code: x = self.maxpool(x)
    max_pool2d_with_indices_backward: "f32[8, 128, 128, 128]" = torch.ops.aten.max_pool2d_with_indices_backward.default(add_793, relu_2, [3, 3], [2, 2], [1, 1], [1, 1], False, getitem_7);  add_793 = getitem_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:522, code: x = self.act1(x)
    alias_598: "f32[8, 128, 128, 128]" = torch.ops.aten.alias.default(relu_2);  relu_2 = None
    alias_599: "f32[8, 128, 128, 128]" = torch.ops.aten.alias.default(alias_598);  alias_598 = None
    le_132: "b8[8, 128, 128, 128]" = torch.ops.aten.le.Scalar(alias_599, 0);  alias_599 = None
    scalar_tensor_132: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_132: "f32[8, 128, 128, 128]" = torch.ops.aten.where.self(le_132, scalar_tensor_132, max_pool2d_with_indices_backward);  le_132 = scalar_tensor_132 = max_pool2d_with_indices_backward = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:521, code: x = self.bn1(x)
    unsqueeze_2254: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_6, 0);  squeeze_6 = None
    unsqueeze_2255: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2254, 2);  unsqueeze_2254 = None
    unsqueeze_2256: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2255, 3);  unsqueeze_2255 = None
    sum_439: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_132, [0, 2, 3])
    sub_749: "f32[8, 128, 128, 128]" = torch.ops.aten.sub.Tensor(convolution_2, unsqueeze_2256)
    mul_2362: "f32[8, 128, 128, 128]" = torch.ops.aten.mul.Tensor(where_132, sub_749);  sub_749 = None
    sum_440: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2362, [0, 2, 3]);  mul_2362 = None
    mul_2363: "f32[128]" = torch.ops.aten.mul.Tensor(sum_439, 7.62939453125e-06)
    unsqueeze_2257: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2363, 0);  mul_2363 = None
    unsqueeze_2258: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2257, 2);  unsqueeze_2257 = None
    unsqueeze_2259: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2258, 3);  unsqueeze_2258 = None
    mul_2364: "f32[128]" = torch.ops.aten.mul.Tensor(sum_440, 7.62939453125e-06)
    mul_2365: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_7, squeeze_7)
    mul_2366: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2364, mul_2365);  mul_2364 = mul_2365 = None
    unsqueeze_2260: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2366, 0);  mul_2366 = None
    unsqueeze_2261: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2260, 2);  unsqueeze_2260 = None
    unsqueeze_2262: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2261, 3);  unsqueeze_2261 = None
    mul_2367: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_7, primals_8);  primals_8 = None
    unsqueeze_2263: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2367, 0);  mul_2367 = None
    unsqueeze_2264: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2263, 2);  unsqueeze_2263 = None
    unsqueeze_2265: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2264, 3);  unsqueeze_2264 = None
    sub_750: "f32[8, 128, 128, 128]" = torch.ops.aten.sub.Tensor(convolution_2, unsqueeze_2256);  convolution_2 = unsqueeze_2256 = None
    mul_2368: "f32[8, 128, 128, 128]" = torch.ops.aten.mul.Tensor(sub_750, unsqueeze_2262);  sub_750 = unsqueeze_2262 = None
    sub_751: "f32[8, 128, 128, 128]" = torch.ops.aten.sub.Tensor(where_132, mul_2368);  where_132 = mul_2368 = None
    sub_752: "f32[8, 128, 128, 128]" = torch.ops.aten.sub.Tensor(sub_751, unsqueeze_2259);  sub_751 = unsqueeze_2259 = None
    mul_2369: "f32[8, 128, 128, 128]" = torch.ops.aten.mul.Tensor(sub_752, unsqueeze_2265);  sub_752 = unsqueeze_2265 = None
    mul_2370: "f32[128]" = torch.ops.aten.mul.Tensor(sum_440, squeeze_7);  sum_440 = squeeze_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:520, code: x = self.conv1(x)
    convolution_backward_169 = torch.ops.aten.convolution_backward.default(mul_2369, relu_1, primals_7, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2369 = primals_7 = None
    getitem_787: "f32[8, 64, 128, 128]" = convolution_backward_169[0]
    getitem_788: "f32[128, 64, 3, 3]" = convolution_backward_169[1];  convolution_backward_169 = None
    alias_601: "f32[8, 64, 128, 128]" = torch.ops.aten.alias.default(relu_1);  relu_1 = None
    alias_602: "f32[8, 64, 128, 128]" = torch.ops.aten.alias.default(alias_601);  alias_601 = None
    le_133: "b8[8, 64, 128, 128]" = torch.ops.aten.le.Scalar(alias_602, 0);  alias_602 = None
    scalar_tensor_133: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_133: "f32[8, 64, 128, 128]" = torch.ops.aten.where.self(le_133, scalar_tensor_133, getitem_787);  le_133 = scalar_tensor_133 = getitem_787 = None
    unsqueeze_2266: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_3, 0);  squeeze_3 = None
    unsqueeze_2267: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2266, 2);  unsqueeze_2266 = None
    unsqueeze_2268: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2267, 3);  unsqueeze_2267 = None
    sum_441: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_133, [0, 2, 3])
    sub_753: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(convolution_1, unsqueeze_2268)
    mul_2371: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(where_133, sub_753);  sub_753 = None
    sum_442: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2371, [0, 2, 3]);  mul_2371 = None
    mul_2372: "f32[64]" = torch.ops.aten.mul.Tensor(sum_441, 7.62939453125e-06)
    unsqueeze_2269: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2372, 0);  mul_2372 = None
    unsqueeze_2270: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2269, 2);  unsqueeze_2269 = None
    unsqueeze_2271: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2270, 3);  unsqueeze_2270 = None
    mul_2373: "f32[64]" = torch.ops.aten.mul.Tensor(sum_442, 7.62939453125e-06)
    mul_2374: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_4, squeeze_4)
    mul_2375: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2373, mul_2374);  mul_2373 = mul_2374 = None
    unsqueeze_2272: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2375, 0);  mul_2375 = None
    unsqueeze_2273: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2272, 2);  unsqueeze_2272 = None
    unsqueeze_2274: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2273, 3);  unsqueeze_2273 = None
    mul_2376: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_4, primals_5);  primals_5 = None
    unsqueeze_2275: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2376, 0);  mul_2376 = None
    unsqueeze_2276: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2275, 2);  unsqueeze_2275 = None
    unsqueeze_2277: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2276, 3);  unsqueeze_2276 = None
    sub_754: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(convolution_1, unsqueeze_2268);  convolution_1 = unsqueeze_2268 = None
    mul_2377: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(sub_754, unsqueeze_2274);  sub_754 = unsqueeze_2274 = None
    sub_755: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(where_133, mul_2377);  where_133 = mul_2377 = None
    sub_756: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(sub_755, unsqueeze_2271);  sub_755 = unsqueeze_2271 = None
    mul_2378: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(sub_756, unsqueeze_2277);  sub_756 = unsqueeze_2277 = None
    mul_2379: "f32[64]" = torch.ops.aten.mul.Tensor(sum_442, squeeze_4);  sum_442 = squeeze_4 = None
    convolution_backward_170 = torch.ops.aten.convolution_backward.default(mul_2378, relu, primals_4, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2378 = primals_4 = None
    getitem_790: "f32[8, 64, 128, 128]" = convolution_backward_170[0]
    getitem_791: "f32[64, 64, 3, 3]" = convolution_backward_170[1];  convolution_backward_170 = None
    alias_604: "f32[8, 64, 128, 128]" = torch.ops.aten.alias.default(relu);  relu = None
    alias_605: "f32[8, 64, 128, 128]" = torch.ops.aten.alias.default(alias_604);  alias_604 = None
    le_134: "b8[8, 64, 128, 128]" = torch.ops.aten.le.Scalar(alias_605, 0);  alias_605 = None
    scalar_tensor_134: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cpu'))
    where_134: "f32[8, 64, 128, 128]" = torch.ops.aten.where.self(le_134, scalar_tensor_134, getitem_790);  le_134 = scalar_tensor_134 = getitem_790 = None
    unsqueeze_2278: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze, 0);  squeeze = None
    unsqueeze_2279: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2278, 2);  unsqueeze_2278 = None
    unsqueeze_2280: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2279, 3);  unsqueeze_2279 = None
    sum_443: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_134, [0, 2, 3])
    sub_757: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(convolution, unsqueeze_2280)
    mul_2380: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(where_134, sub_757);  sub_757 = None
    sum_444: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2380, [0, 2, 3]);  mul_2380 = None
    mul_2381: "f32[64]" = torch.ops.aten.mul.Tensor(sum_443, 7.62939453125e-06)
    unsqueeze_2281: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2381, 0);  mul_2381 = None
    unsqueeze_2282: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2281, 2);  unsqueeze_2281 = None
    unsqueeze_2283: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2282, 3);  unsqueeze_2282 = None
    mul_2382: "f32[64]" = torch.ops.aten.mul.Tensor(sum_444, 7.62939453125e-06)
    mul_2383: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_1, squeeze_1)
    mul_2384: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2382, mul_2383);  mul_2382 = mul_2383 = None
    unsqueeze_2284: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2384, 0);  mul_2384 = None
    unsqueeze_2285: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2284, 2);  unsqueeze_2284 = None
    unsqueeze_2286: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2285, 3);  unsqueeze_2285 = None
    mul_2385: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_1, primals_2);  primals_2 = None
    unsqueeze_2287: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2385, 0);  mul_2385 = None
    unsqueeze_2288: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2287, 2);  unsqueeze_2287 = None
    unsqueeze_2289: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2288, 3);  unsqueeze_2288 = None
    sub_758: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(convolution, unsqueeze_2280);  convolution = unsqueeze_2280 = None
    mul_2386: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(sub_758, unsqueeze_2286);  sub_758 = unsqueeze_2286 = None
    sub_759: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(where_134, mul_2386);  where_134 = mul_2386 = None
    sub_760: "f32[8, 64, 128, 128]" = torch.ops.aten.sub.Tensor(sub_759, unsqueeze_2283);  sub_759 = unsqueeze_2283 = None
    mul_2387: "f32[8, 64, 128, 128]" = torch.ops.aten.mul.Tensor(sub_760, unsqueeze_2289);  sub_760 = unsqueeze_2289 = None
    mul_2388: "f32[64]" = torch.ops.aten.mul.Tensor(sum_444, squeeze_1);  sum_444 = squeeze_1 = None
    convolution_backward_171 = torch.ops.aten.convolution_backward.default(mul_2387, primals_936, primals_1, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]);  mul_2387 = primals_936 = primals_1 = None
    getitem_794: "f32[64, 3, 3, 3]" = convolution_backward_171[1];  convolution_backward_171 = None
    
    # No stacktrace found for following nodes
    copy_: "f32[64]" = torch.ops.aten.copy_.default(primals_519, add_2);  primals_519 = add_2 = None
    copy__1: "f32[64]" = torch.ops.aten.copy_.default(primals_520, add_3);  primals_520 = add_3 = None
    copy__2: "i64[]" = torch.ops.aten.copy_.default(primals_521, add);  primals_521 = add = None
    copy__3: "f32[64]" = torch.ops.aten.copy_.default(primals_522, add_7);  primals_522 = add_7 = None
    copy__4: "f32[64]" = torch.ops.aten.copy_.default(primals_523, add_8);  primals_523 = add_8 = None
    copy__5: "i64[]" = torch.ops.aten.copy_.default(primals_524, add_5);  primals_524 = add_5 = None
    copy__6: "f32[128]" = torch.ops.aten.copy_.default(primals_525, add_12);  primals_525 = add_12 = None
    copy__7: "f32[128]" = torch.ops.aten.copy_.default(primals_526, add_13);  primals_526 = add_13 = None
    copy__8: "i64[]" = torch.ops.aten.copy_.default(primals_527, add_10);  primals_527 = add_10 = None
    copy__9: "f32[64]" = torch.ops.aten.copy_.default(primals_528, add_17);  primals_528 = add_17 = None
    copy__10: "f32[64]" = torch.ops.aten.copy_.default(primals_529, add_18);  primals_529 = add_18 = None
    copy__11: "i64[]" = torch.ops.aten.copy_.default(primals_530, add_15);  primals_530 = add_15 = None
    copy__12: "f32[128]" = torch.ops.aten.copy_.default(primals_531, add_22);  primals_531 = add_22 = None
    copy__13: "f32[128]" = torch.ops.aten.copy_.default(primals_532, add_23);  primals_532 = add_23 = None
    copy__14: "i64[]" = torch.ops.aten.copy_.default(primals_533, add_20);  primals_533 = add_20 = None
    copy__15: "f32[32]" = torch.ops.aten.copy_.default(primals_534, add_27);  primals_534 = add_27 = None
    copy__16: "f32[32]" = torch.ops.aten.copy_.default(primals_535, add_28);  primals_535 = add_28 = None
    copy__17: "i64[]" = torch.ops.aten.copy_.default(primals_536, add_25);  primals_536 = add_25 = None
    copy__18: "f32[256]" = torch.ops.aten.copy_.default(primals_537, add_32);  primals_537 = add_32 = None
    copy__19: "f32[256]" = torch.ops.aten.copy_.default(primals_538, add_33);  primals_538 = add_33 = None
    copy__20: "i64[]" = torch.ops.aten.copy_.default(primals_539, add_30);  primals_539 = add_30 = None
    copy__21: "f32[256]" = torch.ops.aten.copy_.default(primals_540, add_37);  primals_540 = add_37 = None
    copy__22: "f32[256]" = torch.ops.aten.copy_.default(primals_541, add_38);  primals_541 = add_38 = None
    copy__23: "i64[]" = torch.ops.aten.copy_.default(primals_542, add_35);  primals_542 = add_35 = None
    copy__24: "f32[64]" = torch.ops.aten.copy_.default(primals_543, add_43);  primals_543 = add_43 = None
    copy__25: "f32[64]" = torch.ops.aten.copy_.default(primals_544, add_44);  primals_544 = add_44 = None
    copy__26: "i64[]" = torch.ops.aten.copy_.default(primals_545, add_41);  primals_545 = add_41 = None
    copy__27: "f32[128]" = torch.ops.aten.copy_.default(primals_546, add_48);  primals_546 = add_48 = None
    copy__28: "f32[128]" = torch.ops.aten.copy_.default(primals_547, add_49);  primals_547 = add_49 = None
    copy__29: "i64[]" = torch.ops.aten.copy_.default(primals_548, add_46);  primals_548 = add_46 = None
    copy__30: "f32[32]" = torch.ops.aten.copy_.default(primals_549, add_53);  primals_549 = add_53 = None
    copy__31: "f32[32]" = torch.ops.aten.copy_.default(primals_550, add_54);  primals_550 = add_54 = None
    copy__32: "i64[]" = torch.ops.aten.copy_.default(primals_551, add_51);  primals_551 = add_51 = None
    copy__33: "f32[256]" = torch.ops.aten.copy_.default(primals_552, add_58);  primals_552 = add_58 = None
    copy__34: "f32[256]" = torch.ops.aten.copy_.default(primals_553, add_59);  primals_553 = add_59 = None
    copy__35: "i64[]" = torch.ops.aten.copy_.default(primals_554, add_56);  primals_554 = add_56 = None
    copy__36: "f32[64]" = torch.ops.aten.copy_.default(primals_555, add_64);  primals_555 = add_64 = None
    copy__37: "f32[64]" = torch.ops.aten.copy_.default(primals_556, add_65);  primals_556 = add_65 = None
    copy__38: "i64[]" = torch.ops.aten.copy_.default(primals_557, add_62);  primals_557 = add_62 = None
    copy__39: "f32[128]" = torch.ops.aten.copy_.default(primals_558, add_69);  primals_558 = add_69 = None
    copy__40: "f32[128]" = torch.ops.aten.copy_.default(primals_559, add_70);  primals_559 = add_70 = None
    copy__41: "i64[]" = torch.ops.aten.copy_.default(primals_560, add_67);  primals_560 = add_67 = None
    copy__42: "f32[32]" = torch.ops.aten.copy_.default(primals_561, add_74);  primals_561 = add_74 = None
    copy__43: "f32[32]" = torch.ops.aten.copy_.default(primals_562, add_75);  primals_562 = add_75 = None
    copy__44: "i64[]" = torch.ops.aten.copy_.default(primals_563, add_72);  primals_563 = add_72 = None
    copy__45: "f32[256]" = torch.ops.aten.copy_.default(primals_564, add_79);  primals_564 = add_79 = None
    copy__46: "f32[256]" = torch.ops.aten.copy_.default(primals_565, add_80);  primals_565 = add_80 = None
    copy__47: "i64[]" = torch.ops.aten.copy_.default(primals_566, add_77);  primals_566 = add_77 = None
    copy__48: "f32[128]" = torch.ops.aten.copy_.default(primals_567, add_85);  primals_567 = add_85 = None
    copy__49: "f32[128]" = torch.ops.aten.copy_.default(primals_568, add_86);  primals_568 = add_86 = None
    copy__50: "i64[]" = torch.ops.aten.copy_.default(primals_569, add_83);  primals_569 = add_83 = None
    copy__51: "f32[256]" = torch.ops.aten.copy_.default(primals_570, add_90);  primals_570 = add_90 = None
    copy__52: "f32[256]" = torch.ops.aten.copy_.default(primals_571, add_91);  primals_571 = add_91 = None
    copy__53: "i64[]" = torch.ops.aten.copy_.default(primals_572, add_88);  primals_572 = add_88 = None
    copy__54: "f32[64]" = torch.ops.aten.copy_.default(primals_573, add_95);  primals_573 = add_95 = None
    copy__55: "f32[64]" = torch.ops.aten.copy_.default(primals_574, add_96);  primals_574 = add_96 = None
    copy__56: "i64[]" = torch.ops.aten.copy_.default(primals_575, add_93);  primals_575 = add_93 = None
    copy__57: "f32[512]" = torch.ops.aten.copy_.default(primals_576, add_100);  primals_576 = add_100 = None
    copy__58: "f32[512]" = torch.ops.aten.copy_.default(primals_577, add_101);  primals_577 = add_101 = None
    copy__59: "i64[]" = torch.ops.aten.copy_.default(primals_578, add_98);  primals_578 = add_98 = None
    copy__60: "f32[512]" = torch.ops.aten.copy_.default(primals_579, add_105);  primals_579 = add_105 = None
    copy__61: "f32[512]" = torch.ops.aten.copy_.default(primals_580, add_106);  primals_580 = add_106 = None
    copy__62: "i64[]" = torch.ops.aten.copy_.default(primals_581, add_103);  primals_581 = add_103 = None
    copy__63: "f32[128]" = torch.ops.aten.copy_.default(primals_582, add_111);  primals_582 = add_111 = None
    copy__64: "f32[128]" = torch.ops.aten.copy_.default(primals_583, add_112);  primals_583 = add_112 = None
    copy__65: "i64[]" = torch.ops.aten.copy_.default(primals_584, add_109);  primals_584 = add_109 = None
    copy__66: "f32[256]" = torch.ops.aten.copy_.default(primals_585, add_116);  primals_585 = add_116 = None
    copy__67: "f32[256]" = torch.ops.aten.copy_.default(primals_586, add_117);  primals_586 = add_117 = None
    copy__68: "i64[]" = torch.ops.aten.copy_.default(primals_587, add_114);  primals_587 = add_114 = None
    copy__69: "f32[64]" = torch.ops.aten.copy_.default(primals_588, add_121);  primals_588 = add_121 = None
    copy__70: "f32[64]" = torch.ops.aten.copy_.default(primals_589, add_122);  primals_589 = add_122 = None
    copy__71: "i64[]" = torch.ops.aten.copy_.default(primals_590, add_119);  primals_590 = add_119 = None
    copy__72: "f32[512]" = torch.ops.aten.copy_.default(primals_591, add_126);  primals_591 = add_126 = None
    copy__73: "f32[512]" = torch.ops.aten.copy_.default(primals_592, add_127);  primals_592 = add_127 = None
    copy__74: "i64[]" = torch.ops.aten.copy_.default(primals_593, add_124);  primals_593 = add_124 = None
    copy__75: "f32[128]" = torch.ops.aten.copy_.default(primals_594, add_132);  primals_594 = add_132 = None
    copy__76: "f32[128]" = torch.ops.aten.copy_.default(primals_595, add_133);  primals_595 = add_133 = None
    copy__77: "i64[]" = torch.ops.aten.copy_.default(primals_596, add_130);  primals_596 = add_130 = None
    copy__78: "f32[256]" = torch.ops.aten.copy_.default(primals_597, add_137);  primals_597 = add_137 = None
    copy__79: "f32[256]" = torch.ops.aten.copy_.default(primals_598, add_138);  primals_598 = add_138 = None
    copy__80: "i64[]" = torch.ops.aten.copy_.default(primals_599, add_135);  primals_599 = add_135 = None
    copy__81: "f32[64]" = torch.ops.aten.copy_.default(primals_600, add_142);  primals_600 = add_142 = None
    copy__82: "f32[64]" = torch.ops.aten.copy_.default(primals_601, add_143);  primals_601 = add_143 = None
    copy__83: "i64[]" = torch.ops.aten.copy_.default(primals_602, add_140);  primals_602 = add_140 = None
    copy__84: "f32[512]" = torch.ops.aten.copy_.default(primals_603, add_147);  primals_603 = add_147 = None
    copy__85: "f32[512]" = torch.ops.aten.copy_.default(primals_604, add_148);  primals_604 = add_148 = None
    copy__86: "i64[]" = torch.ops.aten.copy_.default(primals_605, add_145);  primals_605 = add_145 = None
    copy__87: "f32[128]" = torch.ops.aten.copy_.default(primals_606, add_153);  primals_606 = add_153 = None
    copy__88: "f32[128]" = torch.ops.aten.copy_.default(primals_607, add_154);  primals_607 = add_154 = None
    copy__89: "i64[]" = torch.ops.aten.copy_.default(primals_608, add_151);  primals_608 = add_151 = None
    copy__90: "f32[256]" = torch.ops.aten.copy_.default(primals_609, add_158);  primals_609 = add_158 = None
    copy__91: "f32[256]" = torch.ops.aten.copy_.default(primals_610, add_159);  primals_610 = add_159 = None
    copy__92: "i64[]" = torch.ops.aten.copy_.default(primals_611, add_156);  primals_611 = add_156 = None
    copy__93: "f32[64]" = torch.ops.aten.copy_.default(primals_612, add_163);  primals_612 = add_163 = None
    copy__94: "f32[64]" = torch.ops.aten.copy_.default(primals_613, add_164);  primals_613 = add_164 = None
    copy__95: "i64[]" = torch.ops.aten.copy_.default(primals_614, add_161);  primals_614 = add_161 = None
    copy__96: "f32[512]" = torch.ops.aten.copy_.default(primals_615, add_168);  primals_615 = add_168 = None
    copy__97: "f32[512]" = torch.ops.aten.copy_.default(primals_616, add_169);  primals_616 = add_169 = None
    copy__98: "i64[]" = torch.ops.aten.copy_.default(primals_617, add_166);  primals_617 = add_166 = None
    copy__99: "f32[256]" = torch.ops.aten.copy_.default(primals_618, add_174);  primals_618 = add_174 = None
    copy__100: "f32[256]" = torch.ops.aten.copy_.default(primals_619, add_175);  primals_619 = add_175 = None
    copy__101: "i64[]" = torch.ops.aten.copy_.default(primals_620, add_172);  primals_620 = add_172 = None
    copy__102: "f32[512]" = torch.ops.aten.copy_.default(primals_621, add_179);  primals_621 = add_179 = None
    copy__103: "f32[512]" = torch.ops.aten.copy_.default(primals_622, add_180);  primals_622 = add_180 = None
    copy__104: "i64[]" = torch.ops.aten.copy_.default(primals_623, add_177);  primals_623 = add_177 = None
    copy__105: "f32[128]" = torch.ops.aten.copy_.default(primals_624, add_184);  primals_624 = add_184 = None
    copy__106: "f32[128]" = torch.ops.aten.copy_.default(primals_625, add_185);  primals_625 = add_185 = None
    copy__107: "i64[]" = torch.ops.aten.copy_.default(primals_626, add_182);  primals_626 = add_182 = None
    copy__108: "f32[1024]" = torch.ops.aten.copy_.default(primals_627, add_189);  primals_627 = add_189 = None
    copy__109: "f32[1024]" = torch.ops.aten.copy_.default(primals_628, add_190);  primals_628 = add_190 = None
    copy__110: "i64[]" = torch.ops.aten.copy_.default(primals_629, add_187);  primals_629 = add_187 = None
    copy__111: "f32[1024]" = torch.ops.aten.copy_.default(primals_630, add_194);  primals_630 = add_194 = None
    copy__112: "f32[1024]" = torch.ops.aten.copy_.default(primals_631, add_195);  primals_631 = add_195 = None
    copy__113: "i64[]" = torch.ops.aten.copy_.default(primals_632, add_192);  primals_632 = add_192 = None
    copy__114: "f32[256]" = torch.ops.aten.copy_.default(primals_633, add_200);  primals_633 = add_200 = None
    copy__115: "f32[256]" = torch.ops.aten.copy_.default(primals_634, add_201);  primals_634 = add_201 = None
    copy__116: "i64[]" = torch.ops.aten.copy_.default(primals_635, add_198);  primals_635 = add_198 = None
    copy__117: "f32[512]" = torch.ops.aten.copy_.default(primals_636, add_205);  primals_636 = add_205 = None
    copy__118: "f32[512]" = torch.ops.aten.copy_.default(primals_637, add_206);  primals_637 = add_206 = None
    copy__119: "i64[]" = torch.ops.aten.copy_.default(primals_638, add_203);  primals_638 = add_203 = None
    copy__120: "f32[128]" = torch.ops.aten.copy_.default(primals_639, add_210);  primals_639 = add_210 = None
    copy__121: "f32[128]" = torch.ops.aten.copy_.default(primals_640, add_211);  primals_640 = add_211 = None
    copy__122: "i64[]" = torch.ops.aten.copy_.default(primals_641, add_208);  primals_641 = add_208 = None
    copy__123: "f32[1024]" = torch.ops.aten.copy_.default(primals_642, add_215);  primals_642 = add_215 = None
    copy__124: "f32[1024]" = torch.ops.aten.copy_.default(primals_643, add_216);  primals_643 = add_216 = None
    copy__125: "i64[]" = torch.ops.aten.copy_.default(primals_644, add_213);  primals_644 = add_213 = None
    copy__126: "f32[256]" = torch.ops.aten.copy_.default(primals_645, add_221);  primals_645 = add_221 = None
    copy__127: "f32[256]" = torch.ops.aten.copy_.default(primals_646, add_222);  primals_646 = add_222 = None
    copy__128: "i64[]" = torch.ops.aten.copy_.default(primals_647, add_219);  primals_647 = add_219 = None
    copy__129: "f32[512]" = torch.ops.aten.copy_.default(primals_648, add_226);  primals_648 = add_226 = None
    copy__130: "f32[512]" = torch.ops.aten.copy_.default(primals_649, add_227);  primals_649 = add_227 = None
    copy__131: "i64[]" = torch.ops.aten.copy_.default(primals_650, add_224);  primals_650 = add_224 = None
    copy__132: "f32[128]" = torch.ops.aten.copy_.default(primals_651, add_231);  primals_651 = add_231 = None
    copy__133: "f32[128]" = torch.ops.aten.copy_.default(primals_652, add_232);  primals_652 = add_232 = None
    copy__134: "i64[]" = torch.ops.aten.copy_.default(primals_653, add_229);  primals_653 = add_229 = None
    copy__135: "f32[1024]" = torch.ops.aten.copy_.default(primals_654, add_236);  primals_654 = add_236 = None
    copy__136: "f32[1024]" = torch.ops.aten.copy_.default(primals_655, add_237);  primals_655 = add_237 = None
    copy__137: "i64[]" = torch.ops.aten.copy_.default(primals_656, add_234);  primals_656 = add_234 = None
    copy__138: "f32[256]" = torch.ops.aten.copy_.default(primals_657, add_242);  primals_657 = add_242 = None
    copy__139: "f32[256]" = torch.ops.aten.copy_.default(primals_658, add_243);  primals_658 = add_243 = None
    copy__140: "i64[]" = torch.ops.aten.copy_.default(primals_659, add_240);  primals_659 = add_240 = None
    copy__141: "f32[512]" = torch.ops.aten.copy_.default(primals_660, add_247);  primals_660 = add_247 = None
    copy__142: "f32[512]" = torch.ops.aten.copy_.default(primals_661, add_248);  primals_661 = add_248 = None
    copy__143: "i64[]" = torch.ops.aten.copy_.default(primals_662, add_245);  primals_662 = add_245 = None
    copy__144: "f32[128]" = torch.ops.aten.copy_.default(primals_663, add_252);  primals_663 = add_252 = None
    copy__145: "f32[128]" = torch.ops.aten.copy_.default(primals_664, add_253);  primals_664 = add_253 = None
    copy__146: "i64[]" = torch.ops.aten.copy_.default(primals_665, add_250);  primals_665 = add_250 = None
    copy__147: "f32[1024]" = torch.ops.aten.copy_.default(primals_666, add_257);  primals_666 = add_257 = None
    copy__148: "f32[1024]" = torch.ops.aten.copy_.default(primals_667, add_258);  primals_667 = add_258 = None
    copy__149: "i64[]" = torch.ops.aten.copy_.default(primals_668, add_255);  primals_668 = add_255 = None
    copy__150: "f32[256]" = torch.ops.aten.copy_.default(primals_669, add_263);  primals_669 = add_263 = None
    copy__151: "f32[256]" = torch.ops.aten.copy_.default(primals_670, add_264);  primals_670 = add_264 = None
    copy__152: "i64[]" = torch.ops.aten.copy_.default(primals_671, add_261);  primals_671 = add_261 = None
    copy__153: "f32[512]" = torch.ops.aten.copy_.default(primals_672, add_268);  primals_672 = add_268 = None
    copy__154: "f32[512]" = torch.ops.aten.copy_.default(primals_673, add_269);  primals_673 = add_269 = None
    copy__155: "i64[]" = torch.ops.aten.copy_.default(primals_674, add_266);  primals_674 = add_266 = None
    copy__156: "f32[128]" = torch.ops.aten.copy_.default(primals_675, add_273);  primals_675 = add_273 = None
    copy__157: "f32[128]" = torch.ops.aten.copy_.default(primals_676, add_274);  primals_676 = add_274 = None
    copy__158: "i64[]" = torch.ops.aten.copy_.default(primals_677, add_271);  primals_677 = add_271 = None
    copy__159: "f32[1024]" = torch.ops.aten.copy_.default(primals_678, add_278);  primals_678 = add_278 = None
    copy__160: "f32[1024]" = torch.ops.aten.copy_.default(primals_679, add_279);  primals_679 = add_279 = None
    copy__161: "i64[]" = torch.ops.aten.copy_.default(primals_680, add_276);  primals_680 = add_276 = None
    copy__162: "f32[256]" = torch.ops.aten.copy_.default(primals_681, add_284);  primals_681 = add_284 = None
    copy__163: "f32[256]" = torch.ops.aten.copy_.default(primals_682, add_285);  primals_682 = add_285 = None
    copy__164: "i64[]" = torch.ops.aten.copy_.default(primals_683, add_282);  primals_683 = add_282 = None
    copy__165: "f32[512]" = torch.ops.aten.copy_.default(primals_684, add_289);  primals_684 = add_289 = None
    copy__166: "f32[512]" = torch.ops.aten.copy_.default(primals_685, add_290);  primals_685 = add_290 = None
    copy__167: "i64[]" = torch.ops.aten.copy_.default(primals_686, add_287);  primals_686 = add_287 = None
    copy__168: "f32[128]" = torch.ops.aten.copy_.default(primals_687, add_294);  primals_687 = add_294 = None
    copy__169: "f32[128]" = torch.ops.aten.copy_.default(primals_688, add_295);  primals_688 = add_295 = None
    copy__170: "i64[]" = torch.ops.aten.copy_.default(primals_689, add_292);  primals_689 = add_292 = None
    copy__171: "f32[1024]" = torch.ops.aten.copy_.default(primals_690, add_299);  primals_690 = add_299 = None
    copy__172: "f32[1024]" = torch.ops.aten.copy_.default(primals_691, add_300);  primals_691 = add_300 = None
    copy__173: "i64[]" = torch.ops.aten.copy_.default(primals_692, add_297);  primals_692 = add_297 = None
    copy__174: "f32[256]" = torch.ops.aten.copy_.default(primals_693, add_305);  primals_693 = add_305 = None
    copy__175: "f32[256]" = torch.ops.aten.copy_.default(primals_694, add_306);  primals_694 = add_306 = None
    copy__176: "i64[]" = torch.ops.aten.copy_.default(primals_695, add_303);  primals_695 = add_303 = None
    copy__177: "f32[512]" = torch.ops.aten.copy_.default(primals_696, add_310);  primals_696 = add_310 = None
    copy__178: "f32[512]" = torch.ops.aten.copy_.default(primals_697, add_311);  primals_697 = add_311 = None
    copy__179: "i64[]" = torch.ops.aten.copy_.default(primals_698, add_308);  primals_698 = add_308 = None
    copy__180: "f32[128]" = torch.ops.aten.copy_.default(primals_699, add_315);  primals_699 = add_315 = None
    copy__181: "f32[128]" = torch.ops.aten.copy_.default(primals_700, add_316);  primals_700 = add_316 = None
    copy__182: "i64[]" = torch.ops.aten.copy_.default(primals_701, add_313);  primals_701 = add_313 = None
    copy__183: "f32[1024]" = torch.ops.aten.copy_.default(primals_702, add_320);  primals_702 = add_320 = None
    copy__184: "f32[1024]" = torch.ops.aten.copy_.default(primals_703, add_321);  primals_703 = add_321 = None
    copy__185: "i64[]" = torch.ops.aten.copy_.default(primals_704, add_318);  primals_704 = add_318 = None
    copy__186: "f32[256]" = torch.ops.aten.copy_.default(primals_705, add_326);  primals_705 = add_326 = None
    copy__187: "f32[256]" = torch.ops.aten.copy_.default(primals_706, add_327);  primals_706 = add_327 = None
    copy__188: "i64[]" = torch.ops.aten.copy_.default(primals_707, add_324);  primals_707 = add_324 = None
    copy__189: "f32[512]" = torch.ops.aten.copy_.default(primals_708, add_331);  primals_708 = add_331 = None
    copy__190: "f32[512]" = torch.ops.aten.copy_.default(primals_709, add_332);  primals_709 = add_332 = None
    copy__191: "i64[]" = torch.ops.aten.copy_.default(primals_710, add_329);  primals_710 = add_329 = None
    copy__192: "f32[128]" = torch.ops.aten.copy_.default(primals_711, add_336);  primals_711 = add_336 = None
    copy__193: "f32[128]" = torch.ops.aten.copy_.default(primals_712, add_337);  primals_712 = add_337 = None
    copy__194: "i64[]" = torch.ops.aten.copy_.default(primals_713, add_334);  primals_713 = add_334 = None
    copy__195: "f32[1024]" = torch.ops.aten.copy_.default(primals_714, add_341);  primals_714 = add_341 = None
    copy__196: "f32[1024]" = torch.ops.aten.copy_.default(primals_715, add_342);  primals_715 = add_342 = None
    copy__197: "i64[]" = torch.ops.aten.copy_.default(primals_716, add_339);  primals_716 = add_339 = None
    copy__198: "f32[256]" = torch.ops.aten.copy_.default(primals_717, add_347);  primals_717 = add_347 = None
    copy__199: "f32[256]" = torch.ops.aten.copy_.default(primals_718, add_348);  primals_718 = add_348 = None
    copy__200: "i64[]" = torch.ops.aten.copy_.default(primals_719, add_345);  primals_719 = add_345 = None
    copy__201: "f32[512]" = torch.ops.aten.copy_.default(primals_720, add_352);  primals_720 = add_352 = None
    copy__202: "f32[512]" = torch.ops.aten.copy_.default(primals_721, add_353);  primals_721 = add_353 = None
    copy__203: "i64[]" = torch.ops.aten.copy_.default(primals_722, add_350);  primals_722 = add_350 = None
    copy__204: "f32[128]" = torch.ops.aten.copy_.default(primals_723, add_357);  primals_723 = add_357 = None
    copy__205: "f32[128]" = torch.ops.aten.copy_.default(primals_724, add_358);  primals_724 = add_358 = None
    copy__206: "i64[]" = torch.ops.aten.copy_.default(primals_725, add_355);  primals_725 = add_355 = None
    copy__207: "f32[1024]" = torch.ops.aten.copy_.default(primals_726, add_362);  primals_726 = add_362 = None
    copy__208: "f32[1024]" = torch.ops.aten.copy_.default(primals_727, add_363);  primals_727 = add_363 = None
    copy__209: "i64[]" = torch.ops.aten.copy_.default(primals_728, add_360);  primals_728 = add_360 = None
    copy__210: "f32[256]" = torch.ops.aten.copy_.default(primals_729, add_368);  primals_729 = add_368 = None
    copy__211: "f32[256]" = torch.ops.aten.copy_.default(primals_730, add_369);  primals_730 = add_369 = None
    copy__212: "i64[]" = torch.ops.aten.copy_.default(primals_731, add_366);  primals_731 = add_366 = None
    copy__213: "f32[512]" = torch.ops.aten.copy_.default(primals_732, add_373);  primals_732 = add_373 = None
    copy__214: "f32[512]" = torch.ops.aten.copy_.default(primals_733, add_374);  primals_733 = add_374 = None
    copy__215: "i64[]" = torch.ops.aten.copy_.default(primals_734, add_371);  primals_734 = add_371 = None
    copy__216: "f32[128]" = torch.ops.aten.copy_.default(primals_735, add_378);  primals_735 = add_378 = None
    copy__217: "f32[128]" = torch.ops.aten.copy_.default(primals_736, add_379);  primals_736 = add_379 = None
    copy__218: "i64[]" = torch.ops.aten.copy_.default(primals_737, add_376);  primals_737 = add_376 = None
    copy__219: "f32[1024]" = torch.ops.aten.copy_.default(primals_738, add_383);  primals_738 = add_383 = None
    copy__220: "f32[1024]" = torch.ops.aten.copy_.default(primals_739, add_384);  primals_739 = add_384 = None
    copy__221: "i64[]" = torch.ops.aten.copy_.default(primals_740, add_381);  primals_740 = add_381 = None
    copy__222: "f32[256]" = torch.ops.aten.copy_.default(primals_741, add_389);  primals_741 = add_389 = None
    copy__223: "f32[256]" = torch.ops.aten.copy_.default(primals_742, add_390);  primals_742 = add_390 = None
    copy__224: "i64[]" = torch.ops.aten.copy_.default(primals_743, add_387);  primals_743 = add_387 = None
    copy__225: "f32[512]" = torch.ops.aten.copy_.default(primals_744, add_394);  primals_744 = add_394 = None
    copy__226: "f32[512]" = torch.ops.aten.copy_.default(primals_745, add_395);  primals_745 = add_395 = None
    copy__227: "i64[]" = torch.ops.aten.copy_.default(primals_746, add_392);  primals_746 = add_392 = None
    copy__228: "f32[128]" = torch.ops.aten.copy_.default(primals_747, add_399);  primals_747 = add_399 = None
    copy__229: "f32[128]" = torch.ops.aten.copy_.default(primals_748, add_400);  primals_748 = add_400 = None
    copy__230: "i64[]" = torch.ops.aten.copy_.default(primals_749, add_397);  primals_749 = add_397 = None
    copy__231: "f32[1024]" = torch.ops.aten.copy_.default(primals_750, add_404);  primals_750 = add_404 = None
    copy__232: "f32[1024]" = torch.ops.aten.copy_.default(primals_751, add_405);  primals_751 = add_405 = None
    copy__233: "i64[]" = torch.ops.aten.copy_.default(primals_752, add_402);  primals_752 = add_402 = None
    copy__234: "f32[256]" = torch.ops.aten.copy_.default(primals_753, add_410);  primals_753 = add_410 = None
    copy__235: "f32[256]" = torch.ops.aten.copy_.default(primals_754, add_411);  primals_754 = add_411 = None
    copy__236: "i64[]" = torch.ops.aten.copy_.default(primals_755, add_408);  primals_755 = add_408 = None
    copy__237: "f32[512]" = torch.ops.aten.copy_.default(primals_756, add_415);  primals_756 = add_415 = None
    copy__238: "f32[512]" = torch.ops.aten.copy_.default(primals_757, add_416);  primals_757 = add_416 = None
    copy__239: "i64[]" = torch.ops.aten.copy_.default(primals_758, add_413);  primals_758 = add_413 = None
    copy__240: "f32[128]" = torch.ops.aten.copy_.default(primals_759, add_420);  primals_759 = add_420 = None
    copy__241: "f32[128]" = torch.ops.aten.copy_.default(primals_760, add_421);  primals_760 = add_421 = None
    copy__242: "i64[]" = torch.ops.aten.copy_.default(primals_761, add_418);  primals_761 = add_418 = None
    copy__243: "f32[1024]" = torch.ops.aten.copy_.default(primals_762, add_425);  primals_762 = add_425 = None
    copy__244: "f32[1024]" = torch.ops.aten.copy_.default(primals_763, add_426);  primals_763 = add_426 = None
    copy__245: "i64[]" = torch.ops.aten.copy_.default(primals_764, add_423);  primals_764 = add_423 = None
    copy__246: "f32[256]" = torch.ops.aten.copy_.default(primals_765, add_431);  primals_765 = add_431 = None
    copy__247: "f32[256]" = torch.ops.aten.copy_.default(primals_766, add_432);  primals_766 = add_432 = None
    copy__248: "i64[]" = torch.ops.aten.copy_.default(primals_767, add_429);  primals_767 = add_429 = None
    copy__249: "f32[512]" = torch.ops.aten.copy_.default(primals_768, add_436);  primals_768 = add_436 = None
    copy__250: "f32[512]" = torch.ops.aten.copy_.default(primals_769, add_437);  primals_769 = add_437 = None
    copy__251: "i64[]" = torch.ops.aten.copy_.default(primals_770, add_434);  primals_770 = add_434 = None
    copy__252: "f32[128]" = torch.ops.aten.copy_.default(primals_771, add_441);  primals_771 = add_441 = None
    copy__253: "f32[128]" = torch.ops.aten.copy_.default(primals_772, add_442);  primals_772 = add_442 = None
    copy__254: "i64[]" = torch.ops.aten.copy_.default(primals_773, add_439);  primals_773 = add_439 = None
    copy__255: "f32[1024]" = torch.ops.aten.copy_.default(primals_774, add_446);  primals_774 = add_446 = None
    copy__256: "f32[1024]" = torch.ops.aten.copy_.default(primals_775, add_447);  primals_775 = add_447 = None
    copy__257: "i64[]" = torch.ops.aten.copy_.default(primals_776, add_444);  primals_776 = add_444 = None
    copy__258: "f32[256]" = torch.ops.aten.copy_.default(primals_777, add_452);  primals_777 = add_452 = None
    copy__259: "f32[256]" = torch.ops.aten.copy_.default(primals_778, add_453);  primals_778 = add_453 = None
    copy__260: "i64[]" = torch.ops.aten.copy_.default(primals_779, add_450);  primals_779 = add_450 = None
    copy__261: "f32[512]" = torch.ops.aten.copy_.default(primals_780, add_457);  primals_780 = add_457 = None
    copy__262: "f32[512]" = torch.ops.aten.copy_.default(primals_781, add_458);  primals_781 = add_458 = None
    copy__263: "i64[]" = torch.ops.aten.copy_.default(primals_782, add_455);  primals_782 = add_455 = None
    copy__264: "f32[128]" = torch.ops.aten.copy_.default(primals_783, add_462);  primals_783 = add_462 = None
    copy__265: "f32[128]" = torch.ops.aten.copy_.default(primals_784, add_463);  primals_784 = add_463 = None
    copy__266: "i64[]" = torch.ops.aten.copy_.default(primals_785, add_460);  primals_785 = add_460 = None
    copy__267: "f32[1024]" = torch.ops.aten.copy_.default(primals_786, add_467);  primals_786 = add_467 = None
    copy__268: "f32[1024]" = torch.ops.aten.copy_.default(primals_787, add_468);  primals_787 = add_468 = None
    copy__269: "i64[]" = torch.ops.aten.copy_.default(primals_788, add_465);  primals_788 = add_465 = None
    copy__270: "f32[256]" = torch.ops.aten.copy_.default(primals_789, add_473);  primals_789 = add_473 = None
    copy__271: "f32[256]" = torch.ops.aten.copy_.default(primals_790, add_474);  primals_790 = add_474 = None
    copy__272: "i64[]" = torch.ops.aten.copy_.default(primals_791, add_471);  primals_791 = add_471 = None
    copy__273: "f32[512]" = torch.ops.aten.copy_.default(primals_792, add_478);  primals_792 = add_478 = None
    copy__274: "f32[512]" = torch.ops.aten.copy_.default(primals_793, add_479);  primals_793 = add_479 = None
    copy__275: "i64[]" = torch.ops.aten.copy_.default(primals_794, add_476);  primals_794 = add_476 = None
    copy__276: "f32[128]" = torch.ops.aten.copy_.default(primals_795, add_483);  primals_795 = add_483 = None
    copy__277: "f32[128]" = torch.ops.aten.copy_.default(primals_796, add_484);  primals_796 = add_484 = None
    copy__278: "i64[]" = torch.ops.aten.copy_.default(primals_797, add_481);  primals_797 = add_481 = None
    copy__279: "f32[1024]" = torch.ops.aten.copy_.default(primals_798, add_488);  primals_798 = add_488 = None
    copy__280: "f32[1024]" = torch.ops.aten.copy_.default(primals_799, add_489);  primals_799 = add_489 = None
    copy__281: "i64[]" = torch.ops.aten.copy_.default(primals_800, add_486);  primals_800 = add_486 = None
    copy__282: "f32[256]" = torch.ops.aten.copy_.default(primals_801, add_494);  primals_801 = add_494 = None
    copy__283: "f32[256]" = torch.ops.aten.copy_.default(primals_802, add_495);  primals_802 = add_495 = None
    copy__284: "i64[]" = torch.ops.aten.copy_.default(primals_803, add_492);  primals_803 = add_492 = None
    copy__285: "f32[512]" = torch.ops.aten.copy_.default(primals_804, add_499);  primals_804 = add_499 = None
    copy__286: "f32[512]" = torch.ops.aten.copy_.default(primals_805, add_500);  primals_805 = add_500 = None
    copy__287: "i64[]" = torch.ops.aten.copy_.default(primals_806, add_497);  primals_806 = add_497 = None
    copy__288: "f32[128]" = torch.ops.aten.copy_.default(primals_807, add_504);  primals_807 = add_504 = None
    copy__289: "f32[128]" = torch.ops.aten.copy_.default(primals_808, add_505);  primals_808 = add_505 = None
    copy__290: "i64[]" = torch.ops.aten.copy_.default(primals_809, add_502);  primals_809 = add_502 = None
    copy__291: "f32[1024]" = torch.ops.aten.copy_.default(primals_810, add_509);  primals_810 = add_509 = None
    copy__292: "f32[1024]" = torch.ops.aten.copy_.default(primals_811, add_510);  primals_811 = add_510 = None
    copy__293: "i64[]" = torch.ops.aten.copy_.default(primals_812, add_507);  primals_812 = add_507 = None
    copy__294: "f32[256]" = torch.ops.aten.copy_.default(primals_813, add_515);  primals_813 = add_515 = None
    copy__295: "f32[256]" = torch.ops.aten.copy_.default(primals_814, add_516);  primals_814 = add_516 = None
    copy__296: "i64[]" = torch.ops.aten.copy_.default(primals_815, add_513);  primals_815 = add_513 = None
    copy__297: "f32[512]" = torch.ops.aten.copy_.default(primals_816, add_520);  primals_816 = add_520 = None
    copy__298: "f32[512]" = torch.ops.aten.copy_.default(primals_817, add_521);  primals_817 = add_521 = None
    copy__299: "i64[]" = torch.ops.aten.copy_.default(primals_818, add_518);  primals_818 = add_518 = None
    copy__300: "f32[128]" = torch.ops.aten.copy_.default(primals_819, add_525);  primals_819 = add_525 = None
    copy__301: "f32[128]" = torch.ops.aten.copy_.default(primals_820, add_526);  primals_820 = add_526 = None
    copy__302: "i64[]" = torch.ops.aten.copy_.default(primals_821, add_523);  primals_821 = add_523 = None
    copy__303: "f32[1024]" = torch.ops.aten.copy_.default(primals_822, add_530);  primals_822 = add_530 = None
    copy__304: "f32[1024]" = torch.ops.aten.copy_.default(primals_823, add_531);  primals_823 = add_531 = None
    copy__305: "i64[]" = torch.ops.aten.copy_.default(primals_824, add_528);  primals_824 = add_528 = None
    copy__306: "f32[256]" = torch.ops.aten.copy_.default(primals_825, add_536);  primals_825 = add_536 = None
    copy__307: "f32[256]" = torch.ops.aten.copy_.default(primals_826, add_537);  primals_826 = add_537 = None
    copy__308: "i64[]" = torch.ops.aten.copy_.default(primals_827, add_534);  primals_827 = add_534 = None
    copy__309: "f32[512]" = torch.ops.aten.copy_.default(primals_828, add_541);  primals_828 = add_541 = None
    copy__310: "f32[512]" = torch.ops.aten.copy_.default(primals_829, add_542);  primals_829 = add_542 = None
    copy__311: "i64[]" = torch.ops.aten.copy_.default(primals_830, add_539);  primals_830 = add_539 = None
    copy__312: "f32[128]" = torch.ops.aten.copy_.default(primals_831, add_546);  primals_831 = add_546 = None
    copy__313: "f32[128]" = torch.ops.aten.copy_.default(primals_832, add_547);  primals_832 = add_547 = None
    copy__314: "i64[]" = torch.ops.aten.copy_.default(primals_833, add_544);  primals_833 = add_544 = None
    copy__315: "f32[1024]" = torch.ops.aten.copy_.default(primals_834, add_551);  primals_834 = add_551 = None
    copy__316: "f32[1024]" = torch.ops.aten.copy_.default(primals_835, add_552);  primals_835 = add_552 = None
    copy__317: "i64[]" = torch.ops.aten.copy_.default(primals_836, add_549);  primals_836 = add_549 = None
    copy__318: "f32[256]" = torch.ops.aten.copy_.default(primals_837, add_557);  primals_837 = add_557 = None
    copy__319: "f32[256]" = torch.ops.aten.copy_.default(primals_838, add_558);  primals_838 = add_558 = None
    copy__320: "i64[]" = torch.ops.aten.copy_.default(primals_839, add_555);  primals_839 = add_555 = None
    copy__321: "f32[512]" = torch.ops.aten.copy_.default(primals_840, add_562);  primals_840 = add_562 = None
    copy__322: "f32[512]" = torch.ops.aten.copy_.default(primals_841, add_563);  primals_841 = add_563 = None
    copy__323: "i64[]" = torch.ops.aten.copy_.default(primals_842, add_560);  primals_842 = add_560 = None
    copy__324: "f32[128]" = torch.ops.aten.copy_.default(primals_843, add_567);  primals_843 = add_567 = None
    copy__325: "f32[128]" = torch.ops.aten.copy_.default(primals_844, add_568);  primals_844 = add_568 = None
    copy__326: "i64[]" = torch.ops.aten.copy_.default(primals_845, add_565);  primals_845 = add_565 = None
    copy__327: "f32[1024]" = torch.ops.aten.copy_.default(primals_846, add_572);  primals_846 = add_572 = None
    copy__328: "f32[1024]" = torch.ops.aten.copy_.default(primals_847, add_573);  primals_847 = add_573 = None
    copy__329: "i64[]" = torch.ops.aten.copy_.default(primals_848, add_570);  primals_848 = add_570 = None
    copy__330: "f32[256]" = torch.ops.aten.copy_.default(primals_849, add_578);  primals_849 = add_578 = None
    copy__331: "f32[256]" = torch.ops.aten.copy_.default(primals_850, add_579);  primals_850 = add_579 = None
    copy__332: "i64[]" = torch.ops.aten.copy_.default(primals_851, add_576);  primals_851 = add_576 = None
    copy__333: "f32[512]" = torch.ops.aten.copy_.default(primals_852, add_583);  primals_852 = add_583 = None
    copy__334: "f32[512]" = torch.ops.aten.copy_.default(primals_853, add_584);  primals_853 = add_584 = None
    copy__335: "i64[]" = torch.ops.aten.copy_.default(primals_854, add_581);  primals_854 = add_581 = None
    copy__336: "f32[128]" = torch.ops.aten.copy_.default(primals_855, add_588);  primals_855 = add_588 = None
    copy__337: "f32[128]" = torch.ops.aten.copy_.default(primals_856, add_589);  primals_856 = add_589 = None
    copy__338: "i64[]" = torch.ops.aten.copy_.default(primals_857, add_586);  primals_857 = add_586 = None
    copy__339: "f32[1024]" = torch.ops.aten.copy_.default(primals_858, add_593);  primals_858 = add_593 = None
    copy__340: "f32[1024]" = torch.ops.aten.copy_.default(primals_859, add_594);  primals_859 = add_594 = None
    copy__341: "i64[]" = torch.ops.aten.copy_.default(primals_860, add_591);  primals_860 = add_591 = None
    copy__342: "f32[256]" = torch.ops.aten.copy_.default(primals_861, add_599);  primals_861 = add_599 = None
    copy__343: "f32[256]" = torch.ops.aten.copy_.default(primals_862, add_600);  primals_862 = add_600 = None
    copy__344: "i64[]" = torch.ops.aten.copy_.default(primals_863, add_597);  primals_863 = add_597 = None
    copy__345: "f32[512]" = torch.ops.aten.copy_.default(primals_864, add_604);  primals_864 = add_604 = None
    copy__346: "f32[512]" = torch.ops.aten.copy_.default(primals_865, add_605);  primals_865 = add_605 = None
    copy__347: "i64[]" = torch.ops.aten.copy_.default(primals_866, add_602);  primals_866 = add_602 = None
    copy__348: "f32[128]" = torch.ops.aten.copy_.default(primals_867, add_609);  primals_867 = add_609 = None
    copy__349: "f32[128]" = torch.ops.aten.copy_.default(primals_868, add_610);  primals_868 = add_610 = None
    copy__350: "i64[]" = torch.ops.aten.copy_.default(primals_869, add_607);  primals_869 = add_607 = None
    copy__351: "f32[1024]" = torch.ops.aten.copy_.default(primals_870, add_614);  primals_870 = add_614 = None
    copy__352: "f32[1024]" = torch.ops.aten.copy_.default(primals_871, add_615);  primals_871 = add_615 = None
    copy__353: "i64[]" = torch.ops.aten.copy_.default(primals_872, add_612);  primals_872 = add_612 = None
    copy__354: "f32[256]" = torch.ops.aten.copy_.default(primals_873, add_620);  primals_873 = add_620 = None
    copy__355: "f32[256]" = torch.ops.aten.copy_.default(primals_874, add_621);  primals_874 = add_621 = None
    copy__356: "i64[]" = torch.ops.aten.copy_.default(primals_875, add_618);  primals_875 = add_618 = None
    copy__357: "f32[512]" = torch.ops.aten.copy_.default(primals_876, add_625);  primals_876 = add_625 = None
    copy__358: "f32[512]" = torch.ops.aten.copy_.default(primals_877, add_626);  primals_877 = add_626 = None
    copy__359: "i64[]" = torch.ops.aten.copy_.default(primals_878, add_623);  primals_878 = add_623 = None
    copy__360: "f32[128]" = torch.ops.aten.copy_.default(primals_879, add_630);  primals_879 = add_630 = None
    copy__361: "f32[128]" = torch.ops.aten.copy_.default(primals_880, add_631);  primals_880 = add_631 = None
    copy__362: "i64[]" = torch.ops.aten.copy_.default(primals_881, add_628);  primals_881 = add_628 = None
    copy__363: "f32[1024]" = torch.ops.aten.copy_.default(primals_882, add_635);  primals_882 = add_635 = None
    copy__364: "f32[1024]" = torch.ops.aten.copy_.default(primals_883, add_636);  primals_883 = add_636 = None
    copy__365: "i64[]" = torch.ops.aten.copy_.default(primals_884, add_633);  primals_884 = add_633 = None
    copy__366: "f32[256]" = torch.ops.aten.copy_.default(primals_885, add_641);  primals_885 = add_641 = None
    copy__367: "f32[256]" = torch.ops.aten.copy_.default(primals_886, add_642);  primals_886 = add_642 = None
    copy__368: "i64[]" = torch.ops.aten.copy_.default(primals_887, add_639);  primals_887 = add_639 = None
    copy__369: "f32[512]" = torch.ops.aten.copy_.default(primals_888, add_646);  primals_888 = add_646 = None
    copy__370: "f32[512]" = torch.ops.aten.copy_.default(primals_889, add_647);  primals_889 = add_647 = None
    copy__371: "i64[]" = torch.ops.aten.copy_.default(primals_890, add_644);  primals_890 = add_644 = None
    copy__372: "f32[128]" = torch.ops.aten.copy_.default(primals_891, add_651);  primals_891 = add_651 = None
    copy__373: "f32[128]" = torch.ops.aten.copy_.default(primals_892, add_652);  primals_892 = add_652 = None
    copy__374: "i64[]" = torch.ops.aten.copy_.default(primals_893, add_649);  primals_893 = add_649 = None
    copy__375: "f32[1024]" = torch.ops.aten.copy_.default(primals_894, add_656);  primals_894 = add_656 = None
    copy__376: "f32[1024]" = torch.ops.aten.copy_.default(primals_895, add_657);  primals_895 = add_657 = None
    copy__377: "i64[]" = torch.ops.aten.copy_.default(primals_896, add_654);  primals_896 = add_654 = None
    copy__378: "f32[512]" = torch.ops.aten.copy_.default(primals_897, add_662);  primals_897 = add_662 = None
    copy__379: "f32[512]" = torch.ops.aten.copy_.default(primals_898, add_663);  primals_898 = add_663 = None
    copy__380: "i64[]" = torch.ops.aten.copy_.default(primals_899, add_660);  primals_899 = add_660 = None
    copy__381: "f32[1024]" = torch.ops.aten.copy_.default(primals_900, add_667);  primals_900 = add_667 = None
    copy__382: "f32[1024]" = torch.ops.aten.copy_.default(primals_901, add_668);  primals_901 = add_668 = None
    copy__383: "i64[]" = torch.ops.aten.copy_.default(primals_902, add_665);  primals_902 = add_665 = None
    copy__384: "f32[256]" = torch.ops.aten.copy_.default(primals_903, add_672);  primals_903 = add_672 = None
    copy__385: "f32[256]" = torch.ops.aten.copy_.default(primals_904, add_673);  primals_904 = add_673 = None
    copy__386: "i64[]" = torch.ops.aten.copy_.default(primals_905, add_670);  primals_905 = add_670 = None
    copy__387: "f32[2048]" = torch.ops.aten.copy_.default(primals_906, add_677);  primals_906 = add_677 = None
    copy__388: "f32[2048]" = torch.ops.aten.copy_.default(primals_907, add_678);  primals_907 = add_678 = None
    copy__389: "i64[]" = torch.ops.aten.copy_.default(primals_908, add_675);  primals_908 = add_675 = None
    copy__390: "f32[2048]" = torch.ops.aten.copy_.default(primals_909, add_682);  primals_909 = add_682 = None
    copy__391: "f32[2048]" = torch.ops.aten.copy_.default(primals_910, add_683);  primals_910 = add_683 = None
    copy__392: "i64[]" = torch.ops.aten.copy_.default(primals_911, add_680);  primals_911 = add_680 = None
    copy__393: "f32[512]" = torch.ops.aten.copy_.default(primals_912, add_688);  primals_912 = add_688 = None
    copy__394: "f32[512]" = torch.ops.aten.copy_.default(primals_913, add_689);  primals_913 = add_689 = None
    copy__395: "i64[]" = torch.ops.aten.copy_.default(primals_914, add_686);  primals_914 = add_686 = None
    copy__396: "f32[1024]" = torch.ops.aten.copy_.default(primals_915, add_693);  primals_915 = add_693 = None
    copy__397: "f32[1024]" = torch.ops.aten.copy_.default(primals_916, add_694);  primals_916 = add_694 = None
    copy__398: "i64[]" = torch.ops.aten.copy_.default(primals_917, add_691);  primals_917 = add_691 = None
    copy__399: "f32[256]" = torch.ops.aten.copy_.default(primals_918, add_698);  primals_918 = add_698 = None
    copy__400: "f32[256]" = torch.ops.aten.copy_.default(primals_919, add_699);  primals_919 = add_699 = None
    copy__401: "i64[]" = torch.ops.aten.copy_.default(primals_920, add_696);  primals_920 = add_696 = None
    copy__402: "f32[2048]" = torch.ops.aten.copy_.default(primals_921, add_703);  primals_921 = add_703 = None
    copy__403: "f32[2048]" = torch.ops.aten.copy_.default(primals_922, add_704);  primals_922 = add_704 = None
    copy__404: "i64[]" = torch.ops.aten.copy_.default(primals_923, add_701);  primals_923 = add_701 = None
    copy__405: "f32[512]" = torch.ops.aten.copy_.default(primals_924, add_709);  primals_924 = add_709 = None
    copy__406: "f32[512]" = torch.ops.aten.copy_.default(primals_925, add_710);  primals_925 = add_710 = None
    copy__407: "i64[]" = torch.ops.aten.copy_.default(primals_926, add_707);  primals_926 = add_707 = None
    copy__408: "f32[1024]" = torch.ops.aten.copy_.default(primals_927, add_714);  primals_927 = add_714 = None
    copy__409: "f32[1024]" = torch.ops.aten.copy_.default(primals_928, add_715);  primals_928 = add_715 = None
    copy__410: "i64[]" = torch.ops.aten.copy_.default(primals_929, add_712);  primals_929 = add_712 = None
    copy__411: "f32[256]" = torch.ops.aten.copy_.default(primals_930, add_719);  primals_930 = add_719 = None
    copy__412: "f32[256]" = torch.ops.aten.copy_.default(primals_931, add_720);  primals_931 = add_720 = None
    copy__413: "i64[]" = torch.ops.aten.copy_.default(primals_932, add_717);  primals_932 = add_717 = None
    copy__414: "f32[2048]" = torch.ops.aten.copy_.default(primals_933, add_724);  primals_933 = add_724 = None
    copy__415: "f32[2048]" = torch.ops.aten.copy_.default(primals_934, add_725);  primals_934 = add_725 = None
    copy__416: "i64[]" = torch.ops.aten.copy_.default(primals_935, add_722);  primals_935 = add_722 = None
    return pytree.tree_unflatten([addmm, getitem_794, mul_2388, sum_443, getitem_791, mul_2379, sum_441, getitem_788, mul_2370, sum_439, getitem_785, mul_2361, sum_437, getitem_782, mul_2352, sum_435, getitem_779, getitem_780, mul_2343, sum_433, getitem_776, getitem_777, getitem_773, mul_2330, sum_429, getitem_770, mul_2321, sum_427, getitem_767, mul_2312, sum_425, getitem_764, mul_2303, sum_423, getitem_761, getitem_762, mul_2294, sum_421, getitem_758, getitem_759, getitem_755, mul_2281, sum_417, getitem_752, mul_2272, sum_415, getitem_749, mul_2263, sum_413, getitem_746, getitem_747, mul_2254, sum_411, getitem_743, getitem_744, getitem_740, mul_2241, sum_407, getitem_737, mul_2232, sum_405, getitem_734, mul_2223, sum_403, getitem_731, getitem_732, mul_2214, sum_401, getitem_728, getitem_729, getitem_725, mul_2201, sum_397, getitem_722, mul_2192, sum_395, getitem_719, mul_2183, sum_393, getitem_716, mul_2174, sum_391, getitem_713, getitem_714, mul_2165, sum_389, getitem_710, getitem_711, getitem_707, mul_2152, sum_385, getitem_704, mul_2143, sum_383, getitem_701, mul_2134, sum_381, getitem_698, getitem_699, mul_2125, sum_379, getitem_695, getitem_696, getitem_692, mul_2112, sum_375, getitem_689, mul_2103, sum_373, getitem_686, mul_2094, sum_371, getitem_683, getitem_684, mul_2085, sum_369, getitem_680, getitem_681, getitem_677, mul_2072, sum_365, getitem_674, mul_2063, sum_363, getitem_671, mul_2054, sum_361, getitem_668, getitem_669, mul_2045, sum_359, getitem_665, getitem_666, getitem_662, mul_2032, sum_355, getitem_659, mul_2023, sum_353, getitem_656, mul_2014, sum_351, getitem_653, mul_2005, sum_349, getitem_650, getitem_651, mul_1996, sum_347, getitem_647, getitem_648, getitem_644, mul_1983, sum_343, getitem_641, mul_1974, sum_341, getitem_638, mul_1965, sum_339, getitem_635, getitem_636, mul_1956, sum_337, getitem_632, getitem_633, getitem_629, mul_1943, sum_333, getitem_626, mul_1934, sum_331, getitem_623, mul_1925, sum_329, getitem_620, getitem_621, mul_1916, sum_327, getitem_617, getitem_618, getitem_614, mul_1903, sum_323, getitem_611, mul_1894, sum_321, getitem_608, mul_1885, sum_319, getitem_605, getitem_606, mul_1876, sum_317, getitem_602, getitem_603, getitem_599, mul_1863, sum_313, getitem_596, mul_1854, sum_311, getitem_593, mul_1845, sum_309, getitem_590, getitem_591, mul_1836, sum_307, getitem_587, getitem_588, getitem_584, mul_1823, sum_303, getitem_581, mul_1814, sum_301, getitem_578, mul_1805, sum_299, getitem_575, getitem_576, mul_1796, sum_297, getitem_572, getitem_573, getitem_569, mul_1783, sum_293, getitem_566, mul_1774, sum_291, getitem_563, mul_1765, sum_289, getitem_560, getitem_561, mul_1756, sum_287, getitem_557, getitem_558, getitem_554, mul_1743, sum_283, getitem_551, mul_1734, sum_281, getitem_548, mul_1725, sum_279, getitem_545, getitem_546, mul_1716, sum_277, getitem_542, getitem_543, getitem_539, mul_1703, sum_273, getitem_536, mul_1694, sum_271, getitem_533, mul_1685, sum_269, getitem_530, getitem_531, mul_1676, sum_267, getitem_527, getitem_528, getitem_524, mul_1663, sum_263, getitem_521, mul_1654, sum_261, getitem_518, mul_1645, sum_259, getitem_515, getitem_516, mul_1636, sum_257, getitem_512, getitem_513, getitem_509, mul_1623, sum_253, getitem_506, mul_1614, sum_251, getitem_503, mul_1605, sum_249, getitem_500, getitem_501, mul_1596, sum_247, getitem_497, getitem_498, getitem_494, mul_1583, sum_243, getitem_491, mul_1574, sum_241, getitem_488, mul_1565, sum_239, getitem_485, getitem_486, mul_1556, sum_237, getitem_482, getitem_483, getitem_479, mul_1543, sum_233, getitem_476, mul_1534, sum_231, getitem_473, mul_1525, sum_229, getitem_470, getitem_471, mul_1516, sum_227, getitem_467, getitem_468, getitem_464, mul_1503, sum_223, getitem_461, mul_1494, sum_221, getitem_458, mul_1485, sum_219, getitem_455, getitem_456, mul_1476, sum_217, getitem_452, getitem_453, getitem_449, mul_1463, sum_213, getitem_446, mul_1454, sum_211, getitem_443, mul_1445, sum_209, getitem_440, getitem_441, mul_1436, sum_207, getitem_437, getitem_438, getitem_434, mul_1423, sum_203, getitem_431, mul_1414, sum_201, getitem_428, mul_1405, sum_199, getitem_425, getitem_426, mul_1396, sum_197, getitem_422, getitem_423, getitem_419, mul_1383, sum_193, getitem_416, mul_1374, sum_191, getitem_413, mul_1365, sum_189, getitem_410, getitem_411, mul_1356, sum_187, getitem_407, getitem_408, getitem_404, mul_1343, sum_183, getitem_401, mul_1334, sum_181, getitem_398, mul_1325, sum_179, getitem_395, getitem_396, mul_1316, sum_177, getitem_392, getitem_393, getitem_389, mul_1303, sum_173, getitem_386, mul_1294, sum_171, getitem_383, mul_1285, sum_169, getitem_380, getitem_381, mul_1276, sum_167, getitem_377, getitem_378, getitem_374, mul_1263, sum_163, getitem_371, mul_1254, sum_161, getitem_368, mul_1245, sum_159, getitem_365, getitem_366, mul_1236, sum_157, getitem_362, getitem_363, getitem_359, mul_1223, sum_153, getitem_356, mul_1214, sum_151, getitem_353, mul_1205, sum_149, getitem_350, getitem_351, mul_1196, sum_147, getitem_347, getitem_348, getitem_344, mul_1183, sum_143, getitem_341, mul_1174, sum_141, getitem_338, mul_1165, sum_139, getitem_335, getitem_336, mul_1156, sum_137, getitem_332, getitem_333, getitem_329, mul_1143, sum_133, getitem_326, mul_1134, sum_131, getitem_323, mul_1125, sum_129, getitem_320, getitem_321, mul_1116, sum_127, getitem_317, getitem_318, getitem_314, mul_1103, sum_123, getitem_311, mul_1094, sum_121, getitem_308, mul_1085, sum_119, getitem_305, mul_1076, sum_117, getitem_302, getitem_303, mul_1067, sum_115, getitem_299, getitem_300, getitem_296, mul_1054, sum_111, getitem_293, mul_1045, sum_109, getitem_290, mul_1036, sum_107, getitem_287, getitem_288, mul_1027, sum_105, getitem_284, getitem_285, getitem_281, mul_1014, sum_101, permute_37, view_199, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], self._out_spec)
    