
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_convolution_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(50176L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (50176L*x1) + (150528L*x0))];
                        out_ptr0[static_cast<long>(x1 + (3L*x2) + (150528L*x0))] = tmp0;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr1[static_cast<long>(x2 + (49L*x1) + (147L*x0))];
                            out_ptr1[static_cast<long>(x1 + (3L*x2) + (147L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(100352L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(64L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (64L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (64L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(64L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(112);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-7232L) + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-7168L) + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-7104L) + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-64L) + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(64L + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + (2L*x1));
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(7104L + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(7168L + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(7232L + x3 + (128L*x2) + (14336L*x1) + (802816L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (64L*x2) + (3584L*x1) + (200704L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (104L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (104L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr0[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                    out_ptr0[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                }
            }
        }
    }
}
''')


cpp_fused_convolution_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                    out_ptr0[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(56L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x2);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + x3);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-5850L) + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp14 = c10::convert<long>(x3);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr0[static_cast<long>((-5746L) + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = decltype(tmp21)(tmp21 + tmp13);
                            auto tmp23 = c10::convert<long>(1L + x3);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr0[static_cast<long>((-5642L) + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : static_cast<decltype(tmp28())>(0.0);
                            auto tmp31 = decltype(tmp30)(tmp30 + tmp22);
                            auto tmp32 = c10::convert<long>(x2);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr0[static_cast<long>((-26L) + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                            auto tmp40 = decltype(tmp39)(tmp39 + tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr0[static_cast<long>(78L + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : static_cast<decltype(tmp42())>(0.0);
                            auto tmp45 = decltype(tmp44)(tmp44 + tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr0[static_cast<long>(182L + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : static_cast<decltype(tmp47())>(0.0);
                            auto tmp50 = decltype(tmp49)(tmp49 + tmp45);
                            auto tmp51 = c10::convert<long>(1L + x2);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr0[static_cast<long>(5798L + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : static_cast<decltype(tmp56())>(0.0);
                            auto tmp59 = decltype(tmp58)(tmp58 + tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr0[static_cast<long>(5902L + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : static_cast<decltype(tmp61())>(0.0);
                            auto tmp64 = decltype(tmp63)(tmp63 + tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr0[static_cast<long>(6006L + x1 + (104L*x3) + (5824L*x2) + (326144L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : static_cast<decltype(tmp66())>(0.0);
                            auto tmp69 = decltype(tmp68)(tmp68 + tmp64);
                            auto tmp70 = static_cast<long>(-1);
                            auto tmp71 = tmp0 >= tmp70;
                            auto tmp72 = static_cast<long>(57);
                            auto tmp73 = tmp0 < tmp72;
                            auto tmp74 = tmp71 & tmp73;
                            auto tmp75 = tmp6 >= tmp70;
                            auto tmp76 = tmp6 < tmp72;
                            auto tmp77 = tmp75 & tmp76;
                            auto tmp78 = tmp74 & tmp77;
                            auto tmp79 = [&]
                            {
                                auto tmp80 = c10::convert<long>((-1L) + x2);
                                auto tmp81 = static_cast<long>(0);
                                auto tmp82 = tmp80 >= tmp81;
                                auto tmp83 = static_cast<long>(56);
                                auto tmp84 = tmp80 < tmp83;
                                auto tmp85 = tmp82 & tmp84;
                                auto tmp86 = c10::convert<long>((-1L) + x3);
                                auto tmp87 = tmp86 >= tmp81;
                                auto tmp88 = tmp86 < tmp83;
                                auto tmp89 = tmp87 & tmp88;
                                auto tmp90 = tmp85 & tmp89;
                                auto tmp91 = [&]
                                {
                                    auto tmp92 = static_cast<float>(1.0);
                                    return tmp92;
                                }
                                ;
                                auto tmp93 = tmp90 ? tmp91() : static_cast<decltype(tmp91())>(1.0);
                                return tmp93;
                            }
                            ;
                            auto tmp94 = tmp78 ? tmp79() : static_cast<decltype(tmp79())>(0.0);
                            auto tmp95 = tmp14 >= tmp70;
                            auto tmp96 = tmp14 < tmp72;
                            auto tmp97 = tmp95 & tmp96;
                            auto tmp98 = tmp74 & tmp97;
                            auto tmp99 = [&]
                            {
                                auto tmp100 = c10::convert<long>((-1L) + x2);
                                auto tmp101 = static_cast<long>(0);
                                auto tmp102 = tmp100 >= tmp101;
                                auto tmp103 = static_cast<long>(56);
                                auto tmp104 = tmp100 < tmp103;
                                auto tmp105 = tmp102 & tmp104;
                                auto tmp106 = c10::convert<long>(x3);
                                auto tmp107 = tmp106 >= tmp101;
                                auto tmp108 = tmp106 < tmp103;
                                auto tmp109 = tmp107 & tmp108;
                                auto tmp110 = tmp105 & tmp109;
                                auto tmp111 = [&]
                                {
                                    auto tmp112 = static_cast<float>(1.0);
                                    return tmp112;
                                }
                                ;
                                auto tmp113 = tmp110 ? tmp111() : static_cast<decltype(tmp111())>(1.0);
                                return tmp113;
                            }
                            ;
                            auto tmp114 = tmp98 ? tmp99() : static_cast<decltype(tmp99())>(0.0);
                            auto tmp115 = decltype(tmp114)(tmp114 + tmp94);
                            auto tmp116 = tmp23 >= tmp70;
                            auto tmp117 = tmp23 < tmp72;
                            auto tmp118 = tmp116 & tmp117;
                            auto tmp119 = tmp74 & tmp118;
                            auto tmp120 = [&]
                            {
                                auto tmp121 = c10::convert<long>((-1L) + x2);
                                auto tmp122 = static_cast<long>(0);
                                auto tmp123 = tmp121 >= tmp122;
                                auto tmp124 = static_cast<long>(56);
                                auto tmp125 = tmp121 < tmp124;
                                auto tmp126 = tmp123 & tmp125;
                                auto tmp127 = c10::convert<long>(1L + x3);
                                auto tmp128 = tmp127 >= tmp122;
                                auto tmp129 = tmp127 < tmp124;
                                auto tmp130 = tmp128 & tmp129;
                                auto tmp131 = tmp126 & tmp130;
                                auto tmp132 = [&]
                                {
                                    auto tmp133 = static_cast<float>(1.0);
                                    return tmp133;
                                }
                                ;
                                auto tmp134 = tmp131 ? tmp132() : static_cast<decltype(tmp132())>(1.0);
                                return tmp134;
                            }
                            ;
                            auto tmp135 = tmp119 ? tmp120() : static_cast<decltype(tmp120())>(0.0);
                            auto tmp136 = decltype(tmp135)(tmp135 + tmp115);
                            auto tmp137 = tmp32 >= tmp70;
                            auto tmp138 = tmp32 < tmp72;
                            auto tmp139 = tmp137 & tmp138;
                            auto tmp140 = tmp139 & tmp77;
                            auto tmp141 = [&]
                            {
                                auto tmp142 = c10::convert<long>(x2);
                                auto tmp143 = static_cast<long>(0);
                                auto tmp144 = tmp142 >= tmp143;
                                auto tmp145 = static_cast<long>(56);
                                auto tmp146 = tmp142 < tmp145;
                                auto tmp147 = tmp144 & tmp146;
                                auto tmp148 = c10::convert<long>((-1L) + x3);
                                auto tmp149 = tmp148 >= tmp143;
                                auto tmp150 = tmp148 < tmp145;
                                auto tmp151 = tmp149 & tmp150;
                                auto tmp152 = tmp147 & tmp151;
                                auto tmp153 = [&]
                                {
                                    auto tmp154 = static_cast<float>(1.0);
                                    return tmp154;
                                }
                                ;
                                auto tmp155 = tmp152 ? tmp153() : static_cast<decltype(tmp153())>(1.0);
                                return tmp155;
                            }
                            ;
                            auto tmp156 = tmp140 ? tmp141() : static_cast<decltype(tmp141())>(0.0);
                            auto tmp157 = decltype(tmp156)(tmp156 + tmp136);
                            auto tmp158 = tmp139 & tmp97;
                            auto tmp159 = [&]
                            {
                                auto tmp160 = c10::convert<long>(x2);
                                auto tmp161 = static_cast<long>(0);
                                auto tmp162 = tmp160 >= tmp161;
                                auto tmp163 = static_cast<long>(56);
                                auto tmp164 = tmp160 < tmp163;
                                auto tmp165 = tmp162 & tmp164;
                                auto tmp166 = c10::convert<long>(x3);
                                auto tmp167 = tmp166 >= tmp161;
                                auto tmp168 = tmp166 < tmp163;
                                auto tmp169 = tmp167 & tmp168;
                                auto tmp170 = tmp165 & tmp169;
                                auto tmp171 = [&]
                                {
                                    auto tmp172 = static_cast<float>(1.0);
                                    return tmp172;
                                }
                                ;
                                auto tmp173 = tmp170 ? tmp171() : static_cast<decltype(tmp171())>(1.0);
                                return tmp173;
                            }
                            ;
                            auto tmp174 = tmp158 ? tmp159() : static_cast<decltype(tmp159())>(0.0);
                            auto tmp175 = decltype(tmp174)(tmp174 + tmp157);
                            auto tmp176 = tmp139 & tmp118;
                            auto tmp177 = [&]
                            {
                                auto tmp178 = c10::convert<long>(x2);
                                auto tmp179 = static_cast<long>(0);
                                auto tmp180 = tmp178 >= tmp179;
                                auto tmp181 = static_cast<long>(56);
                                auto tmp182 = tmp178 < tmp181;
                                auto tmp183 = tmp180 & tmp182;
                                auto tmp184 = c10::convert<long>(1L + x3);
                                auto tmp185 = tmp184 >= tmp179;
                                auto tmp186 = tmp184 < tmp181;
                                auto tmp187 = tmp185 & tmp186;
                                auto tmp188 = tmp183 & tmp187;
                                auto tmp189 = [&]
                                {
                                    auto tmp190 = static_cast<float>(1.0);
                                    return tmp190;
                                }
                                ;
                                auto tmp191 = tmp188 ? tmp189() : static_cast<decltype(tmp189())>(1.0);
                                return tmp191;
                            }
                            ;
                            auto tmp192 = tmp176 ? tmp177() : static_cast<decltype(tmp177())>(0.0);
                            auto tmp193 = decltype(tmp192)(tmp192 + tmp175);
                            auto tmp194 = tmp51 >= tmp70;
                            auto tmp195 = tmp51 < tmp72;
                            auto tmp196 = tmp194 & tmp195;
                            auto tmp197 = tmp196 & tmp77;
                            auto tmp198 = [&]
                            {
                                auto tmp199 = c10::convert<long>(1L + x2);
                                auto tmp200 = static_cast<long>(0);
                                auto tmp201 = tmp199 >= tmp200;
                                auto tmp202 = static_cast<long>(56);
                                auto tmp203 = tmp199 < tmp202;
                                auto tmp204 = tmp201 & tmp203;
                                auto tmp205 = c10::convert<long>((-1L) + x3);
                                auto tmp206 = tmp205 >= tmp200;
                                auto tmp207 = tmp205 < tmp202;
                                auto tmp208 = tmp206 & tmp207;
                                auto tmp209 = tmp204 & tmp208;
                                auto tmp210 = [&]
                                {
                                    auto tmp211 = static_cast<float>(1.0);
                                    return tmp211;
                                }
                                ;
                                auto tmp212 = tmp209 ? tmp210() : static_cast<decltype(tmp210())>(1.0);
                                return tmp212;
                            }
                            ;
                            auto tmp213 = tmp197 ? tmp198() : static_cast<decltype(tmp198())>(0.0);
                            auto tmp214 = decltype(tmp213)(tmp213 + tmp193);
                            auto tmp215 = tmp196 & tmp97;
                            auto tmp216 = [&]
                            {
                                auto tmp217 = c10::convert<long>(1L + x2);
                                auto tmp218 = static_cast<long>(0);
                                auto tmp219 = tmp217 >= tmp218;
                                auto tmp220 = static_cast<long>(56);
                                auto tmp221 = tmp217 < tmp220;
                                auto tmp222 = tmp219 & tmp221;
                                auto tmp223 = c10::convert<long>(x3);
                                auto tmp224 = tmp223 >= tmp218;
                                auto tmp225 = tmp223 < tmp220;
                                auto tmp226 = tmp224 & tmp225;
                                auto tmp227 = tmp222 & tmp226;
                                auto tmp228 = [&]
                                {
                                    auto tmp229 = static_cast<float>(1.0);
                                    return tmp229;
                                }
                                ;
                                auto tmp230 = tmp227 ? tmp228() : static_cast<decltype(tmp228())>(1.0);
                                return tmp230;
                            }
                            ;
                            auto tmp231 = tmp215 ? tmp216() : static_cast<decltype(tmp216())>(0.0);
                            auto tmp232 = decltype(tmp231)(tmp231 + tmp214);
                            auto tmp233 = tmp196 & tmp118;
                            auto tmp234 = [&]
                            {
                                auto tmp235 = c10::convert<long>(1L + x2);
                                auto tmp236 = static_cast<long>(0);
                                auto tmp237 = tmp235 >= tmp236;
                                auto tmp238 = static_cast<long>(56);
                                auto tmp239 = tmp235 < tmp238;
                                auto tmp240 = tmp237 & tmp239;
                                auto tmp241 = c10::convert<long>(1L + x3);
                                auto tmp242 = tmp241 >= tmp236;
                                auto tmp243 = tmp241 < tmp238;
                                auto tmp244 = tmp242 & tmp243;
                                auto tmp245 = tmp240 & tmp244;
                                auto tmp246 = [&]
                                {
                                    auto tmp247 = static_cast<float>(1.0);
                                    return tmp247;
                                }
                                ;
                                auto tmp248 = tmp245 ? tmp246() : static_cast<decltype(tmp246())>(1.0);
                                return tmp248;
                            }
                            ;
                            auto tmp249 = tmp233 ? tmp234() : static_cast<decltype(tmp234())>(0.0);
                            auto tmp250 = decltype(tmp249)(tmp249 + tmp232);
                            auto tmp251 = tmp69 / tmp250;
                            out_ptr0[static_cast<long>(x3 + (56L*x2) + (3136L*x1) + (326144L*x0))] = tmp251;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr1 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x1)];
                        auto tmp3 = in_ptr3[static_cast<long>(x1)];
                        auto tmp11 = in_ptr4[static_cast<long>(x1)];
                        auto tmp13 = in_ptr5[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr1[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr2 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr6[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr7[static_cast<long>(x1)];
                        auto tmp3 = in_ptr8[static_cast<long>(x1)];
                        auto tmp11 = in_ptr9[static_cast<long>(x1)];
                        auto tmp13 = in_ptr10[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr2[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr3 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr11[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr12[static_cast<long>(x1)];
                        auto tmp3 = in_ptr13[static_cast<long>(x1)];
                        auto tmp11 = in_ptr14[static_cast<long>(x1)];
                        auto tmp13 = in_ptr15[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr3[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr4 + static_cast<long>(x1 + (104L*x2) + (326144L*x0)), static_cast<long>(104L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(256L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp19 = tmp17 - tmp18;
                    auto tmp21 = tmp20 + tmp5;
                    auto tmp22 = tmp21.sqrt();
                    auto tmp23 = tmp22.reciprocal();
                    auto tmp24 = tmp23 * tmp10;
                    auto tmp25 = tmp19 * tmp24;
                    auto tmp27 = tmp25 * tmp26;
                    auto tmp29 = tmp27 + tmp28;
                    auto tmp30 = tmp16 + tmp29;
                    tmp30.store(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6422528L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (104L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (104L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr0[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(24L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)), static_cast<long>(3136L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(26L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(24L); x2<static_cast<long>(26L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(26L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr2[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(24L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)), static_cast<long>(3136L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(52L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(24L); x2<static_cast<long>(26L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(52L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr2[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(78L + x1 + (104L*x2) + (326144L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr5[static_cast<long>(78L + x1 + (104L*x2) + (326144L*x0))];
                        out_ptr1[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp0;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (326144L*x0)), static_cast<long>(104L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(256L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (104L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (104L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr0[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(24L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)), static_cast<long>(3136L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(26L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(24L); x2<static_cast<long>(26L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(26L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr2[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(24L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)), static_cast<long>(3136L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(52L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(24L); x2<static_cast<long>(26L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (3136L*x2) + (326144L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(52L + x2 + (104L*x1) + (104L*x1_inner) + (326144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (26L*x1) + (26L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(26L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)), static_cast<long>(26L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (234L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (26L*x2) + (234L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (234L*x0))];
                            out_ptr2[static_cast<long>(x1 + (26L*x2) + (234L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (26L*x2) + (81536L*x0)), static_cast<long>(26L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (26L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(24L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(78L + x1 + (104L*x2) + (326144L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(24L); x1<static_cast<long>(26L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr5[static_cast<long>(78L + x1 + (104L*x2) + (326144L*x0))];
                        out_ptr1[static_cast<long>(x2 + (3136L*x1) + (326144L*x0))] = tmp0;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (326144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (326144L*x0)), static_cast<long>(104L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(256L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr0[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                    out_ptr0[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                }
            }
        }
    }
}
''')


cpp_fused_convolution_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                    out_ptr0[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(28L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(56);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + (2L*x3));
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-11700L) + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp14 = c10::convert<long>(2L*x3);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr0[static_cast<long>((-11492L) + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = decltype(tmp21)(tmp21 + tmp13);
                            auto tmp23 = c10::convert<long>(1L + (2L*x3));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr0[static_cast<long>((-11284L) + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : static_cast<decltype(tmp28())>(0.0);
                            auto tmp31 = decltype(tmp30)(tmp30 + tmp22);
                            auto tmp32 = c10::convert<long>(2L*x2);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr0[static_cast<long>((-52L) + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                            auto tmp40 = decltype(tmp39)(tmp39 + tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr0[static_cast<long>(156L + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : static_cast<decltype(tmp42())>(0.0);
                            auto tmp45 = decltype(tmp44)(tmp44 + tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr0[static_cast<long>(364L + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : static_cast<decltype(tmp47())>(0.0);
                            auto tmp50 = decltype(tmp49)(tmp49 + tmp45);
                            auto tmp51 = c10::convert<long>(1L + (2L*x2));
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr0[static_cast<long>(11596L + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : static_cast<decltype(tmp56())>(0.0);
                            auto tmp59 = decltype(tmp58)(tmp58 + tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr0[static_cast<long>(11804L + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : static_cast<decltype(tmp61())>(0.0);
                            auto tmp64 = decltype(tmp63)(tmp63 + tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr0[static_cast<long>(12012L + x1 + (416L*x3) + (23296L*x2) + (652288L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : static_cast<decltype(tmp66())>(0.0);
                            auto tmp69 = decltype(tmp68)(tmp68 + tmp64);
                            auto tmp70 = static_cast<long>(-1);
                            auto tmp71 = tmp0 >= tmp70;
                            auto tmp72 = static_cast<long>(57);
                            auto tmp73 = tmp0 < tmp72;
                            auto tmp74 = tmp71 & tmp73;
                            auto tmp75 = tmp6 >= tmp70;
                            auto tmp76 = tmp6 < tmp72;
                            auto tmp77 = tmp75 & tmp76;
                            auto tmp78 = tmp74 & tmp77;
                            auto tmp79 = [&]
                            {
                                auto tmp80 = c10::convert<long>((-1L) + (2L*x2));
                                auto tmp81 = static_cast<long>(0);
                                auto tmp82 = tmp80 >= tmp81;
                                auto tmp83 = static_cast<long>(56);
                                auto tmp84 = tmp80 < tmp83;
                                auto tmp85 = tmp82 & tmp84;
                                auto tmp86 = c10::convert<long>((-1L) + (2L*x3));
                                auto tmp87 = tmp86 >= tmp81;
                                auto tmp88 = tmp86 < tmp83;
                                auto tmp89 = tmp87 & tmp88;
                                auto tmp90 = tmp85 & tmp89;
                                auto tmp91 = [&]
                                {
                                    auto tmp92 = static_cast<float>(1.0);
                                    return tmp92;
                                }
                                ;
                                auto tmp93 = tmp90 ? tmp91() : static_cast<decltype(tmp91())>(1.0);
                                return tmp93;
                            }
                            ;
                            auto tmp94 = tmp78 ? tmp79() : static_cast<decltype(tmp79())>(0.0);
                            auto tmp95 = tmp14 >= tmp70;
                            auto tmp96 = tmp14 < tmp72;
                            auto tmp97 = tmp95 & tmp96;
                            auto tmp98 = tmp74 & tmp97;
                            auto tmp99 = [&]
                            {
                                auto tmp100 = c10::convert<long>((-1L) + (2L*x2));
                                auto tmp101 = static_cast<long>(0);
                                auto tmp102 = tmp100 >= tmp101;
                                auto tmp103 = static_cast<long>(56);
                                auto tmp104 = tmp100 < tmp103;
                                auto tmp105 = tmp102 & tmp104;
                                auto tmp106 = c10::convert<long>(2L*x3);
                                auto tmp107 = tmp106 >= tmp101;
                                auto tmp108 = tmp106 < tmp103;
                                auto tmp109 = tmp107 & tmp108;
                                auto tmp110 = tmp105 & tmp109;
                                auto tmp111 = [&]
                                {
                                    auto tmp112 = static_cast<float>(1.0);
                                    return tmp112;
                                }
                                ;
                                auto tmp113 = tmp110 ? tmp111() : static_cast<decltype(tmp111())>(1.0);
                                return tmp113;
                            }
                            ;
                            auto tmp114 = tmp98 ? tmp99() : static_cast<decltype(tmp99())>(0.0);
                            auto tmp115 = decltype(tmp114)(tmp114 + tmp94);
                            auto tmp116 = tmp23 >= tmp70;
                            auto tmp117 = tmp23 < tmp72;
                            auto tmp118 = tmp116 & tmp117;
                            auto tmp119 = tmp74 & tmp118;
                            auto tmp120 = [&]
                            {
                                auto tmp121 = c10::convert<long>((-1L) + (2L*x2));
                                auto tmp122 = static_cast<long>(0);
                                auto tmp123 = tmp121 >= tmp122;
                                auto tmp124 = static_cast<long>(56);
                                auto tmp125 = tmp121 < tmp124;
                                auto tmp126 = tmp123 & tmp125;
                                auto tmp127 = c10::convert<long>(1L + (2L*x3));
                                auto tmp128 = tmp127 >= tmp122;
                                auto tmp129 = tmp127 < tmp124;
                                auto tmp130 = tmp128 & tmp129;
                                auto tmp131 = tmp126 & tmp130;
                                auto tmp132 = [&]
                                {
                                    auto tmp133 = static_cast<float>(1.0);
                                    return tmp133;
                                }
                                ;
                                auto tmp134 = tmp131 ? tmp132() : static_cast<decltype(tmp132())>(1.0);
                                return tmp134;
                            }
                            ;
                            auto tmp135 = tmp119 ? tmp120() : static_cast<decltype(tmp120())>(0.0);
                            auto tmp136 = decltype(tmp135)(tmp135 + tmp115);
                            auto tmp137 = tmp32 >= tmp70;
                            auto tmp138 = tmp32 < tmp72;
                            auto tmp139 = tmp137 & tmp138;
                            auto tmp140 = tmp139 & tmp77;
                            auto tmp141 = [&]
                            {
                                auto tmp142 = c10::convert<long>(2L*x2);
                                auto tmp143 = static_cast<long>(0);
                                auto tmp144 = tmp142 >= tmp143;
                                auto tmp145 = static_cast<long>(56);
                                auto tmp146 = tmp142 < tmp145;
                                auto tmp147 = tmp144 & tmp146;
                                auto tmp148 = c10::convert<long>((-1L) + (2L*x3));
                                auto tmp149 = tmp148 >= tmp143;
                                auto tmp150 = tmp148 < tmp145;
                                auto tmp151 = tmp149 & tmp150;
                                auto tmp152 = tmp147 & tmp151;
                                auto tmp153 = [&]
                                {
                                    auto tmp154 = static_cast<float>(1.0);
                                    return tmp154;
                                }
                                ;
                                auto tmp155 = tmp152 ? tmp153() : static_cast<decltype(tmp153())>(1.0);
                                return tmp155;
                            }
                            ;
                            auto tmp156 = tmp140 ? tmp141() : static_cast<decltype(tmp141())>(0.0);
                            auto tmp157 = decltype(tmp156)(tmp156 + tmp136);
                            auto tmp158 = tmp139 & tmp97;
                            auto tmp159 = [&]
                            {
                                auto tmp160 = c10::convert<long>(2L*x2);
                                auto tmp161 = static_cast<long>(0);
                                auto tmp162 = tmp160 >= tmp161;
                                auto tmp163 = static_cast<long>(56);
                                auto tmp164 = tmp160 < tmp163;
                                auto tmp165 = tmp162 & tmp164;
                                auto tmp166 = c10::convert<long>(2L*x3);
                                auto tmp167 = tmp166 >= tmp161;
                                auto tmp168 = tmp166 < tmp163;
                                auto tmp169 = tmp167 & tmp168;
                                auto tmp170 = tmp165 & tmp169;
                                auto tmp171 = [&]
                                {
                                    auto tmp172 = static_cast<float>(1.0);
                                    return tmp172;
                                }
                                ;
                                auto tmp173 = tmp170 ? tmp171() : static_cast<decltype(tmp171())>(1.0);
                                return tmp173;
                            }
                            ;
                            auto tmp174 = tmp158 ? tmp159() : static_cast<decltype(tmp159())>(0.0);
                            auto tmp175 = decltype(tmp174)(tmp174 + tmp157);
                            auto tmp176 = tmp139 & tmp118;
                            auto tmp177 = [&]
                            {
                                auto tmp178 = c10::convert<long>(2L*x2);
                                auto tmp179 = static_cast<long>(0);
                                auto tmp180 = tmp178 >= tmp179;
                                auto tmp181 = static_cast<long>(56);
                                auto tmp182 = tmp178 < tmp181;
                                auto tmp183 = tmp180 & tmp182;
                                auto tmp184 = c10::convert<long>(1L + (2L*x3));
                                auto tmp185 = tmp184 >= tmp179;
                                auto tmp186 = tmp184 < tmp181;
                                auto tmp187 = tmp185 & tmp186;
                                auto tmp188 = tmp183 & tmp187;
                                auto tmp189 = [&]
                                {
                                    auto tmp190 = static_cast<float>(1.0);
                                    return tmp190;
                                }
                                ;
                                auto tmp191 = tmp188 ? tmp189() : static_cast<decltype(tmp189())>(1.0);
                                return tmp191;
                            }
                            ;
                            auto tmp192 = tmp176 ? tmp177() : static_cast<decltype(tmp177())>(0.0);
                            auto tmp193 = decltype(tmp192)(tmp192 + tmp175);
                            auto tmp194 = tmp51 >= tmp70;
                            auto tmp195 = tmp51 < tmp72;
                            auto tmp196 = tmp194 & tmp195;
                            auto tmp197 = tmp196 & tmp77;
                            auto tmp198 = [&]
                            {
                                auto tmp199 = c10::convert<long>(1L + (2L*x2));
                                auto tmp200 = static_cast<long>(0);
                                auto tmp201 = tmp199 >= tmp200;
                                auto tmp202 = static_cast<long>(56);
                                auto tmp203 = tmp199 < tmp202;
                                auto tmp204 = tmp201 & tmp203;
                                auto tmp205 = c10::convert<long>((-1L) + (2L*x3));
                                auto tmp206 = tmp205 >= tmp200;
                                auto tmp207 = tmp205 < tmp202;
                                auto tmp208 = tmp206 & tmp207;
                                auto tmp209 = tmp204 & tmp208;
                                auto tmp210 = [&]
                                {
                                    auto tmp211 = static_cast<float>(1.0);
                                    return tmp211;
                                }
                                ;
                                auto tmp212 = tmp209 ? tmp210() : static_cast<decltype(tmp210())>(1.0);
                                return tmp212;
                            }
                            ;
                            auto tmp213 = tmp197 ? tmp198() : static_cast<decltype(tmp198())>(0.0);
                            auto tmp214 = decltype(tmp213)(tmp213 + tmp193);
                            auto tmp215 = tmp196 & tmp97;
                            auto tmp216 = [&]
                            {
                                auto tmp217 = c10::convert<long>(1L + (2L*x2));
                                auto tmp218 = static_cast<long>(0);
                                auto tmp219 = tmp217 >= tmp218;
                                auto tmp220 = static_cast<long>(56);
                                auto tmp221 = tmp217 < tmp220;
                                auto tmp222 = tmp219 & tmp221;
                                auto tmp223 = c10::convert<long>(2L*x3);
                                auto tmp224 = tmp223 >= tmp218;
                                auto tmp225 = tmp223 < tmp220;
                                auto tmp226 = tmp224 & tmp225;
                                auto tmp227 = tmp222 & tmp226;
                                auto tmp228 = [&]
                                {
                                    auto tmp229 = static_cast<float>(1.0);
                                    return tmp229;
                                }
                                ;
                                auto tmp230 = tmp227 ? tmp228() : static_cast<decltype(tmp228())>(1.0);
                                return tmp230;
                            }
                            ;
                            auto tmp231 = tmp215 ? tmp216() : static_cast<decltype(tmp216())>(0.0);
                            auto tmp232 = decltype(tmp231)(tmp231 + tmp214);
                            auto tmp233 = tmp196 & tmp118;
                            auto tmp234 = [&]
                            {
                                auto tmp235 = c10::convert<long>(1L + (2L*x2));
                                auto tmp236 = static_cast<long>(0);
                                auto tmp237 = tmp235 >= tmp236;
                                auto tmp238 = static_cast<long>(56);
                                auto tmp239 = tmp235 < tmp238;
                                auto tmp240 = tmp237 & tmp239;
                                auto tmp241 = c10::convert<long>(1L + (2L*x3));
                                auto tmp242 = tmp241 >= tmp236;
                                auto tmp243 = tmp241 < tmp238;
                                auto tmp244 = tmp242 & tmp243;
                                auto tmp245 = tmp240 & tmp244;
                                auto tmp246 = [&]
                                {
                                    auto tmp247 = static_cast<float>(1.0);
                                    return tmp247;
                                }
                                ;
                                auto tmp248 = tmp245 ? tmp246() : static_cast<decltype(tmp246())>(1.0);
                                return tmp248;
                            }
                            ;
                            auto tmp249 = tmp233 ? tmp234() : static_cast<decltype(tmp234())>(0.0);
                            auto tmp250 = decltype(tmp249)(tmp249 + tmp232);
                            auto tmp251 = tmp69 / tmp250;
                            out_ptr0[static_cast<long>(x3 + (28L*x2) + (784L*x1) + (163072L*x0))] = tmp251;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr1 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr2[static_cast<long>(x1)];
                        auto tmp3 = in_ptr3[static_cast<long>(x1)];
                        auto tmp11 = in_ptr4[static_cast<long>(x1)];
                        auto tmp13 = in_ptr5[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr1[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr2 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr6[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr7[static_cast<long>(x1)];
                        auto tmp3 = in_ptr8[static_cast<long>(x1)];
                        auto tmp11 = in_ptr9[static_cast<long>(x1)];
                        auto tmp13 = in_ptr10[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr2[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr3 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr11[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr12[static_cast<long>(x1)];
                        auto tmp3 = in_ptr13[static_cast<long>(x1)];
                        auto tmp11 = in_ptr14[static_cast<long>(x1)];
                        auto tmp13 = in_ptr15[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr3[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr4 + static_cast<long>(x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp19 = tmp17 - tmp18;
                    auto tmp21 = tmp20 + tmp5;
                    auto tmp22 = tmp21.sqrt();
                    auto tmp23 = tmp22.reciprocal();
                    auto tmp24 = tmp23 * tmp10;
                    auto tmp25 = tmp19 * tmp24;
                    auto tmp27 = tmp25 * tmp26;
                    auto tmp29 = tmp27 + tmp28;
                    auto tmp30 = tmp16 + tmp29;
                    tmp30.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3211264L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr0[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(52L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(52L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(52L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr2[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(52L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(104L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr2[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(156L + x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr5[static_cast<long>(156L + x1 + (208L*x2) + (163072L*x0))];
                        out_ptr1[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp0;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr0[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(52L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(52L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(52L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr2[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(52L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(104L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr2[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(156L + x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr5[static_cast<long>(156L + x1 + (208L*x2) + (163072L*x0))];
                        out_ptr1[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp0;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (208L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr0[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(52L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(52L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(52L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr2[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)), static_cast<long>(784L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(52L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (784L*x2) + (163072L*x0)));
                        auto tmp1 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(104L + x2 + (208L*x1) + (208L*x1_inner) + (163072L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp2 = tmp0 + tmp1;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp2.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (52L*x1) + (52L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(52L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)), static_cast<long>(52L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (468L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (52L*x2) + (468L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr6[static_cast<long>(x2 + (9L*x1) + (468L*x0))];
                            out_ptr2[static_cast<long>(x1 + (52L*x2) + (468L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (52L*x2) + (40768L*x0)), static_cast<long>(52L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (52L*x2) + (40768L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x1)];
                        auto tmp3 = in_ptr2[static_cast<long>(x1)];
                        auto tmp11 = in_ptr3[static_cast<long>(x1)];
                        auto tmp13 = in_ptr4[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp15 = tmp14 * (tmp14>0);
                        out_ptr0[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp15;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(156L + x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(52L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr5[static_cast<long>(156L + x1 + (208L*x2) + (163072L*x0))];
                        out_ptr1[static_cast<long>(x2 + (784L*x1) + (163072L*x0))] = tmp0;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (163072L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (163072L*x0)), static_cast<long>(208L));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(14L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(28);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + (2L*x3));
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-11752L) + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp14 = c10::convert<long>(2L*x3);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr0[static_cast<long>((-11336L) + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = decltype(tmp21)(tmp21 + tmp13);
                            auto tmp23 = c10::convert<long>(1L + (2L*x3));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_ptr0[static_cast<long>((-10920L) + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : static_cast<decltype(tmp28())>(0.0);
                            auto tmp31 = decltype(tmp30)(tmp30 + tmp22);
                            auto tmp32 = c10::convert<long>(2L*x2);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = in_ptr0[static_cast<long>((-104L) + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                            auto tmp40 = decltype(tmp39)(tmp39 + tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = in_ptr0[static_cast<long>(312L + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : static_cast<decltype(tmp42())>(0.0);
                            auto tmp45 = decltype(tmp44)(tmp44 + tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = in_ptr0[static_cast<long>(728L + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : static_cast<decltype(tmp47())>(0.0);
                            auto tmp50 = decltype(tmp49)(tmp49 + tmp45);
                            auto tmp51 = c10::convert<long>(1L + (2L*x2));
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = in_ptr0[static_cast<long>(11544L + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : static_cast<decltype(tmp56())>(0.0);
                            auto tmp59 = decltype(tmp58)(tmp58 + tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = in_ptr0[static_cast<long>(11960L + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : static_cast<decltype(tmp61())>(0.0);
                            auto tmp64 = decltype(tmp63)(tmp63 + tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_ptr0[static_cast<long>(12376L + x1 + (832L*x3) + (23296L*x2) + (326144L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : static_cast<decltype(tmp66())>(0.0);
                            auto tmp69 = decltype(tmp68)(tmp68 + tmp64);
                            auto tmp70 = static_cast<long>(-1);
                            auto tmp71 = tmp0 >= tmp70;
                            auto tmp72 = static_cast<long>(29);
                            auto tmp73 = tmp0 < tmp72;
                            auto tmp74 = tmp71 & tmp73;
                            auto tmp75 = tmp6 >= tmp70;
                            auto tmp76 = tmp6 < tmp72;
                            auto tmp77 = tmp75 & tmp76;
                            auto tmp78 = tmp74 & tmp77;
                            auto tmp79 = [&]
                            {
                                auto tmp80 = c10::convert<long>((-1L) + (2L*x2));
                                auto tmp81 = static_cast<long>(0);
                                auto tmp82 = tmp80 >= tmp81;
                                auto tmp83 = static_cast<long>(28);
                                auto tmp84 = tmp80 < tmp83;
                                auto tmp85 = tmp82 & tmp84;
                                auto tmp86 = c10::convert<long>((-1L) + (2L*x3));
                                auto tmp87 = tmp86 >= tmp81;
                                auto tmp88 = tmp86 < tmp83;
                                auto tmp89 = tmp87 & tmp88;
                                auto tmp90 = tmp85 & tmp89;
                                auto tmp91 = [&]
                                {
                                    auto tmp92 = static_cast<float>(1.0);
                                    return tmp92;
                                }
                                ;
                                auto tmp93 = tmp90 ? tmp91() : static_cast<decltype(tmp91())>(1.0);
                                return tmp93;
                            }
                            ;
                            auto tmp94 = tmp78 ? tmp79() : static_cast<decltype(tmp79())>(0.0);
                            auto tmp95 = tmp14 >= tmp70;
                            auto tmp96 = tmp14 < tmp72;
                            auto tmp97 = tmp95 & tmp96;
                            auto tmp98 = tmp74 & tmp97;
                            auto tmp99 = [&]
                            {
                                auto tmp100 = c10::convert<long>((-1L) + (2L*x2));
                                auto tmp101 = static_cast<long>(0);
                                auto tmp102 = tmp100 >= tmp101;
                                auto tmp103 = static_cast<long>(28);
                                auto tmp104 = tmp100 < tmp103;
                                auto tmp105 = tmp102 & tmp104;
                                auto tmp106 = c10::convert<long>(2L*x3);
                                auto tmp107 = tmp106 >= tmp101;
                                auto tmp108 = tmp106 < tmp103;
                                auto tmp109 = tmp107 & tmp108;
                                auto tmp110 = tmp105 & tmp109;
                                auto tmp111 = [&]
                                {
                                    auto tmp112 = static_cast<float>(1.0);
                                    return tmp112;
                                }
                                ;
                                auto tmp113 = tmp110 ? tmp111() : static_cast<decltype(tmp111())>(1.0);
                                return tmp113;
                            }
                            ;
                            auto tmp114 = tmp98 ? tmp99() : static_cast<decltype(tmp99())>(0.0);
                            auto tmp115 = decltype(tmp114)(tmp114 + tmp94);
                            auto tmp116 = tmp23 >= tmp70;
                            auto tmp117 = tmp23 < tmp72;
                            auto tmp118 = tmp116 & tmp117;
                            auto tmp119 = tmp74 & tmp118;
                            auto tmp120 = [&]
                            {
                                auto tmp121 = c10::convert<long>((-1L) + (2L*x2));
                                auto tmp122 = static_cast<long>(0);
                                auto tmp123 = tmp121 >= tmp122;
                                auto tmp124 = static_cast<long>(28);
                                auto tmp125 = tmp121 < tmp124;
                                auto tmp126 = tmp123 & tmp125;
                                auto tmp127 = c10::convert<long>(1L + (2L*x3));
                                auto tmp128 = tmp127 >= tmp122;
                                auto tmp129 = tmp127 < tmp124;
                                auto tmp130 = tmp128 & tmp129;
                                auto tmp131 = tmp126 & tmp130;
                                auto tmp132 = [&]
                                {
                                    auto tmp133 = static_cast<float>(1.0);
                                    return tmp133;
                                }
                                ;
                                auto tmp134 = tmp131 ? tmp132() : static_cast<decltype(tmp132())>(1.0);
                                return tmp134;
                            }
                            ;
                            auto tmp135 = tmp119 ? tmp120() : static_cast<decltype(tmp120())>(0.0);
                            auto tmp136 = decltype(tmp135)(tmp135 + tmp115);
                            auto tmp137 = tmp32 >= tmp70;
                            auto tmp138 = tmp32 < tmp72;
                            auto tmp139 = tmp137 & tmp138;
                            auto tmp140 = tmp139 & tmp77;
                            auto tmp141 = [&]
                            {
                                auto tmp142 = c10::convert<long>(2L*x2);
                                auto tmp143 = static_cast<long>(0);
                                auto tmp144 = tmp142 >= tmp143;
                                auto tmp145 = static_cast<long>(28);
                                auto tmp146 = tmp142 < tmp145;
                                auto tmp147 = tmp144 & tmp146;
                                auto tmp148 = c10::convert<long>((-1L) + (2L*x3));
                                auto tmp149 = tmp148 >= tmp143;
                                auto tmp150 = tmp148 < tmp145;
                                auto tmp151 = tmp149 & tmp150;
                                auto tmp152 = tmp147 & tmp151;
                                auto tmp153 = [&]
                                {
                                    auto tmp154 = static_cast<float>(1.0);
                                    return tmp154;
                                }
                                ;
                                auto tmp155 = tmp152 ? tmp153() : static_cast<decltype(tmp153())>(1.0);
                                return tmp155;
                            }
                            ;
                            auto tmp156 = tmp140 ? tmp141() : static_cast<decltype(tmp141())>(0.0);
                            auto tmp157 = decltype(tmp156)(tmp156 + tmp136);
                            auto tmp158 = tmp139 & tmp97;
                            auto tmp159 = [&]
                            {
                                auto tmp160 = c10::convert<long>(2L*x2);
                                auto tmp161 = static_cast<long>(0);
                                auto tmp162 = tmp160 >= tmp161;
                                auto tmp163 = static_cast<long>(28);
                                auto tmp164 = tmp160 < tmp163;
                                auto tmp165 = tmp162 & tmp164;
                                auto tmp166 = c10::convert<long>(2L*x3);
                                auto tmp167 = tmp166 >= tmp161;
                                auto tmp168 = tmp166 < tmp163;
                                auto tmp169 = tmp167 & tmp168;
                                auto tmp170 = tmp165 & tmp169;
                                auto tmp171 = [&]
                                {
                                    auto tmp172 = static_cast<float>(1.0);
                                    return tmp172;
                                }
                                ;
                                auto tmp173 = tmp170 ? tmp171() : static_cast<decltype(tmp171())>(1.0);
                                return tmp173;
                            }
                            ;
                            auto tmp174 = tmp158 ? tmp159() : static_cast<decltype(tmp159())>(0.0);
                            auto tmp175 = decltype(tmp174)(tmp174 + tmp157);
                            auto tmp176 = tmp139 & tmp118;
                            auto tmp177 = [&]
                            {
                                auto tmp178 = c10::convert<long>(2L*x2);
                                auto tmp179 = static_cast<long>(0);
                                auto tmp180 = tmp178 >= tmp179;
                                auto tmp181 = static_cast<long>(28);
                                auto tmp182 = tmp178 < tmp181;
                                auto tmp183 = tmp180 & tmp182;
                                auto tmp184 = c10::convert<long>(1L + (2L*x3));
                                auto tmp185 = tmp184 >= tmp179;
                                auto tmp186 = tmp184 < tmp181;
                                auto tmp187 = tmp185 & tmp186;
                                auto tmp188 = tmp183 & tmp187;
                                auto tmp189 = [&]
                                {
                                    auto tmp190 = static_cast<float>(1.0);
                                    return tmp190;
                                }
                                ;
                                auto tmp191 = tmp188 ? tmp189() : static_cast<decltype(tmp189())>(1.0);
                                return tmp191;
                            }
                            ;
                            auto tmp192 = tmp176 ? tmp177() : static_cast<decltype(tmp177())>(0.0);
                            auto tmp193 = decltype(tmp192)(tmp192 + tmp175);
                            auto tmp194 = tmp51 >= tmp70;
                            auto tmp195 = tmp51 < tmp72;
                            auto tmp196 = tmp194 & tmp195;
                            auto tmp197 = tmp196 & tmp77;
                            auto tmp198 = [&]
                            {
                                auto tmp199 = c10::convert<long>(1L + (2L*x2));
                                auto tmp200 = static_cast<long>(0);
                                auto tmp201 = tmp199 >= tmp200;
                                auto tmp202 = static_cast<long>(28);
                                auto tmp203 = tmp199 < tmp202;
                                auto tmp204 = tmp201 & tmp203;
                                auto tmp205 = c10::convert<long>((-1L) + (2L*x3));
                                auto tmp206 = tmp205 >= tmp200;
                                auto tmp207 = tmp205 < tmp202;
                                auto tmp208 = tmp206 & tmp207;
                                auto tmp209 = tmp204 & tmp208;
                                auto tmp210 = [&]
                                {
                                    auto tmp211 = static_cast<float>(1.0);
                                    return tmp211;
                                }
                                ;
                                auto tmp212 = tmp209 ? tmp210() : static_cast<decltype(tmp210())>(1.0);
                                return tmp212;
                            }
                            ;
                            auto tmp213 = tmp197 ? tmp198() : static_cast<decltype(tmp198())>(0.0);
                            auto tmp214 = decltype(tmp213)(tmp213 + tmp193);
                            auto tmp215 = tmp196 & tmp97;
                            auto tmp216 = [&]
                            {
                                auto tmp217 = c10::convert<long>(1L + (2L*x2));
                                auto tmp218 = static_cast<long>(0);
                                auto tmp219 = tmp217 >= tmp218;
                                auto tmp220 = static_cast<long>(28);
                                auto tmp221 = tmp217 < tmp220;
                                auto tmp222 = tmp219 & tmp221;
                                auto tmp223 = c10::convert<long>(2L*x3);
                                auto tmp224 = tmp223 >= tmp218;
                                auto tmp225 = tmp223 < tmp220;
                                auto tmp226 = tmp224 & tmp225;
                                auto tmp227 = tmp222 & tmp226;
                                auto tmp228 = [&]
                                {
                                    auto tmp229 = static_cast<float>(1.0);
                                    return tmp229;
                                }
                                ;
                                auto tmp230 = tmp227 ? tmp228() : static_cast<decltype(tmp228())>(1.0);
                                return tmp230;
                            }
                            ;
                            auto tmp231 = tmp215 ? tmp216() : static_cast<decltype(tmp216())>(0.0);
                            auto tmp232 = decltype(tmp231)(tmp231 + tmp214);
                            auto tmp233 = tmp196 & tmp118;
                            auto tmp234 = [&]
                            {
                                auto tmp235 = c10::convert<long>(1L + (2L*x2));
                                auto tmp236 = static_cast<long>(0);
                                auto tmp237 = tmp235 >= tmp236;
                                auto tmp238 = static_cast<long>(28);
                                auto tmp239 = tmp235 < tmp238;
                                auto tmp240 = tmp237 & tmp239;
                                auto tmp241 = c10::convert<long>(1L + (2L*x3));
                                auto tmp242 = tmp241 >= tmp236;
                                auto tmp243 = tmp241 < tmp238;
                                auto tmp244 = tmp242 & tmp243;
                                auto tmp245 = tmp240 & tmp244;
                                auto tmp246 = [&]
                                {
                                    auto tmp247 = static_cast<float>(1.0);
                                    return tmp247;
                                }
                                ;
                                auto tmp248 = tmp245 ? tmp246() : static_cast<decltype(tmp246())>(1.0);
                                return tmp248;
                            }
                            ;
                            auto tmp249 = tmp233 ? tmp234() : static_cast<decltype(tmp234())>(0.0);
                            auto tmp250 = decltype(tmp249)(tmp249 + tmp232);
                            auto tmp251 = tmp69 / tmp250;
                            out_ptr0[static_cast<long>(x3 + (14L*x2) + (196L*x1) + (81536L*x0))] = tmp251;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr2 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr3 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr4 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr16[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr4 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp19 = tmp17 - tmp18;
                    auto tmp21 = tmp20 + tmp5;
                    auto tmp22 = tmp21.sqrt();
                    auto tmp23 = tmp22.reciprocal();
                    auto tmp24 = tmp23 * tmp10;
                    auto tmp25 = tmp19 * tmp24;
                    auto tmp27 = tmp25 * tmp26;
                    auto tmp29 = tmp27 + tmp28;
                    auto tmp30 = tmp16 + tmp29;
                    tmp30.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1605632L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_78 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_79 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_80 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_81 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_82 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_83 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_84 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_85 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_86 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_87 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_88 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_89 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_90 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_91 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_92 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_93 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_94 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_95 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_96 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_97 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_98 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_99 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_100 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_101 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_102 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_103 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_104 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_105 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_106 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_107 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_108 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_109 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_110 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_111 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_112 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_113 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_114 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_115 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_116 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_117 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_118 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_119 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_120 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_121 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_122 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_123 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_124 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_125 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_126 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_127 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_128 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_129 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_130 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_131 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_132 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_133 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_134 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_135 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_136 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_137 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_138 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_139 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_140 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_141 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_142 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_143 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_144 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_145 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_146 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_147 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (416L*x0)));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr0 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_148 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(104L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(104L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_149 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (196L*x2) + (81536L*x0)), static_cast<long>(196L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (416L*x1) + (416L*x1_inner) + (81536L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            tmp3.store(out_ptr1 + static_cast<long>(x2 + (104L*x1) + (104L*x1_inner) + (20384L*x0)));
                        }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x1 + (196L*x2) + (81536L*x0))];
                        auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (416L*x1) + (81536L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        out_ptr1[static_cast<long>(x2 + (104L*x1) + (20384L*x0))] = tmp2;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(104L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                        {
                            float tmp1[8*8] __attribute__ ((aligned (8)));
                            for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                            {
                                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0)));
                                tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                            }
                            at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)), static_cast<long>(104L));
                        }
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (936L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            tmp0.store(out_ptr2 + static_cast<long>(x1 + (104L*x2) + (936L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_150 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)), static_cast<long>(104L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(1e-05);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                            tmp20.store(out_ptr0 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (104L*x2) + (20384L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(1e-05);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L), tmp0, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            tmp1.store(out_ptr1 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(312L + x1 + (416L*x2) + (81536L*x0)));
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(416L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)), static_cast<long>(416L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (81536L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (416L*x2) + (81536L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_151 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_152 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_153 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_154 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_155 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(7L); x2+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x3=static_cast<long>(0L); x3<static_cast<long>(7L); x3+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>((-1L) + (2L*x2));
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(14);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = tmp2 & tmp4;
                        auto tmp6 = c10::convert<long>((-1L) + (2L*x3));
                        auto tmp7 = tmp6 >= tmp1;
                        auto tmp8 = tmp6 < tmp3;
                        auto tmp9 = tmp7 & tmp8;
                        auto tmp10 = tmp5 & tmp9;
                        auto tmp11 = [&]
                        {
                            auto tmp12 = in_ptr0[static_cast<long>((-11856L) + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp12;
                        }
                        ;
                        auto tmp13 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                        auto tmp14 = c10::convert<long>(2L*x3);
                        auto tmp15 = tmp14 >= tmp1;
                        auto tmp16 = tmp14 < tmp3;
                        auto tmp17 = tmp15 & tmp16;
                        auto tmp18 = tmp5 & tmp17;
                        auto tmp19 = [&]
                        {
                            auto tmp20 = in_ptr0[static_cast<long>((-11024L) + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp20;
                        }
                        ;
                        auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                        auto tmp22 = decltype(tmp21)(tmp21 + tmp13);
                        auto tmp23 = c10::convert<long>(1L + (2L*x3));
                        auto tmp24 = tmp23 >= tmp1;
                        auto tmp25 = tmp23 < tmp3;
                        auto tmp26 = tmp24 & tmp25;
                        auto tmp27 = tmp5 & tmp26;
                        auto tmp28 = [&]
                        {
                            auto tmp29 = in_ptr0[static_cast<long>((-10192L) + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp29;
                        }
                        ;
                        auto tmp30 = tmp27 ? tmp28() : static_cast<decltype(tmp28())>(0.0);
                        auto tmp31 = decltype(tmp30)(tmp30 + tmp22);
                        auto tmp32 = c10::convert<long>(2L*x2);
                        auto tmp33 = tmp32 >= tmp1;
                        auto tmp34 = tmp32 < tmp3;
                        auto tmp35 = tmp33 & tmp34;
                        auto tmp36 = tmp35 & tmp9;
                        auto tmp37 = [&]
                        {
                            auto tmp38 = in_ptr0[static_cast<long>((-208L) + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp38;
                        }
                        ;
                        auto tmp39 = tmp36 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                        auto tmp40 = decltype(tmp39)(tmp39 + tmp31);
                        auto tmp41 = tmp35 & tmp17;
                        auto tmp42 = [&]
                        {
                            auto tmp43 = in_ptr0[static_cast<long>(624L + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp43;
                        }
                        ;
                        auto tmp44 = tmp41 ? tmp42() : static_cast<decltype(tmp42())>(0.0);
                        auto tmp45 = decltype(tmp44)(tmp44 + tmp40);
                        auto tmp46 = tmp35 & tmp26;
                        auto tmp47 = [&]
                        {
                            auto tmp48 = in_ptr0[static_cast<long>(1456L + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp46 ? tmp47() : static_cast<decltype(tmp47())>(0.0);
                        auto tmp50 = decltype(tmp49)(tmp49 + tmp45);
                        auto tmp51 = c10::convert<long>(1L + (2L*x2));
                        auto tmp52 = tmp51 >= tmp1;
                        auto tmp53 = tmp51 < tmp3;
                        auto tmp54 = tmp52 & tmp53;
                        auto tmp55 = tmp54 & tmp9;
                        auto tmp56 = [&]
                        {
                            auto tmp57 = in_ptr0[static_cast<long>(11440L + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp57;
                        }
                        ;
                        auto tmp58 = tmp55 ? tmp56() : static_cast<decltype(tmp56())>(0.0);
                        auto tmp59 = decltype(tmp58)(tmp58 + tmp50);
                        auto tmp60 = tmp54 & tmp17;
                        auto tmp61 = [&]
                        {
                            auto tmp62 = in_ptr0[static_cast<long>(12272L + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp62;
                        }
                        ;
                        auto tmp63 = tmp60 ? tmp61() : static_cast<decltype(tmp61())>(0.0);
                        auto tmp64 = decltype(tmp63)(tmp63 + tmp59);
                        auto tmp65 = tmp54 & tmp26;
                        auto tmp66 = [&]
                        {
                            auto tmp67 = in_ptr0[static_cast<long>(13104L + x1 + (1664L*x3) + (23296L*x2) + (163072L*x0))];
                            return tmp67;
                        }
                        ;
                        auto tmp68 = tmp65 ? tmp66() : static_cast<decltype(tmp66())>(0.0);
                        auto tmp69 = decltype(tmp68)(tmp68 + tmp64);
                        auto tmp70 = static_cast<long>(-1);
                        auto tmp71 = tmp0 >= tmp70;
                        auto tmp72 = static_cast<long>(15);
                        auto tmp73 = tmp0 < tmp72;
                        auto tmp74 = tmp71 & tmp73;
                        auto tmp75 = tmp6 >= tmp70;
                        auto tmp76 = tmp6 < tmp72;
                        auto tmp77 = tmp75 & tmp76;
                        auto tmp78 = tmp74 & tmp77;
                        auto tmp79 = [&]
                        {
                            auto tmp80 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp81 = static_cast<long>(0);
                            auto tmp82 = tmp80 >= tmp81;
                            auto tmp83 = static_cast<long>(14);
                            auto tmp84 = tmp80 < tmp83;
                            auto tmp85 = tmp82 & tmp84;
                            auto tmp86 = c10::convert<long>((-1L) + (2L*x3));
                            auto tmp87 = tmp86 >= tmp81;
                            auto tmp88 = tmp86 < tmp83;
                            auto tmp89 = tmp87 & tmp88;
                            auto tmp90 = tmp85 & tmp89;
                            auto tmp91 = [&]
                            {
                                auto tmp92 = static_cast<float>(1.0);
                                return tmp92;
                            }
                            ;
                            auto tmp93 = tmp90 ? tmp91() : static_cast<decltype(tmp91())>(1.0);
                            return tmp93;
                        }
                        ;
                        auto tmp94 = tmp78 ? tmp79() : static_cast<decltype(tmp79())>(0.0);
                        auto tmp95 = tmp14 >= tmp70;
                        auto tmp96 = tmp14 < tmp72;
                        auto tmp97 = tmp95 & tmp96;
                        auto tmp98 = tmp74 & tmp97;
                        auto tmp99 = [&]
                        {
                            auto tmp100 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp101 = static_cast<long>(0);
                            auto tmp102 = tmp100 >= tmp101;
                            auto tmp103 = static_cast<long>(14);
                            auto tmp104 = tmp100 < tmp103;
                            auto tmp105 = tmp102 & tmp104;
                            auto tmp106 = c10::convert<long>(2L*x3);
                            auto tmp107 = tmp106 >= tmp101;
                            auto tmp108 = tmp106 < tmp103;
                            auto tmp109 = tmp107 & tmp108;
                            auto tmp110 = tmp105 & tmp109;
                            auto tmp111 = [&]
                            {
                                auto tmp112 = static_cast<float>(1.0);
                                return tmp112;
                            }
                            ;
                            auto tmp113 = tmp110 ? tmp111() : static_cast<decltype(tmp111())>(1.0);
                            return tmp113;
                        }
                        ;
                        auto tmp114 = tmp98 ? tmp99() : static_cast<decltype(tmp99())>(0.0);
                        auto tmp115 = decltype(tmp114)(tmp114 + tmp94);
                        auto tmp116 = tmp23 >= tmp70;
                        auto tmp117 = tmp23 < tmp72;
                        auto tmp118 = tmp116 & tmp117;
                        auto tmp119 = tmp74 & tmp118;
                        auto tmp120 = [&]
                        {
                            auto tmp121 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp122 = static_cast<long>(0);
                            auto tmp123 = tmp121 >= tmp122;
                            auto tmp124 = static_cast<long>(14);
                            auto tmp125 = tmp121 < tmp124;
                            auto tmp126 = tmp123 & tmp125;
                            auto tmp127 = c10::convert<long>(1L + (2L*x3));
                            auto tmp128 = tmp127 >= tmp122;
                            auto tmp129 = tmp127 < tmp124;
                            auto tmp130 = tmp128 & tmp129;
                            auto tmp131 = tmp126 & tmp130;
                            auto tmp132 = [&]
                            {
                                auto tmp133 = static_cast<float>(1.0);
                                return tmp133;
                            }
                            ;
                            auto tmp134 = tmp131 ? tmp132() : static_cast<decltype(tmp132())>(1.0);
                            return tmp134;
                        }
                        ;
                        auto tmp135 = tmp119 ? tmp120() : static_cast<decltype(tmp120())>(0.0);
                        auto tmp136 = decltype(tmp135)(tmp135 + tmp115);
                        auto tmp137 = tmp32 >= tmp70;
                        auto tmp138 = tmp32 < tmp72;
                        auto tmp139 = tmp137 & tmp138;
                        auto tmp140 = tmp139 & tmp77;
                        auto tmp141 = [&]
                        {
                            auto tmp142 = c10::convert<long>(2L*x2);
                            auto tmp143 = static_cast<long>(0);
                            auto tmp144 = tmp142 >= tmp143;
                            auto tmp145 = static_cast<long>(14);
                            auto tmp146 = tmp142 < tmp145;
                            auto tmp147 = tmp144 & tmp146;
                            auto tmp148 = c10::convert<long>((-1L) + (2L*x3));
                            auto tmp149 = tmp148 >= tmp143;
                            auto tmp150 = tmp148 < tmp145;
                            auto tmp151 = tmp149 & tmp150;
                            auto tmp152 = tmp147 & tmp151;
                            auto tmp153 = [&]
                            {
                                auto tmp154 = static_cast<float>(1.0);
                                return tmp154;
                            }
                            ;
                            auto tmp155 = tmp152 ? tmp153() : static_cast<decltype(tmp153())>(1.0);
                            return tmp155;
                        }
                        ;
                        auto tmp156 = tmp140 ? tmp141() : static_cast<decltype(tmp141())>(0.0);
                        auto tmp157 = decltype(tmp156)(tmp156 + tmp136);
                        auto tmp158 = tmp139 & tmp97;
                        auto tmp159 = [&]
                        {
                            auto tmp160 = c10::convert<long>(2L*x2);
                            auto tmp161 = static_cast<long>(0);
                            auto tmp162 = tmp160 >= tmp161;
                            auto tmp163 = static_cast<long>(14);
                            auto tmp164 = tmp160 < tmp163;
                            auto tmp165 = tmp162 & tmp164;
                            auto tmp166 = c10::convert<long>(2L*x3);
                            auto tmp167 = tmp166 >= tmp161;
                            auto tmp168 = tmp166 < tmp163;
                            auto tmp169 = tmp167 & tmp168;
                            auto tmp170 = tmp165 & tmp169;
                            auto tmp171 = [&]
                            {
                                auto tmp172 = static_cast<float>(1.0);
                                return tmp172;
                            }
                            ;
                            auto tmp173 = tmp170 ? tmp171() : static_cast<decltype(tmp171())>(1.0);
                            return tmp173;
                        }
                        ;
                        auto tmp174 = tmp158 ? tmp159() : static_cast<decltype(tmp159())>(0.0);
                        auto tmp175 = decltype(tmp174)(tmp174 + tmp157);
                        auto tmp176 = tmp139 & tmp118;
                        auto tmp177 = [&]
                        {
                            auto tmp178 = c10::convert<long>(2L*x2);
                            auto tmp179 = static_cast<long>(0);
                            auto tmp180 = tmp178 >= tmp179;
                            auto tmp181 = static_cast<long>(14);
                            auto tmp182 = tmp178 < tmp181;
                            auto tmp183 = tmp180 & tmp182;
                            auto tmp184 = c10::convert<long>(1L + (2L*x3));
                            auto tmp185 = tmp184 >= tmp179;
                            auto tmp186 = tmp184 < tmp181;
                            auto tmp187 = tmp185 & tmp186;
                            auto tmp188 = tmp183 & tmp187;
                            auto tmp189 = [&]
                            {
                                auto tmp190 = static_cast<float>(1.0);
                                return tmp190;
                            }
                            ;
                            auto tmp191 = tmp188 ? tmp189() : static_cast<decltype(tmp189())>(1.0);
                            return tmp191;
                        }
                        ;
                        auto tmp192 = tmp176 ? tmp177() : static_cast<decltype(tmp177())>(0.0);
                        auto tmp193 = decltype(tmp192)(tmp192 + tmp175);
                        auto tmp194 = tmp51 >= tmp70;
                        auto tmp195 = tmp51 < tmp72;
                        auto tmp196 = tmp194 & tmp195;
                        auto tmp197 = tmp196 & tmp77;
                        auto tmp198 = [&]
                        {
                            auto tmp199 = c10::convert<long>(1L + (2L*x2));
                            auto tmp200 = static_cast<long>(0);
                            auto tmp201 = tmp199 >= tmp200;
                            auto tmp202 = static_cast<long>(14);
                            auto tmp203 = tmp199 < tmp202;
                            auto tmp204 = tmp201 & tmp203;
                            auto tmp205 = c10::convert<long>((-1L) + (2L*x3));
                            auto tmp206 = tmp205 >= tmp200;
                            auto tmp207 = tmp205 < tmp202;
                            auto tmp208 = tmp206 & tmp207;
                            auto tmp209 = tmp204 & tmp208;
                            auto tmp210 = [&]
                            {
                                auto tmp211 = static_cast<float>(1.0);
                                return tmp211;
                            }
                            ;
                            auto tmp212 = tmp209 ? tmp210() : static_cast<decltype(tmp210())>(1.0);
                            return tmp212;
                        }
                        ;
                        auto tmp213 = tmp197 ? tmp198() : static_cast<decltype(tmp198())>(0.0);
                        auto tmp214 = decltype(tmp213)(tmp213 + tmp193);
                        auto tmp215 = tmp196 & tmp97;
                        auto tmp216 = [&]
                        {
                            auto tmp217 = c10::convert<long>(1L + (2L*x2));
                            auto tmp218 = static_cast<long>(0);
                            auto tmp219 = tmp217 >= tmp218;
                            auto tmp220 = static_cast<long>(14);
                            auto tmp221 = tmp217 < tmp220;
                            auto tmp222 = tmp219 & tmp221;
                            auto tmp223 = c10::convert<long>(2L*x3);
                            auto tmp224 = tmp223 >= tmp218;
                            auto tmp225 = tmp223 < tmp220;
                            auto tmp226 = tmp224 & tmp225;
                            auto tmp227 = tmp222 & tmp226;
                            auto tmp228 = [&]
                            {
                                auto tmp229 = static_cast<float>(1.0);
                                return tmp229;
                            }
                            ;
                            auto tmp230 = tmp227 ? tmp228() : static_cast<decltype(tmp228())>(1.0);
                            return tmp230;
                        }
                        ;
                        auto tmp231 = tmp215 ? tmp216() : static_cast<decltype(tmp216())>(0.0);
                        auto tmp232 = decltype(tmp231)(tmp231 + tmp214);
                        auto tmp233 = tmp196 & tmp118;
                        auto tmp234 = [&]
                        {
                            auto tmp235 = c10::convert<long>(1L + (2L*x2));
                            auto tmp236 = static_cast<long>(0);
                            auto tmp237 = tmp235 >= tmp236;
                            auto tmp238 = static_cast<long>(14);
                            auto tmp239 = tmp235 < tmp238;
                            auto tmp240 = tmp237 & tmp239;
                            auto tmp241 = c10::convert<long>(1L + (2L*x3));
                            auto tmp242 = tmp241 >= tmp236;
                            auto tmp243 = tmp241 < tmp238;
                            auto tmp244 = tmp242 & tmp243;
                            auto tmp245 = tmp240 & tmp244;
                            auto tmp246 = [&]
                            {
                                auto tmp247 = static_cast<float>(1.0);
                                return tmp247;
                            }
                            ;
                            auto tmp248 = tmp245 ? tmp246() : static_cast<decltype(tmp246())>(1.0);
                            return tmp248;
                        }
                        ;
                        auto tmp249 = tmp233 ? tmp234() : static_cast<decltype(tmp234())>(0.0);
                        auto tmp250 = decltype(tmp249)(tmp249 + tmp232);
                        auto tmp251 = tmp69 / tmp250;
                        out_ptr0[static_cast<long>(x3 + (7L*x2) + (49L*x1) + (40768L*x0))] = tmp251;
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr5[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr1 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr2 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr3 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr4 + static_cast<long>(x1 + (832L*x2) + (40768L*x0)), static_cast<long>(832L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr16[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr4 + static_cast<long>(x1 + (832L*x2) + (40768L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_156 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2048L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (2048L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp19 = tmp17 - tmp18;
                    auto tmp21 = tmp20 + tmp5;
                    auto tmp22 = tmp21.sqrt();
                    auto tmp23 = tmp22.reciprocal();
                    auto tmp24 = tmp23 * tmp10;
                    auto tmp25 = tmp19 * tmp24;
                    auto tmp27 = tmp25 * tmp26;
                    auto tmp29 = tmp27 + tmp28;
                    auto tmp30 = tmp16 + tmp29;
                    tmp30.store(in_out_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(802816L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_157 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_158 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (49L*x2) + (40768L*x0)), static_cast<long>(49L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (832L*x1) + (832L*x1_inner) + (40768L*x0)));
                        auto tmp3 = tmp1 + tmp2;
                        tmp3.store(out_ptr1 + static_cast<long>(x2 + (208L*x1) + (208L*x1_inner) + (10192L*x0)));
                    }
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(48L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (49L*x2) + (40768L*x0))];
                    auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (832L*x1) + (40768L*x0))];
                    auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                    out_ptr1[static_cast<long>(x2 + (208L*x1) + (10192L*x0))] = tmp2;
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_159 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (49L*x2) + (40768L*x0)), static_cast<long>(49L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(416L + x2 + (832L*x1) + (832L*x1_inner) + (40768L*x0)));
                        auto tmp3 = tmp1 + tmp2;
                        tmp3.store(out_ptr1 + static_cast<long>(x2 + (208L*x1) + (208L*x1_inner) + (10192L*x0)));
                    }
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(48L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (49L*x2) + (40768L*x0))];
                    auto tmp1 = in_ptr5[static_cast<long>(416L + x2 + (832L*x1) + (40768L*x0))];
                    auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                    out_ptr1[static_cast<long>(x2 + (208L*x1) + (10192L*x0))] = tmp2;
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_160 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(624L + x1 + (832L*x2) + (40768L*x0)), static_cast<long>(832L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr1 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(624L + x1 + (832L*x2) + (40768L*x0)));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (832L*x2) + (40768L*x0)), static_cast<long>(832L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (832L*x2) + (40768L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_161 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2048L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp18 = tmp16 + tmp17;
                    auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                    tmp19.store(in_out_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_convolution_relu_162 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr0 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_163 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (49L*x2) + (40768L*x0)), static_cast<long>(49L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(208L + x2 + (832L*x1) + (832L*x1_inner) + (40768L*x0)));
                        auto tmp3 = tmp1 + tmp2;
                        tmp3.store(out_ptr1 + static_cast<long>(x2 + (208L*x1) + (208L*x1_inner) + (10192L*x0)));
                    }
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(48L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (49L*x2) + (40768L*x0))];
                    auto tmp1 = in_ptr5[static_cast<long>(208L + x2 + (832L*x1) + (40768L*x0))];
                    auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                    out_ptr1[static_cast<long>(x2 + (208L*x1) + (10192L*x0))] = tmp2;
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_164 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(out_ptr0 + static_cast<long>(x1 + (49L*x2) + (40768L*x0)), static_cast<long>(49L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(416L + x2 + (832L*x1) + (832L*x1_inner) + (40768L*x0)));
                        auto tmp3 = tmp1 + tmp2;
                        tmp3.store(out_ptr1 + static_cast<long>(x2 + (208L*x1) + (208L*x1_inner) + (10192L*x0)));
                    }
                }
            }
            #pragma GCC ivdep
            for(long x1=static_cast<long>(48L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(208L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (49L*x2) + (40768L*x0))];
                    auto tmp1 = in_ptr5[static_cast<long>(416L + x2 + (832L*x1) + (40768L*x0))];
                    auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                    out_ptr1[static_cast<long>(x2 + (208L*x1) + (10192L*x0))] = tmp2;
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(208L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)), static_cast<long>(208L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (1872L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (208L*x2) + (1872L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_165 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)), static_cast<long>(208L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                        auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                        auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                        auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = static_cast<float>(1e-05);
                        auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                        auto tmp8 = std::sqrt(tmp7);
                        auto tmp9 = 1 / tmp8;
                        auto tmp10 = static_cast<float>(1.0);
                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                        auto tmp12 = at::vec::Vectorized<float>(tmp11);
                        auto tmp13 = tmp4 * tmp12;
                        auto tmp15 = at::vec::Vectorized<float>(tmp14);
                        auto tmp16 = tmp13 * tmp15;
                        auto tmp18 = at::vec::Vectorized<float>(tmp17);
                        auto tmp19 = tmp16 + tmp18;
                        auto tmp20 = at::vec::clamp_min(tmp19, decltype(tmp19)(0));
                        tmp20.store(out_ptr0 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (208L*x2) + (10192L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1e-05);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp17.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(208L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(624L + x1 + (832L*x2) + (40768L*x0)), static_cast<long>(832L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr1 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(624L + x1 + (832L*x2) + (40768L*x0)));
                    { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp0.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))] = tmpbuf[x1_inner]; }
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (832L*x2) + (40768L*x0)), static_cast<long>(832L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (49L*x1) + (49L*x1_inner) + (40768L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (832L*x2) + (40768L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_mean_relu_166 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5)
{
    auto out_ptr0 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2048L); x1+=static_cast<long>(8L))
                {
                    {
                        #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                        float tmp_acc0 = 0;
                        at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (2048L*x2) + (100352L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (2048L*x2) + (100352L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(1e-05);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            auto tmp19 = at::vec::clamp_min(tmp18, decltype(tmp18)(0));
                            tmp_acc0_vec = tmp_acc0_vec + tmp19;
                        }
                        tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(16384L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(49.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    tmp3.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1, arg331_1, arg332_1, arg333_1, arg334_1, arg335_1, arg336_1, arg337_1, arg338_1, arg339_1, arg340_1, arg341_1, arg342_1, arg343_1, arg344_1, arg345_1, arg346_1, arg347_1, arg348_1, arg349_1, arg350_1, arg351_1, arg352_1, arg353_1, arg354_1, arg355_1, arg356_1, arg357_1, arg358_1, arg359_1, arg360_1, arg361_1, arg362_1, arg363_1, arg364_1, arg365_1, arg366_1, arg367_1, arg368_1, arg369_1, arg370_1, arg371_1, arg372_1, arg373_1, arg374_1, arg375_1, arg376_1, arg377_1, arg378_1, arg379_1, arg380_1, arg381_1, arg382_1, arg383_1, arg384_1, arg385_1, arg386_1, arg387_1, arg388_1, arg389_1, arg390_1, arg391_1, arg392_1, arg393_1, arg394_1, arg395_1, arg396_1, arg397_1, arg398_1, arg399_1, arg400_1, arg401_1, arg402_1, arg403_1, arg404_1, arg405_1, arg406_1, arg407_1, arg408_1, arg409_1, arg410_1, arg411_1, arg412_1, arg413_1, arg414_1, arg415_1, arg416_1, arg417_1, arg418_1, arg419_1, arg420_1, arg421_1, arg422_1, arg423_1, arg424_1, arg425_1, arg426_1, arg427_1, arg428_1, arg429_1, arg430_1, arg431_1, arg432_1, arg433_1, arg434_1, arg435_1, arg436_1, arg437_1, arg438_1, arg439_1, arg440_1, arg441_1, arg442_1, arg443_1, arg444_1, arg445_1, arg446_1, arg447_1, arg448_1, arg449_1, arg450_1, arg451_1, arg452_1, arg453_1, arg454_1, arg455_1, arg456_1, arg457_1, arg458_1, arg459_1, arg460_1, arg461_1, arg462_1, arg463_1, arg464_1, arg465_1, arg466_1, arg467_1, arg468_1, arg469_1, arg470_1, arg471_1, arg472_1, arg473_1, arg474_1, arg475_1, arg476_1, arg477_1, arg478_1, arg479_1, arg480_1, arg481_1, arg482_1, arg483_1, arg484_1, arg485_1, arg486_1, arg487_1, arg488_1, arg489_1, arg490_1, arg491_1, arg492_1, arg493_1, arg494_1, arg495_1, arg496_1, arg497_1, arg498_1, arg499_1, arg500_1, arg501_1, arg502_1, arg503_1, arg504_1, arg505_1, arg506_1, arg507_1, arg508_1, arg509_1, arg510_1, arg511_1, arg512_1, arg513_1, arg514_1, arg515_1, arg516_1, arg517_1, arg518_1, arg519_1, arg520_1, arg521_1, arg522_1, arg523_1, arg524_1, arg525_1, arg526_1, arg527_1, arg528_1, arg529_1, arg530_1, arg531_1, arg532_1, arg533_1, arg534_1, arg535_1, arg536_1, arg537_1, arg538_1, arg539_1, arg540_1, arg541_1, arg542_1, arg543_1, arg544_1, arg545_1, arg546_1, arg547_1, arg548_1, arg549_1, arg550_1, arg551_1, arg552_1, arg553_1, arg554_1, arg555_1, arg556_1, arg557_1, arg558_1, arg559_1, arg560_1, arg561_1, arg562_1, arg563_1, arg564_1, arg565_1, arg566_1, arg567_1, arg568_1, arg569_1, arg570_1, arg571_1, arg572_1, arg573_1, arg574_1, arg575_1, arg576_1, arg577_1, arg578_1, arg579_1, arg580_1, arg581_1, arg582_1, arg583_1, arg584_1, arg585_1, arg586_1, arg587_1, arg588_1, arg589_1, arg590_1, arg591_1, arg592_1, arg593_1, arg594_1, arg595_1, arg596_1, arg597_1, arg598_1, arg599_1, arg600_1, arg601_1, arg602_1, arg603_1, arg604_1, arg605_1, arg606_1, arg607_1, arg608_1, arg609_1, arg610_1, arg611_1, arg612_1, arg613_1, arg614_1, arg615_1, arg616_1, arg617_1, arg618_1, arg619_1, arg620_1, arg621_1, arg622_1, arg623_1, arg624_1, arg625_1, arg626_1, arg627_1, arg628_1, arg629_1, arg630_1, arg631_1, arg632_1, arg633_1, arg634_1, arg635_1, arg636_1, arg637_1, arg638_1, arg639_1, arg640_1, arg641_1, arg642_1, arg643_1, arg644_1, arg645_1, arg646_1, arg647_1, arg648_1, arg649_1, arg650_1, arg651_1, arg652_1, arg653_1, arg654_1, arg655_1, arg656_1, arg657_1, arg658_1, arg659_1, arg660_1, arg661_1, arg662_1, arg663_1, arg664_1, arg665_1, arg666_1, arg667_1, arg668_1, arg669_1, arg670_1, arg671_1, arg672_1, arg673_1, arg674_1, arg675_1, arg676_1, arg677_1, arg678_1, arg679_1, arg680_1, arg681_1, arg682_1, arg683_1, arg684_1, arg685_1, arg686_1, arg687_1, arg688_1, arg689_1, arg690_1, arg691_1, arg692_1, arg693_1, arg694_1, arg695_1, arg696_1, arg697_1, arg698_1, arg699_1, arg700_1, arg701_1, arg702_1, arg703_1, arg704_1, arg705_1, arg706_1, arg707_1, arg708_1, arg709_1, arg710_1, arg711_1, arg712_1, arg713_1, arg714_1, arg715_1, arg716_1, arg717_1, arg718_1, arg719_1, arg720_1, arg721_1, arg722_1, arg723_1, arg724_1, arg725_1, arg726_1, arg727_1, arg728_1, arg729_1, arg730_1, arg731_1, arg732_1, arg733_1, arg734_1, arg735_1, arg736_1, arg737_1, arg738_1, arg739_1, arg740_1, arg741_1, arg742_1, arg743_1, arg744_1, arg745_1, arg746_1, arg747_1, arg748_1, arg749_1, arg750_1, arg751_1, arg752_1, arg753_1, arg754_1, arg755_1, arg756_1, arg757_1, arg758_1, arg759_1, arg760_1, arg761_1, arg762_1, arg763_1, arg764_1, arg765_1, arg766_1, arg767_1, arg768_1, arg769_1, arg770_1, arg771_1, arg772_1, arg773_1, arg774_1, arg775_1, arg776_1, arg777_1, arg778_1, arg779_1, arg780_1, arg781_1, arg782_1, arg783_1, arg784_1, arg785_1, arg786_1, arg787_1, arg788_1, arg789_1, arg790_1, arg791_1, arg792_1, arg793_1, arg794_1, arg795_1, arg796_1, arg797_1, arg798_1, arg799_1, arg800_1, arg801_1, arg802_1, arg803_1, arg804_1, arg805_1, arg806_1, arg807_1, arg808_1, arg809_1, arg810_1, arg811_1, arg812_1, arg813_1, arg814_1, arg815_1, arg816_1, arg817_1, arg818_1, arg819_1, arg820_1, arg821_1, arg822_1, arg823_1, arg824_1, arg825_1, arg826_1, arg827_1, arg828_1, arg829_1, arg830_1, arg831_1, arg832_1, arg833_1, arg834_1, arg835_1, arg836_1, arg837_1, arg838_1, arg839_1, arg840_1, arg841_1, arg842_1, arg843_1, arg844_1, arg845_1, arg846_1, arg847_1, arg848_1, arg849_1, arg850_1, arg851_1, arg852_1, arg853_1, arg854_1, arg855_1, arg856_1, arg857_1, arg858_1, arg859_1, arg860_1, arg861_1, arg862_1, arg863_1, arg864_1, arg865_1, arg866_1, arg867_1, arg868_1, arg869_1, arg870_1, arg871_1, arg872_1, arg873_1, arg874_1, arg875_1, arg876_1, arg877_1, arg878_1, arg879_1, arg880_1, arg881_1, arg882_1, arg883_1, arg884_1, arg885_1, arg886_1, arg887_1, arg888_1, arg889_1, arg890_1, arg891_1, arg892_1, arg893_1, arg894_1, arg895_1, arg896_1, arg897_1, arg898_1, arg899_1, arg900_1, arg901_1, arg902_1, arg903_1, arg904_1, arg905_1, arg906_1, arg907_1, arg908_1, arg909_1, arg910_1, arg911_1, arg912_1, arg913_1, arg914_1, arg915_1, arg916_1, arg917_1, arg918_1, arg919_1, arg920_1, arg921_1, arg922_1, arg923_1, arg924_1, arg925_1, arg926_1, arg927_1, arg928_1, arg929_1, arg930_1, arg931_1, arg932_1, arg933_1, arg934_1, arg935_1, arg936_1, arg937_1, arg938_1, arg939_1, arg940_1, arg941_1, arg942_1, arg943_1, arg944_1, arg945_1, arg946_1, arg947_1, arg948_1, arg949_1, arg950_1, arg951_1, arg952_1, arg953_1, arg954_1, arg955_1, arg956_1, arg957_1, arg958_1, arg959_1, arg960_1, arg961_1, arg962_1, arg963_1, arg964_1, arg965_1, arg966_1, arg967_1, arg968_1, arg969_1, arg970_1, arg971_1, arg972_1, arg973_1, arg974_1, arg975_1, arg976_1, arg977_1, arg978_1, arg979_1, arg980_1, arg981_1, arg982_1, arg983_1, arg984_1, arg985_1, arg986_1, arg987_1, arg988_1, arg989_1, arg990_1, arg991_1, arg992_1, arg993_1, arg994_1, arg995_1, arg996_1, arg997_1, arg998_1, arg999_1, arg1000_1, arg1001_1, arg1002_1, arg1003_1, arg1004_1, arg1005_1, arg1006_1, arg1007_1, arg1008_1, arg1009_1, arg1010_1, arg1011_1, arg1012_1, arg1013_1, arg1014_1, arg1015_1, arg1016_1, arg1017_1, arg1018_1, arg1019_1, arg1020_1, arg1021_1, arg1022_1 = args
    args.clear()
    assert_size_stride(arg0_1, (64, 3, 7, 7), (147, 49, 7, 1))
    assert_size_stride(arg1_1, (64, ), (1, ))
    assert_size_stride(arg2_1, (64, ), (1, ))
    assert_size_stride(arg3_1, (104, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(arg4_1, (104, ), (1, ))
    assert_size_stride(arg5_1, (104, ), (1, ))
    assert_size_stride(arg6_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg7_1, (26, ), (1, ))
    assert_size_stride(arg8_1, (26, ), (1, ))
    assert_size_stride(arg9_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg10_1, (26, ), (1, ))
    assert_size_stride(arg11_1, (26, ), (1, ))
    assert_size_stride(arg12_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg13_1, (26, ), (1, ))
    assert_size_stride(arg14_1, (26, ), (1, ))
    assert_size_stride(arg15_1, (256, 104, 1, 1), (104, 1, 1, 1))
    assert_size_stride(arg16_1, (256, ), (1, ))
    assert_size_stride(arg17_1, (256, ), (1, ))
    assert_size_stride(arg18_1, (256, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(arg19_1, (256, ), (1, ))
    assert_size_stride(arg20_1, (256, ), (1, ))
    assert_size_stride(arg21_1, (104, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(arg22_1, (104, ), (1, ))
    assert_size_stride(arg23_1, (104, ), (1, ))
    assert_size_stride(arg24_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg25_1, (26, ), (1, ))
    assert_size_stride(arg26_1, (26, ), (1, ))
    assert_size_stride(arg27_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg28_1, (26, ), (1, ))
    assert_size_stride(arg29_1, (26, ), (1, ))
    assert_size_stride(arg30_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg31_1, (26, ), (1, ))
    assert_size_stride(arg32_1, (26, ), (1, ))
    assert_size_stride(arg33_1, (256, 104, 1, 1), (104, 1, 1, 1))
    assert_size_stride(arg34_1, (256, ), (1, ))
    assert_size_stride(arg35_1, (256, ), (1, ))
    assert_size_stride(arg36_1, (104, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(arg37_1, (104, ), (1, ))
    assert_size_stride(arg38_1, (104, ), (1, ))
    assert_size_stride(arg39_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg40_1, (26, ), (1, ))
    assert_size_stride(arg41_1, (26, ), (1, ))
    assert_size_stride(arg42_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg43_1, (26, ), (1, ))
    assert_size_stride(arg44_1, (26, ), (1, ))
    assert_size_stride(arg45_1, (26, 26, 3, 3), (234, 9, 3, 1))
    assert_size_stride(arg46_1, (26, ), (1, ))
    assert_size_stride(arg47_1, (26, ), (1, ))
    assert_size_stride(arg48_1, (256, 104, 1, 1), (104, 1, 1, 1))
    assert_size_stride(arg49_1, (256, ), (1, ))
    assert_size_stride(arg50_1, (256, ), (1, ))
    assert_size_stride(arg51_1, (208, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(arg52_1, (208, ), (1, ))
    assert_size_stride(arg53_1, (208, ), (1, ))
    assert_size_stride(arg54_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg55_1, (52, ), (1, ))
    assert_size_stride(arg56_1, (52, ), (1, ))
    assert_size_stride(arg57_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg58_1, (52, ), (1, ))
    assert_size_stride(arg59_1, (52, ), (1, ))
    assert_size_stride(arg60_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg61_1, (52, ), (1, ))
    assert_size_stride(arg62_1, (52, ), (1, ))
    assert_size_stride(arg63_1, (512, 208, 1, 1), (208, 1, 1, 1))
    assert_size_stride(arg64_1, (512, ), (1, ))
    assert_size_stride(arg65_1, (512, ), (1, ))
    assert_size_stride(arg66_1, (512, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(arg67_1, (512, ), (1, ))
    assert_size_stride(arg68_1, (512, ), (1, ))
    assert_size_stride(arg69_1, (208, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(arg70_1, (208, ), (1, ))
    assert_size_stride(arg71_1, (208, ), (1, ))
    assert_size_stride(arg72_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg73_1, (52, ), (1, ))
    assert_size_stride(arg74_1, (52, ), (1, ))
    assert_size_stride(arg75_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg76_1, (52, ), (1, ))
    assert_size_stride(arg77_1, (52, ), (1, ))
    assert_size_stride(arg78_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg79_1, (52, ), (1, ))
    assert_size_stride(arg80_1, (52, ), (1, ))
    assert_size_stride(arg81_1, (512, 208, 1, 1), (208, 1, 1, 1))
    assert_size_stride(arg82_1, (512, ), (1, ))
    assert_size_stride(arg83_1, (512, ), (1, ))
    assert_size_stride(arg84_1, (208, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(arg85_1, (208, ), (1, ))
    assert_size_stride(arg86_1, (208, ), (1, ))
    assert_size_stride(arg87_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg88_1, (52, ), (1, ))
    assert_size_stride(arg89_1, (52, ), (1, ))
    assert_size_stride(arg90_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg91_1, (52, ), (1, ))
    assert_size_stride(arg92_1, (52, ), (1, ))
    assert_size_stride(arg93_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg94_1, (52, ), (1, ))
    assert_size_stride(arg95_1, (52, ), (1, ))
    assert_size_stride(arg96_1, (512, 208, 1, 1), (208, 1, 1, 1))
    assert_size_stride(arg97_1, (512, ), (1, ))
    assert_size_stride(arg98_1, (512, ), (1, ))
    assert_size_stride(arg99_1, (208, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(arg100_1, (208, ), (1, ))
    assert_size_stride(arg101_1, (208, ), (1, ))
    assert_size_stride(arg102_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg103_1, (52, ), (1, ))
    assert_size_stride(arg104_1, (52, ), (1, ))
    assert_size_stride(arg105_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg106_1, (52, ), (1, ))
    assert_size_stride(arg107_1, (52, ), (1, ))
    assert_size_stride(arg108_1, (52, 52, 3, 3), (468, 9, 3, 1))
    assert_size_stride(arg109_1, (52, ), (1, ))
    assert_size_stride(arg110_1, (52, ), (1, ))
    assert_size_stride(arg111_1, (512, 208, 1, 1), (208, 1, 1, 1))
    assert_size_stride(arg112_1, (512, ), (1, ))
    assert_size_stride(arg113_1, (512, ), (1, ))
    assert_size_stride(arg114_1, (416, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(arg115_1, (416, ), (1, ))
    assert_size_stride(arg116_1, (416, ), (1, ))
    assert_size_stride(arg117_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg118_1, (104, ), (1, ))
    assert_size_stride(arg119_1, (104, ), (1, ))
    assert_size_stride(arg120_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg121_1, (104, ), (1, ))
    assert_size_stride(arg122_1, (104, ), (1, ))
    assert_size_stride(arg123_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg124_1, (104, ), (1, ))
    assert_size_stride(arg125_1, (104, ), (1, ))
    assert_size_stride(arg126_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg127_1, (1024, ), (1, ))
    assert_size_stride(arg128_1, (1024, ), (1, ))
    assert_size_stride(arg129_1, (1024, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(arg130_1, (1024, ), (1, ))
    assert_size_stride(arg131_1, (1024, ), (1, ))
    assert_size_stride(arg132_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg133_1, (416, ), (1, ))
    assert_size_stride(arg134_1, (416, ), (1, ))
    assert_size_stride(arg135_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg136_1, (104, ), (1, ))
    assert_size_stride(arg137_1, (104, ), (1, ))
    assert_size_stride(arg138_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg139_1, (104, ), (1, ))
    assert_size_stride(arg140_1, (104, ), (1, ))
    assert_size_stride(arg141_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg142_1, (104, ), (1, ))
    assert_size_stride(arg143_1, (104, ), (1, ))
    assert_size_stride(arg144_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg145_1, (1024, ), (1, ))
    assert_size_stride(arg146_1, (1024, ), (1, ))
    assert_size_stride(arg147_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg148_1, (416, ), (1, ))
    assert_size_stride(arg149_1, (416, ), (1, ))
    assert_size_stride(arg150_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg151_1, (104, ), (1, ))
    assert_size_stride(arg152_1, (104, ), (1, ))
    assert_size_stride(arg153_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg154_1, (104, ), (1, ))
    assert_size_stride(arg155_1, (104, ), (1, ))
    assert_size_stride(arg156_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg157_1, (104, ), (1, ))
    assert_size_stride(arg158_1, (104, ), (1, ))
    assert_size_stride(arg159_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg160_1, (1024, ), (1, ))
    assert_size_stride(arg161_1, (1024, ), (1, ))
    assert_size_stride(arg162_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg163_1, (416, ), (1, ))
    assert_size_stride(arg164_1, (416, ), (1, ))
    assert_size_stride(arg165_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg166_1, (104, ), (1, ))
    assert_size_stride(arg167_1, (104, ), (1, ))
    assert_size_stride(arg168_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg169_1, (104, ), (1, ))
    assert_size_stride(arg170_1, (104, ), (1, ))
    assert_size_stride(arg171_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg172_1, (104, ), (1, ))
    assert_size_stride(arg173_1, (104, ), (1, ))
    assert_size_stride(arg174_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg175_1, (1024, ), (1, ))
    assert_size_stride(arg176_1, (1024, ), (1, ))
    assert_size_stride(arg177_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg178_1, (416, ), (1, ))
    assert_size_stride(arg179_1, (416, ), (1, ))
    assert_size_stride(arg180_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg181_1, (104, ), (1, ))
    assert_size_stride(arg182_1, (104, ), (1, ))
    assert_size_stride(arg183_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg184_1, (104, ), (1, ))
    assert_size_stride(arg185_1, (104, ), (1, ))
    assert_size_stride(arg186_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg187_1, (104, ), (1, ))
    assert_size_stride(arg188_1, (104, ), (1, ))
    assert_size_stride(arg189_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg190_1, (1024, ), (1, ))
    assert_size_stride(arg191_1, (1024, ), (1, ))
    assert_size_stride(arg192_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg193_1, (416, ), (1, ))
    assert_size_stride(arg194_1, (416, ), (1, ))
    assert_size_stride(arg195_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg196_1, (104, ), (1, ))
    assert_size_stride(arg197_1, (104, ), (1, ))
    assert_size_stride(arg198_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg199_1, (104, ), (1, ))
    assert_size_stride(arg200_1, (104, ), (1, ))
    assert_size_stride(arg201_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg202_1, (104, ), (1, ))
    assert_size_stride(arg203_1, (104, ), (1, ))
    assert_size_stride(arg204_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg205_1, (1024, ), (1, ))
    assert_size_stride(arg206_1, (1024, ), (1, ))
    assert_size_stride(arg207_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg208_1, (416, ), (1, ))
    assert_size_stride(arg209_1, (416, ), (1, ))
    assert_size_stride(arg210_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg211_1, (104, ), (1, ))
    assert_size_stride(arg212_1, (104, ), (1, ))
    assert_size_stride(arg213_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg214_1, (104, ), (1, ))
    assert_size_stride(arg215_1, (104, ), (1, ))
    assert_size_stride(arg216_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg217_1, (104, ), (1, ))
    assert_size_stride(arg218_1, (104, ), (1, ))
    assert_size_stride(arg219_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg220_1, (1024, ), (1, ))
    assert_size_stride(arg221_1, (1024, ), (1, ))
    assert_size_stride(arg222_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg223_1, (416, ), (1, ))
    assert_size_stride(arg224_1, (416, ), (1, ))
    assert_size_stride(arg225_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg226_1, (104, ), (1, ))
    assert_size_stride(arg227_1, (104, ), (1, ))
    assert_size_stride(arg228_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg229_1, (104, ), (1, ))
    assert_size_stride(arg230_1, (104, ), (1, ))
    assert_size_stride(arg231_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg232_1, (104, ), (1, ))
    assert_size_stride(arg233_1, (104, ), (1, ))
    assert_size_stride(arg234_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg235_1, (1024, ), (1, ))
    assert_size_stride(arg236_1, (1024, ), (1, ))
    assert_size_stride(arg237_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg238_1, (416, ), (1, ))
    assert_size_stride(arg239_1, (416, ), (1, ))
    assert_size_stride(arg240_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg241_1, (104, ), (1, ))
    assert_size_stride(arg242_1, (104, ), (1, ))
    assert_size_stride(arg243_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg244_1, (104, ), (1, ))
    assert_size_stride(arg245_1, (104, ), (1, ))
    assert_size_stride(arg246_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg247_1, (104, ), (1, ))
    assert_size_stride(arg248_1, (104, ), (1, ))
    assert_size_stride(arg249_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg250_1, (1024, ), (1, ))
    assert_size_stride(arg251_1, (1024, ), (1, ))
    assert_size_stride(arg252_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg253_1, (416, ), (1, ))
    assert_size_stride(arg254_1, (416, ), (1, ))
    assert_size_stride(arg255_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg256_1, (104, ), (1, ))
    assert_size_stride(arg257_1, (104, ), (1, ))
    assert_size_stride(arg258_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg259_1, (104, ), (1, ))
    assert_size_stride(arg260_1, (104, ), (1, ))
    assert_size_stride(arg261_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg262_1, (104, ), (1, ))
    assert_size_stride(arg263_1, (104, ), (1, ))
    assert_size_stride(arg264_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg265_1, (1024, ), (1, ))
    assert_size_stride(arg266_1, (1024, ), (1, ))
    assert_size_stride(arg267_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg268_1, (416, ), (1, ))
    assert_size_stride(arg269_1, (416, ), (1, ))
    assert_size_stride(arg270_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg271_1, (104, ), (1, ))
    assert_size_stride(arg272_1, (104, ), (1, ))
    assert_size_stride(arg273_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg274_1, (104, ), (1, ))
    assert_size_stride(arg275_1, (104, ), (1, ))
    assert_size_stride(arg276_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg277_1, (104, ), (1, ))
    assert_size_stride(arg278_1, (104, ), (1, ))
    assert_size_stride(arg279_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg280_1, (1024, ), (1, ))
    assert_size_stride(arg281_1, (1024, ), (1, ))
    assert_size_stride(arg282_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg283_1, (416, ), (1, ))
    assert_size_stride(arg284_1, (416, ), (1, ))
    assert_size_stride(arg285_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg286_1, (104, ), (1, ))
    assert_size_stride(arg287_1, (104, ), (1, ))
    assert_size_stride(arg288_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg289_1, (104, ), (1, ))
    assert_size_stride(arg290_1, (104, ), (1, ))
    assert_size_stride(arg291_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg292_1, (104, ), (1, ))
    assert_size_stride(arg293_1, (104, ), (1, ))
    assert_size_stride(arg294_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg295_1, (1024, ), (1, ))
    assert_size_stride(arg296_1, (1024, ), (1, ))
    assert_size_stride(arg297_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg298_1, (416, ), (1, ))
    assert_size_stride(arg299_1, (416, ), (1, ))
    assert_size_stride(arg300_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg301_1, (104, ), (1, ))
    assert_size_stride(arg302_1, (104, ), (1, ))
    assert_size_stride(arg303_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg304_1, (104, ), (1, ))
    assert_size_stride(arg305_1, (104, ), (1, ))
    assert_size_stride(arg306_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg307_1, (104, ), (1, ))
    assert_size_stride(arg308_1, (104, ), (1, ))
    assert_size_stride(arg309_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg310_1, (1024, ), (1, ))
    assert_size_stride(arg311_1, (1024, ), (1, ))
    assert_size_stride(arg312_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg313_1, (416, ), (1, ))
    assert_size_stride(arg314_1, (416, ), (1, ))
    assert_size_stride(arg315_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg316_1, (104, ), (1, ))
    assert_size_stride(arg317_1, (104, ), (1, ))
    assert_size_stride(arg318_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg319_1, (104, ), (1, ))
    assert_size_stride(arg320_1, (104, ), (1, ))
    assert_size_stride(arg321_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg322_1, (104, ), (1, ))
    assert_size_stride(arg323_1, (104, ), (1, ))
    assert_size_stride(arg324_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg325_1, (1024, ), (1, ))
    assert_size_stride(arg326_1, (1024, ), (1, ))
    assert_size_stride(arg327_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg328_1, (416, ), (1, ))
    assert_size_stride(arg329_1, (416, ), (1, ))
    assert_size_stride(arg330_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg331_1, (104, ), (1, ))
    assert_size_stride(arg332_1, (104, ), (1, ))
    assert_size_stride(arg333_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg334_1, (104, ), (1, ))
    assert_size_stride(arg335_1, (104, ), (1, ))
    assert_size_stride(arg336_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg337_1, (104, ), (1, ))
    assert_size_stride(arg338_1, (104, ), (1, ))
    assert_size_stride(arg339_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg340_1, (1024, ), (1, ))
    assert_size_stride(arg341_1, (1024, ), (1, ))
    assert_size_stride(arg342_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg343_1, (416, ), (1, ))
    assert_size_stride(arg344_1, (416, ), (1, ))
    assert_size_stride(arg345_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg346_1, (104, ), (1, ))
    assert_size_stride(arg347_1, (104, ), (1, ))
    assert_size_stride(arg348_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg349_1, (104, ), (1, ))
    assert_size_stride(arg350_1, (104, ), (1, ))
    assert_size_stride(arg351_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg352_1, (104, ), (1, ))
    assert_size_stride(arg353_1, (104, ), (1, ))
    assert_size_stride(arg354_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg355_1, (1024, ), (1, ))
    assert_size_stride(arg356_1, (1024, ), (1, ))
    assert_size_stride(arg357_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg358_1, (416, ), (1, ))
    assert_size_stride(arg359_1, (416, ), (1, ))
    assert_size_stride(arg360_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg361_1, (104, ), (1, ))
    assert_size_stride(arg362_1, (104, ), (1, ))
    assert_size_stride(arg363_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg364_1, (104, ), (1, ))
    assert_size_stride(arg365_1, (104, ), (1, ))
    assert_size_stride(arg366_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg367_1, (104, ), (1, ))
    assert_size_stride(arg368_1, (104, ), (1, ))
    assert_size_stride(arg369_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg370_1, (1024, ), (1, ))
    assert_size_stride(arg371_1, (1024, ), (1, ))
    assert_size_stride(arg372_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg373_1, (416, ), (1, ))
    assert_size_stride(arg374_1, (416, ), (1, ))
    assert_size_stride(arg375_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg376_1, (104, ), (1, ))
    assert_size_stride(arg377_1, (104, ), (1, ))
    assert_size_stride(arg378_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg379_1, (104, ), (1, ))
    assert_size_stride(arg380_1, (104, ), (1, ))
    assert_size_stride(arg381_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg382_1, (104, ), (1, ))
    assert_size_stride(arg383_1, (104, ), (1, ))
    assert_size_stride(arg384_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg385_1, (1024, ), (1, ))
    assert_size_stride(arg386_1, (1024, ), (1, ))
    assert_size_stride(arg387_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg388_1, (416, ), (1, ))
    assert_size_stride(arg389_1, (416, ), (1, ))
    assert_size_stride(arg390_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg391_1, (104, ), (1, ))
    assert_size_stride(arg392_1, (104, ), (1, ))
    assert_size_stride(arg393_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg394_1, (104, ), (1, ))
    assert_size_stride(arg395_1, (104, ), (1, ))
    assert_size_stride(arg396_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg397_1, (104, ), (1, ))
    assert_size_stride(arg398_1, (104, ), (1, ))
    assert_size_stride(arg399_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg400_1, (1024, ), (1, ))
    assert_size_stride(arg401_1, (1024, ), (1, ))
    assert_size_stride(arg402_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg403_1, (416, ), (1, ))
    assert_size_stride(arg404_1, (416, ), (1, ))
    assert_size_stride(arg405_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg406_1, (104, ), (1, ))
    assert_size_stride(arg407_1, (104, ), (1, ))
    assert_size_stride(arg408_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg409_1, (104, ), (1, ))
    assert_size_stride(arg410_1, (104, ), (1, ))
    assert_size_stride(arg411_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg412_1, (104, ), (1, ))
    assert_size_stride(arg413_1, (104, ), (1, ))
    assert_size_stride(arg414_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg415_1, (1024, ), (1, ))
    assert_size_stride(arg416_1, (1024, ), (1, ))
    assert_size_stride(arg417_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg418_1, (416, ), (1, ))
    assert_size_stride(arg419_1, (416, ), (1, ))
    assert_size_stride(arg420_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg421_1, (104, ), (1, ))
    assert_size_stride(arg422_1, (104, ), (1, ))
    assert_size_stride(arg423_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg424_1, (104, ), (1, ))
    assert_size_stride(arg425_1, (104, ), (1, ))
    assert_size_stride(arg426_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg427_1, (104, ), (1, ))
    assert_size_stride(arg428_1, (104, ), (1, ))
    assert_size_stride(arg429_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg430_1, (1024, ), (1, ))
    assert_size_stride(arg431_1, (1024, ), (1, ))
    assert_size_stride(arg432_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg433_1, (416, ), (1, ))
    assert_size_stride(arg434_1, (416, ), (1, ))
    assert_size_stride(arg435_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg436_1, (104, ), (1, ))
    assert_size_stride(arg437_1, (104, ), (1, ))
    assert_size_stride(arg438_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg439_1, (104, ), (1, ))
    assert_size_stride(arg440_1, (104, ), (1, ))
    assert_size_stride(arg441_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg442_1, (104, ), (1, ))
    assert_size_stride(arg443_1, (104, ), (1, ))
    assert_size_stride(arg444_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg445_1, (1024, ), (1, ))
    assert_size_stride(arg446_1, (1024, ), (1, ))
    assert_size_stride(arg447_1, (416, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg448_1, (416, ), (1, ))
    assert_size_stride(arg449_1, (416, ), (1, ))
    assert_size_stride(arg450_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg451_1, (104, ), (1, ))
    assert_size_stride(arg452_1, (104, ), (1, ))
    assert_size_stride(arg453_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg454_1, (104, ), (1, ))
    assert_size_stride(arg455_1, (104, ), (1, ))
    assert_size_stride(arg456_1, (104, 104, 3, 3), (936, 9, 3, 1))
    assert_size_stride(arg457_1, (104, ), (1, ))
    assert_size_stride(arg458_1, (104, ), (1, ))
    assert_size_stride(arg459_1, (1024, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(arg460_1, (1024, ), (1, ))
    assert_size_stride(arg461_1, (1024, ), (1, ))
    assert_size_stride(arg462_1, (832, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg463_1, (832, ), (1, ))
    assert_size_stride(arg464_1, (832, ), (1, ))
    assert_size_stride(arg465_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg466_1, (208, ), (1, ))
    assert_size_stride(arg467_1, (208, ), (1, ))
    assert_size_stride(arg468_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg469_1, (208, ), (1, ))
    assert_size_stride(arg470_1, (208, ), (1, ))
    assert_size_stride(arg471_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg472_1, (208, ), (1, ))
    assert_size_stride(arg473_1, (208, ), (1, ))
    assert_size_stride(arg474_1, (2048, 832, 1, 1), (832, 1, 1, 1))
    assert_size_stride(arg475_1, (2048, ), (1, ))
    assert_size_stride(arg476_1, (2048, ), (1, ))
    assert_size_stride(arg477_1, (2048, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(arg478_1, (2048, ), (1, ))
    assert_size_stride(arg479_1, (2048, ), (1, ))
    assert_size_stride(arg480_1, (832, 2048, 1, 1), (2048, 1, 1, 1))
    assert_size_stride(arg481_1, (832, ), (1, ))
    assert_size_stride(arg482_1, (832, ), (1, ))
    assert_size_stride(arg483_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg484_1, (208, ), (1, ))
    assert_size_stride(arg485_1, (208, ), (1, ))
    assert_size_stride(arg486_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg487_1, (208, ), (1, ))
    assert_size_stride(arg488_1, (208, ), (1, ))
    assert_size_stride(arg489_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg490_1, (208, ), (1, ))
    assert_size_stride(arg491_1, (208, ), (1, ))
    assert_size_stride(arg492_1, (2048, 832, 1, 1), (832, 1, 1, 1))
    assert_size_stride(arg493_1, (2048, ), (1, ))
    assert_size_stride(arg494_1, (2048, ), (1, ))
    assert_size_stride(arg495_1, (832, 2048, 1, 1), (2048, 1, 1, 1))
    assert_size_stride(arg496_1, (832, ), (1, ))
    assert_size_stride(arg497_1, (832, ), (1, ))
    assert_size_stride(arg498_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg499_1, (208, ), (1, ))
    assert_size_stride(arg500_1, (208, ), (1, ))
    assert_size_stride(arg501_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg502_1, (208, ), (1, ))
    assert_size_stride(arg503_1, (208, ), (1, ))
    assert_size_stride(arg504_1, (208, 208, 3, 3), (1872, 9, 3, 1))
    assert_size_stride(arg505_1, (208, ), (1, ))
    assert_size_stride(arg506_1, (208, ), (1, ))
    assert_size_stride(arg507_1, (2048, 832, 1, 1), (832, 1, 1, 1))
    assert_size_stride(arg508_1, (2048, ), (1, ))
    assert_size_stride(arg509_1, (2048, ), (1, ))
    assert_size_stride(arg510_1, (1000, 2048), (2048, 1))
    assert_size_stride(arg511_1, (1000, ), (1, ))
    assert_size_stride(arg512_1, (64, ), (1, ))
    assert_size_stride(arg513_1, (64, ), (1, ))
    assert_size_stride(arg514_1, (), ())
    assert_size_stride(arg515_1, (104, ), (1, ))
    assert_size_stride(arg516_1, (104, ), (1, ))
    assert_size_stride(arg517_1, (), ())
    assert_size_stride(arg518_1, (26, ), (1, ))
    assert_size_stride(arg519_1, (26, ), (1, ))
    assert_size_stride(arg520_1, (), ())
    assert_size_stride(arg521_1, (26, ), (1, ))
    assert_size_stride(arg522_1, (26, ), (1, ))
    assert_size_stride(arg523_1, (), ())
    assert_size_stride(arg524_1, (26, ), (1, ))
    assert_size_stride(arg525_1, (26, ), (1, ))
    assert_size_stride(arg526_1, (), ())
    assert_size_stride(arg527_1, (256, ), (1, ))
    assert_size_stride(arg528_1, (256, ), (1, ))
    assert_size_stride(arg529_1, (), ())
    assert_size_stride(arg530_1, (256, ), (1, ))
    assert_size_stride(arg531_1, (256, ), (1, ))
    assert_size_stride(arg532_1, (), ())
    assert_size_stride(arg533_1, (104, ), (1, ))
    assert_size_stride(arg534_1, (104, ), (1, ))
    assert_size_stride(arg535_1, (), ())
    assert_size_stride(arg536_1, (26, ), (1, ))
    assert_size_stride(arg537_1, (26, ), (1, ))
    assert_size_stride(arg538_1, (), ())
    assert_size_stride(arg539_1, (26, ), (1, ))
    assert_size_stride(arg540_1, (26, ), (1, ))
    assert_size_stride(arg541_1, (), ())
    assert_size_stride(arg542_1, (26, ), (1, ))
    assert_size_stride(arg543_1, (26, ), (1, ))
    assert_size_stride(arg544_1, (), ())
    assert_size_stride(arg545_1, (256, ), (1, ))
    assert_size_stride(arg546_1, (256, ), (1, ))
    assert_size_stride(arg547_1, (), ())
    assert_size_stride(arg548_1, (104, ), (1, ))
    assert_size_stride(arg549_1, (104, ), (1, ))
    assert_size_stride(arg550_1, (), ())
    assert_size_stride(arg551_1, (26, ), (1, ))
    assert_size_stride(arg552_1, (26, ), (1, ))
    assert_size_stride(arg553_1, (), ())
    assert_size_stride(arg554_1, (26, ), (1, ))
    assert_size_stride(arg555_1, (26, ), (1, ))
    assert_size_stride(arg556_1, (), ())
    assert_size_stride(arg557_1, (26, ), (1, ))
    assert_size_stride(arg558_1, (26, ), (1, ))
    assert_size_stride(arg559_1, (), ())
    assert_size_stride(arg560_1, (256, ), (1, ))
    assert_size_stride(arg561_1, (256, ), (1, ))
    assert_size_stride(arg562_1, (), ())
    assert_size_stride(arg563_1, (208, ), (1, ))
    assert_size_stride(arg564_1, (208, ), (1, ))
    assert_size_stride(arg565_1, (), ())
    assert_size_stride(arg566_1, (52, ), (1, ))
    assert_size_stride(arg567_1, (52, ), (1, ))
    assert_size_stride(arg568_1, (), ())
    assert_size_stride(arg569_1, (52, ), (1, ))
    assert_size_stride(arg570_1, (52, ), (1, ))
    assert_size_stride(arg571_1, (), ())
    assert_size_stride(arg572_1, (52, ), (1, ))
    assert_size_stride(arg573_1, (52, ), (1, ))
    assert_size_stride(arg574_1, (), ())
    assert_size_stride(arg575_1, (512, ), (1, ))
    assert_size_stride(arg576_1, (512, ), (1, ))
    assert_size_stride(arg577_1, (), ())
    assert_size_stride(arg578_1, (512, ), (1, ))
    assert_size_stride(arg579_1, (512, ), (1, ))
    assert_size_stride(arg580_1, (), ())
    assert_size_stride(arg581_1, (208, ), (1, ))
    assert_size_stride(arg582_1, (208, ), (1, ))
    assert_size_stride(arg583_1, (), ())
    assert_size_stride(arg584_1, (52, ), (1, ))
    assert_size_stride(arg585_1, (52, ), (1, ))
    assert_size_stride(arg586_1, (), ())
    assert_size_stride(arg587_1, (52, ), (1, ))
    assert_size_stride(arg588_1, (52, ), (1, ))
    assert_size_stride(arg589_1, (), ())
    assert_size_stride(arg590_1, (52, ), (1, ))
    assert_size_stride(arg591_1, (52, ), (1, ))
    assert_size_stride(arg592_1, (), ())
    assert_size_stride(arg593_1, (512, ), (1, ))
    assert_size_stride(arg594_1, (512, ), (1, ))
    assert_size_stride(arg595_1, (), ())
    assert_size_stride(arg596_1, (208, ), (1, ))
    assert_size_stride(arg597_1, (208, ), (1, ))
    assert_size_stride(arg598_1, (), ())
    assert_size_stride(arg599_1, (52, ), (1, ))
    assert_size_stride(arg600_1, (52, ), (1, ))
    assert_size_stride(arg601_1, (), ())
    assert_size_stride(arg602_1, (52, ), (1, ))
    assert_size_stride(arg603_1, (52, ), (1, ))
    assert_size_stride(arg604_1, (), ())
    assert_size_stride(arg605_1, (52, ), (1, ))
    assert_size_stride(arg606_1, (52, ), (1, ))
    assert_size_stride(arg607_1, (), ())
    assert_size_stride(arg608_1, (512, ), (1, ))
    assert_size_stride(arg609_1, (512, ), (1, ))
    assert_size_stride(arg610_1, (), ())
    assert_size_stride(arg611_1, (208, ), (1, ))
    assert_size_stride(arg612_1, (208, ), (1, ))
    assert_size_stride(arg613_1, (), ())
    assert_size_stride(arg614_1, (52, ), (1, ))
    assert_size_stride(arg615_1, (52, ), (1, ))
    assert_size_stride(arg616_1, (), ())
    assert_size_stride(arg617_1, (52, ), (1, ))
    assert_size_stride(arg618_1, (52, ), (1, ))
    assert_size_stride(arg619_1, (), ())
    assert_size_stride(arg620_1, (52, ), (1, ))
    assert_size_stride(arg621_1, (52, ), (1, ))
    assert_size_stride(arg622_1, (), ())
    assert_size_stride(arg623_1, (512, ), (1, ))
    assert_size_stride(arg624_1, (512, ), (1, ))
    assert_size_stride(arg625_1, (), ())
    assert_size_stride(arg626_1, (416, ), (1, ))
    assert_size_stride(arg627_1, (416, ), (1, ))
    assert_size_stride(arg628_1, (), ())
    assert_size_stride(arg629_1, (104, ), (1, ))
    assert_size_stride(arg630_1, (104, ), (1, ))
    assert_size_stride(arg631_1, (), ())
    assert_size_stride(arg632_1, (104, ), (1, ))
    assert_size_stride(arg633_1, (104, ), (1, ))
    assert_size_stride(arg634_1, (), ())
    assert_size_stride(arg635_1, (104, ), (1, ))
    assert_size_stride(arg636_1, (104, ), (1, ))
    assert_size_stride(arg637_1, (), ())
    assert_size_stride(arg638_1, (1024, ), (1, ))
    assert_size_stride(arg639_1, (1024, ), (1, ))
    assert_size_stride(arg640_1, (), ())
    assert_size_stride(arg641_1, (1024, ), (1, ))
    assert_size_stride(arg642_1, (1024, ), (1, ))
    assert_size_stride(arg643_1, (), ())
    assert_size_stride(arg644_1, (416, ), (1, ))
    assert_size_stride(arg645_1, (416, ), (1, ))
    assert_size_stride(arg646_1, (), ())
    assert_size_stride(arg647_1, (104, ), (1, ))
    assert_size_stride(arg648_1, (104, ), (1, ))
    assert_size_stride(arg649_1, (), ())
    assert_size_stride(arg650_1, (104, ), (1, ))
    assert_size_stride(arg651_1, (104, ), (1, ))
    assert_size_stride(arg652_1, (), ())
    assert_size_stride(arg653_1, (104, ), (1, ))
    assert_size_stride(arg654_1, (104, ), (1, ))
    assert_size_stride(arg655_1, (), ())
    assert_size_stride(arg656_1, (1024, ), (1, ))
    assert_size_stride(arg657_1, (1024, ), (1, ))
    assert_size_stride(arg658_1, (), ())
    assert_size_stride(arg659_1, (416, ), (1, ))
    assert_size_stride(arg660_1, (416, ), (1, ))
    assert_size_stride(arg661_1, (), ())
    assert_size_stride(arg662_1, (104, ), (1, ))
    assert_size_stride(arg663_1, (104, ), (1, ))
    assert_size_stride(arg664_1, (), ())
    assert_size_stride(arg665_1, (104, ), (1, ))
    assert_size_stride(arg666_1, (104, ), (1, ))
    assert_size_stride(arg667_1, (), ())
    assert_size_stride(arg668_1, (104, ), (1, ))
    assert_size_stride(arg669_1, (104, ), (1, ))
    assert_size_stride(arg670_1, (), ())
    assert_size_stride(arg671_1, (1024, ), (1, ))
    assert_size_stride(arg672_1, (1024, ), (1, ))
    assert_size_stride(arg673_1, (), ())
    assert_size_stride(arg674_1, (416, ), (1, ))
    assert_size_stride(arg675_1, (416, ), (1, ))
    assert_size_stride(arg676_1, (), ())
    assert_size_stride(arg677_1, (104, ), (1, ))
    assert_size_stride(arg678_1, (104, ), (1, ))
    assert_size_stride(arg679_1, (), ())
    assert_size_stride(arg680_1, (104, ), (1, ))
    assert_size_stride(arg681_1, (104, ), (1, ))
    assert_size_stride(arg682_1, (), ())
    assert_size_stride(arg683_1, (104, ), (1, ))
    assert_size_stride(arg684_1, (104, ), (1, ))
    assert_size_stride(arg685_1, (), ())
    assert_size_stride(arg686_1, (1024, ), (1, ))
    assert_size_stride(arg687_1, (1024, ), (1, ))
    assert_size_stride(arg688_1, (), ())
    assert_size_stride(arg689_1, (416, ), (1, ))
    assert_size_stride(arg690_1, (416, ), (1, ))
    assert_size_stride(arg691_1, (), ())
    assert_size_stride(arg692_1, (104, ), (1, ))
    assert_size_stride(arg693_1, (104, ), (1, ))
    assert_size_stride(arg694_1, (), ())
    assert_size_stride(arg695_1, (104, ), (1, ))
    assert_size_stride(arg696_1, (104, ), (1, ))
    assert_size_stride(arg697_1, (), ())
    assert_size_stride(arg698_1, (104, ), (1, ))
    assert_size_stride(arg699_1, (104, ), (1, ))
    assert_size_stride(arg700_1, (), ())
    assert_size_stride(arg701_1, (1024, ), (1, ))
    assert_size_stride(arg702_1, (1024, ), (1, ))
    assert_size_stride(arg703_1, (), ())
    assert_size_stride(arg704_1, (416, ), (1, ))
    assert_size_stride(arg705_1, (416, ), (1, ))
    assert_size_stride(arg706_1, (), ())
    assert_size_stride(arg707_1, (104, ), (1, ))
    assert_size_stride(arg708_1, (104, ), (1, ))
    assert_size_stride(arg709_1, (), ())
    assert_size_stride(arg710_1, (104, ), (1, ))
    assert_size_stride(arg711_1, (104, ), (1, ))
    assert_size_stride(arg712_1, (), ())
    assert_size_stride(arg713_1, (104, ), (1, ))
    assert_size_stride(arg714_1, (104, ), (1, ))
    assert_size_stride(arg715_1, (), ())
    assert_size_stride(arg716_1, (1024, ), (1, ))
    assert_size_stride(arg717_1, (1024, ), (1, ))
    assert_size_stride(arg718_1, (), ())
    assert_size_stride(arg719_1, (416, ), (1, ))
    assert_size_stride(arg720_1, (416, ), (1, ))
    assert_size_stride(arg721_1, (), ())
    assert_size_stride(arg722_1, (104, ), (1, ))
    assert_size_stride(arg723_1, (104, ), (1, ))
    assert_size_stride(arg724_1, (), ())
    assert_size_stride(arg725_1, (104, ), (1, ))
    assert_size_stride(arg726_1, (104, ), (1, ))
    assert_size_stride(arg727_1, (), ())
    assert_size_stride(arg728_1, (104, ), (1, ))
    assert_size_stride(arg729_1, (104, ), (1, ))
    assert_size_stride(arg730_1, (), ())
    assert_size_stride(arg731_1, (1024, ), (1, ))
    assert_size_stride(arg732_1, (1024, ), (1, ))
    assert_size_stride(arg733_1, (), ())
    assert_size_stride(arg734_1, (416, ), (1, ))
    assert_size_stride(arg735_1, (416, ), (1, ))
    assert_size_stride(arg736_1, (), ())
    assert_size_stride(arg737_1, (104, ), (1, ))
    assert_size_stride(arg738_1, (104, ), (1, ))
    assert_size_stride(arg739_1, (), ())
    assert_size_stride(arg740_1, (104, ), (1, ))
    assert_size_stride(arg741_1, (104, ), (1, ))
    assert_size_stride(arg742_1, (), ())
    assert_size_stride(arg743_1, (104, ), (1, ))
    assert_size_stride(arg744_1, (104, ), (1, ))
    assert_size_stride(arg745_1, (), ())
    assert_size_stride(arg746_1, (1024, ), (1, ))
    assert_size_stride(arg747_1, (1024, ), (1, ))
    assert_size_stride(arg748_1, (), ())
    assert_size_stride(arg749_1, (416, ), (1, ))
    assert_size_stride(arg750_1, (416, ), (1, ))
    assert_size_stride(arg751_1, (), ())
    assert_size_stride(arg752_1, (104, ), (1, ))
    assert_size_stride(arg753_1, (104, ), (1, ))
    assert_size_stride(arg754_1, (), ())
    assert_size_stride(arg755_1, (104, ), (1, ))
    assert_size_stride(arg756_1, (104, ), (1, ))
    assert_size_stride(arg757_1, (), ())
    assert_size_stride(arg758_1, (104, ), (1, ))
    assert_size_stride(arg759_1, (104, ), (1, ))
    assert_size_stride(arg760_1, (), ())
    assert_size_stride(arg761_1, (1024, ), (1, ))
    assert_size_stride(arg762_1, (1024, ), (1, ))
    assert_size_stride(arg763_1, (), ())
    assert_size_stride(arg764_1, (416, ), (1, ))
    assert_size_stride(arg765_1, (416, ), (1, ))
    assert_size_stride(arg766_1, (), ())
    assert_size_stride(arg767_1, (104, ), (1, ))
    assert_size_stride(arg768_1, (104, ), (1, ))
    assert_size_stride(arg769_1, (), ())
    assert_size_stride(arg770_1, (104, ), (1, ))
    assert_size_stride(arg771_1, (104, ), (1, ))
    assert_size_stride(arg772_1, (), ())
    assert_size_stride(arg773_1, (104, ), (1, ))
    assert_size_stride(arg774_1, (104, ), (1, ))
    assert_size_stride(arg775_1, (), ())
    assert_size_stride(arg776_1, (1024, ), (1, ))
    assert_size_stride(arg777_1, (1024, ), (1, ))
    assert_size_stride(arg778_1, (), ())
    assert_size_stride(arg779_1, (416, ), (1, ))
    assert_size_stride(arg780_1, (416, ), (1, ))
    assert_size_stride(arg781_1, (), ())
    assert_size_stride(arg782_1, (104, ), (1, ))
    assert_size_stride(arg783_1, (104, ), (1, ))
    assert_size_stride(arg784_1, (), ())
    assert_size_stride(arg785_1, (104, ), (1, ))
    assert_size_stride(arg786_1, (104, ), (1, ))
    assert_size_stride(arg787_1, (), ())
    assert_size_stride(arg788_1, (104, ), (1, ))
    assert_size_stride(arg789_1, (104, ), (1, ))
    assert_size_stride(arg790_1, (), ())
    assert_size_stride(arg791_1, (1024, ), (1, ))
    assert_size_stride(arg792_1, (1024, ), (1, ))
    assert_size_stride(arg793_1, (), ())
    assert_size_stride(arg794_1, (416, ), (1, ))
    assert_size_stride(arg795_1, (416, ), (1, ))
    assert_size_stride(arg796_1, (), ())
    assert_size_stride(arg797_1, (104, ), (1, ))
    assert_size_stride(arg798_1, (104, ), (1, ))
    assert_size_stride(arg799_1, (), ())
    assert_size_stride(arg800_1, (104, ), (1, ))
    assert_size_stride(arg801_1, (104, ), (1, ))
    assert_size_stride(arg802_1, (), ())
    assert_size_stride(arg803_1, (104, ), (1, ))
    assert_size_stride(arg804_1, (104, ), (1, ))
    assert_size_stride(arg805_1, (), ())
    assert_size_stride(arg806_1, (1024, ), (1, ))
    assert_size_stride(arg807_1, (1024, ), (1, ))
    assert_size_stride(arg808_1, (), ())
    assert_size_stride(arg809_1, (416, ), (1, ))
    assert_size_stride(arg810_1, (416, ), (1, ))
    assert_size_stride(arg811_1, (), ())
    assert_size_stride(arg812_1, (104, ), (1, ))
    assert_size_stride(arg813_1, (104, ), (1, ))
    assert_size_stride(arg814_1, (), ())
    assert_size_stride(arg815_1, (104, ), (1, ))
    assert_size_stride(arg816_1, (104, ), (1, ))
    assert_size_stride(arg817_1, (), ())
    assert_size_stride(arg818_1, (104, ), (1, ))
    assert_size_stride(arg819_1, (104, ), (1, ))
    assert_size_stride(arg820_1, (), ())
    assert_size_stride(arg821_1, (1024, ), (1, ))
    assert_size_stride(arg822_1, (1024, ), (1, ))
    assert_size_stride(arg823_1, (), ())
    assert_size_stride(arg824_1, (416, ), (1, ))
    assert_size_stride(arg825_1, (416, ), (1, ))
    assert_size_stride(arg826_1, (), ())
    assert_size_stride(arg827_1, (104, ), (1, ))
    assert_size_stride(arg828_1, (104, ), (1, ))
    assert_size_stride(arg829_1, (), ())
    assert_size_stride(arg830_1, (104, ), (1, ))
    assert_size_stride(arg831_1, (104, ), (1, ))
    assert_size_stride(arg832_1, (), ())
    assert_size_stride(arg833_1, (104, ), (1, ))
    assert_size_stride(arg834_1, (104, ), (1, ))
    assert_size_stride(arg835_1, (), ())
    assert_size_stride(arg836_1, (1024, ), (1, ))
    assert_size_stride(arg837_1, (1024, ), (1, ))
    assert_size_stride(arg838_1, (), ())
    assert_size_stride(arg839_1, (416, ), (1, ))
    assert_size_stride(arg840_1, (416, ), (1, ))
    assert_size_stride(arg841_1, (), ())
    assert_size_stride(arg842_1, (104, ), (1, ))
    assert_size_stride(arg843_1, (104, ), (1, ))
    assert_size_stride(arg844_1, (), ())
    assert_size_stride(arg845_1, (104, ), (1, ))
    assert_size_stride(arg846_1, (104, ), (1, ))
    assert_size_stride(arg847_1, (), ())
    assert_size_stride(arg848_1, (104, ), (1, ))
    assert_size_stride(arg849_1, (104, ), (1, ))
    assert_size_stride(arg850_1, (), ())
    assert_size_stride(arg851_1, (1024, ), (1, ))
    assert_size_stride(arg852_1, (1024, ), (1, ))
    assert_size_stride(arg853_1, (), ())
    assert_size_stride(arg854_1, (416, ), (1, ))
    assert_size_stride(arg855_1, (416, ), (1, ))
    assert_size_stride(arg856_1, (), ())
    assert_size_stride(arg857_1, (104, ), (1, ))
    assert_size_stride(arg858_1, (104, ), (1, ))
    assert_size_stride(arg859_1, (), ())
    assert_size_stride(arg860_1, (104, ), (1, ))
    assert_size_stride(arg861_1, (104, ), (1, ))
    assert_size_stride(arg862_1, (), ())
    assert_size_stride(arg863_1, (104, ), (1, ))
    assert_size_stride(arg864_1, (104, ), (1, ))
    assert_size_stride(arg865_1, (), ())
    assert_size_stride(arg866_1, (1024, ), (1, ))
    assert_size_stride(arg867_1, (1024, ), (1, ))
    assert_size_stride(arg868_1, (), ())
    assert_size_stride(arg869_1, (416, ), (1, ))
    assert_size_stride(arg870_1, (416, ), (1, ))
    assert_size_stride(arg871_1, (), ())
    assert_size_stride(arg872_1, (104, ), (1, ))
    assert_size_stride(arg873_1, (104, ), (1, ))
    assert_size_stride(arg874_1, (), ())
    assert_size_stride(arg875_1, (104, ), (1, ))
    assert_size_stride(arg876_1, (104, ), (1, ))
    assert_size_stride(arg877_1, (), ())
    assert_size_stride(arg878_1, (104, ), (1, ))
    assert_size_stride(arg879_1, (104, ), (1, ))
    assert_size_stride(arg880_1, (), ())
    assert_size_stride(arg881_1, (1024, ), (1, ))
    assert_size_stride(arg882_1, (1024, ), (1, ))
    assert_size_stride(arg883_1, (), ())
    assert_size_stride(arg884_1, (416, ), (1, ))
    assert_size_stride(arg885_1, (416, ), (1, ))
    assert_size_stride(arg886_1, (), ())
    assert_size_stride(arg887_1, (104, ), (1, ))
    assert_size_stride(arg888_1, (104, ), (1, ))
    assert_size_stride(arg889_1, (), ())
    assert_size_stride(arg890_1, (104, ), (1, ))
    assert_size_stride(arg891_1, (104, ), (1, ))
    assert_size_stride(arg892_1, (), ())
    assert_size_stride(arg893_1, (104, ), (1, ))
    assert_size_stride(arg894_1, (104, ), (1, ))
    assert_size_stride(arg895_1, (), ())
    assert_size_stride(arg896_1, (1024, ), (1, ))
    assert_size_stride(arg897_1, (1024, ), (1, ))
    assert_size_stride(arg898_1, (), ())
    assert_size_stride(arg899_1, (416, ), (1, ))
    assert_size_stride(arg900_1, (416, ), (1, ))
    assert_size_stride(arg901_1, (), ())
    assert_size_stride(arg902_1, (104, ), (1, ))
    assert_size_stride(arg903_1, (104, ), (1, ))
    assert_size_stride(arg904_1, (), ())
    assert_size_stride(arg905_1, (104, ), (1, ))
    assert_size_stride(arg906_1, (104, ), (1, ))
    assert_size_stride(arg907_1, (), ())
    assert_size_stride(arg908_1, (104, ), (1, ))
    assert_size_stride(arg909_1, (104, ), (1, ))
    assert_size_stride(arg910_1, (), ())
    assert_size_stride(arg911_1, (1024, ), (1, ))
    assert_size_stride(arg912_1, (1024, ), (1, ))
    assert_size_stride(arg913_1, (), ())
    assert_size_stride(arg914_1, (416, ), (1, ))
    assert_size_stride(arg915_1, (416, ), (1, ))
    assert_size_stride(arg916_1, (), ())
    assert_size_stride(arg917_1, (104, ), (1, ))
    assert_size_stride(arg918_1, (104, ), (1, ))
    assert_size_stride(arg919_1, (), ())
    assert_size_stride(arg920_1, (104, ), (1, ))
    assert_size_stride(arg921_1, (104, ), (1, ))
    assert_size_stride(arg922_1, (), ())
    assert_size_stride(arg923_1, (104, ), (1, ))
    assert_size_stride(arg924_1, (104, ), (1, ))
    assert_size_stride(arg925_1, (), ())
    assert_size_stride(arg926_1, (1024, ), (1, ))
    assert_size_stride(arg927_1, (1024, ), (1, ))
    assert_size_stride(arg928_1, (), ())
    assert_size_stride(arg929_1, (416, ), (1, ))
    assert_size_stride(arg930_1, (416, ), (1, ))
    assert_size_stride(arg931_1, (), ())
    assert_size_stride(arg932_1, (104, ), (1, ))
    assert_size_stride(arg933_1, (104, ), (1, ))
    assert_size_stride(arg934_1, (), ())
    assert_size_stride(arg935_1, (104, ), (1, ))
    assert_size_stride(arg936_1, (104, ), (1, ))
    assert_size_stride(arg937_1, (), ())
    assert_size_stride(arg938_1, (104, ), (1, ))
    assert_size_stride(arg939_1, (104, ), (1, ))
    assert_size_stride(arg940_1, (), ())
    assert_size_stride(arg941_1, (1024, ), (1, ))
    assert_size_stride(arg942_1, (1024, ), (1, ))
    assert_size_stride(arg943_1, (), ())
    assert_size_stride(arg944_1, (416, ), (1, ))
    assert_size_stride(arg945_1, (416, ), (1, ))
    assert_size_stride(arg946_1, (), ())
    assert_size_stride(arg947_1, (104, ), (1, ))
    assert_size_stride(arg948_1, (104, ), (1, ))
    assert_size_stride(arg949_1, (), ())
    assert_size_stride(arg950_1, (104, ), (1, ))
    assert_size_stride(arg951_1, (104, ), (1, ))
    assert_size_stride(arg952_1, (), ())
    assert_size_stride(arg953_1, (104, ), (1, ))
    assert_size_stride(arg954_1, (104, ), (1, ))
    assert_size_stride(arg955_1, (), ())
    assert_size_stride(arg956_1, (1024, ), (1, ))
    assert_size_stride(arg957_1, (1024, ), (1, ))
    assert_size_stride(arg958_1, (), ())
    assert_size_stride(arg959_1, (416, ), (1, ))
    assert_size_stride(arg960_1, (416, ), (1, ))
    assert_size_stride(arg961_1, (), ())
    assert_size_stride(arg962_1, (104, ), (1, ))
    assert_size_stride(arg963_1, (104, ), (1, ))
    assert_size_stride(arg964_1, (), ())
    assert_size_stride(arg965_1, (104, ), (1, ))
    assert_size_stride(arg966_1, (104, ), (1, ))
    assert_size_stride(arg967_1, (), ())
    assert_size_stride(arg968_1, (104, ), (1, ))
    assert_size_stride(arg969_1, (104, ), (1, ))
    assert_size_stride(arg970_1, (), ())
    assert_size_stride(arg971_1, (1024, ), (1, ))
    assert_size_stride(arg972_1, (1024, ), (1, ))
    assert_size_stride(arg973_1, (), ())
    assert_size_stride(arg974_1, (832, ), (1, ))
    assert_size_stride(arg975_1, (832, ), (1, ))
    assert_size_stride(arg976_1, (), ())
    assert_size_stride(arg977_1, (208, ), (1, ))
    assert_size_stride(arg978_1, (208, ), (1, ))
    assert_size_stride(arg979_1, (), ())
    assert_size_stride(arg980_1, (208, ), (1, ))
    assert_size_stride(arg981_1, (208, ), (1, ))
    assert_size_stride(arg982_1, (), ())
    assert_size_stride(arg983_1, (208, ), (1, ))
    assert_size_stride(arg984_1, (208, ), (1, ))
    assert_size_stride(arg985_1, (), ())
    assert_size_stride(arg986_1, (2048, ), (1, ))
    assert_size_stride(arg987_1, (2048, ), (1, ))
    assert_size_stride(arg988_1, (), ())
    assert_size_stride(arg989_1, (2048, ), (1, ))
    assert_size_stride(arg990_1, (2048, ), (1, ))
    assert_size_stride(arg991_1, (), ())
    assert_size_stride(arg992_1, (832, ), (1, ))
    assert_size_stride(arg993_1, (832, ), (1, ))
    assert_size_stride(arg994_1, (), ())
    assert_size_stride(arg995_1, (208, ), (1, ))
    assert_size_stride(arg996_1, (208, ), (1, ))
    assert_size_stride(arg997_1, (), ())
    assert_size_stride(arg998_1, (208, ), (1, ))
    assert_size_stride(arg999_1, (208, ), (1, ))
    assert_size_stride(arg1000_1, (), ())
    assert_size_stride(arg1001_1, (208, ), (1, ))
    assert_size_stride(arg1002_1, (208, ), (1, ))
    assert_size_stride(arg1003_1, (), ())
    assert_size_stride(arg1004_1, (2048, ), (1, ))
    assert_size_stride(arg1005_1, (2048, ), (1, ))
    assert_size_stride(arg1006_1, (), ())
    assert_size_stride(arg1007_1, (832, ), (1, ))
    assert_size_stride(arg1008_1, (832, ), (1, ))
    assert_size_stride(arg1009_1, (), ())
    assert_size_stride(arg1010_1, (208, ), (1, ))
    assert_size_stride(arg1011_1, (208, ), (1, ))
    assert_size_stride(arg1012_1, (), ())
    assert_size_stride(arg1013_1, (208, ), (1, ))
    assert_size_stride(arg1014_1, (208, ), (1, ))
    assert_size_stride(arg1015_1, (), ())
    assert_size_stride(arg1016_1, (208, ), (1, ))
    assert_size_stride(arg1017_1, (208, ), (1, ))
    assert_size_stride(arg1018_1, (), ())
    assert_size_stride(arg1019_1, (2048, ), (1, ))
    assert_size_stride(arg1020_1, (2048, ), (1, ))
    assert_size_stride(arg1021_1, (), ())
    assert_size_stride(arg1022_1, (8, 3, 224, 224), (150528, 50176, 224, 1))
    buf0 = empty_strided((8, 3, 224, 224), (150528, 1, 672, 3), device='cpu', dtype=torch.float32)
    buf1 = empty_strided((64, 3, 7, 7), (147, 1, 21, 3), device='cpu', dtype=torch.float32)
    cpp_fused_convolution_0(c_void_p(arg1022_1.data_ptr()), c_void_p(arg0_1.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(buf1.data_ptr()))
    del arg0_1
    del arg1022_1
    # Source Nodes: [x], Original ATen: [aten.convolution]
    buf2 = extern_kernels.convolution(buf0, buf1, stride=(2, 2), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf2, (8, 64, 112, 112), (802816, 1, 7168, 64))
    del buf0
    del buf1
    buf3 = buf2; del buf2  # reuse
    buf4 = empty_strided((8, 64, 56, 56), (200704, 1, 3584, 64), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_1(c_void_p(buf3.data_ptr()), c_void_p(arg512_1.data_ptr()), c_void_p(arg513_1.data_ptr()), c_void_p(arg1_1.data_ptr()), c_void_p(arg2_1.data_ptr()), c_void_p(buf4.data_ptr()))
    del arg1_1
    del arg2_1
    del arg512_1
    del arg513_1
    del buf3
    # Source Nodes: [out], Original ATen: [aten.convolution]
    buf5 = extern_kernels.convolution(buf4, arg3_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf5, (8, 104, 56, 56), (326144, 1, 5824, 104))
    del arg3_1
    buf6 = buf5; del buf5  # reuse
    buf7 = empty_strided((26, 26, 3, 3), (234, 1, 78, 26), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_2(c_void_p(buf6.data_ptr()), c_void_p(arg515_1.data_ptr()), c_void_p(arg516_1.data_ptr()), c_void_p(arg4_1.data_ptr()), c_void_p(arg5_1.data_ptr()), c_void_p(arg6_1.data_ptr()), c_void_p(buf7.data_ptr()))
    del arg4_1
    del arg515_1
    del arg516_1
    del arg5_1
    del arg6_1
    # Source Nodes: [sp_1], Original ATen: [aten.convolution]
    buf8 = extern_kernels.convolution(reinterpret_tensor(buf6, (8, 26, 56, 56), (326144, 1, 5824, 104), 0), buf7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf8, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf9 = buf7; del buf7  # reuse
    cpp_fused_convolution_3(c_void_p(arg9_1.data_ptr()), c_void_p(buf9.data_ptr()))
    del arg9_1
    # Source Nodes: [sp_5], Original ATen: [aten.convolution]
    buf10 = extern_kernels.convolution(reinterpret_tensor(buf6, (8, 26, 56, 56), (326144, 1, 5824, 104), 26), buf9, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf10, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf11 = buf9; del buf9  # reuse
    cpp_fused_convolution_4(c_void_p(arg12_1.data_ptr()), c_void_p(buf11.data_ptr()))
    del arg12_1
    # Source Nodes: [sp_9], Original ATen: [aten.convolution]
    buf12 = extern_kernels.convolution(reinterpret_tensor(buf6, (8, 26, 56, 56), (326144, 1, 5824, 104), 52), buf11, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf12, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf17 = empty((8, 104, 56, 56), device='cpu', dtype=torch.float32)
    buf13 = reinterpret_tensor(buf17, (8, 26, 56, 56), (326144, 3136, 56, 1), 244608)  # alias
    buf14 = reinterpret_tensor(buf17, (8, 26, 56, 56), (326144, 3136, 56, 1), 0)  # alias
    buf15 = reinterpret_tensor(buf17, (8, 26, 56, 56), (326144, 3136, 56, 1), 81536)  # alias
    buf16 = reinterpret_tensor(buf17, (8, 26, 56, 56), (326144, 3136, 56, 1), 163072)  # alias
    buf18 = empty_strided((8, 104, 56, 56), (326144, 1, 5824, 104), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_5(c_void_p(buf6.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(arg518_1.data_ptr()), c_void_p(arg519_1.data_ptr()), c_void_p(arg7_1.data_ptr()), c_void_p(arg8_1.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(arg521_1.data_ptr()), c_void_p(arg522_1.data_ptr()), c_void_p(arg10_1.data_ptr()), c_void_p(arg11_1.data_ptr()), c_void_p(buf12.data_ptr()), c_void_p(arg524_1.data_ptr()), c_void_p(arg525_1.data_ptr()), c_void_p(arg13_1.data_ptr()), c_void_p(arg14_1.data_ptr()), c_void_p(buf17.data_ptr()), c_void_p(buf13.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf15.data_ptr()), c_void_p(buf16.data_ptr()), c_void_p(buf18.data_ptr()))
    del arg10_1
    del arg11_1
    del arg13_1
    del arg14_1
    del arg518_1
    del arg519_1
    del arg521_1
    del arg522_1
    del arg524_1
    del arg525_1
    del arg7_1
    del arg8_1
    del buf10
    del buf12
    del buf13
    del buf14
    del buf15
    del buf16
    del buf17
    # Source Nodes: [out_4], Original ATen: [aten.convolution]
    buf19 = extern_kernels.convolution(buf18, arg15_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf19, (8, 256, 56, 56), (802816, 1, 14336, 256))
    del arg15_1
    # Source Nodes: [getattr_l__mod___layer1___0___downsample_0], Original ATen: [aten.convolution]
    buf20 = extern_kernels.convolution(buf4, arg18_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf20, (8, 256, 56, 56), (802816, 1, 14336, 256))
    del arg18_1
    del buf4
    buf21 = buf19; del buf19  # reuse
    buf22 = buf21; del buf21  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_6(c_void_p(buf22.data_ptr()), c_void_p(arg527_1.data_ptr()), c_void_p(arg528_1.data_ptr()), c_void_p(arg16_1.data_ptr()), c_void_p(arg17_1.data_ptr()), c_void_p(buf20.data_ptr()), c_void_p(arg530_1.data_ptr()), c_void_p(arg531_1.data_ptr()), c_void_p(arg19_1.data_ptr()), c_void_p(arg20_1.data_ptr()))
    del arg16_1
    del arg17_1
    del arg19_1
    del arg20_1
    del arg527_1
    del arg528_1
    del arg530_1
    del arg531_1
    del buf20
    # Source Nodes: [out_8, shortcut_2], Original ATen: [aten.convolution, aten.relu]
    buf23 = extern_kernels.convolution(buf22, arg21_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf23, (8, 104, 56, 56), (326144, 1, 5824, 104))
    del arg21_1
    buf24 = buf23; del buf23  # reuse
    buf25 = buf11; del buf11  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_7(c_void_p(buf24.data_ptr()), c_void_p(arg533_1.data_ptr()), c_void_p(arg534_1.data_ptr()), c_void_p(arg22_1.data_ptr()), c_void_p(arg23_1.data_ptr()), c_void_p(arg24_1.data_ptr()), c_void_p(buf25.data_ptr()))
    del arg22_1
    del arg23_1
    del arg24_1
    del arg533_1
    del arg534_1
    # Source Nodes: [sp_14], Original ATen: [aten.convolution]
    buf26 = extern_kernels.convolution(reinterpret_tensor(buf24, (8, 26, 56, 56), (326144, 1, 5824, 104), 0), buf25, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf26, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf37 = reinterpret_tensor(buf18, (8, 104, 56, 56), (326144, 3136, 56, 1), 0); del buf18  # reuse
    buf27 = reinterpret_tensor(buf37, (8, 26, 56, 56), (326144, 3136, 56, 1), 0)  # alias
    buf28 = buf8; del buf8  # reuse
    buf29 = buf25; del buf25  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_8(c_void_p(buf26.data_ptr()), c_void_p(arg536_1.data_ptr()), c_void_p(arg537_1.data_ptr()), c_void_p(arg25_1.data_ptr()), c_void_p(arg26_1.data_ptr()), c_void_p(buf24.data_ptr()), c_void_p(arg27_1.data_ptr()), c_void_p(buf27.data_ptr()), c_void_p(buf28.data_ptr()), c_void_p(buf29.data_ptr()))
    del arg25_1
    del arg26_1
    del arg27_1
    del arg536_1
    del arg537_1
    del buf26
    # Source Nodes: [sp_17, sp_18], Original ATen: [aten.add, aten.convolution]
    buf30 = extern_kernels.convolution(buf28, buf29, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf30, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf31 = reinterpret_tensor(buf37, (8, 26, 56, 56), (326144, 3136, 56, 1), 81536)  # alias
    buf32 = buf28; del buf28  # reuse
    buf33 = buf29; del buf29  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_9(c_void_p(buf30.data_ptr()), c_void_p(arg539_1.data_ptr()), c_void_p(arg540_1.data_ptr()), c_void_p(arg28_1.data_ptr()), c_void_p(arg29_1.data_ptr()), c_void_p(buf24.data_ptr()), c_void_p(arg30_1.data_ptr()), c_void_p(buf31.data_ptr()), c_void_p(buf32.data_ptr()), c_void_p(buf33.data_ptr()))
    del arg28_1
    del arg29_1
    del arg30_1
    del arg539_1
    del arg540_1
    del buf30
    # Source Nodes: [sp_21, sp_22], Original ATen: [aten.add, aten.convolution]
    buf34 = extern_kernels.convolution(buf32, buf33, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf34, (8, 26, 56, 56), (81536, 1, 1456, 26))
    del buf32
    buf35 = reinterpret_tensor(buf37, (8, 26, 56, 56), (326144, 3136, 56, 1), 163072)  # alias
    buf36 = reinterpret_tensor(buf37, (8, 26, 56, 56), (326144, 3136, 56, 1), 244608)  # alias
    buf38 = buf6; del buf6  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_10(c_void_p(buf34.data_ptr()), c_void_p(arg542_1.data_ptr()), c_void_p(arg543_1.data_ptr()), c_void_p(arg31_1.data_ptr()), c_void_p(arg32_1.data_ptr()), c_void_p(buf24.data_ptr()), c_void_p(buf37.data_ptr()), c_void_p(buf35.data_ptr()), c_void_p(buf36.data_ptr()), c_void_p(buf38.data_ptr()))
    del arg31_1
    del arg32_1
    del arg542_1
    del arg543_1
    del buf24
    del buf27
    del buf31
    del buf35
    del buf36
    # Source Nodes: [out_12], Original ATen: [aten.convolution]
    buf39 = extern_kernels.convolution(buf38, arg33_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf39, (8, 256, 56, 56), (802816, 1, 14336, 256))
    del arg33_1
    buf40 = buf22; del buf22  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_11(c_void_p(buf40.data_ptr()), c_void_p(buf39.data_ptr()), c_void_p(arg545_1.data_ptr()), c_void_p(arg546_1.data_ptr()), c_void_p(arg34_1.data_ptr()), c_void_p(arg35_1.data_ptr()))
    del arg34_1
    del arg35_1
    del arg545_1
    del arg546_1
    del buf39
    # Source Nodes: [out_16], Original ATen: [aten.convolution]
    buf41 = extern_kernels.convolution(buf40, arg36_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf41, (8, 104, 56, 56), (326144, 1, 5824, 104))
    del arg36_1
    buf42 = buf41; del buf41  # reuse
    buf43 = buf33; del buf33  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_12(c_void_p(buf42.data_ptr()), c_void_p(arg548_1.data_ptr()), c_void_p(arg549_1.data_ptr()), c_void_p(arg37_1.data_ptr()), c_void_p(arg38_1.data_ptr()), c_void_p(arg39_1.data_ptr()), c_void_p(buf43.data_ptr()))
    del arg37_1
    del arg38_1
    del arg39_1
    del arg548_1
    del arg549_1
    # Source Nodes: [sp_27], Original ATen: [aten.convolution]
    buf44 = extern_kernels.convolution(reinterpret_tensor(buf42, (8, 26, 56, 56), (326144, 1, 5824, 104), 0), buf43, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf44, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf55 = reinterpret_tensor(buf38, (8, 104, 56, 56), (326144, 3136, 56, 1), 0); del buf38  # reuse
    buf45 = reinterpret_tensor(buf55, (8, 26, 56, 56), (326144, 3136, 56, 1), 0)  # alias
    buf46 = buf34; del buf34  # reuse
    buf47 = buf43; del buf43  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_13(c_void_p(buf44.data_ptr()), c_void_p(arg551_1.data_ptr()), c_void_p(arg552_1.data_ptr()), c_void_p(arg40_1.data_ptr()), c_void_p(arg41_1.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(arg42_1.data_ptr()), c_void_p(buf45.data_ptr()), c_void_p(buf46.data_ptr()), c_void_p(buf47.data_ptr()))
    del arg40_1
    del arg41_1
    del arg42_1
    del arg551_1
    del arg552_1
    del buf44
    # Source Nodes: [sp_30, sp_31], Original ATen: [aten.add, aten.convolution]
    buf48 = extern_kernels.convolution(buf46, buf47, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf48, (8, 26, 56, 56), (81536, 1, 1456, 26))
    buf49 = reinterpret_tensor(buf55, (8, 26, 56, 56), (326144, 3136, 56, 1), 81536)  # alias
    buf50 = buf46; del buf46  # reuse
    buf51 = buf47; del buf47  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_14(c_void_p(buf48.data_ptr()), c_void_p(arg554_1.data_ptr()), c_void_p(arg555_1.data_ptr()), c_void_p(arg43_1.data_ptr()), c_void_p(arg44_1.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(arg45_1.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(buf50.data_ptr()), c_void_p(buf51.data_ptr()))
    del arg43_1
    del arg44_1
    del arg45_1
    del arg554_1
    del arg555_1
    del buf48
    # Source Nodes: [sp_34, sp_35], Original ATen: [aten.add, aten.convolution]
    buf52 = extern_kernels.convolution(buf50, buf51, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf52, (8, 26, 56, 56), (81536, 1, 1456, 26))
    del buf51
    buf53 = reinterpret_tensor(buf55, (8, 26, 56, 56), (326144, 3136, 56, 1), 163072)  # alias
    buf54 = reinterpret_tensor(buf55, (8, 26, 56, 56), (326144, 3136, 56, 1), 244608)  # alias
    buf56 = reinterpret_tensor(buf37, (8, 104, 56, 56), (326144, 1, 5824, 104), 0); del buf37  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_15(c_void_p(buf52.data_ptr()), c_void_p(arg557_1.data_ptr()), c_void_p(arg558_1.data_ptr()), c_void_p(arg46_1.data_ptr()), c_void_p(arg47_1.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(buf55.data_ptr()), c_void_p(buf53.data_ptr()), c_void_p(buf54.data_ptr()), c_void_p(buf56.data_ptr()))
    del arg46_1
    del arg47_1
    del arg557_1
    del arg558_1
    del buf42
    del buf45
    del buf49
    del buf53
    del buf54
    del buf55
    # Source Nodes: [out_20], Original ATen: [aten.convolution]
    buf57 = extern_kernels.convolution(buf56, arg48_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf57, (8, 256, 56, 56), (802816, 1, 14336, 256))
    del arg48_1
    del buf56
    buf58 = buf40; del buf40  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_16(c_void_p(buf58.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(arg560_1.data_ptr()), c_void_p(arg561_1.data_ptr()), c_void_p(arg49_1.data_ptr()), c_void_p(arg50_1.data_ptr()))
    del arg49_1
    del arg50_1
    del arg560_1
    del arg561_1
    del buf57
    # Source Nodes: [out_24], Original ATen: [aten.convolution]
    buf59 = extern_kernels.convolution(buf58, arg51_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf59, (8, 208, 56, 56), (652288, 1, 11648, 208))
    del arg51_1
    buf60 = buf59; del buf59  # reuse
    buf61 = empty_strided((52, 52, 3, 3), (468, 1, 156, 52), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_17(c_void_p(buf60.data_ptr()), c_void_p(arg563_1.data_ptr()), c_void_p(arg564_1.data_ptr()), c_void_p(arg52_1.data_ptr()), c_void_p(arg53_1.data_ptr()), c_void_p(arg54_1.data_ptr()), c_void_p(buf61.data_ptr()))
    del arg52_1
    del arg53_1
    del arg54_1
    del arg563_1
    del arg564_1
    # Source Nodes: [sp_40], Original ATen: [aten.convolution]
    buf62 = extern_kernels.convolution(reinterpret_tensor(buf60, (8, 52, 56, 56), (652288, 1, 11648, 208), 0), buf61, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf62, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf63 = buf61; del buf61  # reuse
    cpp_fused_convolution_18(c_void_p(arg57_1.data_ptr()), c_void_p(buf63.data_ptr()))
    del arg57_1
    # Source Nodes: [sp_44], Original ATen: [aten.convolution]
    buf64 = extern_kernels.convolution(reinterpret_tensor(buf60, (8, 52, 56, 56), (652288, 1, 11648, 208), 52), buf63, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf64, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf65 = buf63; del buf63  # reuse
    cpp_fused_convolution_19(c_void_p(arg60_1.data_ptr()), c_void_p(buf65.data_ptr()))
    del arg60_1
    # Source Nodes: [sp_48], Original ATen: [aten.convolution]
    buf66 = extern_kernels.convolution(reinterpret_tensor(buf60, (8, 52, 56, 56), (652288, 1, 11648, 208), 104), buf65, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf66, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf71 = empty((8, 208, 28, 28), device='cpu', dtype=torch.float32)
    buf67 = reinterpret_tensor(buf71, (8, 52, 28, 28), (163072, 784, 28, 1), 122304)  # alias
    buf68 = reinterpret_tensor(buf71, (8, 52, 28, 28), (163072, 784, 28, 1), 0)  # alias
    buf69 = reinterpret_tensor(buf71, (8, 52, 28, 28), (163072, 784, 28, 1), 40768)  # alias
    buf70 = reinterpret_tensor(buf71, (8, 52, 28, 28), (163072, 784, 28, 1), 81536)  # alias
    buf72 = empty_strided((8, 208, 28, 28), (163072, 1, 5824, 208), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_20(c_void_p(buf60.data_ptr()), c_void_p(buf62.data_ptr()), c_void_p(arg566_1.data_ptr()), c_void_p(arg567_1.data_ptr()), c_void_p(arg55_1.data_ptr()), c_void_p(arg56_1.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(arg569_1.data_ptr()), c_void_p(arg570_1.data_ptr()), c_void_p(arg58_1.data_ptr()), c_void_p(arg59_1.data_ptr()), c_void_p(buf66.data_ptr()), c_void_p(arg572_1.data_ptr()), c_void_p(arg573_1.data_ptr()), c_void_p(arg61_1.data_ptr()), c_void_p(arg62_1.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(buf67.data_ptr()), c_void_p(buf68.data_ptr()), c_void_p(buf69.data_ptr()), c_void_p(buf70.data_ptr()), c_void_p(buf72.data_ptr()))
    del arg55_1
    del arg566_1
    del arg567_1
    del arg569_1
    del arg56_1
    del arg570_1
    del arg572_1
    del arg573_1
    del arg58_1
    del arg59_1
    del arg61_1
    del arg62_1
    del buf60
    del buf62
    del buf64
    del buf67
    del buf68
    del buf69
    del buf70
    # Source Nodes: [out_28], Original ATen: [aten.convolution]
    buf73 = extern_kernels.convolution(buf72, arg63_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf73, (8, 512, 28, 28), (401408, 1, 14336, 512))
    del arg63_1
    # Source Nodes: [getattr_l__mod___layer2___0___downsample_0], Original ATen: [aten.convolution]
    buf74 = extern_kernels.convolution(buf58, arg66_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf74, (8, 512, 28, 28), (401408, 1, 14336, 512))
    del arg66_1
    del buf58
    buf75 = buf73; del buf73  # reuse
    buf76 = buf75; del buf75  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_21(c_void_p(buf76.data_ptr()), c_void_p(arg575_1.data_ptr()), c_void_p(arg576_1.data_ptr()), c_void_p(arg64_1.data_ptr()), c_void_p(arg65_1.data_ptr()), c_void_p(buf74.data_ptr()), c_void_p(arg578_1.data_ptr()), c_void_p(arg579_1.data_ptr()), c_void_p(arg67_1.data_ptr()), c_void_p(arg68_1.data_ptr()))
    del arg575_1
    del arg576_1
    del arg578_1
    del arg579_1
    del arg64_1
    del arg65_1
    del arg67_1
    del arg68_1
    del buf74
    # Source Nodes: [out_32, shortcut_6], Original ATen: [aten.convolution, aten.relu]
    buf77 = extern_kernels.convolution(buf76, arg69_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf77, (8, 208, 28, 28), (163072, 1, 5824, 208))
    del arg69_1
    buf78 = buf77; del buf77  # reuse
    buf79 = buf65; del buf65  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_22(c_void_p(buf78.data_ptr()), c_void_p(arg581_1.data_ptr()), c_void_p(arg582_1.data_ptr()), c_void_p(arg70_1.data_ptr()), c_void_p(arg71_1.data_ptr()), c_void_p(arg72_1.data_ptr()), c_void_p(buf79.data_ptr()))
    del arg581_1
    del arg582_1
    del arg70_1
    del arg71_1
    del arg72_1
    # Source Nodes: [sp_53], Original ATen: [aten.convolution]
    buf80 = extern_kernels.convolution(reinterpret_tensor(buf78, (8, 52, 28, 28), (163072, 1, 5824, 208), 0), buf79, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf80, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf91 = reinterpret_tensor(buf72, (8, 208, 28, 28), (163072, 784, 28, 1), 0); del buf72  # reuse
    buf81 = reinterpret_tensor(buf91, (8, 52, 28, 28), (163072, 784, 28, 1), 0)  # alias
    buf82 = buf66; del buf66  # reuse
    buf83 = buf79; del buf79  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_23(c_void_p(buf80.data_ptr()), c_void_p(arg584_1.data_ptr()), c_void_p(arg585_1.data_ptr()), c_void_p(arg73_1.data_ptr()), c_void_p(arg74_1.data_ptr()), c_void_p(buf78.data_ptr()), c_void_p(arg75_1.data_ptr()), c_void_p(buf81.data_ptr()), c_void_p(buf82.data_ptr()), c_void_p(buf83.data_ptr()))
    del arg584_1
    del arg585_1
    del arg73_1
    del arg74_1
    del arg75_1
    del buf80
    # Source Nodes: [sp_56, sp_57], Original ATen: [aten.add, aten.convolution]
    buf84 = extern_kernels.convolution(buf82, buf83, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf84, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf85 = reinterpret_tensor(buf91, (8, 52, 28, 28), (163072, 784, 28, 1), 40768)  # alias
    buf86 = buf82; del buf82  # reuse
    buf87 = buf83; del buf83  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_24(c_void_p(buf84.data_ptr()), c_void_p(arg587_1.data_ptr()), c_void_p(arg588_1.data_ptr()), c_void_p(arg76_1.data_ptr()), c_void_p(arg77_1.data_ptr()), c_void_p(buf78.data_ptr()), c_void_p(arg78_1.data_ptr()), c_void_p(buf85.data_ptr()), c_void_p(buf86.data_ptr()), c_void_p(buf87.data_ptr()))
    del arg587_1
    del arg588_1
    del arg76_1
    del arg77_1
    del arg78_1
    del buf84
    # Source Nodes: [sp_60, sp_61], Original ATen: [aten.add, aten.convolution]
    buf88 = extern_kernels.convolution(buf86, buf87, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf88, (8, 52, 28, 28), (40768, 1, 1456, 52))
    del buf86
    buf89 = reinterpret_tensor(buf91, (8, 52, 28, 28), (163072, 784, 28, 1), 81536)  # alias
    buf90 = reinterpret_tensor(buf91, (8, 52, 28, 28), (163072, 784, 28, 1), 122304)  # alias
    buf92 = reinterpret_tensor(buf71, (8, 208, 28, 28), (163072, 1, 5824, 208), 0); del buf71  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_25(c_void_p(buf88.data_ptr()), c_void_p(arg590_1.data_ptr()), c_void_p(arg591_1.data_ptr()), c_void_p(arg79_1.data_ptr()), c_void_p(arg80_1.data_ptr()), c_void_p(buf78.data_ptr()), c_void_p(buf91.data_ptr()), c_void_p(buf89.data_ptr()), c_void_p(buf90.data_ptr()), c_void_p(buf92.data_ptr()))
    del arg590_1
    del arg591_1
    del arg79_1
    del arg80_1
    del buf78
    del buf81
    del buf85
    del buf89
    del buf90
    # Source Nodes: [out_36], Original ATen: [aten.convolution]
    buf93 = extern_kernels.convolution(buf92, arg81_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf93, (8, 512, 28, 28), (401408, 1, 14336, 512))
    del arg81_1
    buf94 = buf76; del buf76  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_26(c_void_p(buf94.data_ptr()), c_void_p(buf93.data_ptr()), c_void_p(arg593_1.data_ptr()), c_void_p(arg594_1.data_ptr()), c_void_p(arg82_1.data_ptr()), c_void_p(arg83_1.data_ptr()))
    del arg593_1
    del arg594_1
    del arg82_1
    del arg83_1
    del buf93
    # Source Nodes: [out_40], Original ATen: [aten.convolution]
    buf95 = extern_kernels.convolution(buf94, arg84_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf95, (8, 208, 28, 28), (163072, 1, 5824, 208))
    del arg84_1
    buf96 = buf95; del buf95  # reuse
    buf97 = buf87; del buf87  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_27(c_void_p(buf96.data_ptr()), c_void_p(arg596_1.data_ptr()), c_void_p(arg597_1.data_ptr()), c_void_p(arg85_1.data_ptr()), c_void_p(arg86_1.data_ptr()), c_void_p(arg87_1.data_ptr()), c_void_p(buf97.data_ptr()))
    del arg596_1
    del arg597_1
    del arg85_1
    del arg86_1
    del arg87_1
    # Source Nodes: [sp_66], Original ATen: [aten.convolution]
    buf98 = extern_kernels.convolution(reinterpret_tensor(buf96, (8, 52, 28, 28), (163072, 1, 5824, 208), 0), buf97, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf98, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf109 = reinterpret_tensor(buf92, (8, 208, 28, 28), (163072, 784, 28, 1), 0); del buf92  # reuse
    buf99 = reinterpret_tensor(buf109, (8, 52, 28, 28), (163072, 784, 28, 1), 0)  # alias
    buf100 = buf88; del buf88  # reuse
    buf101 = buf97; del buf97  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_28(c_void_p(buf98.data_ptr()), c_void_p(arg599_1.data_ptr()), c_void_p(arg600_1.data_ptr()), c_void_p(arg88_1.data_ptr()), c_void_p(arg89_1.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(arg90_1.data_ptr()), c_void_p(buf99.data_ptr()), c_void_p(buf100.data_ptr()), c_void_p(buf101.data_ptr()))
    del arg599_1
    del arg600_1
    del arg88_1
    del arg89_1
    del arg90_1
    del buf98
    # Source Nodes: [sp_69, sp_70], Original ATen: [aten.add, aten.convolution]
    buf102 = extern_kernels.convolution(buf100, buf101, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf102, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf103 = reinterpret_tensor(buf109, (8, 52, 28, 28), (163072, 784, 28, 1), 40768)  # alias
    buf104 = buf100; del buf100  # reuse
    buf105 = buf101; del buf101  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_29(c_void_p(buf102.data_ptr()), c_void_p(arg602_1.data_ptr()), c_void_p(arg603_1.data_ptr()), c_void_p(arg91_1.data_ptr()), c_void_p(arg92_1.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(arg93_1.data_ptr()), c_void_p(buf103.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(buf105.data_ptr()))
    del arg602_1
    del arg603_1
    del arg91_1
    del arg92_1
    del arg93_1
    del buf102
    # Source Nodes: [sp_73, sp_74], Original ATen: [aten.add, aten.convolution]
    buf106 = extern_kernels.convolution(buf104, buf105, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf106, (8, 52, 28, 28), (40768, 1, 1456, 52))
    del buf104
    buf107 = reinterpret_tensor(buf109, (8, 52, 28, 28), (163072, 784, 28, 1), 81536)  # alias
    buf108 = reinterpret_tensor(buf109, (8, 52, 28, 28), (163072, 784, 28, 1), 122304)  # alias
    buf110 = reinterpret_tensor(buf91, (8, 208, 28, 28), (163072, 1, 5824, 208), 0); del buf91  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_30(c_void_p(buf106.data_ptr()), c_void_p(arg605_1.data_ptr()), c_void_p(arg606_1.data_ptr()), c_void_p(arg94_1.data_ptr()), c_void_p(arg95_1.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(buf109.data_ptr()), c_void_p(buf107.data_ptr()), c_void_p(buf108.data_ptr()), c_void_p(buf110.data_ptr()))
    del arg605_1
    del arg606_1
    del arg94_1
    del arg95_1
    del buf103
    del buf107
    del buf108
    del buf109
    del buf99
    # Source Nodes: [out_44], Original ATen: [aten.convolution]
    buf111 = extern_kernels.convolution(buf110, arg96_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf111, (8, 512, 28, 28), (401408, 1, 14336, 512))
    del arg96_1
    buf112 = buf111; del buf111  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_31(c_void_p(buf112.data_ptr()), c_void_p(arg608_1.data_ptr()), c_void_p(arg609_1.data_ptr()), c_void_p(arg97_1.data_ptr()), c_void_p(arg98_1.data_ptr()), c_void_p(buf94.data_ptr()))
    del arg608_1
    del arg609_1
    del arg97_1
    del arg98_1
    del buf94
    # Source Nodes: [out_48], Original ATen: [aten.convolution]
    buf113 = extern_kernels.convolution(buf112, arg99_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf113, (8, 208, 28, 28), (163072, 1, 5824, 208))
    del arg99_1
    buf114 = buf113; del buf113  # reuse
    buf115 = buf105; del buf105  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_32(c_void_p(buf114.data_ptr()), c_void_p(arg611_1.data_ptr()), c_void_p(arg612_1.data_ptr()), c_void_p(arg100_1.data_ptr()), c_void_p(arg101_1.data_ptr()), c_void_p(arg102_1.data_ptr()), c_void_p(buf115.data_ptr()))
    del arg100_1
    del arg101_1
    del arg102_1
    del arg611_1
    del arg612_1
    # Source Nodes: [sp_79], Original ATen: [aten.convolution]
    buf116 = extern_kernels.convolution(reinterpret_tensor(buf114, (8, 52, 28, 28), (163072, 1, 5824, 208), 0), buf115, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf116, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf127 = reinterpret_tensor(buf110, (8, 208, 28, 28), (163072, 784, 28, 1), 0); del buf110  # reuse
    buf117 = reinterpret_tensor(buf127, (8, 52, 28, 28), (163072, 784, 28, 1), 0)  # alias
    buf118 = buf106; del buf106  # reuse
    buf119 = buf115; del buf115  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_33(c_void_p(buf116.data_ptr()), c_void_p(arg614_1.data_ptr()), c_void_p(arg615_1.data_ptr()), c_void_p(arg103_1.data_ptr()), c_void_p(arg104_1.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(arg105_1.data_ptr()), c_void_p(buf117.data_ptr()), c_void_p(buf118.data_ptr()), c_void_p(buf119.data_ptr()))
    del arg103_1
    del arg104_1
    del arg105_1
    del arg614_1
    del arg615_1
    del buf116
    # Source Nodes: [sp_82, sp_83], Original ATen: [aten.add, aten.convolution]
    buf120 = extern_kernels.convolution(buf118, buf119, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf120, (8, 52, 28, 28), (40768, 1, 1456, 52))
    buf121 = reinterpret_tensor(buf127, (8, 52, 28, 28), (163072, 784, 28, 1), 40768)  # alias
    buf122 = buf118; del buf118  # reuse
    buf123 = buf119; del buf119  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_34(c_void_p(buf120.data_ptr()), c_void_p(arg617_1.data_ptr()), c_void_p(arg618_1.data_ptr()), c_void_p(arg106_1.data_ptr()), c_void_p(arg107_1.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(arg108_1.data_ptr()), c_void_p(buf121.data_ptr()), c_void_p(buf122.data_ptr()), c_void_p(buf123.data_ptr()))
    del arg106_1
    del arg107_1
    del arg108_1
    del arg617_1
    del arg618_1
    del buf120
    # Source Nodes: [sp_86, sp_87], Original ATen: [aten.add, aten.convolution]
    buf124 = extern_kernels.convolution(buf122, buf123, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf124, (8, 52, 28, 28), (40768, 1, 1456, 52))
    del buf123
    buf125 = reinterpret_tensor(buf127, (8, 52, 28, 28), (163072, 784, 28, 1), 81536)  # alias
    buf126 = reinterpret_tensor(buf127, (8, 52, 28, 28), (163072, 784, 28, 1), 122304)  # alias
    buf128 = buf96; del buf96  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_35(c_void_p(buf124.data_ptr()), c_void_p(arg620_1.data_ptr()), c_void_p(arg621_1.data_ptr()), c_void_p(arg109_1.data_ptr()), c_void_p(arg110_1.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(buf127.data_ptr()), c_void_p(buf125.data_ptr()), c_void_p(buf126.data_ptr()), c_void_p(buf128.data_ptr()))
    del arg109_1
    del arg110_1
    del arg620_1
    del arg621_1
    del buf114
    del buf117
    del buf121
    del buf125
    del buf126
    del buf127
    # Source Nodes: [out_52], Original ATen: [aten.convolution]
    buf129 = extern_kernels.convolution(buf128, arg111_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf129, (8, 512, 28, 28), (401408, 1, 14336, 512))
    del arg111_1
    del buf128
    buf130 = buf112; del buf112  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_36(c_void_p(buf130.data_ptr()), c_void_p(buf129.data_ptr()), c_void_p(arg623_1.data_ptr()), c_void_p(arg624_1.data_ptr()), c_void_p(arg112_1.data_ptr()), c_void_p(arg113_1.data_ptr()))
    del arg112_1
    del arg113_1
    del arg623_1
    del arg624_1
    del buf129
    # Source Nodes: [out_56], Original ATen: [aten.convolution]
    buf131 = extern_kernels.convolution(buf130, arg114_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf131, (8, 416, 28, 28), (326144, 1, 11648, 416))
    del arg114_1
    buf132 = buf131; del buf131  # reuse
    buf133 = empty_strided((104, 104, 3, 3), (936, 1, 312, 104), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_37(c_void_p(buf132.data_ptr()), c_void_p(arg626_1.data_ptr()), c_void_p(arg627_1.data_ptr()), c_void_p(arg115_1.data_ptr()), c_void_p(arg116_1.data_ptr()), c_void_p(arg117_1.data_ptr()), c_void_p(buf133.data_ptr()))
    del arg115_1
    del arg116_1
    del arg117_1
    del arg626_1
    del arg627_1
    # Source Nodes: [sp_92], Original ATen: [aten.convolution]
    buf134 = extern_kernels.convolution(reinterpret_tensor(buf132, (8, 104, 28, 28), (326144, 1, 11648, 416), 0), buf133, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf134, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf135 = buf133; del buf133  # reuse
    cpp_fused_convolution_38(c_void_p(arg120_1.data_ptr()), c_void_p(buf135.data_ptr()))
    del arg120_1
    # Source Nodes: [sp_96], Original ATen: [aten.convolution]
    buf136 = extern_kernels.convolution(reinterpret_tensor(buf132, (8, 104, 28, 28), (326144, 1, 11648, 416), 104), buf135, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf136, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf137 = buf135; del buf135  # reuse
    cpp_fused_convolution_39(c_void_p(arg123_1.data_ptr()), c_void_p(buf137.data_ptr()))
    del arg123_1
    # Source Nodes: [sp_100], Original ATen: [aten.convolution]
    buf138 = extern_kernels.convolution(reinterpret_tensor(buf132, (8, 104, 28, 28), (326144, 1, 11648, 416), 208), buf137, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf138, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf143 = reinterpret_tensor(buf52, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf52  # reuse
    buf139 = reinterpret_tensor(buf143, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf140 = reinterpret_tensor(buf143, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf141 = reinterpret_tensor(buf143, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf142 = reinterpret_tensor(buf143, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf144 = reinterpret_tensor(buf50, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf50  # reuse
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_40(c_void_p(buf132.data_ptr()), c_void_p(buf134.data_ptr()), c_void_p(arg629_1.data_ptr()), c_void_p(arg630_1.data_ptr()), c_void_p(arg118_1.data_ptr()), c_void_p(arg119_1.data_ptr()), c_void_p(buf136.data_ptr()), c_void_p(arg632_1.data_ptr()), c_void_p(arg633_1.data_ptr()), c_void_p(arg121_1.data_ptr()), c_void_p(arg122_1.data_ptr()), c_void_p(buf138.data_ptr()), c_void_p(arg635_1.data_ptr()), c_void_p(arg636_1.data_ptr()), c_void_p(arg124_1.data_ptr()), c_void_p(arg125_1.data_ptr()), c_void_p(buf143.data_ptr()), c_void_p(buf139.data_ptr()), c_void_p(buf140.data_ptr()), c_void_p(buf141.data_ptr()), c_void_p(buf142.data_ptr()), c_void_p(buf144.data_ptr()))
    del arg118_1
    del arg119_1
    del arg121_1
    del arg122_1
    del arg124_1
    del arg125_1
    del arg629_1
    del arg630_1
    del arg632_1
    del arg633_1
    del arg635_1
    del arg636_1
    del buf132
    del buf134
    del buf136
    del buf139
    del buf140
    del buf141
    del buf142
    # Source Nodes: [out_60], Original ATen: [aten.convolution]
    buf145 = extern_kernels.convolution(buf144, arg126_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf145, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg126_1
    # Source Nodes: [getattr_l__mod___layer3___0___downsample_0], Original ATen: [aten.convolution]
    buf146 = extern_kernels.convolution(buf130, arg129_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf146, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg129_1
    del buf130
    buf147 = buf145; del buf145  # reuse
    buf148 = buf147; del buf147  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_41(c_void_p(buf148.data_ptr()), c_void_p(arg638_1.data_ptr()), c_void_p(arg639_1.data_ptr()), c_void_p(arg127_1.data_ptr()), c_void_p(arg128_1.data_ptr()), c_void_p(buf146.data_ptr()), c_void_p(arg641_1.data_ptr()), c_void_p(arg642_1.data_ptr()), c_void_p(arg130_1.data_ptr()), c_void_p(arg131_1.data_ptr()))
    del arg127_1
    del arg128_1
    del arg130_1
    del arg131_1
    del arg638_1
    del arg639_1
    del arg641_1
    del arg642_1
    del buf146
    # Source Nodes: [out_64, shortcut_11], Original ATen: [aten.convolution, aten.relu]
    buf149 = extern_kernels.convolution(buf148, arg132_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf149, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg132_1
    buf150 = buf149; del buf149  # reuse
    buf151 = buf137; del buf137  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_42(c_void_p(buf150.data_ptr()), c_void_p(arg644_1.data_ptr()), c_void_p(arg645_1.data_ptr()), c_void_p(arg133_1.data_ptr()), c_void_p(arg134_1.data_ptr()), c_void_p(arg135_1.data_ptr()), c_void_p(buf151.data_ptr()))
    del arg133_1
    del arg134_1
    del arg135_1
    del arg644_1
    del arg645_1
    # Source Nodes: [sp_105], Original ATen: [aten.convolution]
    buf152 = extern_kernels.convolution(reinterpret_tensor(buf150, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf151, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf152, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf163 = reinterpret_tensor(buf144, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf144  # reuse
    buf153 = reinterpret_tensor(buf163, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf154 = buf138; del buf138  # reuse
    buf155 = buf151; del buf151  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_43(c_void_p(buf152.data_ptr()), c_void_p(arg647_1.data_ptr()), c_void_p(arg648_1.data_ptr()), c_void_p(arg136_1.data_ptr()), c_void_p(arg137_1.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(arg138_1.data_ptr()), c_void_p(buf153.data_ptr()), c_void_p(buf154.data_ptr()), c_void_p(buf155.data_ptr()))
    del arg136_1
    del arg137_1
    del arg138_1
    del arg647_1
    del arg648_1
    del buf152
    # Source Nodes: [sp_108, sp_109], Original ATen: [aten.add, aten.convolution]
    buf156 = extern_kernels.convolution(buf154, buf155, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf156, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf157 = reinterpret_tensor(buf163, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf158 = buf154; del buf154  # reuse
    buf159 = buf155; del buf155  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_44(c_void_p(buf156.data_ptr()), c_void_p(arg650_1.data_ptr()), c_void_p(arg651_1.data_ptr()), c_void_p(arg139_1.data_ptr()), c_void_p(arg140_1.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(arg141_1.data_ptr()), c_void_p(buf157.data_ptr()), c_void_p(buf158.data_ptr()), c_void_p(buf159.data_ptr()))
    del arg139_1
    del arg140_1
    del arg141_1
    del arg650_1
    del arg651_1
    del buf156
    # Source Nodes: [sp_112, sp_113], Original ATen: [aten.add, aten.convolution]
    buf160 = extern_kernels.convolution(buf158, buf159, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf160, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf158
    buf161 = reinterpret_tensor(buf163, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf162 = reinterpret_tensor(buf163, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf164 = reinterpret_tensor(buf143, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf143  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_45(c_void_p(buf160.data_ptr()), c_void_p(arg653_1.data_ptr()), c_void_p(arg654_1.data_ptr()), c_void_p(arg142_1.data_ptr()), c_void_p(arg143_1.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(buf163.data_ptr()), c_void_p(buf161.data_ptr()), c_void_p(buf162.data_ptr()), c_void_p(buf164.data_ptr()))
    del arg142_1
    del arg143_1
    del arg653_1
    del arg654_1
    del buf150
    del buf153
    del buf157
    del buf161
    del buf162
    # Source Nodes: [out_68], Original ATen: [aten.convolution]
    buf165 = extern_kernels.convolution(buf164, arg144_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf165, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg144_1
    buf166 = buf148; del buf148  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_46(c_void_p(buf166.data_ptr()), c_void_p(buf165.data_ptr()), c_void_p(arg656_1.data_ptr()), c_void_p(arg657_1.data_ptr()), c_void_p(arg145_1.data_ptr()), c_void_p(arg146_1.data_ptr()))
    del arg145_1
    del arg146_1
    del arg656_1
    del arg657_1
    del buf165
    # Source Nodes: [out_72], Original ATen: [aten.convolution]
    buf167 = extern_kernels.convolution(buf166, arg147_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf167, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg147_1
    buf168 = buf167; del buf167  # reuse
    buf169 = buf159; del buf159  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_47(c_void_p(buf168.data_ptr()), c_void_p(arg659_1.data_ptr()), c_void_p(arg660_1.data_ptr()), c_void_p(arg148_1.data_ptr()), c_void_p(arg149_1.data_ptr()), c_void_p(arg150_1.data_ptr()), c_void_p(buf169.data_ptr()))
    del arg148_1
    del arg149_1
    del arg150_1
    del arg659_1
    del arg660_1
    # Source Nodes: [sp_118], Original ATen: [aten.convolution]
    buf170 = extern_kernels.convolution(reinterpret_tensor(buf168, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf169, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf170, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf181 = reinterpret_tensor(buf164, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf164  # reuse
    buf171 = reinterpret_tensor(buf181, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf172 = buf160; del buf160  # reuse
    buf173 = buf169; del buf169  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_48(c_void_p(buf170.data_ptr()), c_void_p(arg662_1.data_ptr()), c_void_p(arg663_1.data_ptr()), c_void_p(arg151_1.data_ptr()), c_void_p(arg152_1.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(arg153_1.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(buf172.data_ptr()), c_void_p(buf173.data_ptr()))
    del arg151_1
    del arg152_1
    del arg153_1
    del arg662_1
    del arg663_1
    del buf170
    # Source Nodes: [sp_121, sp_122], Original ATen: [aten.add, aten.convolution]
    buf174 = extern_kernels.convolution(buf172, buf173, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf174, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf175 = reinterpret_tensor(buf181, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf176 = buf172; del buf172  # reuse
    buf177 = buf173; del buf173  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_49(c_void_p(buf174.data_ptr()), c_void_p(arg665_1.data_ptr()), c_void_p(arg666_1.data_ptr()), c_void_p(arg154_1.data_ptr()), c_void_p(arg155_1.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(arg156_1.data_ptr()), c_void_p(buf175.data_ptr()), c_void_p(buf176.data_ptr()), c_void_p(buf177.data_ptr()))
    del arg154_1
    del arg155_1
    del arg156_1
    del arg665_1
    del arg666_1
    del buf174
    # Source Nodes: [sp_125, sp_126], Original ATen: [aten.add, aten.convolution]
    buf178 = extern_kernels.convolution(buf176, buf177, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf178, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf176
    buf179 = reinterpret_tensor(buf181, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf180 = reinterpret_tensor(buf181, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf182 = reinterpret_tensor(buf163, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf163  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_50(c_void_p(buf178.data_ptr()), c_void_p(arg668_1.data_ptr()), c_void_p(arg669_1.data_ptr()), c_void_p(arg157_1.data_ptr()), c_void_p(arg158_1.data_ptr()), c_void_p(buf168.data_ptr()), c_void_p(buf181.data_ptr()), c_void_p(buf179.data_ptr()), c_void_p(buf180.data_ptr()), c_void_p(buf182.data_ptr()))
    del arg157_1
    del arg158_1
    del arg668_1
    del arg669_1
    del buf168
    del buf171
    del buf175
    del buf179
    del buf180
    # Source Nodes: [out_76], Original ATen: [aten.convolution]
    buf183 = extern_kernels.convolution(buf182, arg159_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf183, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg159_1
    buf184 = buf166; del buf166  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_51(c_void_p(buf184.data_ptr()), c_void_p(buf183.data_ptr()), c_void_p(arg671_1.data_ptr()), c_void_p(arg672_1.data_ptr()), c_void_p(arg160_1.data_ptr()), c_void_p(arg161_1.data_ptr()))
    del arg160_1
    del arg161_1
    del arg671_1
    del arg672_1
    del buf183
    # Source Nodes: [out_80], Original ATen: [aten.convolution]
    buf185 = extern_kernels.convolution(buf184, arg162_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf185, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg162_1
    buf186 = buf185; del buf185  # reuse
    buf187 = buf177; del buf177  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_52(c_void_p(buf186.data_ptr()), c_void_p(arg674_1.data_ptr()), c_void_p(arg675_1.data_ptr()), c_void_p(arg163_1.data_ptr()), c_void_p(arg164_1.data_ptr()), c_void_p(arg165_1.data_ptr()), c_void_p(buf187.data_ptr()))
    del arg163_1
    del arg164_1
    del arg165_1
    del arg674_1
    del arg675_1
    # Source Nodes: [sp_131], Original ATen: [aten.convolution]
    buf188 = extern_kernels.convolution(reinterpret_tensor(buf186, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf187, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf188, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf199 = reinterpret_tensor(buf182, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf182  # reuse
    buf189 = reinterpret_tensor(buf199, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf190 = buf178; del buf178  # reuse
    buf191 = buf187; del buf187  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_53(c_void_p(buf188.data_ptr()), c_void_p(arg677_1.data_ptr()), c_void_p(arg678_1.data_ptr()), c_void_p(arg166_1.data_ptr()), c_void_p(arg167_1.data_ptr()), c_void_p(buf186.data_ptr()), c_void_p(arg168_1.data_ptr()), c_void_p(buf189.data_ptr()), c_void_p(buf190.data_ptr()), c_void_p(buf191.data_ptr()))
    del arg166_1
    del arg167_1
    del arg168_1
    del arg677_1
    del arg678_1
    del buf188
    # Source Nodes: [sp_134, sp_135], Original ATen: [aten.add, aten.convolution]
    buf192 = extern_kernels.convolution(buf190, buf191, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf192, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf193 = reinterpret_tensor(buf199, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf194 = buf190; del buf190  # reuse
    buf195 = buf191; del buf191  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_54(c_void_p(buf192.data_ptr()), c_void_p(arg680_1.data_ptr()), c_void_p(arg681_1.data_ptr()), c_void_p(arg169_1.data_ptr()), c_void_p(arg170_1.data_ptr()), c_void_p(buf186.data_ptr()), c_void_p(arg171_1.data_ptr()), c_void_p(buf193.data_ptr()), c_void_p(buf194.data_ptr()), c_void_p(buf195.data_ptr()))
    del arg169_1
    del arg170_1
    del arg171_1
    del arg680_1
    del arg681_1
    del buf192
    # Source Nodes: [sp_138, sp_139], Original ATen: [aten.add, aten.convolution]
    buf196 = extern_kernels.convolution(buf194, buf195, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf196, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf194
    buf197 = reinterpret_tensor(buf199, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf198 = reinterpret_tensor(buf199, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf200 = reinterpret_tensor(buf181, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf181  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_55(c_void_p(buf196.data_ptr()), c_void_p(arg683_1.data_ptr()), c_void_p(arg684_1.data_ptr()), c_void_p(arg172_1.data_ptr()), c_void_p(arg173_1.data_ptr()), c_void_p(buf186.data_ptr()), c_void_p(buf199.data_ptr()), c_void_p(buf197.data_ptr()), c_void_p(buf198.data_ptr()), c_void_p(buf200.data_ptr()))
    del arg172_1
    del arg173_1
    del arg683_1
    del arg684_1
    del buf186
    del buf189
    del buf193
    del buf197
    del buf198
    # Source Nodes: [out_84], Original ATen: [aten.convolution]
    buf201 = extern_kernels.convolution(buf200, arg174_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf201, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg174_1
    buf202 = buf184; del buf184  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_56(c_void_p(buf202.data_ptr()), c_void_p(buf201.data_ptr()), c_void_p(arg686_1.data_ptr()), c_void_p(arg687_1.data_ptr()), c_void_p(arg175_1.data_ptr()), c_void_p(arg176_1.data_ptr()))
    del arg175_1
    del arg176_1
    del arg686_1
    del arg687_1
    del buf201
    # Source Nodes: [out_88], Original ATen: [aten.convolution]
    buf203 = extern_kernels.convolution(buf202, arg177_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf203, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg177_1
    buf204 = buf203; del buf203  # reuse
    buf205 = buf195; del buf195  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_57(c_void_p(buf204.data_ptr()), c_void_p(arg689_1.data_ptr()), c_void_p(arg690_1.data_ptr()), c_void_p(arg178_1.data_ptr()), c_void_p(arg179_1.data_ptr()), c_void_p(arg180_1.data_ptr()), c_void_p(buf205.data_ptr()))
    del arg178_1
    del arg179_1
    del arg180_1
    del arg689_1
    del arg690_1
    # Source Nodes: [sp_144], Original ATen: [aten.convolution]
    buf206 = extern_kernels.convolution(reinterpret_tensor(buf204, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf205, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf206, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf217 = reinterpret_tensor(buf200, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf200  # reuse
    buf207 = reinterpret_tensor(buf217, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf208 = buf196; del buf196  # reuse
    buf209 = buf205; del buf205  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_58(c_void_p(buf206.data_ptr()), c_void_p(arg692_1.data_ptr()), c_void_p(arg693_1.data_ptr()), c_void_p(arg181_1.data_ptr()), c_void_p(arg182_1.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(arg183_1.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(buf208.data_ptr()), c_void_p(buf209.data_ptr()))
    del arg181_1
    del arg182_1
    del arg183_1
    del arg692_1
    del arg693_1
    del buf206
    # Source Nodes: [sp_147, sp_148], Original ATen: [aten.add, aten.convolution]
    buf210 = extern_kernels.convolution(buf208, buf209, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf210, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf211 = reinterpret_tensor(buf217, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf212 = buf208; del buf208  # reuse
    buf213 = buf209; del buf209  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_59(c_void_p(buf210.data_ptr()), c_void_p(arg695_1.data_ptr()), c_void_p(arg696_1.data_ptr()), c_void_p(arg184_1.data_ptr()), c_void_p(arg185_1.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(arg186_1.data_ptr()), c_void_p(buf211.data_ptr()), c_void_p(buf212.data_ptr()), c_void_p(buf213.data_ptr()))
    del arg184_1
    del arg185_1
    del arg186_1
    del arg695_1
    del arg696_1
    del buf210
    # Source Nodes: [sp_151, sp_152], Original ATen: [aten.add, aten.convolution]
    buf214 = extern_kernels.convolution(buf212, buf213, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf214, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf212
    buf215 = reinterpret_tensor(buf217, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf216 = reinterpret_tensor(buf217, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf218 = reinterpret_tensor(buf199, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf199  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_60(c_void_p(buf214.data_ptr()), c_void_p(arg698_1.data_ptr()), c_void_p(arg699_1.data_ptr()), c_void_p(arg187_1.data_ptr()), c_void_p(arg188_1.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(buf217.data_ptr()), c_void_p(buf215.data_ptr()), c_void_p(buf216.data_ptr()), c_void_p(buf218.data_ptr()))
    del arg187_1
    del arg188_1
    del arg698_1
    del arg699_1
    del buf204
    del buf207
    del buf211
    del buf215
    del buf216
    # Source Nodes: [out_92], Original ATen: [aten.convolution]
    buf219 = extern_kernels.convolution(buf218, arg189_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf219, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg189_1
    buf220 = buf202; del buf202  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_61(c_void_p(buf220.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(arg701_1.data_ptr()), c_void_p(arg702_1.data_ptr()), c_void_p(arg190_1.data_ptr()), c_void_p(arg191_1.data_ptr()))
    del arg190_1
    del arg191_1
    del arg701_1
    del arg702_1
    del buf219
    # Source Nodes: [out_96], Original ATen: [aten.convolution]
    buf221 = extern_kernels.convolution(buf220, arg192_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf221, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg192_1
    buf222 = buf221; del buf221  # reuse
    buf223 = buf213; del buf213  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_62(c_void_p(buf222.data_ptr()), c_void_p(arg704_1.data_ptr()), c_void_p(arg705_1.data_ptr()), c_void_p(arg193_1.data_ptr()), c_void_p(arg194_1.data_ptr()), c_void_p(arg195_1.data_ptr()), c_void_p(buf223.data_ptr()))
    del arg193_1
    del arg194_1
    del arg195_1
    del arg704_1
    del arg705_1
    # Source Nodes: [sp_157], Original ATen: [aten.convolution]
    buf224 = extern_kernels.convolution(reinterpret_tensor(buf222, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf223, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf224, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf235 = reinterpret_tensor(buf218, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf218  # reuse
    buf225 = reinterpret_tensor(buf235, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf226 = buf214; del buf214  # reuse
    buf227 = buf223; del buf223  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_63(c_void_p(buf224.data_ptr()), c_void_p(arg707_1.data_ptr()), c_void_p(arg708_1.data_ptr()), c_void_p(arg196_1.data_ptr()), c_void_p(arg197_1.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(arg198_1.data_ptr()), c_void_p(buf225.data_ptr()), c_void_p(buf226.data_ptr()), c_void_p(buf227.data_ptr()))
    del arg196_1
    del arg197_1
    del arg198_1
    del arg707_1
    del arg708_1
    del buf224
    # Source Nodes: [sp_160, sp_161], Original ATen: [aten.add, aten.convolution]
    buf228 = extern_kernels.convolution(buf226, buf227, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf228, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf229 = reinterpret_tensor(buf235, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf230 = buf226; del buf226  # reuse
    buf231 = buf227; del buf227  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_64(c_void_p(buf228.data_ptr()), c_void_p(arg710_1.data_ptr()), c_void_p(arg711_1.data_ptr()), c_void_p(arg199_1.data_ptr()), c_void_p(arg200_1.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(arg201_1.data_ptr()), c_void_p(buf229.data_ptr()), c_void_p(buf230.data_ptr()), c_void_p(buf231.data_ptr()))
    del arg199_1
    del arg200_1
    del arg201_1
    del arg710_1
    del arg711_1
    del buf228
    # Source Nodes: [sp_164, sp_165], Original ATen: [aten.add, aten.convolution]
    buf232 = extern_kernels.convolution(buf230, buf231, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf232, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf230
    buf233 = reinterpret_tensor(buf235, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf234 = reinterpret_tensor(buf235, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf236 = reinterpret_tensor(buf217, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf217  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_65(c_void_p(buf232.data_ptr()), c_void_p(arg713_1.data_ptr()), c_void_p(arg714_1.data_ptr()), c_void_p(arg202_1.data_ptr()), c_void_p(arg203_1.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(buf235.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(buf234.data_ptr()), c_void_p(buf236.data_ptr()))
    del arg202_1
    del arg203_1
    del arg713_1
    del arg714_1
    del buf222
    del buf225
    del buf229
    del buf233
    del buf234
    # Source Nodes: [out_100], Original ATen: [aten.convolution]
    buf237 = extern_kernels.convolution(buf236, arg204_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf237, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg204_1
    buf238 = buf220; del buf220  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_66(c_void_p(buf238.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(arg716_1.data_ptr()), c_void_p(arg717_1.data_ptr()), c_void_p(arg205_1.data_ptr()), c_void_p(arg206_1.data_ptr()))
    del arg205_1
    del arg206_1
    del arg716_1
    del arg717_1
    del buf237
    # Source Nodes: [out_104], Original ATen: [aten.convolution]
    buf239 = extern_kernels.convolution(buf238, arg207_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf239, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg207_1
    buf240 = buf239; del buf239  # reuse
    buf241 = buf231; del buf231  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_67(c_void_p(buf240.data_ptr()), c_void_p(arg719_1.data_ptr()), c_void_p(arg720_1.data_ptr()), c_void_p(arg208_1.data_ptr()), c_void_p(arg209_1.data_ptr()), c_void_p(arg210_1.data_ptr()), c_void_p(buf241.data_ptr()))
    del arg208_1
    del arg209_1
    del arg210_1
    del arg719_1
    del arg720_1
    # Source Nodes: [sp_170], Original ATen: [aten.convolution]
    buf242 = extern_kernels.convolution(reinterpret_tensor(buf240, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf241, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf242, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf253 = reinterpret_tensor(buf236, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf236  # reuse
    buf243 = reinterpret_tensor(buf253, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf244 = buf232; del buf232  # reuse
    buf245 = buf241; del buf241  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_68(c_void_p(buf242.data_ptr()), c_void_p(arg722_1.data_ptr()), c_void_p(arg723_1.data_ptr()), c_void_p(arg211_1.data_ptr()), c_void_p(arg212_1.data_ptr()), c_void_p(buf240.data_ptr()), c_void_p(arg213_1.data_ptr()), c_void_p(buf243.data_ptr()), c_void_p(buf244.data_ptr()), c_void_p(buf245.data_ptr()))
    del arg211_1
    del arg212_1
    del arg213_1
    del arg722_1
    del arg723_1
    del buf242
    # Source Nodes: [sp_173, sp_174], Original ATen: [aten.add, aten.convolution]
    buf246 = extern_kernels.convolution(buf244, buf245, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf246, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf247 = reinterpret_tensor(buf253, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf248 = buf244; del buf244  # reuse
    buf249 = buf245; del buf245  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_69(c_void_p(buf246.data_ptr()), c_void_p(arg725_1.data_ptr()), c_void_p(arg726_1.data_ptr()), c_void_p(arg214_1.data_ptr()), c_void_p(arg215_1.data_ptr()), c_void_p(buf240.data_ptr()), c_void_p(arg216_1.data_ptr()), c_void_p(buf247.data_ptr()), c_void_p(buf248.data_ptr()), c_void_p(buf249.data_ptr()))
    del arg214_1
    del arg215_1
    del arg216_1
    del arg725_1
    del arg726_1
    del buf246
    # Source Nodes: [sp_177, sp_178], Original ATen: [aten.add, aten.convolution]
    buf250 = extern_kernels.convolution(buf248, buf249, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf250, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf248
    buf251 = reinterpret_tensor(buf253, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf252 = reinterpret_tensor(buf253, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf254 = reinterpret_tensor(buf235, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf235  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_70(c_void_p(buf250.data_ptr()), c_void_p(arg728_1.data_ptr()), c_void_p(arg729_1.data_ptr()), c_void_p(arg217_1.data_ptr()), c_void_p(arg218_1.data_ptr()), c_void_p(buf240.data_ptr()), c_void_p(buf253.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(buf252.data_ptr()), c_void_p(buf254.data_ptr()))
    del arg217_1
    del arg218_1
    del arg728_1
    del arg729_1
    del buf240
    del buf243
    del buf247
    del buf251
    del buf252
    # Source Nodes: [out_108], Original ATen: [aten.convolution]
    buf255 = extern_kernels.convolution(buf254, arg219_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf255, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg219_1
    buf256 = buf238; del buf238  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_71(c_void_p(buf256.data_ptr()), c_void_p(buf255.data_ptr()), c_void_p(arg731_1.data_ptr()), c_void_p(arg732_1.data_ptr()), c_void_p(arg220_1.data_ptr()), c_void_p(arg221_1.data_ptr()))
    del arg220_1
    del arg221_1
    del arg731_1
    del arg732_1
    del buf255
    # Source Nodes: [out_112], Original ATen: [aten.convolution]
    buf257 = extern_kernels.convolution(buf256, arg222_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf257, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg222_1
    buf258 = buf257; del buf257  # reuse
    buf259 = buf249; del buf249  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_72(c_void_p(buf258.data_ptr()), c_void_p(arg734_1.data_ptr()), c_void_p(arg735_1.data_ptr()), c_void_p(arg223_1.data_ptr()), c_void_p(arg224_1.data_ptr()), c_void_p(arg225_1.data_ptr()), c_void_p(buf259.data_ptr()))
    del arg223_1
    del arg224_1
    del arg225_1
    del arg734_1
    del arg735_1
    # Source Nodes: [sp_183], Original ATen: [aten.convolution]
    buf260 = extern_kernels.convolution(reinterpret_tensor(buf258, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf259, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf260, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf271 = reinterpret_tensor(buf254, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf254  # reuse
    buf261 = reinterpret_tensor(buf271, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf262 = buf250; del buf250  # reuse
    buf263 = buf259; del buf259  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_73(c_void_p(buf260.data_ptr()), c_void_p(arg737_1.data_ptr()), c_void_p(arg738_1.data_ptr()), c_void_p(arg226_1.data_ptr()), c_void_p(arg227_1.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(arg228_1.data_ptr()), c_void_p(buf261.data_ptr()), c_void_p(buf262.data_ptr()), c_void_p(buf263.data_ptr()))
    del arg226_1
    del arg227_1
    del arg228_1
    del arg737_1
    del arg738_1
    del buf260
    # Source Nodes: [sp_186, sp_187], Original ATen: [aten.add, aten.convolution]
    buf264 = extern_kernels.convolution(buf262, buf263, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf264, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf265 = reinterpret_tensor(buf271, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf266 = buf262; del buf262  # reuse
    buf267 = buf263; del buf263  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_74(c_void_p(buf264.data_ptr()), c_void_p(arg740_1.data_ptr()), c_void_p(arg741_1.data_ptr()), c_void_p(arg229_1.data_ptr()), c_void_p(arg230_1.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(arg231_1.data_ptr()), c_void_p(buf265.data_ptr()), c_void_p(buf266.data_ptr()), c_void_p(buf267.data_ptr()))
    del arg229_1
    del arg230_1
    del arg231_1
    del arg740_1
    del arg741_1
    del buf264
    # Source Nodes: [sp_190, sp_191], Original ATen: [aten.add, aten.convolution]
    buf268 = extern_kernels.convolution(buf266, buf267, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf268, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf266
    buf269 = reinterpret_tensor(buf271, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf270 = reinterpret_tensor(buf271, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf272 = reinterpret_tensor(buf253, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf253  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_75(c_void_p(buf268.data_ptr()), c_void_p(arg743_1.data_ptr()), c_void_p(arg744_1.data_ptr()), c_void_p(arg232_1.data_ptr()), c_void_p(arg233_1.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(buf269.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(buf272.data_ptr()))
    del arg232_1
    del arg233_1
    del arg743_1
    del arg744_1
    del buf258
    del buf261
    del buf265
    del buf269
    del buf270
    # Source Nodes: [out_116], Original ATen: [aten.convolution]
    buf273 = extern_kernels.convolution(buf272, arg234_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf273, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg234_1
    buf274 = buf256; del buf256  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_76(c_void_p(buf274.data_ptr()), c_void_p(buf273.data_ptr()), c_void_p(arg746_1.data_ptr()), c_void_p(arg747_1.data_ptr()), c_void_p(arg235_1.data_ptr()), c_void_p(arg236_1.data_ptr()))
    del arg235_1
    del arg236_1
    del arg746_1
    del arg747_1
    del buf273
    # Source Nodes: [out_120], Original ATen: [aten.convolution]
    buf275 = extern_kernels.convolution(buf274, arg237_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf275, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg237_1
    buf276 = buf275; del buf275  # reuse
    buf277 = buf267; del buf267  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_77(c_void_p(buf276.data_ptr()), c_void_p(arg749_1.data_ptr()), c_void_p(arg750_1.data_ptr()), c_void_p(arg238_1.data_ptr()), c_void_p(arg239_1.data_ptr()), c_void_p(arg240_1.data_ptr()), c_void_p(buf277.data_ptr()))
    del arg238_1
    del arg239_1
    del arg240_1
    del arg749_1
    del arg750_1
    # Source Nodes: [sp_196], Original ATen: [aten.convolution]
    buf278 = extern_kernels.convolution(reinterpret_tensor(buf276, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf277, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf278, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf289 = reinterpret_tensor(buf272, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf272  # reuse
    buf279 = reinterpret_tensor(buf289, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf280 = buf268; del buf268  # reuse
    buf281 = buf277; del buf277  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_78(c_void_p(buf278.data_ptr()), c_void_p(arg752_1.data_ptr()), c_void_p(arg753_1.data_ptr()), c_void_p(arg241_1.data_ptr()), c_void_p(arg242_1.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(arg243_1.data_ptr()), c_void_p(buf279.data_ptr()), c_void_p(buf280.data_ptr()), c_void_p(buf281.data_ptr()))
    del arg241_1
    del arg242_1
    del arg243_1
    del arg752_1
    del arg753_1
    del buf278
    # Source Nodes: [sp_199, sp_200], Original ATen: [aten.add, aten.convolution]
    buf282 = extern_kernels.convolution(buf280, buf281, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf282, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf283 = reinterpret_tensor(buf289, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf284 = buf280; del buf280  # reuse
    buf285 = buf281; del buf281  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_79(c_void_p(buf282.data_ptr()), c_void_p(arg755_1.data_ptr()), c_void_p(arg756_1.data_ptr()), c_void_p(arg244_1.data_ptr()), c_void_p(arg245_1.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(arg246_1.data_ptr()), c_void_p(buf283.data_ptr()), c_void_p(buf284.data_ptr()), c_void_p(buf285.data_ptr()))
    del arg244_1
    del arg245_1
    del arg246_1
    del arg755_1
    del arg756_1
    del buf282
    # Source Nodes: [sp_203, sp_204], Original ATen: [aten.add, aten.convolution]
    buf286 = extern_kernels.convolution(buf284, buf285, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf286, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf284
    buf287 = reinterpret_tensor(buf289, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf288 = reinterpret_tensor(buf289, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf290 = reinterpret_tensor(buf271, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf271  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_80(c_void_p(buf286.data_ptr()), c_void_p(arg758_1.data_ptr()), c_void_p(arg759_1.data_ptr()), c_void_p(arg247_1.data_ptr()), c_void_p(arg248_1.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(buf287.data_ptr()), c_void_p(buf288.data_ptr()), c_void_p(buf290.data_ptr()))
    del arg247_1
    del arg248_1
    del arg758_1
    del arg759_1
    del buf276
    del buf279
    del buf283
    del buf287
    del buf288
    # Source Nodes: [out_124], Original ATen: [aten.convolution]
    buf291 = extern_kernels.convolution(buf290, arg249_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf291, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg249_1
    buf292 = buf274; del buf274  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_81(c_void_p(buf292.data_ptr()), c_void_p(buf291.data_ptr()), c_void_p(arg761_1.data_ptr()), c_void_p(arg762_1.data_ptr()), c_void_p(arg250_1.data_ptr()), c_void_p(arg251_1.data_ptr()))
    del arg250_1
    del arg251_1
    del arg761_1
    del arg762_1
    del buf291
    # Source Nodes: [out_128], Original ATen: [aten.convolution]
    buf293 = extern_kernels.convolution(buf292, arg252_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf293, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg252_1
    buf294 = buf293; del buf293  # reuse
    buf295 = buf285; del buf285  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_82(c_void_p(buf294.data_ptr()), c_void_p(arg764_1.data_ptr()), c_void_p(arg765_1.data_ptr()), c_void_p(arg253_1.data_ptr()), c_void_p(arg254_1.data_ptr()), c_void_p(arg255_1.data_ptr()), c_void_p(buf295.data_ptr()))
    del arg253_1
    del arg254_1
    del arg255_1
    del arg764_1
    del arg765_1
    # Source Nodes: [sp_209], Original ATen: [aten.convolution]
    buf296 = extern_kernels.convolution(reinterpret_tensor(buf294, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf295, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf296, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf307 = reinterpret_tensor(buf290, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf290  # reuse
    buf297 = reinterpret_tensor(buf307, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf298 = buf286; del buf286  # reuse
    buf299 = buf295; del buf295  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_83(c_void_p(buf296.data_ptr()), c_void_p(arg767_1.data_ptr()), c_void_p(arg768_1.data_ptr()), c_void_p(arg256_1.data_ptr()), c_void_p(arg257_1.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(arg258_1.data_ptr()), c_void_p(buf297.data_ptr()), c_void_p(buf298.data_ptr()), c_void_p(buf299.data_ptr()))
    del arg256_1
    del arg257_1
    del arg258_1
    del arg767_1
    del arg768_1
    del buf296
    # Source Nodes: [sp_212, sp_213], Original ATen: [aten.add, aten.convolution]
    buf300 = extern_kernels.convolution(buf298, buf299, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf300, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf301 = reinterpret_tensor(buf307, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf302 = buf298; del buf298  # reuse
    buf303 = buf299; del buf299  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_84(c_void_p(buf300.data_ptr()), c_void_p(arg770_1.data_ptr()), c_void_p(arg771_1.data_ptr()), c_void_p(arg259_1.data_ptr()), c_void_p(arg260_1.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(arg261_1.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(buf302.data_ptr()), c_void_p(buf303.data_ptr()))
    del arg259_1
    del arg260_1
    del arg261_1
    del arg770_1
    del arg771_1
    del buf300
    # Source Nodes: [sp_216, sp_217], Original ATen: [aten.add, aten.convolution]
    buf304 = extern_kernels.convolution(buf302, buf303, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf304, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf302
    buf305 = reinterpret_tensor(buf307, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf306 = reinterpret_tensor(buf307, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf308 = reinterpret_tensor(buf289, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf289  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_85(c_void_p(buf304.data_ptr()), c_void_p(arg773_1.data_ptr()), c_void_p(arg774_1.data_ptr()), c_void_p(arg262_1.data_ptr()), c_void_p(arg263_1.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(buf306.data_ptr()), c_void_p(buf308.data_ptr()))
    del arg262_1
    del arg263_1
    del arg773_1
    del arg774_1
    del buf294
    del buf297
    del buf301
    del buf305
    del buf306
    # Source Nodes: [out_132], Original ATen: [aten.convolution]
    buf309 = extern_kernels.convolution(buf308, arg264_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf309, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg264_1
    buf310 = buf292; del buf292  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_86(c_void_p(buf310.data_ptr()), c_void_p(buf309.data_ptr()), c_void_p(arg776_1.data_ptr()), c_void_p(arg777_1.data_ptr()), c_void_p(arg265_1.data_ptr()), c_void_p(arg266_1.data_ptr()))
    del arg265_1
    del arg266_1
    del arg776_1
    del arg777_1
    del buf309
    # Source Nodes: [out_136], Original ATen: [aten.convolution]
    buf311 = extern_kernels.convolution(buf310, arg267_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf311, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg267_1
    buf312 = buf311; del buf311  # reuse
    buf313 = buf303; del buf303  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_87(c_void_p(buf312.data_ptr()), c_void_p(arg779_1.data_ptr()), c_void_p(arg780_1.data_ptr()), c_void_p(arg268_1.data_ptr()), c_void_p(arg269_1.data_ptr()), c_void_p(arg270_1.data_ptr()), c_void_p(buf313.data_ptr()))
    del arg268_1
    del arg269_1
    del arg270_1
    del arg779_1
    del arg780_1
    # Source Nodes: [sp_222], Original ATen: [aten.convolution]
    buf314 = extern_kernels.convolution(reinterpret_tensor(buf312, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf313, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf314, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf325 = reinterpret_tensor(buf308, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf308  # reuse
    buf315 = reinterpret_tensor(buf325, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf316 = buf304; del buf304  # reuse
    buf317 = buf313; del buf313  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_88(c_void_p(buf314.data_ptr()), c_void_p(arg782_1.data_ptr()), c_void_p(arg783_1.data_ptr()), c_void_p(arg271_1.data_ptr()), c_void_p(arg272_1.data_ptr()), c_void_p(buf312.data_ptr()), c_void_p(arg273_1.data_ptr()), c_void_p(buf315.data_ptr()), c_void_p(buf316.data_ptr()), c_void_p(buf317.data_ptr()))
    del arg271_1
    del arg272_1
    del arg273_1
    del arg782_1
    del arg783_1
    del buf314
    # Source Nodes: [sp_225, sp_226], Original ATen: [aten.add, aten.convolution]
    buf318 = extern_kernels.convolution(buf316, buf317, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf318, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf319 = reinterpret_tensor(buf325, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf320 = buf316; del buf316  # reuse
    buf321 = buf317; del buf317  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_89(c_void_p(buf318.data_ptr()), c_void_p(arg785_1.data_ptr()), c_void_p(arg786_1.data_ptr()), c_void_p(arg274_1.data_ptr()), c_void_p(arg275_1.data_ptr()), c_void_p(buf312.data_ptr()), c_void_p(arg276_1.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(buf320.data_ptr()), c_void_p(buf321.data_ptr()))
    del arg274_1
    del arg275_1
    del arg276_1
    del arg785_1
    del arg786_1
    del buf318
    # Source Nodes: [sp_229, sp_230], Original ATen: [aten.add, aten.convolution]
    buf322 = extern_kernels.convolution(buf320, buf321, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf322, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf320
    buf323 = reinterpret_tensor(buf325, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf324 = reinterpret_tensor(buf325, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf326 = reinterpret_tensor(buf307, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf307  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_90(c_void_p(buf322.data_ptr()), c_void_p(arg788_1.data_ptr()), c_void_p(arg789_1.data_ptr()), c_void_p(arg277_1.data_ptr()), c_void_p(arg278_1.data_ptr()), c_void_p(buf312.data_ptr()), c_void_p(buf325.data_ptr()), c_void_p(buf323.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf326.data_ptr()))
    del arg277_1
    del arg278_1
    del arg788_1
    del arg789_1
    del buf312
    del buf315
    del buf319
    del buf323
    del buf324
    # Source Nodes: [out_140], Original ATen: [aten.convolution]
    buf327 = extern_kernels.convolution(buf326, arg279_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf327, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg279_1
    buf328 = buf310; del buf310  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_91(c_void_p(buf328.data_ptr()), c_void_p(buf327.data_ptr()), c_void_p(arg791_1.data_ptr()), c_void_p(arg792_1.data_ptr()), c_void_p(arg280_1.data_ptr()), c_void_p(arg281_1.data_ptr()))
    del arg280_1
    del arg281_1
    del arg791_1
    del arg792_1
    del buf327
    # Source Nodes: [out_144], Original ATen: [aten.convolution]
    buf329 = extern_kernels.convolution(buf328, arg282_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf329, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg282_1
    buf330 = buf329; del buf329  # reuse
    buf331 = buf321; del buf321  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_92(c_void_p(buf330.data_ptr()), c_void_p(arg794_1.data_ptr()), c_void_p(arg795_1.data_ptr()), c_void_p(arg283_1.data_ptr()), c_void_p(arg284_1.data_ptr()), c_void_p(arg285_1.data_ptr()), c_void_p(buf331.data_ptr()))
    del arg283_1
    del arg284_1
    del arg285_1
    del arg794_1
    del arg795_1
    # Source Nodes: [sp_235], Original ATen: [aten.convolution]
    buf332 = extern_kernels.convolution(reinterpret_tensor(buf330, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf331, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf332, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf343 = reinterpret_tensor(buf326, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf326  # reuse
    buf333 = reinterpret_tensor(buf343, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf334 = buf322; del buf322  # reuse
    buf335 = buf331; del buf331  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_93(c_void_p(buf332.data_ptr()), c_void_p(arg797_1.data_ptr()), c_void_p(arg798_1.data_ptr()), c_void_p(arg286_1.data_ptr()), c_void_p(arg287_1.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(arg288_1.data_ptr()), c_void_p(buf333.data_ptr()), c_void_p(buf334.data_ptr()), c_void_p(buf335.data_ptr()))
    del arg286_1
    del arg287_1
    del arg288_1
    del arg797_1
    del arg798_1
    del buf332
    # Source Nodes: [sp_238, sp_239], Original ATen: [aten.add, aten.convolution]
    buf336 = extern_kernels.convolution(buf334, buf335, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf336, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf337 = reinterpret_tensor(buf343, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf338 = buf334; del buf334  # reuse
    buf339 = buf335; del buf335  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_94(c_void_p(buf336.data_ptr()), c_void_p(arg800_1.data_ptr()), c_void_p(arg801_1.data_ptr()), c_void_p(arg289_1.data_ptr()), c_void_p(arg290_1.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(arg291_1.data_ptr()), c_void_p(buf337.data_ptr()), c_void_p(buf338.data_ptr()), c_void_p(buf339.data_ptr()))
    del arg289_1
    del arg290_1
    del arg291_1
    del arg800_1
    del arg801_1
    del buf336
    # Source Nodes: [sp_242, sp_243], Original ATen: [aten.add, aten.convolution]
    buf340 = extern_kernels.convolution(buf338, buf339, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf340, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf338
    buf341 = reinterpret_tensor(buf343, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf342 = reinterpret_tensor(buf343, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf344 = reinterpret_tensor(buf325, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf325  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_95(c_void_p(buf340.data_ptr()), c_void_p(arg803_1.data_ptr()), c_void_p(arg804_1.data_ptr()), c_void_p(arg292_1.data_ptr()), c_void_p(arg293_1.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(buf343.data_ptr()), c_void_p(buf341.data_ptr()), c_void_p(buf342.data_ptr()), c_void_p(buf344.data_ptr()))
    del arg292_1
    del arg293_1
    del arg803_1
    del arg804_1
    del buf330
    del buf333
    del buf337
    del buf341
    del buf342
    # Source Nodes: [out_148], Original ATen: [aten.convolution]
    buf345 = extern_kernels.convolution(buf344, arg294_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf345, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg294_1
    buf346 = buf328; del buf328  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_96(c_void_p(buf346.data_ptr()), c_void_p(buf345.data_ptr()), c_void_p(arg806_1.data_ptr()), c_void_p(arg807_1.data_ptr()), c_void_p(arg295_1.data_ptr()), c_void_p(arg296_1.data_ptr()))
    del arg295_1
    del arg296_1
    del arg806_1
    del arg807_1
    del buf345
    # Source Nodes: [out_152], Original ATen: [aten.convolution]
    buf347 = extern_kernels.convolution(buf346, arg297_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf347, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg297_1
    buf348 = buf347; del buf347  # reuse
    buf349 = buf339; del buf339  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_97(c_void_p(buf348.data_ptr()), c_void_p(arg809_1.data_ptr()), c_void_p(arg810_1.data_ptr()), c_void_p(arg298_1.data_ptr()), c_void_p(arg299_1.data_ptr()), c_void_p(arg300_1.data_ptr()), c_void_p(buf349.data_ptr()))
    del arg298_1
    del arg299_1
    del arg300_1
    del arg809_1
    del arg810_1
    # Source Nodes: [sp_248], Original ATen: [aten.convolution]
    buf350 = extern_kernels.convolution(reinterpret_tensor(buf348, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf349, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf350, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf361 = reinterpret_tensor(buf344, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf344  # reuse
    buf351 = reinterpret_tensor(buf361, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf352 = buf340; del buf340  # reuse
    buf353 = buf349; del buf349  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_98(c_void_p(buf350.data_ptr()), c_void_p(arg812_1.data_ptr()), c_void_p(arg813_1.data_ptr()), c_void_p(arg301_1.data_ptr()), c_void_p(arg302_1.data_ptr()), c_void_p(buf348.data_ptr()), c_void_p(arg303_1.data_ptr()), c_void_p(buf351.data_ptr()), c_void_p(buf352.data_ptr()), c_void_p(buf353.data_ptr()))
    del arg301_1
    del arg302_1
    del arg303_1
    del arg812_1
    del arg813_1
    del buf350
    # Source Nodes: [sp_251, sp_252], Original ATen: [aten.add, aten.convolution]
    buf354 = extern_kernels.convolution(buf352, buf353, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf354, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf355 = reinterpret_tensor(buf361, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf356 = buf352; del buf352  # reuse
    buf357 = buf353; del buf353  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_99(c_void_p(buf354.data_ptr()), c_void_p(arg815_1.data_ptr()), c_void_p(arg816_1.data_ptr()), c_void_p(arg304_1.data_ptr()), c_void_p(arg305_1.data_ptr()), c_void_p(buf348.data_ptr()), c_void_p(arg306_1.data_ptr()), c_void_p(buf355.data_ptr()), c_void_p(buf356.data_ptr()), c_void_p(buf357.data_ptr()))
    del arg304_1
    del arg305_1
    del arg306_1
    del arg815_1
    del arg816_1
    del buf354
    # Source Nodes: [sp_255, sp_256], Original ATen: [aten.add, aten.convolution]
    buf358 = extern_kernels.convolution(buf356, buf357, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf358, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf356
    buf359 = reinterpret_tensor(buf361, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf360 = reinterpret_tensor(buf361, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf362 = reinterpret_tensor(buf343, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf343  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_100(c_void_p(buf358.data_ptr()), c_void_p(arg818_1.data_ptr()), c_void_p(arg819_1.data_ptr()), c_void_p(arg307_1.data_ptr()), c_void_p(arg308_1.data_ptr()), c_void_p(buf348.data_ptr()), c_void_p(buf361.data_ptr()), c_void_p(buf359.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(buf362.data_ptr()))
    del arg307_1
    del arg308_1
    del arg818_1
    del arg819_1
    del buf348
    del buf351
    del buf355
    del buf359
    del buf360
    # Source Nodes: [out_156], Original ATen: [aten.convolution]
    buf363 = extern_kernels.convolution(buf362, arg309_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf363, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg309_1
    buf364 = buf346; del buf346  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_101(c_void_p(buf364.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(arg821_1.data_ptr()), c_void_p(arg822_1.data_ptr()), c_void_p(arg310_1.data_ptr()), c_void_p(arg311_1.data_ptr()))
    del arg310_1
    del arg311_1
    del arg821_1
    del arg822_1
    del buf363
    # Source Nodes: [out_160], Original ATen: [aten.convolution]
    buf365 = extern_kernels.convolution(buf364, arg312_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf365, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg312_1
    buf366 = buf365; del buf365  # reuse
    buf367 = buf357; del buf357  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_102(c_void_p(buf366.data_ptr()), c_void_p(arg824_1.data_ptr()), c_void_p(arg825_1.data_ptr()), c_void_p(arg313_1.data_ptr()), c_void_p(arg314_1.data_ptr()), c_void_p(arg315_1.data_ptr()), c_void_p(buf367.data_ptr()))
    del arg313_1
    del arg314_1
    del arg315_1
    del arg824_1
    del arg825_1
    # Source Nodes: [sp_261], Original ATen: [aten.convolution]
    buf368 = extern_kernels.convolution(reinterpret_tensor(buf366, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf367, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf368, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf379 = reinterpret_tensor(buf362, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf362  # reuse
    buf369 = reinterpret_tensor(buf379, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf370 = buf358; del buf358  # reuse
    buf371 = buf367; del buf367  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_103(c_void_p(buf368.data_ptr()), c_void_p(arg827_1.data_ptr()), c_void_p(arg828_1.data_ptr()), c_void_p(arg316_1.data_ptr()), c_void_p(arg317_1.data_ptr()), c_void_p(buf366.data_ptr()), c_void_p(arg318_1.data_ptr()), c_void_p(buf369.data_ptr()), c_void_p(buf370.data_ptr()), c_void_p(buf371.data_ptr()))
    del arg316_1
    del arg317_1
    del arg318_1
    del arg827_1
    del arg828_1
    del buf368
    # Source Nodes: [sp_264, sp_265], Original ATen: [aten.add, aten.convolution]
    buf372 = extern_kernels.convolution(buf370, buf371, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf372, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf373 = reinterpret_tensor(buf379, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf374 = buf370; del buf370  # reuse
    buf375 = buf371; del buf371  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_104(c_void_p(buf372.data_ptr()), c_void_p(arg830_1.data_ptr()), c_void_p(arg831_1.data_ptr()), c_void_p(arg319_1.data_ptr()), c_void_p(arg320_1.data_ptr()), c_void_p(buf366.data_ptr()), c_void_p(arg321_1.data_ptr()), c_void_p(buf373.data_ptr()), c_void_p(buf374.data_ptr()), c_void_p(buf375.data_ptr()))
    del arg319_1
    del arg320_1
    del arg321_1
    del arg830_1
    del arg831_1
    del buf372
    # Source Nodes: [sp_268, sp_269], Original ATen: [aten.add, aten.convolution]
    buf376 = extern_kernels.convolution(buf374, buf375, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf376, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf374
    buf377 = reinterpret_tensor(buf379, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf378 = reinterpret_tensor(buf379, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf380 = reinterpret_tensor(buf361, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf361  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_105(c_void_p(buf376.data_ptr()), c_void_p(arg833_1.data_ptr()), c_void_p(arg834_1.data_ptr()), c_void_p(arg322_1.data_ptr()), c_void_p(arg323_1.data_ptr()), c_void_p(buf366.data_ptr()), c_void_p(buf379.data_ptr()), c_void_p(buf377.data_ptr()), c_void_p(buf378.data_ptr()), c_void_p(buf380.data_ptr()))
    del arg322_1
    del arg323_1
    del arg833_1
    del arg834_1
    del buf366
    del buf369
    del buf373
    del buf377
    del buf378
    # Source Nodes: [out_164], Original ATen: [aten.convolution]
    buf381 = extern_kernels.convolution(buf380, arg324_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf381, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg324_1
    buf382 = buf364; del buf364  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_106(c_void_p(buf382.data_ptr()), c_void_p(buf381.data_ptr()), c_void_p(arg836_1.data_ptr()), c_void_p(arg837_1.data_ptr()), c_void_p(arg325_1.data_ptr()), c_void_p(arg326_1.data_ptr()))
    del arg325_1
    del arg326_1
    del arg836_1
    del arg837_1
    del buf381
    # Source Nodes: [out_168], Original ATen: [aten.convolution]
    buf383 = extern_kernels.convolution(buf382, arg327_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf383, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg327_1
    buf384 = buf383; del buf383  # reuse
    buf385 = buf375; del buf375  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_107(c_void_p(buf384.data_ptr()), c_void_p(arg839_1.data_ptr()), c_void_p(arg840_1.data_ptr()), c_void_p(arg328_1.data_ptr()), c_void_p(arg329_1.data_ptr()), c_void_p(arg330_1.data_ptr()), c_void_p(buf385.data_ptr()))
    del arg328_1
    del arg329_1
    del arg330_1
    del arg839_1
    del arg840_1
    # Source Nodes: [sp_274], Original ATen: [aten.convolution]
    buf386 = extern_kernels.convolution(reinterpret_tensor(buf384, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf385, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf386, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf397 = reinterpret_tensor(buf380, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf380  # reuse
    buf387 = reinterpret_tensor(buf397, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf388 = buf376; del buf376  # reuse
    buf389 = buf385; del buf385  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_108(c_void_p(buf386.data_ptr()), c_void_p(arg842_1.data_ptr()), c_void_p(arg843_1.data_ptr()), c_void_p(arg331_1.data_ptr()), c_void_p(arg332_1.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(arg333_1.data_ptr()), c_void_p(buf387.data_ptr()), c_void_p(buf388.data_ptr()), c_void_p(buf389.data_ptr()))
    del arg331_1
    del arg332_1
    del arg333_1
    del arg842_1
    del arg843_1
    del buf386
    # Source Nodes: [sp_277, sp_278], Original ATen: [aten.add, aten.convolution]
    buf390 = extern_kernels.convolution(buf388, buf389, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf390, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf391 = reinterpret_tensor(buf397, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf392 = buf388; del buf388  # reuse
    buf393 = buf389; del buf389  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_109(c_void_p(buf390.data_ptr()), c_void_p(arg845_1.data_ptr()), c_void_p(arg846_1.data_ptr()), c_void_p(arg334_1.data_ptr()), c_void_p(arg335_1.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(arg336_1.data_ptr()), c_void_p(buf391.data_ptr()), c_void_p(buf392.data_ptr()), c_void_p(buf393.data_ptr()))
    del arg334_1
    del arg335_1
    del arg336_1
    del arg845_1
    del arg846_1
    del buf390
    # Source Nodes: [sp_281, sp_282], Original ATen: [aten.add, aten.convolution]
    buf394 = extern_kernels.convolution(buf392, buf393, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf394, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf392
    buf395 = reinterpret_tensor(buf397, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf396 = reinterpret_tensor(buf397, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf398 = reinterpret_tensor(buf379, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf379  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_110(c_void_p(buf394.data_ptr()), c_void_p(arg848_1.data_ptr()), c_void_p(arg849_1.data_ptr()), c_void_p(arg337_1.data_ptr()), c_void_p(arg338_1.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf397.data_ptr()), c_void_p(buf395.data_ptr()), c_void_p(buf396.data_ptr()), c_void_p(buf398.data_ptr()))
    del arg337_1
    del arg338_1
    del arg848_1
    del arg849_1
    del buf384
    del buf387
    del buf391
    del buf395
    del buf396
    # Source Nodes: [out_172], Original ATen: [aten.convolution]
    buf399 = extern_kernels.convolution(buf398, arg339_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf399, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg339_1
    buf400 = buf382; del buf382  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_111(c_void_p(buf400.data_ptr()), c_void_p(buf399.data_ptr()), c_void_p(arg851_1.data_ptr()), c_void_p(arg852_1.data_ptr()), c_void_p(arg340_1.data_ptr()), c_void_p(arg341_1.data_ptr()))
    del arg340_1
    del arg341_1
    del arg851_1
    del arg852_1
    del buf399
    # Source Nodes: [out_176], Original ATen: [aten.convolution]
    buf401 = extern_kernels.convolution(buf400, arg342_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf401, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg342_1
    buf402 = buf401; del buf401  # reuse
    buf403 = buf393; del buf393  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_112(c_void_p(buf402.data_ptr()), c_void_p(arg854_1.data_ptr()), c_void_p(arg855_1.data_ptr()), c_void_p(arg343_1.data_ptr()), c_void_p(arg344_1.data_ptr()), c_void_p(arg345_1.data_ptr()), c_void_p(buf403.data_ptr()))
    del arg343_1
    del arg344_1
    del arg345_1
    del arg854_1
    del arg855_1
    # Source Nodes: [sp_287], Original ATen: [aten.convolution]
    buf404 = extern_kernels.convolution(reinterpret_tensor(buf402, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf403, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf404, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf415 = reinterpret_tensor(buf398, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf398  # reuse
    buf405 = reinterpret_tensor(buf415, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf406 = buf394; del buf394  # reuse
    buf407 = buf403; del buf403  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_113(c_void_p(buf404.data_ptr()), c_void_p(arg857_1.data_ptr()), c_void_p(arg858_1.data_ptr()), c_void_p(arg346_1.data_ptr()), c_void_p(arg347_1.data_ptr()), c_void_p(buf402.data_ptr()), c_void_p(arg348_1.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(buf406.data_ptr()), c_void_p(buf407.data_ptr()))
    del arg346_1
    del arg347_1
    del arg348_1
    del arg857_1
    del arg858_1
    del buf404
    # Source Nodes: [sp_290, sp_291], Original ATen: [aten.add, aten.convolution]
    buf408 = extern_kernels.convolution(buf406, buf407, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf408, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf409 = reinterpret_tensor(buf415, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf410 = buf406; del buf406  # reuse
    buf411 = buf407; del buf407  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_114(c_void_p(buf408.data_ptr()), c_void_p(arg860_1.data_ptr()), c_void_p(arg861_1.data_ptr()), c_void_p(arg349_1.data_ptr()), c_void_p(arg350_1.data_ptr()), c_void_p(buf402.data_ptr()), c_void_p(arg351_1.data_ptr()), c_void_p(buf409.data_ptr()), c_void_p(buf410.data_ptr()), c_void_p(buf411.data_ptr()))
    del arg349_1
    del arg350_1
    del arg351_1
    del arg860_1
    del arg861_1
    del buf408
    # Source Nodes: [sp_294, sp_295], Original ATen: [aten.add, aten.convolution]
    buf412 = extern_kernels.convolution(buf410, buf411, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf412, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf410
    buf413 = reinterpret_tensor(buf415, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf414 = reinterpret_tensor(buf415, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf416 = reinterpret_tensor(buf397, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf397  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_115(c_void_p(buf412.data_ptr()), c_void_p(arg863_1.data_ptr()), c_void_p(arg864_1.data_ptr()), c_void_p(arg352_1.data_ptr()), c_void_p(arg353_1.data_ptr()), c_void_p(buf402.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(buf413.data_ptr()), c_void_p(buf414.data_ptr()), c_void_p(buf416.data_ptr()))
    del arg352_1
    del arg353_1
    del arg863_1
    del arg864_1
    del buf402
    del buf405
    del buf409
    del buf413
    del buf414
    # Source Nodes: [out_180], Original ATen: [aten.convolution]
    buf417 = extern_kernels.convolution(buf416, arg354_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf417, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg354_1
    buf418 = buf400; del buf400  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_116(c_void_p(buf418.data_ptr()), c_void_p(buf417.data_ptr()), c_void_p(arg866_1.data_ptr()), c_void_p(arg867_1.data_ptr()), c_void_p(arg355_1.data_ptr()), c_void_p(arg356_1.data_ptr()))
    del arg355_1
    del arg356_1
    del arg866_1
    del arg867_1
    del buf417
    # Source Nodes: [out_184], Original ATen: [aten.convolution]
    buf419 = extern_kernels.convolution(buf418, arg357_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf419, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg357_1
    buf420 = buf419; del buf419  # reuse
    buf421 = buf411; del buf411  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_117(c_void_p(buf420.data_ptr()), c_void_p(arg869_1.data_ptr()), c_void_p(arg870_1.data_ptr()), c_void_p(arg358_1.data_ptr()), c_void_p(arg359_1.data_ptr()), c_void_p(arg360_1.data_ptr()), c_void_p(buf421.data_ptr()))
    del arg358_1
    del arg359_1
    del arg360_1
    del arg869_1
    del arg870_1
    # Source Nodes: [sp_300], Original ATen: [aten.convolution]
    buf422 = extern_kernels.convolution(reinterpret_tensor(buf420, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf421, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf422, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf433 = reinterpret_tensor(buf416, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf416  # reuse
    buf423 = reinterpret_tensor(buf433, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf424 = buf412; del buf412  # reuse
    buf425 = buf421; del buf421  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_118(c_void_p(buf422.data_ptr()), c_void_p(arg872_1.data_ptr()), c_void_p(arg873_1.data_ptr()), c_void_p(arg361_1.data_ptr()), c_void_p(arg362_1.data_ptr()), c_void_p(buf420.data_ptr()), c_void_p(arg363_1.data_ptr()), c_void_p(buf423.data_ptr()), c_void_p(buf424.data_ptr()), c_void_p(buf425.data_ptr()))
    del arg361_1
    del arg362_1
    del arg363_1
    del arg872_1
    del arg873_1
    del buf422
    # Source Nodes: [sp_303, sp_304], Original ATen: [aten.add, aten.convolution]
    buf426 = extern_kernels.convolution(buf424, buf425, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf426, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf427 = reinterpret_tensor(buf433, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf428 = buf424; del buf424  # reuse
    buf429 = buf425; del buf425  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_119(c_void_p(buf426.data_ptr()), c_void_p(arg875_1.data_ptr()), c_void_p(arg876_1.data_ptr()), c_void_p(arg364_1.data_ptr()), c_void_p(arg365_1.data_ptr()), c_void_p(buf420.data_ptr()), c_void_p(arg366_1.data_ptr()), c_void_p(buf427.data_ptr()), c_void_p(buf428.data_ptr()), c_void_p(buf429.data_ptr()))
    del arg364_1
    del arg365_1
    del arg366_1
    del arg875_1
    del arg876_1
    del buf426
    # Source Nodes: [sp_307, sp_308], Original ATen: [aten.add, aten.convolution]
    buf430 = extern_kernels.convolution(buf428, buf429, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf430, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf428
    buf431 = reinterpret_tensor(buf433, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf432 = reinterpret_tensor(buf433, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf434 = reinterpret_tensor(buf415, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf415  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_120(c_void_p(buf430.data_ptr()), c_void_p(arg878_1.data_ptr()), c_void_p(arg879_1.data_ptr()), c_void_p(arg367_1.data_ptr()), c_void_p(arg368_1.data_ptr()), c_void_p(buf420.data_ptr()), c_void_p(buf433.data_ptr()), c_void_p(buf431.data_ptr()), c_void_p(buf432.data_ptr()), c_void_p(buf434.data_ptr()))
    del arg367_1
    del arg368_1
    del arg878_1
    del arg879_1
    del buf420
    del buf423
    del buf427
    del buf431
    del buf432
    # Source Nodes: [out_188], Original ATen: [aten.convolution]
    buf435 = extern_kernels.convolution(buf434, arg369_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf435, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg369_1
    buf436 = buf418; del buf418  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_121(c_void_p(buf436.data_ptr()), c_void_p(buf435.data_ptr()), c_void_p(arg881_1.data_ptr()), c_void_p(arg882_1.data_ptr()), c_void_p(arg370_1.data_ptr()), c_void_p(arg371_1.data_ptr()))
    del arg370_1
    del arg371_1
    del arg881_1
    del arg882_1
    del buf435
    # Source Nodes: [out_192], Original ATen: [aten.convolution]
    buf437 = extern_kernels.convolution(buf436, arg372_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf437, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg372_1
    buf438 = buf437; del buf437  # reuse
    buf439 = buf429; del buf429  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_122(c_void_p(buf438.data_ptr()), c_void_p(arg884_1.data_ptr()), c_void_p(arg885_1.data_ptr()), c_void_p(arg373_1.data_ptr()), c_void_p(arg374_1.data_ptr()), c_void_p(arg375_1.data_ptr()), c_void_p(buf439.data_ptr()))
    del arg373_1
    del arg374_1
    del arg375_1
    del arg884_1
    del arg885_1
    # Source Nodes: [sp_313], Original ATen: [aten.convolution]
    buf440 = extern_kernels.convolution(reinterpret_tensor(buf438, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf439, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf440, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf451 = reinterpret_tensor(buf434, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf434  # reuse
    buf441 = reinterpret_tensor(buf451, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf442 = buf430; del buf430  # reuse
    buf443 = buf439; del buf439  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_123(c_void_p(buf440.data_ptr()), c_void_p(arg887_1.data_ptr()), c_void_p(arg888_1.data_ptr()), c_void_p(arg376_1.data_ptr()), c_void_p(arg377_1.data_ptr()), c_void_p(buf438.data_ptr()), c_void_p(arg378_1.data_ptr()), c_void_p(buf441.data_ptr()), c_void_p(buf442.data_ptr()), c_void_p(buf443.data_ptr()))
    del arg376_1
    del arg377_1
    del arg378_1
    del arg887_1
    del arg888_1
    del buf440
    # Source Nodes: [sp_316, sp_317], Original ATen: [aten.add, aten.convolution]
    buf444 = extern_kernels.convolution(buf442, buf443, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf444, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf445 = reinterpret_tensor(buf451, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf446 = buf442; del buf442  # reuse
    buf447 = buf443; del buf443  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_124(c_void_p(buf444.data_ptr()), c_void_p(arg890_1.data_ptr()), c_void_p(arg891_1.data_ptr()), c_void_p(arg379_1.data_ptr()), c_void_p(arg380_1.data_ptr()), c_void_p(buf438.data_ptr()), c_void_p(arg381_1.data_ptr()), c_void_p(buf445.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(buf447.data_ptr()))
    del arg379_1
    del arg380_1
    del arg381_1
    del arg890_1
    del arg891_1
    del buf444
    # Source Nodes: [sp_320, sp_321], Original ATen: [aten.add, aten.convolution]
    buf448 = extern_kernels.convolution(buf446, buf447, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf448, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf446
    buf449 = reinterpret_tensor(buf451, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf450 = reinterpret_tensor(buf451, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf452 = reinterpret_tensor(buf433, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf433  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_125(c_void_p(buf448.data_ptr()), c_void_p(arg893_1.data_ptr()), c_void_p(arg894_1.data_ptr()), c_void_p(arg382_1.data_ptr()), c_void_p(arg383_1.data_ptr()), c_void_p(buf438.data_ptr()), c_void_p(buf451.data_ptr()), c_void_p(buf449.data_ptr()), c_void_p(buf450.data_ptr()), c_void_p(buf452.data_ptr()))
    del arg382_1
    del arg383_1
    del arg893_1
    del arg894_1
    del buf438
    del buf441
    del buf445
    del buf449
    del buf450
    # Source Nodes: [out_196], Original ATen: [aten.convolution]
    buf453 = extern_kernels.convolution(buf452, arg384_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf453, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg384_1
    buf454 = buf436; del buf436  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_126(c_void_p(buf454.data_ptr()), c_void_p(buf453.data_ptr()), c_void_p(arg896_1.data_ptr()), c_void_p(arg897_1.data_ptr()), c_void_p(arg385_1.data_ptr()), c_void_p(arg386_1.data_ptr()))
    del arg385_1
    del arg386_1
    del arg896_1
    del arg897_1
    del buf453
    # Source Nodes: [out_200], Original ATen: [aten.convolution]
    buf455 = extern_kernels.convolution(buf454, arg387_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf455, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg387_1
    buf456 = buf455; del buf455  # reuse
    buf457 = buf447; del buf447  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_127(c_void_p(buf456.data_ptr()), c_void_p(arg899_1.data_ptr()), c_void_p(arg900_1.data_ptr()), c_void_p(arg388_1.data_ptr()), c_void_p(arg389_1.data_ptr()), c_void_p(arg390_1.data_ptr()), c_void_p(buf457.data_ptr()))
    del arg388_1
    del arg389_1
    del arg390_1
    del arg899_1
    del arg900_1
    # Source Nodes: [sp_326], Original ATen: [aten.convolution]
    buf458 = extern_kernels.convolution(reinterpret_tensor(buf456, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf457, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf458, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf469 = reinterpret_tensor(buf452, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf452  # reuse
    buf459 = reinterpret_tensor(buf469, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf460 = buf448; del buf448  # reuse
    buf461 = buf457; del buf457  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_128(c_void_p(buf458.data_ptr()), c_void_p(arg902_1.data_ptr()), c_void_p(arg903_1.data_ptr()), c_void_p(arg391_1.data_ptr()), c_void_p(arg392_1.data_ptr()), c_void_p(buf456.data_ptr()), c_void_p(arg393_1.data_ptr()), c_void_p(buf459.data_ptr()), c_void_p(buf460.data_ptr()), c_void_p(buf461.data_ptr()))
    del arg391_1
    del arg392_1
    del arg393_1
    del arg902_1
    del arg903_1
    del buf458
    # Source Nodes: [sp_329, sp_330], Original ATen: [aten.add, aten.convolution]
    buf462 = extern_kernels.convolution(buf460, buf461, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf462, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf463 = reinterpret_tensor(buf469, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf464 = buf460; del buf460  # reuse
    buf465 = buf461; del buf461  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_129(c_void_p(buf462.data_ptr()), c_void_p(arg905_1.data_ptr()), c_void_p(arg906_1.data_ptr()), c_void_p(arg394_1.data_ptr()), c_void_p(arg395_1.data_ptr()), c_void_p(buf456.data_ptr()), c_void_p(arg396_1.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf464.data_ptr()), c_void_p(buf465.data_ptr()))
    del arg394_1
    del arg395_1
    del arg396_1
    del arg905_1
    del arg906_1
    del buf462
    # Source Nodes: [sp_333, sp_334], Original ATen: [aten.add, aten.convolution]
    buf466 = extern_kernels.convolution(buf464, buf465, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf466, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf464
    buf467 = reinterpret_tensor(buf469, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf468 = reinterpret_tensor(buf469, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf470 = reinterpret_tensor(buf451, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf451  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_130(c_void_p(buf466.data_ptr()), c_void_p(arg908_1.data_ptr()), c_void_p(arg909_1.data_ptr()), c_void_p(arg397_1.data_ptr()), c_void_p(arg398_1.data_ptr()), c_void_p(buf456.data_ptr()), c_void_p(buf469.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(buf468.data_ptr()), c_void_p(buf470.data_ptr()))
    del arg397_1
    del arg398_1
    del arg908_1
    del arg909_1
    del buf456
    del buf459
    del buf463
    del buf467
    del buf468
    # Source Nodes: [out_204], Original ATen: [aten.convolution]
    buf471 = extern_kernels.convolution(buf470, arg399_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf471, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg399_1
    buf472 = buf454; del buf454  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_131(c_void_p(buf472.data_ptr()), c_void_p(buf471.data_ptr()), c_void_p(arg911_1.data_ptr()), c_void_p(arg912_1.data_ptr()), c_void_p(arg400_1.data_ptr()), c_void_p(arg401_1.data_ptr()))
    del arg400_1
    del arg401_1
    del arg911_1
    del arg912_1
    del buf471
    # Source Nodes: [out_208], Original ATen: [aten.convolution]
    buf473 = extern_kernels.convolution(buf472, arg402_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf473, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg402_1
    buf474 = buf473; del buf473  # reuse
    buf475 = buf465; del buf465  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_132(c_void_p(buf474.data_ptr()), c_void_p(arg914_1.data_ptr()), c_void_p(arg915_1.data_ptr()), c_void_p(arg403_1.data_ptr()), c_void_p(arg404_1.data_ptr()), c_void_p(arg405_1.data_ptr()), c_void_p(buf475.data_ptr()))
    del arg403_1
    del arg404_1
    del arg405_1
    del arg914_1
    del arg915_1
    # Source Nodes: [sp_339], Original ATen: [aten.convolution]
    buf476 = extern_kernels.convolution(reinterpret_tensor(buf474, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf475, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf476, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf487 = reinterpret_tensor(buf470, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf470  # reuse
    buf477 = reinterpret_tensor(buf487, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf478 = buf466; del buf466  # reuse
    buf479 = buf475; del buf475  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_133(c_void_p(buf476.data_ptr()), c_void_p(arg917_1.data_ptr()), c_void_p(arg918_1.data_ptr()), c_void_p(arg406_1.data_ptr()), c_void_p(arg407_1.data_ptr()), c_void_p(buf474.data_ptr()), c_void_p(arg408_1.data_ptr()), c_void_p(buf477.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(buf479.data_ptr()))
    del arg406_1
    del arg407_1
    del arg408_1
    del arg917_1
    del arg918_1
    del buf476
    # Source Nodes: [sp_342, sp_343], Original ATen: [aten.add, aten.convolution]
    buf480 = extern_kernels.convolution(buf478, buf479, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf480, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf481 = reinterpret_tensor(buf487, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf482 = buf478; del buf478  # reuse
    buf483 = buf479; del buf479  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_134(c_void_p(buf480.data_ptr()), c_void_p(arg920_1.data_ptr()), c_void_p(arg921_1.data_ptr()), c_void_p(arg409_1.data_ptr()), c_void_p(arg410_1.data_ptr()), c_void_p(buf474.data_ptr()), c_void_p(arg411_1.data_ptr()), c_void_p(buf481.data_ptr()), c_void_p(buf482.data_ptr()), c_void_p(buf483.data_ptr()))
    del arg409_1
    del arg410_1
    del arg411_1
    del arg920_1
    del arg921_1
    del buf480
    # Source Nodes: [sp_346, sp_347], Original ATen: [aten.add, aten.convolution]
    buf484 = extern_kernels.convolution(buf482, buf483, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf484, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf482
    buf485 = reinterpret_tensor(buf487, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf486 = reinterpret_tensor(buf487, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf488 = reinterpret_tensor(buf469, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf469  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_135(c_void_p(buf484.data_ptr()), c_void_p(arg923_1.data_ptr()), c_void_p(arg924_1.data_ptr()), c_void_p(arg412_1.data_ptr()), c_void_p(arg413_1.data_ptr()), c_void_p(buf474.data_ptr()), c_void_p(buf487.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(buf486.data_ptr()), c_void_p(buf488.data_ptr()))
    del arg412_1
    del arg413_1
    del arg923_1
    del arg924_1
    del buf474
    del buf477
    del buf481
    del buf485
    del buf486
    # Source Nodes: [out_212], Original ATen: [aten.convolution]
    buf489 = extern_kernels.convolution(buf488, arg414_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf489, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg414_1
    buf490 = buf472; del buf472  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_136(c_void_p(buf490.data_ptr()), c_void_p(buf489.data_ptr()), c_void_p(arg926_1.data_ptr()), c_void_p(arg927_1.data_ptr()), c_void_p(arg415_1.data_ptr()), c_void_p(arg416_1.data_ptr()))
    del arg415_1
    del arg416_1
    del arg926_1
    del arg927_1
    del buf489
    # Source Nodes: [out_216], Original ATen: [aten.convolution]
    buf491 = extern_kernels.convolution(buf490, arg417_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf491, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg417_1
    buf492 = buf491; del buf491  # reuse
    buf493 = buf483; del buf483  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_137(c_void_p(buf492.data_ptr()), c_void_p(arg929_1.data_ptr()), c_void_p(arg930_1.data_ptr()), c_void_p(arg418_1.data_ptr()), c_void_p(arg419_1.data_ptr()), c_void_p(arg420_1.data_ptr()), c_void_p(buf493.data_ptr()))
    del arg418_1
    del arg419_1
    del arg420_1
    del arg929_1
    del arg930_1
    # Source Nodes: [sp_352], Original ATen: [aten.convolution]
    buf494 = extern_kernels.convolution(reinterpret_tensor(buf492, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf493, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf494, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf505 = reinterpret_tensor(buf488, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf488  # reuse
    buf495 = reinterpret_tensor(buf505, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf496 = buf484; del buf484  # reuse
    buf497 = buf493; del buf493  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_138(c_void_p(buf494.data_ptr()), c_void_p(arg932_1.data_ptr()), c_void_p(arg933_1.data_ptr()), c_void_p(arg421_1.data_ptr()), c_void_p(arg422_1.data_ptr()), c_void_p(buf492.data_ptr()), c_void_p(arg423_1.data_ptr()), c_void_p(buf495.data_ptr()), c_void_p(buf496.data_ptr()), c_void_p(buf497.data_ptr()))
    del arg421_1
    del arg422_1
    del arg423_1
    del arg932_1
    del arg933_1
    del buf494
    # Source Nodes: [sp_355, sp_356], Original ATen: [aten.add, aten.convolution]
    buf498 = extern_kernels.convolution(buf496, buf497, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf498, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf499 = reinterpret_tensor(buf505, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf500 = buf496; del buf496  # reuse
    buf501 = buf497; del buf497  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_139(c_void_p(buf498.data_ptr()), c_void_p(arg935_1.data_ptr()), c_void_p(arg936_1.data_ptr()), c_void_p(arg424_1.data_ptr()), c_void_p(arg425_1.data_ptr()), c_void_p(buf492.data_ptr()), c_void_p(arg426_1.data_ptr()), c_void_p(buf499.data_ptr()), c_void_p(buf500.data_ptr()), c_void_p(buf501.data_ptr()))
    del arg424_1
    del arg425_1
    del arg426_1
    del arg935_1
    del arg936_1
    del buf498
    # Source Nodes: [sp_359, sp_360], Original ATen: [aten.add, aten.convolution]
    buf502 = extern_kernels.convolution(buf500, buf501, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf502, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf500
    buf503 = reinterpret_tensor(buf505, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf504 = reinterpret_tensor(buf505, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf506 = reinterpret_tensor(buf487, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf487  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_140(c_void_p(buf502.data_ptr()), c_void_p(arg938_1.data_ptr()), c_void_p(arg939_1.data_ptr()), c_void_p(arg427_1.data_ptr()), c_void_p(arg428_1.data_ptr()), c_void_p(buf492.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(buf503.data_ptr()), c_void_p(buf504.data_ptr()), c_void_p(buf506.data_ptr()))
    del arg427_1
    del arg428_1
    del arg938_1
    del arg939_1
    del buf492
    del buf495
    del buf499
    del buf503
    del buf504
    # Source Nodes: [out_220], Original ATen: [aten.convolution]
    buf507 = extern_kernels.convolution(buf506, arg429_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf507, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg429_1
    buf508 = buf490; del buf490  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_141(c_void_p(buf508.data_ptr()), c_void_p(buf507.data_ptr()), c_void_p(arg941_1.data_ptr()), c_void_p(arg942_1.data_ptr()), c_void_p(arg430_1.data_ptr()), c_void_p(arg431_1.data_ptr()))
    del arg430_1
    del arg431_1
    del arg941_1
    del arg942_1
    del buf507
    # Source Nodes: [out_224], Original ATen: [aten.convolution]
    buf509 = extern_kernels.convolution(buf508, arg432_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf509, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg432_1
    buf510 = buf509; del buf509  # reuse
    buf511 = buf501; del buf501  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_142(c_void_p(buf510.data_ptr()), c_void_p(arg944_1.data_ptr()), c_void_p(arg945_1.data_ptr()), c_void_p(arg433_1.data_ptr()), c_void_p(arg434_1.data_ptr()), c_void_p(arg435_1.data_ptr()), c_void_p(buf511.data_ptr()))
    del arg433_1
    del arg434_1
    del arg435_1
    del arg944_1
    del arg945_1
    # Source Nodes: [sp_365], Original ATen: [aten.convolution]
    buf512 = extern_kernels.convolution(reinterpret_tensor(buf510, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf511, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf512, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf523 = reinterpret_tensor(buf506, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf506  # reuse
    buf513 = reinterpret_tensor(buf523, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf514 = buf502; del buf502  # reuse
    buf515 = buf511; del buf511  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_143(c_void_p(buf512.data_ptr()), c_void_p(arg947_1.data_ptr()), c_void_p(arg948_1.data_ptr()), c_void_p(arg436_1.data_ptr()), c_void_p(arg437_1.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(arg438_1.data_ptr()), c_void_p(buf513.data_ptr()), c_void_p(buf514.data_ptr()), c_void_p(buf515.data_ptr()))
    del arg436_1
    del arg437_1
    del arg438_1
    del arg947_1
    del arg948_1
    del buf512
    # Source Nodes: [sp_368, sp_369], Original ATen: [aten.add, aten.convolution]
    buf516 = extern_kernels.convolution(buf514, buf515, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf516, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf517 = reinterpret_tensor(buf523, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf518 = buf514; del buf514  # reuse
    buf519 = buf515; del buf515  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_144(c_void_p(buf516.data_ptr()), c_void_p(arg950_1.data_ptr()), c_void_p(arg951_1.data_ptr()), c_void_p(arg439_1.data_ptr()), c_void_p(arg440_1.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(arg441_1.data_ptr()), c_void_p(buf517.data_ptr()), c_void_p(buf518.data_ptr()), c_void_p(buf519.data_ptr()))
    del arg439_1
    del arg440_1
    del arg441_1
    del arg950_1
    del arg951_1
    del buf516
    # Source Nodes: [sp_372, sp_373], Original ATen: [aten.add, aten.convolution]
    buf520 = extern_kernels.convolution(buf518, buf519, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf520, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf518
    buf521 = reinterpret_tensor(buf523, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf522 = reinterpret_tensor(buf523, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf524 = reinterpret_tensor(buf505, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf505  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_145(c_void_p(buf520.data_ptr()), c_void_p(arg953_1.data_ptr()), c_void_p(arg954_1.data_ptr()), c_void_p(arg442_1.data_ptr()), c_void_p(arg443_1.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(buf523.data_ptr()), c_void_p(buf521.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(buf524.data_ptr()))
    del arg442_1
    del arg443_1
    del arg953_1
    del arg954_1
    del buf510
    del buf513
    del buf517
    del buf521
    del buf522
    # Source Nodes: [out_228], Original ATen: [aten.convolution]
    buf525 = extern_kernels.convolution(buf524, arg444_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf525, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg444_1
    buf526 = buf508; del buf508  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_146(c_void_p(buf526.data_ptr()), c_void_p(buf525.data_ptr()), c_void_p(arg956_1.data_ptr()), c_void_p(arg957_1.data_ptr()), c_void_p(arg445_1.data_ptr()), c_void_p(arg446_1.data_ptr()))
    del arg445_1
    del arg446_1
    del arg956_1
    del arg957_1
    del buf525
    # Source Nodes: [out_232], Original ATen: [aten.convolution]
    buf527 = extern_kernels.convolution(buf526, arg447_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf527, (8, 416, 14, 14), (81536, 1, 5824, 416))
    del arg447_1
    buf528 = buf527; del buf527  # reuse
    buf529 = buf519; del buf519  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_147(c_void_p(buf528.data_ptr()), c_void_p(arg959_1.data_ptr()), c_void_p(arg960_1.data_ptr()), c_void_p(arg448_1.data_ptr()), c_void_p(arg449_1.data_ptr()), c_void_p(arg450_1.data_ptr()), c_void_p(buf529.data_ptr()))
    del arg448_1
    del arg449_1
    del arg450_1
    del arg959_1
    del arg960_1
    # Source Nodes: [sp_378], Original ATen: [aten.convolution]
    buf530 = extern_kernels.convolution(reinterpret_tensor(buf528, (8, 104, 14, 14), (81536, 1, 5824, 416), 0), buf529, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf530, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf541 = reinterpret_tensor(buf524, (8, 416, 14, 14), (81536, 196, 14, 1), 0); del buf524  # reuse
    buf531 = reinterpret_tensor(buf541, (8, 104, 14, 14), (81536, 196, 14, 1), 0)  # alias
    buf532 = buf520; del buf520  # reuse
    buf533 = buf529; del buf529  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_148(c_void_p(buf530.data_ptr()), c_void_p(arg962_1.data_ptr()), c_void_p(arg963_1.data_ptr()), c_void_p(arg451_1.data_ptr()), c_void_p(arg452_1.data_ptr()), c_void_p(buf528.data_ptr()), c_void_p(arg453_1.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(buf532.data_ptr()), c_void_p(buf533.data_ptr()))
    del arg451_1
    del arg452_1
    del arg453_1
    del arg962_1
    del arg963_1
    del buf530
    # Source Nodes: [sp_381, sp_382], Original ATen: [aten.add, aten.convolution]
    buf534 = extern_kernels.convolution(buf532, buf533, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf534, (8, 104, 14, 14), (20384, 1, 1456, 104))
    buf535 = reinterpret_tensor(buf541, (8, 104, 14, 14), (81536, 196, 14, 1), 20384)  # alias
    buf536 = buf532; del buf532  # reuse
    buf537 = buf533; del buf533  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_149(c_void_p(buf534.data_ptr()), c_void_p(arg965_1.data_ptr()), c_void_p(arg966_1.data_ptr()), c_void_p(arg454_1.data_ptr()), c_void_p(arg455_1.data_ptr()), c_void_p(buf528.data_ptr()), c_void_p(arg456_1.data_ptr()), c_void_p(buf535.data_ptr()), c_void_p(buf536.data_ptr()), c_void_p(buf537.data_ptr()))
    del arg454_1
    del arg455_1
    del arg456_1
    del arg965_1
    del arg966_1
    del buf534
    # Source Nodes: [sp_385, sp_386], Original ATen: [aten.add, aten.convolution]
    buf538 = extern_kernels.convolution(buf536, buf537, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf538, (8, 104, 14, 14), (20384, 1, 1456, 104))
    del buf536
    del buf537
    buf539 = reinterpret_tensor(buf541, (8, 104, 14, 14), (81536, 196, 14, 1), 40768)  # alias
    buf540 = reinterpret_tensor(buf541, (8, 104, 14, 14), (81536, 196, 14, 1), 61152)  # alias
    buf542 = reinterpret_tensor(buf523, (8, 416, 14, 14), (81536, 1, 5824, 416), 0); del buf523  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_150(c_void_p(buf538.data_ptr()), c_void_p(arg968_1.data_ptr()), c_void_p(arg969_1.data_ptr()), c_void_p(arg457_1.data_ptr()), c_void_p(arg458_1.data_ptr()), c_void_p(buf528.data_ptr()), c_void_p(buf541.data_ptr()), c_void_p(buf539.data_ptr()), c_void_p(buf540.data_ptr()), c_void_p(buf542.data_ptr()))
    del arg457_1
    del arg458_1
    del arg968_1
    del arg969_1
    del buf528
    del buf531
    del buf535
    del buf538
    del buf539
    del buf540
    del buf541
    # Source Nodes: [out_236], Original ATen: [aten.convolution]
    buf543 = extern_kernels.convolution(buf542, arg459_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf543, (8, 1024, 14, 14), (200704, 1, 14336, 1024))
    del arg459_1
    del buf542
    buf544 = buf526; del buf526  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_151(c_void_p(buf544.data_ptr()), c_void_p(buf543.data_ptr()), c_void_p(arg971_1.data_ptr()), c_void_p(arg972_1.data_ptr()), c_void_p(arg460_1.data_ptr()), c_void_p(arg461_1.data_ptr()))
    del arg460_1
    del arg461_1
    del arg971_1
    del arg972_1
    del buf543
    # Source Nodes: [out_240], Original ATen: [aten.convolution]
    buf545 = extern_kernels.convolution(buf544, arg462_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf545, (8, 832, 14, 14), (163072, 1, 11648, 832))
    del arg462_1
    buf546 = buf545; del buf545  # reuse
    buf547 = empty_strided((208, 208, 3, 3), (1872, 1, 624, 208), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_152(c_void_p(buf546.data_ptr()), c_void_p(arg974_1.data_ptr()), c_void_p(arg975_1.data_ptr()), c_void_p(arg463_1.data_ptr()), c_void_p(arg464_1.data_ptr()), c_void_p(arg465_1.data_ptr()), c_void_p(buf547.data_ptr()))
    del arg463_1
    del arg464_1
    del arg465_1
    del arg974_1
    del arg975_1
    # Source Nodes: [sp_391], Original ATen: [aten.convolution]
    buf548 = extern_kernels.convolution(reinterpret_tensor(buf546, (8, 208, 14, 14), (163072, 1, 11648, 832), 0), buf547, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf548, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf549 = buf547; del buf547  # reuse
    cpp_fused_convolution_153(c_void_p(arg468_1.data_ptr()), c_void_p(buf549.data_ptr()))
    del arg468_1
    # Source Nodes: [sp_395], Original ATen: [aten.convolution]
    buf550 = extern_kernels.convolution(reinterpret_tensor(buf546, (8, 208, 14, 14), (163072, 1, 11648, 832), 208), buf549, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf550, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf551 = buf549; del buf549  # reuse
    cpp_fused_convolution_154(c_void_p(arg471_1.data_ptr()), c_void_p(buf551.data_ptr()))
    del arg471_1
    # Source Nodes: [sp_399], Original ATen: [aten.convolution]
    buf552 = extern_kernels.convolution(reinterpret_tensor(buf546, (8, 208, 14, 14), (163072, 1, 11648, 832), 416), buf551, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf552, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf557 = reinterpret_tensor(buf124, (8, 832, 7, 7), (40768, 49, 7, 1), 0); del buf124  # reuse
    buf553 = reinterpret_tensor(buf557, (8, 208, 7, 7), (40768, 49, 7, 1), 30576)  # alias
    buf554 = reinterpret_tensor(buf557, (8, 208, 7, 7), (40768, 49, 7, 1), 0)  # alias
    buf555 = reinterpret_tensor(buf557, (8, 208, 7, 7), (40768, 49, 7, 1), 10192)  # alias
    buf556 = reinterpret_tensor(buf557, (8, 208, 7, 7), (40768, 49, 7, 1), 20384)  # alias
    buf558 = reinterpret_tensor(buf122, (8, 832, 7, 7), (40768, 1, 5824, 832), 0); del buf122  # reuse
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_convolution_relu_155(c_void_p(buf546.data_ptr()), c_void_p(buf548.data_ptr()), c_void_p(arg977_1.data_ptr()), c_void_p(arg978_1.data_ptr()), c_void_p(arg466_1.data_ptr()), c_void_p(arg467_1.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(arg980_1.data_ptr()), c_void_p(arg981_1.data_ptr()), c_void_p(arg469_1.data_ptr()), c_void_p(arg470_1.data_ptr()), c_void_p(buf552.data_ptr()), c_void_p(arg983_1.data_ptr()), c_void_p(arg984_1.data_ptr()), c_void_p(arg472_1.data_ptr()), c_void_p(arg473_1.data_ptr()), c_void_p(buf557.data_ptr()), c_void_p(buf553.data_ptr()), c_void_p(buf554.data_ptr()), c_void_p(buf555.data_ptr()), c_void_p(buf556.data_ptr()), c_void_p(buf558.data_ptr()))
    del arg466_1
    del arg467_1
    del arg469_1
    del arg470_1
    del arg472_1
    del arg473_1
    del arg977_1
    del arg978_1
    del arg980_1
    del arg981_1
    del arg983_1
    del arg984_1
    del buf546
    del buf548
    del buf550
    del buf553
    del buf554
    del buf555
    del buf556
    # Source Nodes: [out_244], Original ATen: [aten.convolution]
    buf559 = extern_kernels.convolution(buf558, arg474_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf559, (8, 2048, 7, 7), (100352, 1, 14336, 2048))
    del arg474_1
    # Source Nodes: [getattr_l__mod___layer4___0___downsample_0], Original ATen: [aten.convolution]
    buf560 = extern_kernels.convolution(buf544, arg477_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf560, (8, 2048, 7, 7), (100352, 1, 14336, 2048))
    del arg477_1
    del buf544
    buf561 = buf559; del buf559  # reuse
    buf562 = buf561; del buf561  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_156(c_void_p(buf562.data_ptr()), c_void_p(arg986_1.data_ptr()), c_void_p(arg987_1.data_ptr()), c_void_p(arg475_1.data_ptr()), c_void_p(arg476_1.data_ptr()), c_void_p(buf560.data_ptr()), c_void_p(arg989_1.data_ptr()), c_void_p(arg990_1.data_ptr()), c_void_p(arg478_1.data_ptr()), c_void_p(arg479_1.data_ptr()))
    del arg475_1
    del arg476_1
    del arg478_1
    del arg479_1
    del arg986_1
    del arg987_1
    del arg989_1
    del arg990_1
    del buf560
    # Source Nodes: [out_248, shortcut_35], Original ATen: [aten.convolution, aten.relu]
    buf563 = extern_kernels.convolution(buf562, arg480_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf563, (8, 832, 7, 7), (40768, 1, 5824, 832))
    del arg480_1
    buf564 = buf563; del buf563  # reuse
    buf565 = buf551; del buf551  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_157(c_void_p(buf564.data_ptr()), c_void_p(arg992_1.data_ptr()), c_void_p(arg993_1.data_ptr()), c_void_p(arg481_1.data_ptr()), c_void_p(arg482_1.data_ptr()), c_void_p(arg483_1.data_ptr()), c_void_p(buf565.data_ptr()))
    del arg481_1
    del arg482_1
    del arg483_1
    del arg992_1
    del arg993_1
    # Source Nodes: [sp_404], Original ATen: [aten.convolution]
    buf566 = extern_kernels.convolution(reinterpret_tensor(buf564, (8, 208, 7, 7), (40768, 1, 5824, 832), 0), buf565, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf566, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf577 = reinterpret_tensor(buf558, (8, 832, 7, 7), (40768, 49, 7, 1), 0); del buf558  # reuse
    buf567 = reinterpret_tensor(buf577, (8, 208, 7, 7), (40768, 49, 7, 1), 0)  # alias
    buf568 = buf552; del buf552  # reuse
    buf569 = buf565; del buf565  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_158(c_void_p(buf566.data_ptr()), c_void_p(arg995_1.data_ptr()), c_void_p(arg996_1.data_ptr()), c_void_p(arg484_1.data_ptr()), c_void_p(arg485_1.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(arg486_1.data_ptr()), c_void_p(buf567.data_ptr()), c_void_p(buf568.data_ptr()), c_void_p(buf569.data_ptr()))
    del arg484_1
    del arg485_1
    del arg486_1
    del arg995_1
    del arg996_1
    del buf566
    # Source Nodes: [sp_407, sp_408], Original ATen: [aten.add, aten.convolution]
    buf570 = extern_kernels.convolution(buf568, buf569, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf570, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf571 = reinterpret_tensor(buf577, (8, 208, 7, 7), (40768, 49, 7, 1), 10192)  # alias
    buf572 = buf568; del buf568  # reuse
    buf573 = buf569; del buf569  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_159(c_void_p(buf570.data_ptr()), c_void_p(arg998_1.data_ptr()), c_void_p(arg999_1.data_ptr()), c_void_p(arg487_1.data_ptr()), c_void_p(arg488_1.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(arg489_1.data_ptr()), c_void_p(buf571.data_ptr()), c_void_p(buf572.data_ptr()), c_void_p(buf573.data_ptr()))
    del arg487_1
    del arg488_1
    del arg489_1
    del arg998_1
    del arg999_1
    del buf570
    # Source Nodes: [sp_411, sp_412], Original ATen: [aten.add, aten.convolution]
    buf574 = extern_kernels.convolution(buf572, buf573, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf574, (8, 208, 7, 7), (10192, 1, 1456, 208))
    del buf572
    buf575 = reinterpret_tensor(buf577, (8, 208, 7, 7), (40768, 49, 7, 1), 20384)  # alias
    buf576 = reinterpret_tensor(buf577, (8, 208, 7, 7), (40768, 49, 7, 1), 30576)  # alias
    buf578 = reinterpret_tensor(buf557, (8, 832, 7, 7), (40768, 1, 5824, 832), 0); del buf557  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_160(c_void_p(buf574.data_ptr()), c_void_p(arg1001_1.data_ptr()), c_void_p(arg1002_1.data_ptr()), c_void_p(arg490_1.data_ptr()), c_void_p(arg491_1.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(buf577.data_ptr()), c_void_p(buf575.data_ptr()), c_void_p(buf576.data_ptr()), c_void_p(buf578.data_ptr()))
    del arg1001_1
    del arg1002_1
    del arg490_1
    del arg491_1
    del buf564
    del buf567
    del buf571
    del buf575
    del buf576
    # Source Nodes: [out_252], Original ATen: [aten.convolution]
    buf579 = extern_kernels.convolution(buf578, arg492_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf579, (8, 2048, 7, 7), (100352, 1, 14336, 2048))
    del arg492_1
    buf580 = buf562; del buf562  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_161(c_void_p(buf580.data_ptr()), c_void_p(buf579.data_ptr()), c_void_p(arg1004_1.data_ptr()), c_void_p(arg1005_1.data_ptr()), c_void_p(arg493_1.data_ptr()), c_void_p(arg494_1.data_ptr()))
    del arg1004_1
    del arg1005_1
    del arg493_1
    del arg494_1
    del buf579
    # Source Nodes: [out_256], Original ATen: [aten.convolution]
    buf581 = extern_kernels.convolution(buf580, arg495_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf581, (8, 832, 7, 7), (40768, 1, 5824, 832))
    del arg495_1
    buf582 = buf581; del buf581  # reuse
    buf583 = buf573; del buf573  # reuse
    cpp_fused__native_batch_norm_legit_no_training_convolution_relu_162(c_void_p(buf582.data_ptr()), c_void_p(arg1007_1.data_ptr()), c_void_p(arg1008_1.data_ptr()), c_void_p(arg496_1.data_ptr()), c_void_p(arg497_1.data_ptr()), c_void_p(arg498_1.data_ptr()), c_void_p(buf583.data_ptr()))
    del arg1007_1
    del arg1008_1
    del arg496_1
    del arg497_1
    del arg498_1
    # Source Nodes: [sp_417], Original ATen: [aten.convolution]
    buf584 = extern_kernels.convolution(reinterpret_tensor(buf582, (8, 208, 7, 7), (40768, 1, 5824, 832), 0), buf583, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf584, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf595 = reinterpret_tensor(buf578, (8, 832, 7, 7), (40768, 49, 7, 1), 0); del buf578  # reuse
    buf585 = reinterpret_tensor(buf595, (8, 208, 7, 7), (40768, 49, 7, 1), 0)  # alias
    buf586 = buf574; del buf574  # reuse
    buf587 = buf583; del buf583  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_163(c_void_p(buf584.data_ptr()), c_void_p(arg1010_1.data_ptr()), c_void_p(arg1011_1.data_ptr()), c_void_p(arg499_1.data_ptr()), c_void_p(arg500_1.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(arg501_1.data_ptr()), c_void_p(buf585.data_ptr()), c_void_p(buf586.data_ptr()), c_void_p(buf587.data_ptr()))
    del arg1010_1
    del arg1011_1
    del arg499_1
    del arg500_1
    del arg501_1
    del buf584
    # Source Nodes: [sp_420, sp_421], Original ATen: [aten.add, aten.convolution]
    buf588 = extern_kernels.convolution(buf586, buf587, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf588, (8, 208, 7, 7), (10192, 1, 1456, 208))
    buf589 = reinterpret_tensor(buf595, (8, 208, 7, 7), (40768, 49, 7, 1), 10192)  # alias
    buf590 = buf586; del buf586  # reuse
    buf591 = buf587; del buf587  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_convolution_relu_164(c_void_p(buf588.data_ptr()), c_void_p(arg1013_1.data_ptr()), c_void_p(arg1014_1.data_ptr()), c_void_p(arg502_1.data_ptr()), c_void_p(arg503_1.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(arg504_1.data_ptr()), c_void_p(buf589.data_ptr()), c_void_p(buf590.data_ptr()), c_void_p(buf591.data_ptr()))
    del arg1013_1
    del arg1014_1
    del arg502_1
    del arg503_1
    del arg504_1
    del buf588
    # Source Nodes: [sp_424, sp_425], Original ATen: [aten.add, aten.convolution]
    buf592 = extern_kernels.convolution(buf590, buf591, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf592, (8, 208, 7, 7), (10192, 1, 1456, 208))
    del buf590
    del buf591
    buf593 = reinterpret_tensor(buf595, (8, 208, 7, 7), (40768, 49, 7, 1), 20384)  # alias
    buf594 = reinterpret_tensor(buf595, (8, 208, 7, 7), (40768, 49, 7, 1), 30576)  # alias
    buf596 = reinterpret_tensor(buf577, (8, 832, 7, 7), (40768, 1, 5824, 832), 0); del buf577  # reuse
    cpp_fused__native_batch_norm_legit_no_training_cat_convolution_relu_165(c_void_p(buf592.data_ptr()), c_void_p(arg1016_1.data_ptr()), c_void_p(arg1017_1.data_ptr()), c_void_p(arg505_1.data_ptr()), c_void_p(arg506_1.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(buf595.data_ptr()), c_void_p(buf593.data_ptr()), c_void_p(buf594.data_ptr()), c_void_p(buf596.data_ptr()))
    del arg1016_1
    del arg1017_1
    del arg505_1
    del arg506_1
    del buf582
    del buf585
    del buf589
    del buf592
    del buf593
    del buf594
    del buf595
    # Source Nodes: [out_260], Original ATen: [aten.convolution]
    buf597 = extern_kernels.convolution(buf596, arg507_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf597, (8, 2048, 7, 7), (100352, 1, 14336, 2048))
    del arg507_1
    del buf596
    buf598 = empty_strided((8, 2048, 1, 1), (2048, 1, 16384, 16384), device='cpu', dtype=torch.float32)
    buf599 = reinterpret_tensor(buf598, (8, 2048, 1, 1), (2048, 1, 1, 1), 0); del buf598  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_mean_relu_166(c_void_p(buf599.data_ptr()), c_void_p(buf597.data_ptr()), c_void_p(arg1019_1.data_ptr()), c_void_p(arg1020_1.data_ptr()), c_void_p(arg508_1.data_ptr()), c_void_p(arg509_1.data_ptr()), c_void_p(buf580.data_ptr()))
    del arg1019_1
    del arg1020_1
    del arg508_1
    del arg509_1
    del buf580
    del buf597
    buf600 = empty((8, 1000), device='cpu', dtype=torch.float32)
    # Source Nodes: [x_12], Original ATen: [aten.addmm]
    extern_kernels.addmm(arg511_1, reinterpret_tensor(buf599, (8, 2048), (2048, 1), 0), reinterpret_tensor(arg510_1, (2048, 1000), (1, 2048), 0), alpha=1, beta=1, out=buf600)
    del arg510_1
    del arg511_1
    return (buf600, )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    arg0_1 = rand_strided((64, 3, 7, 7), (147, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg1_1 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    arg2_1 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    arg3_1 = rand_strided((104, 64, 1, 1), (64, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg4_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg5_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg6_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg7_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg8_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg9_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg10_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg11_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg12_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg13_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg14_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg15_1 = rand_strided((256, 104, 1, 1), (104, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg16_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg17_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg18_1 = rand_strided((256, 64, 1, 1), (64, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg19_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg20_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg21_1 = rand_strided((104, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg22_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg23_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg24_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg25_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg26_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg27_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg28_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg29_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg30_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg31_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg32_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg33_1 = rand_strided((256, 104, 1, 1), (104, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg34_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg35_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg36_1 = rand_strided((104, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg37_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg38_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg39_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg40_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg41_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg42_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg43_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg44_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg45_1 = rand_strided((26, 26, 3, 3), (234, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg46_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg47_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg48_1 = rand_strided((256, 104, 1, 1), (104, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg49_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg50_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg51_1 = rand_strided((208, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg52_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg53_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg54_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg55_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg56_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg57_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg58_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg59_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg60_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg61_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg62_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg63_1 = rand_strided((512, 208, 1, 1), (208, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg64_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg65_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg66_1 = rand_strided((512, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg67_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg68_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg69_1 = rand_strided((208, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg70_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg71_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg72_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg73_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg74_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg75_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg76_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg77_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg78_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg79_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg80_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg81_1 = rand_strided((512, 208, 1, 1), (208, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg82_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg83_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg84_1 = rand_strided((208, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg85_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg86_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg87_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg88_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg89_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg90_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg91_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg92_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg93_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg94_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg95_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg96_1 = rand_strided((512, 208, 1, 1), (208, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg97_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg98_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg99_1 = rand_strided((208, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg100_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg101_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg102_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg103_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg104_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg105_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg106_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg107_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg108_1 = rand_strided((52, 52, 3, 3), (468, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg109_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg110_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg111_1 = rand_strided((512, 208, 1, 1), (208, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg112_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg113_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg114_1 = rand_strided((416, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg115_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg116_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg117_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg118_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg119_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg120_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg121_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg122_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg123_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg124_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg125_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg126_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg127_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg128_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg129_1 = rand_strided((1024, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg130_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg131_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg132_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg133_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg134_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg135_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg136_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg137_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg138_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg139_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg140_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg141_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg142_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg143_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg144_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg145_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg146_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg147_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg148_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg149_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg150_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg151_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg152_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg153_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg154_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg155_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg156_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg157_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg158_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg159_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg160_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg161_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg162_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg163_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg164_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg165_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg166_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg167_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg168_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg169_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg170_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg171_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg172_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg173_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg174_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg175_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg176_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg177_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg178_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg179_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg180_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg181_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg182_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg183_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg184_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg185_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg186_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg187_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg188_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg189_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg190_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg191_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg192_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg193_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg194_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg195_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg196_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg197_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg198_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg199_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg200_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg201_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg202_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg203_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg204_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg205_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg206_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg207_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg208_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg209_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg210_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg211_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg212_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg213_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg214_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg215_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg216_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg217_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg218_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg219_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg220_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg221_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg222_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg223_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg224_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg225_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg226_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg227_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg228_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg229_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg230_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg231_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg232_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg233_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg234_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg235_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg236_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg237_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg238_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg239_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg240_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg241_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg242_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg243_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg244_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg245_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg246_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg247_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg248_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg249_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg250_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg251_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg252_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg253_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg254_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg255_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg256_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg257_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg258_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg259_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg260_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg261_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg262_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg263_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg264_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg265_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg266_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg267_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg268_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg269_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg270_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg271_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg272_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg273_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg274_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg275_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg276_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg277_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg278_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg279_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg280_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg281_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg282_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg283_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg284_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg285_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg286_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg287_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg288_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg289_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg290_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg291_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg292_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg293_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg294_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg295_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg296_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg297_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg298_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg299_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg300_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg301_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg302_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg303_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg304_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg305_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg306_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg307_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg308_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg309_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg310_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg311_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg312_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg313_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg314_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg315_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg316_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg317_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg318_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg319_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg320_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg321_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg322_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg323_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg324_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg325_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg326_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg327_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg328_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg329_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg330_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg331_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg332_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg333_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg334_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg335_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg336_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg337_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg338_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg339_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg340_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg341_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg342_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg343_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg344_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg345_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg346_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg347_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg348_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg349_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg350_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg351_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg352_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg353_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg354_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg355_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg356_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg357_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg358_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg359_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg360_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg361_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg362_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg363_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg364_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg365_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg366_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg367_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg368_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg369_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg370_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg371_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg372_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg373_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg374_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg375_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg376_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg377_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg378_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg379_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg380_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg381_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg382_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg383_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg384_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg385_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg386_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg387_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg388_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg389_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg390_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg391_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg392_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg393_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg394_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg395_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg396_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg397_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg398_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg399_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg400_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg401_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg402_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg403_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg404_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg405_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg406_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg407_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg408_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg409_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg410_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg411_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg412_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg413_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg414_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg415_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg416_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg417_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg418_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg419_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg420_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg421_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg422_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg423_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg424_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg425_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg426_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg427_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg428_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg429_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg430_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg431_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg432_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg433_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg434_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg435_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg436_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg437_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg438_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg439_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg440_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg441_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg442_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg443_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg444_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg445_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg446_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg447_1 = rand_strided((416, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg448_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg449_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg450_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg451_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg452_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg453_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg454_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg455_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg456_1 = rand_strided((104, 104, 3, 3), (936, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg457_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg458_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg459_1 = rand_strided((1024, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg460_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg461_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg462_1 = rand_strided((832, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg463_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg464_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg465_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg466_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg467_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg468_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg469_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg470_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg471_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg472_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg473_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg474_1 = rand_strided((2048, 832, 1, 1), (832, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg475_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg476_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg477_1 = rand_strided((2048, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg478_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg479_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg480_1 = rand_strided((832, 2048, 1, 1), (2048, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg481_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg482_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg483_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg484_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg485_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg486_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg487_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg488_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg489_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg490_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg491_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg492_1 = rand_strided((2048, 832, 1, 1), (832, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg493_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg494_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg495_1 = rand_strided((832, 2048, 1, 1), (2048, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg496_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg497_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg498_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg499_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg500_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg501_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg502_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg503_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg504_1 = rand_strided((208, 208, 3, 3), (1872, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg505_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg506_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg507_1 = rand_strided((2048, 832, 1, 1), (832, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg508_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg509_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg510_1 = rand_strided((1000, 2048), (2048, 1), device='cpu', dtype=torch.float32)
    arg511_1 = rand_strided((1000, ), (1, ), device='cpu', dtype=torch.float32)
    arg512_1 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    arg513_1 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    arg514_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg515_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg516_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg517_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg518_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg519_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg520_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg521_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg522_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg523_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg524_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg525_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg526_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg527_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg528_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg529_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg530_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg531_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg532_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg533_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg534_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg535_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg536_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg537_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg538_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg539_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg540_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg541_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg542_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg543_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg544_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg545_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg546_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg547_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg548_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg549_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg550_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg551_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg552_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg553_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg554_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg555_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg556_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg557_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg558_1 = rand_strided((26, ), (1, ), device='cpu', dtype=torch.float32)
    arg559_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg560_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg561_1 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    arg562_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg563_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg564_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg565_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg566_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg567_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg568_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg569_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg570_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg571_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg572_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg573_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg574_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg575_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg576_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg577_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg578_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg579_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg580_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg581_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg582_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg583_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg584_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg585_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg586_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg587_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg588_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg589_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg590_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg591_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg592_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg593_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg594_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg595_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg596_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg597_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg598_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg599_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg600_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg601_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg602_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg603_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg604_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg605_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg606_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg607_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg608_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg609_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg610_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg611_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg612_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg613_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg614_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg615_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg616_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg617_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg618_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg619_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg620_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg621_1 = rand_strided((52, ), (1, ), device='cpu', dtype=torch.float32)
    arg622_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg623_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg624_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    arg625_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg626_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg627_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg628_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg629_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg630_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg631_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg632_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg633_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg634_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg635_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg636_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg637_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg638_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg639_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg640_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg641_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg642_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg643_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg644_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg645_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg646_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg647_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg648_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg649_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg650_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg651_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg652_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg653_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg654_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg655_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg656_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg657_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg658_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg659_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg660_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg661_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg662_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg663_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg664_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg665_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg666_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg667_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg668_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg669_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg670_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg671_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg672_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg673_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg674_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg675_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg676_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg677_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg678_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg679_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg680_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg681_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg682_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg683_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg684_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg685_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg686_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg687_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg688_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg689_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg690_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg691_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg692_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg693_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg694_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg695_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg696_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg697_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg698_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg699_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg700_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg701_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg702_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg703_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg704_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg705_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg706_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg707_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg708_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg709_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg710_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg711_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg712_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg713_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg714_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg715_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg716_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg717_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg718_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg719_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg720_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg721_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg722_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg723_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg724_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg725_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg726_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg727_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg728_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg729_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg730_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg731_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg732_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg733_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg734_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg735_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg736_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg737_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg738_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg739_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg740_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg741_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg742_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg743_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg744_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg745_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg746_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg747_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg748_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg749_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg750_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg751_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg752_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg753_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg754_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg755_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg756_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg757_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg758_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg759_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg760_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg761_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg762_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg763_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg764_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg765_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg766_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg767_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg768_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg769_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg770_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg771_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg772_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg773_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg774_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg775_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg776_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg777_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg778_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg779_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg780_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg781_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg782_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg783_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg784_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg785_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg786_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg787_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg788_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg789_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg790_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg791_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg792_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg793_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg794_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg795_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg796_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg797_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg798_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg799_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg800_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg801_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg802_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg803_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg804_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg805_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg806_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg807_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg808_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg809_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg810_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg811_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg812_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg813_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg814_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg815_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg816_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg817_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg818_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg819_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg820_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg821_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg822_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg823_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg824_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg825_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg826_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg827_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg828_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg829_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg830_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg831_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg832_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg833_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg834_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg835_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg836_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg837_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg838_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg839_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg840_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg841_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg842_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg843_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg844_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg845_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg846_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg847_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg848_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg849_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg850_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg851_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg852_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg853_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg854_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg855_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg856_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg857_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg858_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg859_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg860_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg861_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg862_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg863_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg864_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg865_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg866_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg867_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg868_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg869_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg870_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg871_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg872_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg873_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg874_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg875_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg876_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg877_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg878_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg879_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg880_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg881_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg882_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg883_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg884_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg885_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg886_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg887_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg888_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg889_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg890_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg891_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg892_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg893_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg894_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg895_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg896_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg897_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg898_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg899_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg900_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg901_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg902_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg903_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg904_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg905_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg906_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg907_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg908_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg909_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg910_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg911_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg912_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg913_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg914_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg915_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg916_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg917_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg918_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg919_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg920_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg921_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg922_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg923_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg924_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg925_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg926_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg927_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg928_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg929_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg930_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg931_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg932_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg933_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg934_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg935_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg936_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg937_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg938_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg939_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg940_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg941_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg942_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg943_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg944_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg945_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg946_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg947_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg948_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg949_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg950_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg951_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg952_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg953_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg954_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg955_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg956_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg957_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg958_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg959_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg960_1 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    arg961_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg962_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg963_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg964_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg965_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg966_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg967_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg968_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg969_1 = rand_strided((104, ), (1, ), device='cpu', dtype=torch.float32)
    arg970_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg971_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg972_1 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    arg973_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg974_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg975_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg976_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg977_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg978_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg979_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg980_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg981_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg982_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg983_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg984_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg985_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg986_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg987_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg988_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg989_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg990_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg991_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg992_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg993_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg994_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg995_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg996_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg997_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg998_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg999_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1000_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1001_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1002_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1003_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1004_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg1005_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg1006_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1007_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg1008_1 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    arg1009_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1010_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1011_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1012_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1013_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1014_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1015_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1016_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1017_1 = rand_strided((208, ), (1, ), device='cpu', dtype=torch.float32)
    arg1018_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1019_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg1020_1 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    arg1021_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1022_1 = rand_strided((8, 3, 224, 224), (150528, 50176, 224, 1), device='cpu', dtype=torch.float32)
    return print_performance(lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1, arg331_1, arg332_1, arg333_1, arg334_1, arg335_1, arg336_1, arg337_1, arg338_1, arg339_1, arg340_1, arg341_1, arg342_1, arg343_1, arg344_1, arg345_1, arg346_1, arg347_1, arg348_1, arg349_1, arg350_1, arg351_1, arg352_1, arg353_1, arg354_1, arg355_1, arg356_1, arg357_1, arg358_1, arg359_1, arg360_1, arg361_1, arg362_1, arg363_1, arg364_1, arg365_1, arg366_1, arg367_1, arg368_1, arg369_1, arg370_1, arg371_1, arg372_1, arg373_1, arg374_1, arg375_1, arg376_1, arg377_1, arg378_1, arg379_1, arg380_1, arg381_1, arg382_1, arg383_1, arg384_1, arg385_1, arg386_1, arg387_1, arg388_1, arg389_1, arg390_1, arg391_1, arg392_1, arg393_1, arg394_1, arg395_1, arg396_1, arg397_1, arg398_1, arg399_1, arg400_1, arg401_1, arg402_1, arg403_1, arg404_1, arg405_1, arg406_1, arg407_1, arg408_1, arg409_1, arg410_1, arg411_1, arg412_1, arg413_1, arg414_1, arg415_1, arg416_1, arg417_1, arg418_1, arg419_1, arg420_1, arg421_1, arg422_1, arg423_1, arg424_1, arg425_1, arg426_1, arg427_1, arg428_1, arg429_1, arg430_1, arg431_1, arg432_1, arg433_1, arg434_1, arg435_1, arg436_1, arg437_1, arg438_1, arg439_1, arg440_1, arg441_1, arg442_1, arg443_1, arg444_1, arg445_1, arg446_1, arg447_1, arg448_1, arg449_1, arg450_1, arg451_1, arg452_1, arg453_1, arg454_1, arg455_1, arg456_1, arg457_1, arg458_1, arg459_1, arg460_1, arg461_1, arg462_1, arg463_1, arg464_1, arg465_1, arg466_1, arg467_1, arg468_1, arg469_1, arg470_1, arg471_1, arg472_1, arg473_1, arg474_1, arg475_1, arg476_1, arg477_1, arg478_1, arg479_1, arg480_1, arg481_1, arg482_1, arg483_1, arg484_1, arg485_1, arg486_1, arg487_1, arg488_1, arg489_1, arg490_1, arg491_1, arg492_1, arg493_1, arg494_1, arg495_1, arg496_1, arg497_1, arg498_1, arg499_1, arg500_1, arg501_1, arg502_1, arg503_1, arg504_1, arg505_1, arg506_1, arg507_1, arg508_1, arg509_1, arg510_1, arg511_1, arg512_1, arg513_1, arg514_1, arg515_1, arg516_1, arg517_1, arg518_1, arg519_1, arg520_1, arg521_1, arg522_1, arg523_1, arg524_1, arg525_1, arg526_1, arg527_1, arg528_1, arg529_1, arg530_1, arg531_1, arg532_1, arg533_1, arg534_1, arg535_1, arg536_1, arg537_1, arg538_1, arg539_1, arg540_1, arg541_1, arg542_1, arg543_1, arg544_1, arg545_1, arg546_1, arg547_1, arg548_1, arg549_1, arg550_1, arg551_1, arg552_1, arg553_1, arg554_1, arg555_1, arg556_1, arg557_1, arg558_1, arg559_1, arg560_1, arg561_1, arg562_1, arg563_1, arg564_1, arg565_1, arg566_1, arg567_1, arg568_1, arg569_1, arg570_1, arg571_1, arg572_1, arg573_1, arg574_1, arg575_1, arg576_1, arg577_1, arg578_1, arg579_1, arg580_1, arg581_1, arg582_1, arg583_1, arg584_1, arg585_1, arg586_1, arg587_1, arg588_1, arg589_1, arg590_1, arg591_1, arg592_1, arg593_1, arg594_1, arg595_1, arg596_1, arg597_1, arg598_1, arg599_1, arg600_1, arg601_1, arg602_1, arg603_1, arg604_1, arg605_1, arg606_1, arg607_1, arg608_1, arg609_1, arg610_1, arg611_1, arg612_1, arg613_1, arg614_1, arg615_1, arg616_1, arg617_1, arg618_1, arg619_1, arg620_1, arg621_1, arg622_1, arg623_1, arg624_1, arg625_1, arg626_1, arg627_1, arg628_1, arg629_1, arg630_1, arg631_1, arg632_1, arg633_1, arg634_1, arg635_1, arg636_1, arg637_1, arg638_1, arg639_1, arg640_1, arg641_1, arg642_1, arg643_1, arg644_1, arg645_1, arg646_1, arg647_1, arg648_1, arg649_1, arg650_1, arg651_1, arg652_1, arg653_1, arg654_1, arg655_1, arg656_1, arg657_1, arg658_1, arg659_1, arg660_1, arg661_1, arg662_1, arg663_1, arg664_1, arg665_1, arg666_1, arg667_1, arg668_1, arg669_1, arg670_1, arg671_1, arg672_1, arg673_1, arg674_1, arg675_1, arg676_1, arg677_1, arg678_1, arg679_1, arg680_1, arg681_1, arg682_1, arg683_1, arg684_1, arg685_1, arg686_1, arg687_1, arg688_1, arg689_1, arg690_1, arg691_1, arg692_1, arg693_1, arg694_1, arg695_1, arg696_1, arg697_1, arg698_1, arg699_1, arg700_1, arg701_1, arg702_1, arg703_1, arg704_1, arg705_1, arg706_1, arg707_1, arg708_1, arg709_1, arg710_1, arg711_1, arg712_1, arg713_1, arg714_1, arg715_1, arg716_1, arg717_1, arg718_1, arg719_1, arg720_1, arg721_1, arg722_1, arg723_1, arg724_1, arg725_1, arg726_1, arg727_1, arg728_1, arg729_1, arg730_1, arg731_1, arg732_1, arg733_1, arg734_1, arg735_1, arg736_1, arg737_1, arg738_1, arg739_1, arg740_1, arg741_1, arg742_1, arg743_1, arg744_1, arg745_1, arg746_1, arg747_1, arg748_1, arg749_1, arg750_1, arg751_1, arg752_1, arg753_1, arg754_1, arg755_1, arg756_1, arg757_1, arg758_1, arg759_1, arg760_1, arg761_1, arg762_1, arg763_1, arg764_1, arg765_1, arg766_1, arg767_1, arg768_1, arg769_1, arg770_1, arg771_1, arg772_1, arg773_1, arg774_1, arg775_1, arg776_1, arg777_1, arg778_1, arg779_1, arg780_1, arg781_1, arg782_1, arg783_1, arg784_1, arg785_1, arg786_1, arg787_1, arg788_1, arg789_1, arg790_1, arg791_1, arg792_1, arg793_1, arg794_1, arg795_1, arg796_1, arg797_1, arg798_1, arg799_1, arg800_1, arg801_1, arg802_1, arg803_1, arg804_1, arg805_1, arg806_1, arg807_1, arg808_1, arg809_1, arg810_1, arg811_1, arg812_1, arg813_1, arg814_1, arg815_1, arg816_1, arg817_1, arg818_1, arg819_1, arg820_1, arg821_1, arg822_1, arg823_1, arg824_1, arg825_1, arg826_1, arg827_1, arg828_1, arg829_1, arg830_1, arg831_1, arg832_1, arg833_1, arg834_1, arg835_1, arg836_1, arg837_1, arg838_1, arg839_1, arg840_1, arg841_1, arg842_1, arg843_1, arg844_1, arg845_1, arg846_1, arg847_1, arg848_1, arg849_1, arg850_1, arg851_1, arg852_1, arg853_1, arg854_1, arg855_1, arg856_1, arg857_1, arg858_1, arg859_1, arg860_1, arg861_1, arg862_1, arg863_1, arg864_1, arg865_1, arg866_1, arg867_1, arg868_1, arg869_1, arg870_1, arg871_1, arg872_1, arg873_1, arg874_1, arg875_1, arg876_1, arg877_1, arg878_1, arg879_1, arg880_1, arg881_1, arg882_1, arg883_1, arg884_1, arg885_1, arg886_1, arg887_1, arg888_1, arg889_1, arg890_1, arg891_1, arg892_1, arg893_1, arg894_1, arg895_1, arg896_1, arg897_1, arg898_1, arg899_1, arg900_1, arg901_1, arg902_1, arg903_1, arg904_1, arg905_1, arg906_1, arg907_1, arg908_1, arg909_1, arg910_1, arg911_1, arg912_1, arg913_1, arg914_1, arg915_1, arg916_1, arg917_1, arg918_1, arg919_1, arg920_1, arg921_1, arg922_1, arg923_1, arg924_1, arg925_1, arg926_1, arg927_1, arg928_1, arg929_1, arg930_1, arg931_1, arg932_1, arg933_1, arg934_1, arg935_1, arg936_1, arg937_1, arg938_1, arg939_1, arg940_1, arg941_1, arg942_1, arg943_1, arg944_1, arg945_1, arg946_1, arg947_1, arg948_1, arg949_1, arg950_1, arg951_1, arg952_1, arg953_1, arg954_1, arg955_1, arg956_1, arg957_1, arg958_1, arg959_1, arg960_1, arg961_1, arg962_1, arg963_1, arg964_1, arg965_1, arg966_1, arg967_1, arg968_1, arg969_1, arg970_1, arg971_1, arg972_1, arg973_1, arg974_1, arg975_1, arg976_1, arg977_1, arg978_1, arg979_1, arg980_1, arg981_1, arg982_1, arg983_1, arg984_1, arg985_1, arg986_1, arg987_1, arg988_1, arg989_1, arg990_1, arg991_1, arg992_1, arg993_1, arg994_1, arg995_1, arg996_1, arg997_1, arg998_1, arg999_1, arg1000_1, arg1001_1, arg1002_1, arg1003_1, arg1004_1, arg1005_1, arg1006_1, arg1007_1, arg1008_1, arg1009_1, arg1010_1, arg1011_1, arg1012_1, arg1013_1, arg1014_1, arg1015_1, arg1016_1, arg1017_1, arg1018_1, arg1019_1, arg1020_1, arg1021_1, arg1022_1]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('res2net101_26w_4s', benchmark_compiled_module)
